[
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2016P5.lean",
      "start_line": 73,
      "start_column": 6,
      "end_line": 73,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.refine_4\nhp : \u2200 (n : \u2115), (n % 4 = 2 \u2228 n % 4 = 3) = \u00ac(n % 4 = 0 \u2228 n % 4 = 1)\nx : \u211d\n\u22a2 \u220f i \u2208 Finset.Icc 1 2016 \\ {n \u2208 Finset.Icc 1 2016 | n % 4 = 2 \u2228 n % 4 = 3}, (x - \u2191i) \u2260\n    \u220f i \u2208 Finset.Icc 1 2016 \\ {n \u2208 Finset.Icc 1 2016 | n % 4 = 0 \u2228 n % 4 = 1}, (x - \u2191i)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2016P5.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T10:28:23-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "ecd8031d4e97ccb987099033c7b36cb1b1ecf4ad233b7bc2df58969e8ecddacf"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa1983P5.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : \u211d\nn : \u2115\nhn : 0 < n\n\u22a2 let fracs := {q | q.den \u2264 n \u2227 \u2191q \u2208 Set.Ioo x (x + 1 / \u2191n)};\n  fracs.Finite \u2227 fracs.ncard \u2264 (n + 1) / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1983P5.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T10:41:38-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "53cb21671f7fa8c8c8f1c56ca2864f61ca0bedb0e7503bb1129870ca4f63e3e4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Canada1998P5.lean",
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : \u2115\nhm : 0 < m\na b : \u2115\nhab : a \u2264 b\n\u22a2 a ^ 2 + b ^ 2 = m ^ 2 * (a * b + 1) \u2194 \u2203 n, \u2191a = A m hm n \u2227 \u2191b = A m hm (n + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Canada1998P5.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-16T22:18:26-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "22a90092699eaa13360ddaaec1446beb4a40cccd71a83e62cdf0d519f6abf8c9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2004P6.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 n \u2208 SolutionSet \u2194 0 < n \u2227 \u2203 k, Alternating (n * k)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P6.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-30T13:21:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "38aa16505c3cd807c8542c1b64c5019cedb95e504aa2034046bf7b02c3aa45d9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1977P4.lean",
      "start_line": 28,
      "start_column": 48,
      "end_line": 28,
      "end_column": 53
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u211d\na b A B : \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 1 - a * Real.cos x - b * Real.sin x - A * Real.cos (2 * x) - B * Real.sin (2 * x)\nh\u2081 : \u2200 (x : \u211d), f x \u2265 0\n\u22a2 a ^ 2 + b ^ 2 \u2264 2 \u2227 A ^ 2 + B ^ 2 \u2264 1",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1977P4.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0ce174870bbc217593847460961248f789390f63f013c41063a006e11021513a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1972P4.lean",
      "start_line": 37,
      "start_column": 43,
      "end_line": 37,
      "end_column": 48
    },
    "debug_info": {
      "goal": "a b c d e : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2227 0 < e\n\u22a2 (a ^ 2 - c * e) * (b ^ 2 - c * e) \u2264 0 \u2227\n      (b ^ 2 - d * a) * (c ^ 2 - d * a) \u2264 0 \u2227\n        (c ^ 2 - e * b) * (d ^ 2 - e * b) \u2264 0 \u2227\n          (d ^ 2 - a * c) * (e ^ 2 - a * c) \u2264 0 \u2227 (e ^ 2 - b * d) * (a ^ 2 - b * d) \u2264 0 \u2194\n    (a, b, c, d, e) \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1972P4.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ff938d32047a58dfb1bf3488eb08cd6ecd1a61b810b115938beb88eef1ab358e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa1980P5.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y z : \u211d\nhx : x \u2208 Set.Icc 0 1\nhy : y \u2208 Set.Icc 0 1\nhz : z \u2208 Set.Icc 0 1\n\u22a2 x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2264 1 + (1 - x) * (1 - y) * (1 - z)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1980P5.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-27T11:18:26-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "49c783feef4b2a05278592d8bf190a8a2acc1793a99477193dd103bc19bf3159"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2022P1.lean",
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u2115\nha : 0 < a\nhb : 0 < b\ncolor : Fin (a + b + 1) \u00d7 Fin (a + b + 1) \u2192 Fin 2\nc0 : a ^ 2 + a * b - b \u2264 Fintype.card { s // color s = 0 }\nc1 : b ^ 2 + a * b - a \u2264 Fintype.card { s // color s = 1 }\n\u22a2 \u2203 A B,\n    A.card = a \u2227\n      B.card = b \u2227\n        (\u2200 x \u2208 A, color x = 0) \u2227 (\u2200 y \u2208 B, color y = 1) \u2227 \u2200 x \u2208 A \u222a B, \u2200 y \u2208 A \u222a B, x \u2260 y \u2192 x.1 \u2260 y.1 \u2227 x.2 \u2260 y.2",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2022P1.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-04-16T11:18:19-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "e6edf5173015cb68efb44283ff5ef765d97942176def4ec762cda65021f67e6a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2021P6.lean",
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : \u2115\nhm : 2 \u2264 m\nA : Finset \u2124\nB : Fin m \u2192 Finset \u2124\nhB : \u2200 (k : Fin m), B k \u2286 A\nhs : \u2200 (k : Fin m), \u2211 b \u2208 B k, b = \u2191m ^ (\u2191k + 1)\n\u22a2 m \u2264 2 * A.card",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2021P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T14:13:49-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "823c9e2c94b72889d412fc11dd9425d3e3b3685b7dd492c0685297b0d24e13e4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2018P5.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a : \u2115 \u2192 \u2124\napos : \u2200 (n : \u2115), 0 < a n\nN : \u2115\nhN : 0 < N\nh : \u2200 (n : \u2115), N \u2264 n \u2192 \u2203 z, \u2191z = \u2211 i \u2208 Finset.range n, \u2191(a i) / \u2191(a ((i + 1) % n))\n\u22a2 \u2203 M, \u2200 (m : \u2115), M \u2264 m \u2192 a m = a (m + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P5.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-20T08:39:26-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "39f826693dd33111aa515e6e7e41df347029a34dd0ef693a8c6ece1d88c592e4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa1993P3.lean",
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 IsLeast {c | \u2200 (f : \u2191(Set.Icc 0 1) \u2192 \u211d), valid f \u2227 \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 c * \u2191\u2191x} min_c",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1993P3.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-17T17:28:05-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "693fe0a4b901598111f70d4be3658dc97da9b8be3c7a4b1a8f9a50a8920e8763"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1988P3.lean",
      "start_line": 37,
      "start_column": 28,
      "end_line": 37,
      "end_column": 33
    },
    "debug_info": {
      "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : f 1 = 1\nh\u2081 : f 3 = 3\nh\u2082 : \u2200 (n : \u2115), f (2 * n) = f n\nh\u2083 : \u2200 (n : \u2115), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh\u2084 : \u2200 (n : \u2115), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset \u2191{n | 0 < n \u2227 n \u2264 1988 \u2227 f n = n}\n\u22a2 A.card = solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1988P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59de92e21cfae296e4b66f7deb395a01acb55a9e06e67321002dc3e973a525a7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1994P4.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m n : \u2124\n\u22a2 (m, n) \u2208 SolutionSet \u2194 0 < m \u2227 0 < n \u2227 m * n - 1 \u2223 n ^ 3 + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1994P4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-23T19:59:15-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d99ee4237a684cd6a37cbaf1951f988026cafa15f338b5b9899e0fc680aa0d47"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1990P3.lean",
      "start_line": 30,
      "start_column": 4,
      "end_line": 30,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\nhn : 1 < n\nhnd : n ^ 2 \u2223 2 ^ n + 1\n\u22a2 n \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1990P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-01T16:38:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "758fafad7560a57d684d9f7eebf31a504afb36adce932b3367972349cd3d8da2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1999P4.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x p : \u2115\n\u22a2 (x, p) \u2208 SolutionSet \u2194 0 < x \u2227 Nat.Prime p \u2227 x ^ (p - 1) \u2223 (p - 1) ^ x + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1999P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-01T11:05:51-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bd063222b756ce52d4cd10c835265a7e46200225e627904c70e079aa0a2222e6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa1999P1.lean",
      "start_line": 46,
      "start_column": 2,
      "end_line": 46,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nc : Finset (checkerboard n)\nha : \u2200 (x : checkerboard n), x \u2208 c \u2228 \u2203 y \u2208 c, adjacent x y\nhb : \u2200 x \u2208 c, \u2200 y \u2208 c, \u2203 p, List.Chain' adjacent p \u2227 p.head? = some x \u2227 p.getLast? = some y\n\u22a2 n ^ 2 \u2264 c.card * 3 + 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1999P1.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T15:42:10-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "18e66c7ee601f4c46a6619e6f90e818ee8eecf1194ffebf3f0c6876fe79c32dc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1998P6.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u2115+ \u2192 \u2115+\nh : \u2200 (s t : \u2115+), f (t ^ 2 * f s) = s * f t ^ 2\n\u22a2 IsLeast {n | n = \u2191(f 1998)} \u2191solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:49:10-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "485a0138d3e94f7ce0c4314dd39028fef5d95c7679266a155c5b6aae27df3c3c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2014P4.lean",
      "start_line": 48,
      "start_column": 2,
      "end_line": 48,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B C P Q M N : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nacuteA : \u2220 C A B < Real.pi / 2\nacuteB : \u2220 A B C < Real.pi / 2\nacuteC : \u2220 B C A < Real.pi / 2\nhP : Sbtw \u211d P B C\nhQ : Sbtw \u211d Q B C\nhPAB : \u2220 P A B = \u2220 B C A\nhCAQ : \u2220 C A Q = \u2220 A B C\nhM : M \u2208 affineSpan \u211d {A, M}\nhN : Q \u2208 affineSpan \u211d {A, N}\nhPAM : P = midpoint \u211d A M\nhQAN : Q = midpoint \u211d A N\n\u22a2 let ABC := { points := ![A, B, C], independent := hABC };\n  let D := \u2191(affineSpan \u211d {B, M}) \u2229 \u2191(affineSpan \u211d {C, N});\n  D.Nonempty \u2227 D \u2286 Metric.sphere (Affine.Simplex.circumsphere ABC).center (Affine.Simplex.circumsphere ABC).radius",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2014P4.lean#L48"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-17T13:26:17-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f7f04887d23d2c0bcd401dc258c7ff1432af00c33eb6d07e81b0f57c3d93a90c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1961P1.lean",
      "start_line": 44,
      "start_column": 54,
      "end_line": 44,
      "end_column": 59
    },
    "debug_info": {
      "goal": "a b x y z : \u211d\n\u22a2 (x, y, z) \u2208 xyz_of_ab a b \u2194 IsSolution a b x y z",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "977b18b828ee3c1ced5fc0ba497b0b928f57a2d4b9075fcc3661232d2920245e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1961P1.lean",
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 (a, b) \u2208 ab_that_make_xyz_positive_distinct \u2194\n    \u2200 (x y z : \u211d), IsSolution a b x y z \u2192 0 < x \u2227 0 < y \u2227 0 < z \u2227 [x, y, z].Nodup",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f19746420ee4822c533114713613a83278b1298849e43bb4bb8df8f246a45f06"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2023P2.lean",
      "start_line": 93,
      "start_column": 28,
      "end_line": 93,
      "end_column": 33
    },
    "debug_info": {
      "goal": "V : Type u_1\nPt : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup V\ninst\u271d\u00b3 : InnerProductSpace \u211d V\ninst\u271d\u00b2 : MetricSpace Pt\ninst\u271d\u00b9 : NormedAddTorsor V Pt\nhd2 : Fact (finrank \u211d V = 2)\ninst\u271d : Oriented \u211d V (Fin 2)\nA B C D E L S P : Pt\n\u03a9 \u03c9 : Sphere Pt\nperp_A_BC prll_D_BC tang_P_\u03c9 : AffineSubspace \u211d Pt\nh_acute_ABC : acute V Pt A B C\nh_AB_lt_BC : dist A B < dist A C\nh_\u03a9 : {A, B, C} \u2286 Metric.sphere \u03a9.center \u03a9.radius\nh_S_\u03a9 : dist S C = dist S B \u2227 S \u2208 Metric.sphere \u03a9.center \u03a9.radius\nh_S_A : (\u2221 C B S).sign = (\u2221 C B A).sign\nh_perp_A_BC : perp_to V Pt perp_A_BC (affineSpan \u211d {B, C}) \u2227 A \u2208 perp_A_BC\nh_D : D \u2208 \u2191perp_A_BC \u2229 \u2191(affineSpan \u211d {B, S})\nh_E : E \u2208 \u2191perp_A_BC \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_E_ne_A : E \u2260 A\nh_prll_D_BC : D \u2208 prll_D_BC \u2227 prll_D_BC \u2225 affineSpan \u211d {B, C}\nh_L : L \u2208 \u2191prll_D_BC \u2229 \u2191(affineSpan \u211d {B, E})\nh_\u03c9 : {B, D, L} \u2286 Metric.sphere \u03c9.center \u03c9.radius\nh_P : P \u2208 Metric.sphere \u03c9.center \u03c9.radius \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_P_ne_B : P \u2260 B\nh_tang_P_\u03c9 : is_tangent V Pt tang_P_\u03c9 \u03c9 \u2227 P \u2208 tang_P_\u03c9\n\u22a2 \u2203 X \u2208 \u2191tang_P_\u03c9 \u2229 \u2191(affineSpan \u211d {B, S}), \u2220 B A X = \u2220 X A C \u2227 \u2220 B A X < \u03c0 / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P2.lean#L93"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2024-06-30T13:54:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7b3956fa65105267c283b43238e7aba1b2149d9c7538c3268f378ae7adfa2c20"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1985P4.lean",
      "start_line": 26,
      "start_column": 2,
      "end_line": 26,
      "end_column": 7
    },
    "debug_info": {
      "goal": "M : Finset \u2115\nMpos : \u2200 m \u2208 M, 0 < m\nMdivisors : \u2200 m \u2208 M, \u2200 (n : \u2115), Nat.Prime m \u2227 n \u2223 m \u2192 m \u2264 23\n\u22a2 \u2203 M' \u2286 M, \u2203 k, M'.prod id = k ^ 4",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1985P4.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T14:04:16-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "2728b1286e0ca6ab2b941aef35e95d5d1dff7d0f7b10d05ce96f2821fff0031e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2003P1.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Finset \u2115\nhA : A \u2286 S\n\u22a2 \u2203 t, \u2200 (i j : Fin 100), i \u2260 j \u2192 Disjoint {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t i) = x} {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t j) = x}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P1.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T21:07:17-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "657cd833a974ab73627c17d6691be96ce65ce940112ce4eda2d8fe1858c42ad9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2001P1.lean",
      "start_line": 55,
      "start_column": 6,
      "end_line": 55,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.right\nf : Fin 8 \u2192 Finset (Fin 23) :=\n  fun x =>\n    match x with\n    | 0 => {1, 2, 3, 4, 5, 6}\n    | 1 => {1, 7, 8, 9, 10, 11}\n    | 2 => {1, 12, 13, 14, 15, 16}\n    | 3 => {2, 7, 12, 17, 18, 19}\n    | 4 => {3, 8, 13, 17, 20, 21}\n    | 5 => {4, 9, 14, 17, 22, 23}\n    | 6 => {5, 10, 15, 18, 20, 22}\n    | 7 => {6, 11, 16, 19, 21, 23}\nx y : Fin min_colors\ni j : Fin 8\nhij : i \u2260 j\nhx : x \u2208 f i\nhy : y \u2208 f i\n\u22a2 \u00ac(x \u2208 f j \u2227 y \u2208 f j)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L55"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-05T14:18:02-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "52e3c5c580809d36090d9e8f44aef9fc4a04ff6f204aafc4fc9cd640ee363c8d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2001P1.lean",
      "start_line": 56,
      "start_column": 4,
      "end_line": 56,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case right\n\u22a2 min_colors \u2208 lowerBounds possible_num_colors",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L56"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-20T22:49:53-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "10222a5dcca446acc32bcfe899926803a340d05b0ce2f7372eaa12ef21e4af55"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P2.lean",
      "start_line": 38,
      "start_column": 41,
      "end_line": 38,
      "end_column": 46
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : \u2220 D A B = \u2220 A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := \u2220 D A C\nthis : \u2220 D A C = \u2220 D C A\ny : \u211d := \u2220 C A B\n\u22a2 \u2220 D A B = x + y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T20:53:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "abee20d38c65c1d71797ca10be74434c936d00a85117508010ce88ea8991e006"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P2.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : \u2220 D A B = \u2220 A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := \u2220 D A C\nthis\u271d : \u2220 D A C = \u2220 D C A\ny : \u211d := \u2220 C A B\nthis : \u2220 A B C = x + y\n\u22a2 \u2220 B E C = \u2220 D A C",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-28T19:13:25-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6461b41ab5e7770c2ed81776e8e350a5355af09005bfebc66e6f647615574984"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1996P3.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u2115 \u2192 \u2115\n\u22a2 f \u2208 SolutionSet \u2194 \u2200 (m n : \u2115), f (m + f n) = f (f m) + f n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1996P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:27:20-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4b3f1401c0e8ce853e000609b98f22842c3d0077977d1d935d95b761b26a194d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2009P6.lean",
      "start_line": 94,
      "start_column": 4,
      "end_line": 94,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case ind.inl.inl\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2208 M\nh2 : \u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L94"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "eb4783cd7e1800c9e6ba2369546e47de16f89985ac2e2f428022b63964b19334"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2009P6.lean",
      "start_line": 95,
      "start_column": 4,
      "end_line": 95,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case ind.inl.inr\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2208 M\nh2 : \u00ac\u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a37d8b31b61d44429f769c38fc35742a546b4f06be687ad4297cc30477412e4b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2009P6.lean",
      "start_line": 205,
      "start_column": 8,
      "end_line": 205,
      "end_column": 13
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := extendPerm p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2264 x)\nh35 : n' \u2264 n\n\u22a2 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-27T11:09:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9166e5fdd3c527a41fb88d6b8da5ca6cebe2d8a26d68ab9baaf6d507f1235e6f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2009P6.lean",
      "start_line": 229,
      "start_column": 8,
      "end_line": 229,
      "end_column": 13
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := extendPerm p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x)\nh35 : n' \u2264 n\nh33 : \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)\n\u22a2 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-25T14:14:36-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "511c2d114eb89f65073e96eabcc3d71f98579702dd28c81bf5a23962d0a8a2db"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2009P6.lean",
      "start_line": 248,
      "start_column": 4,
      "end_line": 248,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case ind.inr.inr\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\nh2 : \u00ac\u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L248"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0fd808330eab9f92bb1ae2e2d6019e1b737134a236236567c9b04c569870ffa0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa1998P4.lean",
      "start_line": 66,
      "start_column": 6,
      "end_line": 66,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h\ns : chessboard\n\u22a2 List.foldl recolor_rect start_coloring\n      (List.map (fun x => { x := 2 * x, y := 0, width := 1, height := 98 }) (List.range 49) ++\n        List.map (fun y => { x := 0, y := 2 * y, width := 98, height := 1 }) (List.range 49))\n      s =\n    0",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-14T08:31:05-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9ea8c2f130bba433b8a37b17018ff76e4fc61894dd2c1de84dcf5a50d8d06cca"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa1998P4.lean",
      "start_line": 71,
      "start_column": 4,
      "end_line": 71,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case right.intro.intro\nn : \u2115\nrs : List Rectangle\nhrs : all_same_color (List.foldl recolor_rect start_coloring rs)\nhrsl : rs.length = n\n\u22a2 min_clicks \u2264 n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T20:46:44-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d1ba93a4731fbc74da9899276cada366ce2dc3a3b2d23e12a9e31354762b7b53"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1998P4.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u2115\n\u22a2 0 < a \u2227 0 < b \u2227 a * b ^ 2 + b + 7 \u2223 a ^ 2 * b + a + b \u2194 (a, b) \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:45:18-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fc70b6c2b5fc0eb454b9dd3b62f2514672e8bdca0803d4e335cd505dae7ed741"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2011P5.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u2124 \u2192 \u2124\nfpos\u271d : \u2200 (n : \u2124), 0 < f n\nfpos : \u2200 (m n : \u2124), f (m - n) \u2223 f m - f n\n\u22a2 \u2200 (m n : \u2124), f m \u2264 f n \u2192 f m \u2223 f n",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2011P5.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-03T09:55:58-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "28f79db23292ca27f97cf66eb89323122a92cc534683c82a12ebf679ea59049a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1978P6.lean",
      "start_line": 28,
      "start_column": 44,
      "end_line": 28,
      "end_column": 49
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : n = 1978\nC : Fin n \u2192 Fin 6\n\u22a2 \u2203 j i k, C i = C j \u2227 C j = C k \u2227 \u2191i + 1 + \u2191k + 1 = \u2191j + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1978P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "54edd10f47cb051d6e8f07d29d88e0850e5a3a6d3975fd9db92f2ff1e8c88ef8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1971P5.lean",
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : \u2115\n\u22a2 \u2203 S, S.Finite \u2227 \u2200 s \u2208 S, Nat.card \u2191{t | dist s t = 1} = m",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P5.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-22T17:20:29-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e8b8b50bcfe121c3fe635582a739ee84b52789442cd0762620d5e4817bd9294c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1976P6.lean",
      "start_line": 28,
      "start_column": 55,
      "end_line": 28,
      "end_column": 60
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nh\u2080 : u 0 = 2\nh\u2081 : u 1 = 5 / 2\nh\u2082 : \u2200 (n : \u2115), u (n + 2) = u (n + 1) * (u n ^ 2 - 2) - u 1\n\u22a2 \u2200 (n : \u2115), \u2191\u230au n\u230b = 2 ^ ((2 ^ n - (-1) ^ n) / 3)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1976P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "44259a8830d9c287f32508c865ac2f061433f68a8980de46a63194a0ea770751"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2010P3.lean",
      "start_line": 36,
      "start_column": 38,
      "end_line": 36,
      "end_column": 43
    },
    "debug_info": {
      "goal": "case h\ng : \u2124>0 \u2192 \u2124>0\nc : \u2124>0\nhc : \u2200 (x : \u2124>0), g x = x + c\nm n : \u2124>0\n\u22a2 (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-01-21T08:16:08-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "94668c81e3549dfecb4822c85b43a18d85126a7d88d79f594fe3876d79f93f9a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2010P3.lean",
      "start_line": 37,
      "start_column": 4,
      "end_line": 37,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\ng : \u2124>0 \u2192 \u2124>0\n\u22a2 (\u2200 (m n : \u2124>0), IsSquare ((g m + n) * (g n + m))) \u2192 g \u2208 SolutionSet",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-23T10:40:22-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c54f7b36c32bfd3312985b07d2f481cb30e8ebd526c7aa3b0b97c9600efd1f21"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2001P3.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "Girl Boy Problem : Type\ninst\u271d\u00b2 : Finite Girl\ninst\u271d\u00b9 : Finite Boy\ninst\u271d : Finite Problem\ngirl_card : Nat.card Girl = 21\nboy_card : Nat.card Boy = 21\ngirl_solved : Girl \u2192 Problem \u2192 Prop\nboy_solved : Boy \u2192 Problem \u2192 Prop\nhG : \u2200 (g : Girl), {p | girl_solved g p}.ncard \u2264 6\nhB : \u2200 (b : Boy), {p | boy_solved b p}.ncard \u2264 6\nhp : \u2200 (g : Girl) (b : Boy), {p | girl_solved g p \u2227 boy_solved b p}.ncard \u2264 1\n\u22a2 \u2203 p, 3 \u2264 {g | girl_solved g p}.ncard \u2227 3 \u2264 {g | boy_solved g p}.ncard",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2001P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-27T13:39:48-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "ee3b919cd4d2a27d81e3d9b9af809a05cf8d2ac183b86594402a6519becf2697"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2016P4.lean",
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 IsLeast {b | \u2203 a, Fragrant {p | \u2203 i < b, \u2191p = P (a + 1 + \u2191i)}} Solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2016P4.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-11T08:43:20-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5ffeaafd6cde0607ff44006b6e318adc71b60ab65625f327fe3ca6855e65387b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2018P2.lean",
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mp.intro\nn : \u2115\nhn1 : 3 \u2264 n\nhn2 : 3 \u2223 n\n\u22a2 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T08:47:40-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "9e22d6ad70f2c0237e78a2f3a9ba91a0375f16275fae2b153d05e3d583a79e7c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2018P2.lean",
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\n\u22a2 (3 \u2264 n \u2227 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)) \u2192 n \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P2.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T08:47:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "28df25ad37b7fb2f16cd4f8fb7a0dbd384f98eb7b93f0373f54a4a63f0e39075"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1998P3.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "k : \u2115\n\u22a2 k \u2208 solution_set \u2194 \u2203 n, (n ^ 2).divisors.card = k * n.divisors.card",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P3.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:57:30-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4174712cf034663847198231d1aa7c3c55804dc7ae278d00dbf8b7d42ab9b70f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2023P4.lean",
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : \u2115\nhp : 0 < x\nhx : Even x\n\u22a2 x.maxPowDiv / 2 + 1 = x.maxPowDiv",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2023P4.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "bfefb2210b77d91940eec9074e417b20b6181395f658b734bf23c78c2895011d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2023P4.lean",
      "start_line": 323,
      "start_column": 6,
      "end_line": 323,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case a.intro.intro\na : \u2115+\nN : \u2115\nhN : 1 < N\nms' : \u2115\nih :\n  \u2200 (s0 : State N),\n    (\u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191(s0.board i) < Nat.maxPowDiv 2 \u2191a) \u2192\n      \u2211 i, Nat.maxPowDiv 2 \u2191(s0.board i) = ms' \u2192 EndInevitableIn a N ms' s0\nb0 : Blackboard N\nt0 : Player\nhd : \u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Bob }.board i) < Nat.maxPowDiv 2 \u2191a\nhms : \u2211 i, Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Bob }.board i) = ms' + 1\ns : State N\ni : Fin N\nhie : Even \u2191(b0 i)\nhis : s = { board := Function.update b0 i \u27e8\u2191(b0 i) / 2, \u22ef\u27e9, turn := Player.Alice }\n\u22a2 EndInevitableIn a N ms' s",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L323"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "588abd4ec33720ef7944b078f097d6791dcea8f2d8048b615439550a5e648590"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2023P4.lean",
      "start_line": 344,
      "start_column": 4,
      "end_line": 344,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case a.intro.intro.a.intro.intro\na : \u2115+\nN : \u2115\nhN : 1 < N\nms' : \u2115\nb0 : Blackboard N\nt0 : Player\nhd : \u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Alice }.board i) < Nat.maxPowDiv 2 \u2191a\nb1 : Blackboard N\nhms : \u2211 i, Nat.maxPowDiv 2 \u2191(b1 i) = ms' + 1\ni : Fin N\nhi : b1 = Function.update b0 i (b0 i + a)\ns2 : State N\nj : Fin N\nhje : Even \u2191(b1 j)\nhj : s2 = { board := Function.update b1 j \u27e8\u2191(b1 j) / 2, \u22ef\u27e9, turn := Player.Alice }\nih :\n  (\u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191(s2.board i) < Nat.maxPowDiv 2 \u2191a) \u2192\n    \u2211 i, Nat.maxPowDiv 2 \u2191(s2.board i) = ms' \u2192 EndInevitableIn a N ms' s2\n\u22a2 EndInevitableIn a N ms' s2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L344"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "93780d60039058a18ddb1b49b621c73a758165f125b921490dbf849fc282b82f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2023P4.lean",
      "start_line": 366,
      "start_column": 2,
      "end_line": 366,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case inr\na : \u2115+\nN : \u2115\nhN\u271d : 0 < N\nb0 : Blackboard N\nhe : BobCanForceEnd a N { board := b0, turn := Player.Alice }\nhN : 1 < N\n\u22a2 EndInevitable a N { board := b0, turn := Player.Alice }",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L366"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-12T16:07:14-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "cab7d541738fcdc4bd3856350d9101fd61352a5b0cc217b486a058b2b98e2e8e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2003P2.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u2124\n\u22a2 (a, b) \u2208 solution_set \u2194 0 < a \u2227 a < b \u2227 \u2203 c, 0 < c \u2227 c * (2 * a * b ^ 2 - b ^ 3 + 1) = a ^ 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-09T08:45:13-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6531c8f669557a8956b5774d758dad925c00b224eb3f12393efc8ccade689b32"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 115,
      "start_column": 2,
      "end_line": 115,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type\ninst\u271d : Fintype \u03b1\n\u22a2 Fintype.card { s // Even s.card } = 2 ^ (Fintype.card \u03b1 - 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "8585f3a90704ebcf1db5998d794ebf41e08c7eb58e6b89cffa6502b4e0ddbff9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 121,
      "start_column": 40,
      "end_line": 121,
      "end_column": 45
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\n\u22a2 \u2200 (i : Fin n), 0 < c i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5dbbd31b4b8a8c5fb210f8c40db26ab0212d73c391ec4b6dcf100ece3c1bbe71"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 122,
      "start_column": 39,
      "end_line": 122,
      "end_column": 44
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\n\u22a2 \u2211 i, c i = k",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d4a3dc0886c39d91903f92ca1dbef2ea0a977839db922db8970e9a8e93e6014f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 132,
      "start_column": 40,
      "end_line": 132,
      "end_column": 45
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\n\u22a2 \u2191y < n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5a2ed4b14f561e1c81fd5c6d9635d04f7de0c1c6331b720be482057c227d31a3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 134,
      "start_column": 21,
      "end_line": 134,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 i \u2208 {j | \u2191f j = \u27e8\u2191y', \u22ef\u27e9}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dbf7b4453189af85ba47ca280e7dcf649fdfb0c53d3a45d008b444f864219027"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 134,
      "start_column": 57,
      "end_line": 134,
      "end_column": 62
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 \u2191y + n < 2 * n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4b376c21f9ce6fc057fcaafff54432ca6470c8fe26a02ffdb3b93f71c7e7cd6d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.28220 \u2208 \u2191ys then ?m.29219 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
    },
    "id": "f8533dd0a3f55533c2477a49d0a3820d5ce9965da43dcffbe8e76b5b3654e1ce"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.28220 \u2208 \u2191ys then ?m.29219 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
    },
    "id": "2a7d61deffe3d547be4916f255e97bbe931e7434f1991d206a653226c163286d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 147,
      "start_column": 4,
      "end_line": 147,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.e_a\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\na : Fin n\n\u22a2 (Finset.filter (Membership.mem {j | \u2191f j = \u27e8\u2191a, \u22ef\u27e9}) Finset.univ).card = c a",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L147"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-05-02T10:48:28-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8a987bb8765c2df88e8b6b47d6fb8cefc854d0546fe560237a48614627c2a1ea"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 167,
      "start_column": 6,
      "end_line": 167,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case left\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\nx y : S\nhxy : p x = p y\n\u22a2 x = y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "187544c61cc20ac3ab3cadc7ed93b0df5e5c897b9d6d0cc3acd67665cc3a4953"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 169,
      "start_column": 6,
      "end_line": 169,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case right.mk\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\ng : { f // NSequence n k f }\nhg : g \u2208 {g | \u03c8 n k g = f}\n\u22a2 \u2203 a, p a = \u27e8g, hg\u27e9",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c1b370ae45f32b205ad252022edbd62aa344cdce9a0ab4ffa024cc3c4cb93f45"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2017P5.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "c : \u211d\n\u22a2 c \u2208 solution_set \u2194\n    0 < c \u2227\n      \u2203 l,\n        (Set.range l).Finite \u2227\n          (\u2200 (p : \u2124 \u00d7 \u2124), 0 < l p) \u2227 \u2200 {p1 p2 : \u2124 \u00d7 \u2124}, p1 \u2260 p2 \u2192 l p1 = l p2 \u2192 dist \u2191(l p1) \u2191(l p2) \u2264 c ^ l p1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2017P5.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T15:48:13-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c3050863d613aad47b9dfd678f561f1cbafeaf06591cd31a80abc13bb8ce12eb"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2004P2.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "P : Polynomial \u211d\n\u22a2 P \u2208 SolutionSet \u2194\n    \u2200 (a b c : \u211d),\n      a * b + b * c + c * a = 0 \u2192\n        Polynomial.eval (a - b) P + Polynomial.eval (b - c) P + Polynomial.eval (c - a) P =\n          2 * Polynomial.eval (a + b + c) P",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-06T15:22:50-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9d3b5c062b3acb3eaa91fe7a425835d4cee7d144ccddaef7bfd996a58bdc3fb0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1976P4.lean",
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 IsGreatest {n | \u2203 s, \u2211 i \u2208 s, i = 1976 \u2227 \u220f i \u2208 s, i = n} solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1976P4.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-26T10:31:58-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59b56ee6f40ffa4b324b92b4e5e51fef346312664d501e57fbf096b4046ee589"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1979P5.lean",
      "start_line": 33,
      "start_column": 76,
      "end_line": 33,
      "end_column": 81
    },
    "debug_info": {
      "goal": "a : \u211d\n\u22a2 (\u2203 x1 x2 x3 x4 x5,\n      x1 \u2265 0 \u2227\n        x2 \u2265 0 \u2227\n          x3 \u2265 0 \u2227\n            x4 \u2265 0 \u2227\n              x5 \u2265 0 \u2227\n                x1 + 2 * x2 + 3 * x3 + 4 * x4 + 5 * x5 = a \u2227\n                  x1 + 2 ^ 3 * x2 + 3 ^ 3 * x3 + 4 ^ 3 * x4 + 5 ^ 3 * x5 = a ^ 2 \u2227\n                    x1 + 2 ^ 5 * x2 + 3 ^ 5 * x3 + 4 ^ 5 * x4 + 5 ^ 5 * x5 = a ^ 3) \u2194\n    a \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1979P5.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "a685641c3d0c1275d5dfd657aa7baf442f8004ced215bf8d31f62da6e68f9cd6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2018P3.lean",
      "start_line": 69,
      "start_column": 2,
      "end_line": 69,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nt : antipascal_triangle 2018\nht : \u2200 (n : \u2115), 1 \u2264 n \u2192 n \u2264 \u2211 i \u2208 Finset.range 2018, (i + 1) \u2192 \u2203 r \u2264 2018, \u2203 c < r, t.f { row := r, col := c } = n\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P3.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-09-16T20:32:12-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b74da3c35c3c198ee6324b495f922b684119eb02f5199c5f7a3c268ac569586"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1995P4.lean",
      "start_line": 33,
      "start_column": 89,
      "end_line": 33,
      "end_column": 94
    },
    "debug_info": {
      "goal": "x : \u2115 \u2192 \u211d\nh : x 0 = x 1995\nh1 : \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i\n\u22a2 x 0 \u2264 solution \u2227\n    \u2203 x, x 0 = solution \u2227 x 0 = x 1995 \u2227 \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1995P4.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8bf203733f0794e1e22f4376adcadd04cad7b415bd6860f73e1236dceb463e5c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2024P2.lean",
      "start_line": 42,
      "start_column": 5,
      "end_line": 42,
      "end_column": 10
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 IsLeast {k | \u2203 S, Good S \u2227 k = {z | InAtLeastKSubsets S k z}.ncard} solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2024P2.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-29T08:54:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8c59bcdefbeba56749ef385508b5e62691ef4208163d7e2bbeb2954a29dbe8a2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1975P2.lean",
      "start_line": 34,
      "start_column": 21,
      "end_line": 34,
      "end_column": 26
    },
    "debug_info": {
      "goal": "a : \u2115 \u2192 \u2124\napos : \u2200 (i : \u2115), 0 < a i\nha : \u2200 (i : \u2115), a i < a (i + 1)\n\u22a2 \u2200 (i n0 : \u2115), \u2203 n, n0 \u2264 n \u2227 \u2203 r s j, a n = \u2191r * a i + \u2191s * a j \u2227 i < j \u2227 0 < r \u2227 0 < s",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1975P2.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "910bdd8d06502af1d86098e03cd7affb426b5d7a29a90861dffbafa29bf5aba2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2023P1.lean",
      "start_line": 34,
      "start_column": 4,
      "end_line": 34,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.mp\nx : \u2115\n\u22a2 x \u2208 solution_set \u2192 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 P n}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "15e0848c7784ad9fd15e9f10c392790899bf89491e42fa932bf9c6218e752563"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2023P1.lean",
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.mpr\nx : \u2115\n\u22a2 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 P n} \u2192 x \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b3826aca3d84084fabd8dd55d0a97c4b07cbfb403dbfb879c501370e0fd9de29"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P6.lean",
      "start_line": 40,
      "start_column": 4,
      "end_line": 40,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case ind.inl\nb c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\nb_odd : Odd b\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a292310b33d58c081a06d6cc4f50d414ef2707bbe9410100f4fe1004c15df4c8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P6.lean",
      "start_line": 41,
      "start_column": 4,
      "end_line": 41,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case ind.inr\nb c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_odd : Odd c\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "db3f170ae002ea90f2e1d8b0628fec58fbe748bfb81429020d6655c872b11ecc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P6.lean",
      "start_line": 36,
      "start_column": 32,
      "end_line": 36,
      "end_column": 37
    },
    "debug_info": {
      "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\n\u22a2 a.gcd b = 1",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "ea13ded8936390883891499590a3519f0361b117a9cdc56ec6ff247cb3787ca0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P6.lean",
      "start_line": 38,
      "start_column": 26,
      "end_line": 38,
      "end_column": 31
    },
    "debug_info": {
      "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\n\u22a2 Odd a",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "ed0c4451ab472ba11dbeaa31795dd05162462e4a408642f01801ba6235c80d75"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P6.lean",
      "start_line": 39,
      "start_column": 26,
      "end_line": 39,
      "end_column": 31
    },
    "debug_info": {
      "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\n\u22a2 Odd b",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "c24da64aec0572f7df3c8dd87b09b058442341b2cc36a108acbf06c92a1969a5"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2012P2.lean",
      "start_line": 34,
      "start_column": 4,
      "end_line": 34,
      "end_column": 9
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 3 \u2264 n\na : { x // x \u2208 Finset.Icc 2 n } \u2192 \u211d\napos : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), 0 < a i\naprod : \u220f i, a i = 1\n\u22a2 \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), (1 + a i) ^ \u2191i \u2264 \u2191\u2191i ^ \u2191i / (\u2191\u2191i - 1) ^ (\u2191i - 1) * a i",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2012P2.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-27T20:50:55-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "6b656b40b452637f070abc94e0550c397e6fbb862d456da5f71ebafaced0039f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2012P2.lean",
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 3 \u2264 n\na : { x // x \u2208 Finset.Icc 2 n } \u2192 \u211d\napos : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), 0 < a i\naprod : \u220f i, a i = 1\nh1 : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), (1 + a i) ^ \u2191i \u2264 \u2191\u2191i ^ \u2191i / (\u2191\u2191i - 1) ^ (\u2191i - 1) * a i\n\u22a2 \u2191n ^ n < \u220f i, (1 + a i) ^ \u2191i",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2012P2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T17:59:59-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "000836facd65fa836ee16420b60558d83c4233fa24ad6c3a111a8e94d4a72ab4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1983P5.lean",
      "start_line": 27,
      "start_column": 65,
      "end_line": 27,
      "end_column": 70
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 S, S.card = 1983 \u2227 (\u2200 x \u2208 S, x \u2264 10 ^ 5) \u2227 \u2200 x \u2208 S, \u2200 y \u2208 S, \u2200 z \u2208 S, x < y \u2227 y < z \u2192 x + z \u2260 2 * y",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1983P5.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "7a69c42c7f9f125437185b1c9fc92d7795c86a2c379d368b7550ffed756e4d77"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2023P5.lean",
      "start_line": 52,
      "start_column": 2,
      "end_line": 52,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 IsGreatest {k | \u2200 (j : JapaneseTriangle n), \u2203 p, k \u2264 Fintype.card { i // j.red i = p.steps i }} (solution_value n)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P5.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T09:39:50-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "10ebc2192d3a75b2f963bd3f61b4fdf1e4e2fac123ec0737279c201da26646bc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1983P6.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "T : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\na b c : \u211d\nha : a = dist (T.points 1) (T.points 2)\nhb : b = dist (T.points 2) (T.points 0)\nhc : c = dist (T.points 0) (T.points 1)\n\u22a2 0 \u2264 a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) \u2227\n    (0 = a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) \u2194 EqualityCondition a b c)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1983P6.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-05-24T09:06:54-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3d5a4451c801f87b1e7155be7e2701b268ef4ca0ef4d806d1a3bb331986c8ef2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2017P6.lean",
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7
    },
    "debug_info": {
      "goal": "S : Finset (\u2124 \u00d7 \u2124)\nhS : \u2200 s \u2208 S, gcd s.1 s.2 = 1\n\u22a2 \u2203 n, 0 < n \u2227 \u2203 a, \u2200 s \u2208 S, \u2211 i \u2208 Finset.range n, a i * s.1 ^ i * s.2 ^ (n - i) = 1",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2017P6.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-02T08:56:28-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "d64cc4968550b81e88fb7917de719f99088b77b082eadadac6c1460ab6e7d6e0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1971P3.lean",
      "start_line": 23,
      "start_column": 63,
      "end_line": 23,
      "end_column": 68
    },
    "debug_info": {
      "goal": "\u22a2 {(n, m) | (2 ^ n - 3).Coprime (2 ^ m - 3)}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P3.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "18493d62eebe92b1ad1c9b0b55228abc8759946c42a14d9dc2802344cbfee998"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2001P1.lean",
      "start_line": 45,
      "start_column": 2,
      "end_line": 45,
      "end_column": 7
    },
    "debug_info": {
      "goal": "t : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\n\u22a2 \u2221 (Affine.Simplex.circumcenter t) (t.points 2) (t.points 1) = \u2191Real.pi - \u2221 (t.points 1) (t.points 0) (t.points 2)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T20:28:24-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7b4a585c6f9e62a2df1aaa6fa81fe56ae506abc18da534a26d621188e0892c77"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2001P1.lean",
      "start_line": 60,
      "start_column": 2,
      "end_line": 60,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B C : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nhAcuteA : \u2220 C A B < Real.pi / 2\nhAcuteB : \u2220 A B C < Real.pi / 2\nhAcuteC : \u2220 B C A < Real.pi / 2\nhAB : \u2220 A B C + Real.pi / 6 \u2264 \u2220 B C A\nABC : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2)) := { points := ![A, B, C], independent := hABC }\nP : \u21a5(affineSpan \u211d {B, C}) := (EuclideanGeometry.orthogonalProjection (affineSpan \u211d {B, C})) A\n\u22a2 \u2220 C A B + \u2220 C (Affine.Simplex.circumcenter ABC) \u2191P < Real.pi / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T13:45:33-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ee845fa1f900c8e260a593aed3969dec328d6ffd42cbd9035c04ad975e075edc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2017P1.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a0 : \u2115\n\u22a2 a0 \u2208 solution_set \u2194 \u2203 A, {n | a a0 n = A}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2017P1.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-02T09:41:34-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1d43200cfbd12ea0c73995ad0a7d4f5ec72ebb2f32f40ac5b062a020740cda6a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1982P4.lean",
      "start_line": 35,
      "start_column": 33,
      "end_line": 35,
      "end_column": 38
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\nhxy : \u2203 x y, x ^ 3 - 3 * x * y ^ 2 + y ^ 3 = \u2191n\n\u22a2 n \u2260 2891 \u2227\n    \u2203 x1 x2 x3 y1 y2 y3,\n      x1 ^ 3 - 3 * x1 * y1 ^ 2 + y1 ^ 3 = \u2191n \u2227\n        x2 ^ 3 - 3 * x2 * y2 ^ 2 + y2 ^ 3 = \u2191n \u2227\n          x3 ^ 3 - 3 * x3 * y3 ^ 2 + y3 ^ 3 = \u2191n \u2227 (x1 \u2260 x2 \u2228 y1 \u2260 y2) \u2227 (x1 \u2260 x3 \u2228 y1 \u2260 y3) \u2227 (x2 \u2260 x3 \u2228 y2 \u2260 y3)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1982P4.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "664bfebbac1c6fc2a923603ac9e942714cfb0aa25c04c858e12c987eae4d9cb6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2008P1.lean",
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\n\u22a2 \u2203 k,\n    (\u2200 (i : Fin (n + 1)), 1 < k i) \u2227\n      (\u2200 (i j : Fin (n + 1)), i \u2260 j \u2192 (k i).Coprime (k j)) \u2227 \u2203 m, \u220f i, k i = 1 + m * (m + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2008P1.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-28T09:53:59-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "17f52cc3fe6bdde2031dc9a3b63f2d37430f13f1d3d0d4890928f94430fdc881"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2020P5.lean",
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 n \u2208 SolutionSet \u2194\n    1 < n \u2227\n      \u2200 (\u03b1 : Type) [inst : Fintype \u03b1],\n        Fintype.card \u03b1 = n \u2192\n          \u2200 (f : \u03b1 \u2192 \u2115+),\n            (Pairwise fun a b => \u2203 s, s.Nonempty \u2227 geometric_mean f s = (\u2191\u2191(f a) + \u2191\u2191(f b)) / 2) \u2192\n              \u2203 y, \u2200 (a : \u03b1), f a = y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P5.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-18T17:13:51-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7cda25c5ee26d2e5ce0ba4bbd25626195a3d0276411517f6368e9375af56c748"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1963P4.lean",
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x\u2081 x\u2082 x\u2083 x\u2084 x\u2085 y : \u211d\n\u22a2 (x\u2081, x\u2082, x\u2083, x\u2084, x\u2085) \u2208 SolutionSet y \u2194\n    x\u2085 + x\u2082 = y * x\u2081 \u2227 x\u2081 + x\u2083 = y * x\u2082 \u2227 x\u2082 + x\u2084 = y * x\u2083 \u2227 x\u2083 + x\u2085 = y * x\u2084 \u2227 x\u2084 + x\u2081 = y * x\u2085",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1963P4.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T08:58:13-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dadfe170b5abd88f8d87744633853afcb214ea416c42a1a6972de382d61ac7c6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f5eccdc3c1087ce8e0fa5de98487c4b9f0e17b466a14c6ff17bfd51f7ee844df"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b4549a7f99321c680d5eba196ed48a2f03b1c6e38b415b48bae98b318c4572d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0e47e1dc204fb0cd9d9105a3bd0d11899f287fb03839c8ba1cda4499b53d0920"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2d3c34ee5b51b3c60b46be7841a5183ec00109f623349a618507daf3252ca1db"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4e114f0a36a4c9f3e461bebd312cba323468378cb66eca708aa012370dc94ff2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e5e44cbabf8ccde6e2b17551712341bbbb81bc84f5edcd799c24e3ff11403a2f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1242d7ce42b24197936bf10666d41b7af4016a6c0aa0b232d9283a169fc37599"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 hj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f1f835af412ae1808f2381cfd6f798b1fc0fc43b42152709891c9eeaea4a3a77"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7866919956bea21f27eadf5c1c009558e99ca771dab48b0c9b59630270de39dd"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4c2d40fbe36ea72d6f40744e439689d30e273cc8bb3a2fc9587ebef04f4f0b70"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "71e0d3357fad98db3158a08af93ea86e07bae53f7510a6825744878675a5f186"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "12034a8c19e0cd8a3821ca2b86cace0e9cda9afba573af42a01b58a591902f56"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7fff431ac7296b360b5ddc858760e0033054c8ffec73a8c6163bd5debf63c704"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "af9433f7bed0a9d895eb5bcd10de53d73aad83db0529aa177255dce1f49e2872"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "73e6d2fd67880eb6c7e484c80eaf8611165d09d86dd77e565d8ece38f823b53c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "223af2772f141d557e778e97d00ee9d2f291296553ab3b67d4695be70854888b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "a7d4c52ff46ca1e0237446c281f067aa11eb39b7d9f11c7cfa70ca183621950d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bf0ef1a15996584838fdc2c02c5d2504892791ae3f48bec4fa93b7f1a6acfaff"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "81be109718254013fa033ec3b4239dac571c95f84d92ad6a2e41c74de7d32119"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "41e6f9e1feec43b30dcbf75ff8fc0208a59b548d5300bb847fefbb9fdf1d7ff0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1274e5c83ee1358d23b96e80b4b9d95225b8397cbcb6a3e2714d59f168876957"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "04a2d75f85aa21a71d8fe9852f59d9aef4546ece37bd51fee9c4548247ac81b8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ebd3d7afca130128d0fddf4d2663f299d853fc88b4d45df067f57d3ca59f0cb1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fef2f82eb5bfb140d95bf0ce492965dcdb2bc400b7208f76d41318e7755b790f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "cb663d0e1ce874ba06b40e0121c51d823f1b5e4be93aa4bb37ff426e89243074"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "338df36c8e3359512d558471f6c8ae553079999294470ff526f0d4146a045c6f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3c54d0a3795b90b086596695c5ad6954507deeb3bab878598e4a4a174afcf40b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1121f8e9b163ec41eaa6f3fb5d37d01deb1abde552412d5e54640c8be6897bd6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5d603cce10e4b14df55f1eee78e88d8aeca193063a2a2c6f389265ed4c73953c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c85747599a537c6ffca3bd2bbfd3b443d0b8d68d9cb0ad78f42756c5469c2373"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4c24939fc4bdb84e88077c67f9ad18f0da6ab223108218504392b3050f5be35c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3ba55cfc35d1b19ae77790c8e836b2c20bff6ad49190ba76f56b8d7c1c41f910"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c78f65069c3786a53ce41267a2990b8f5e1c5a5a51e637d6857bb34fdcf08a06"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "732bc3d627983f68e0a0ae3489d7e202b4c8676ff9a5e8e511ae47c49a5fbdc9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9fd9f09a7f5151a28239f6b543542e12b1dea9c71ad71da1258cbdf8cce28951"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3a31f762344cc10a3f4a285b9707d82eec683ef62d3bc53e24878d8351c81e69"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "65579631a3df714f74b29fb7ec81c7d5c51d1f77f089f4bfaa1fe3b58c0447f1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2427a12149ad60f3da8c4a82c3692bddef73e3da3a708d8e2851103641dd9f7a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4529f7c0345c3f1f556463a98a873bc2d898e214f552395d901fe00962abd86c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d7a8990edf1cb34390db765087d674ed6c9169cb0f80c2ae1e56669dd45e7c7f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1a07994d64e82e9137330d5b7a85de2d429bcda8225ba5398c0a8f612125d507"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "01c3062f95ce457ac1390ec28f6ecbfc092c0a8bb90767852c79fb72457f0ad2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5ab24a647c77aa1c7b351b5e62316e68ae5358c3b0806b7297a4d0389b979001"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6bcd360233d42fc12faf3d0c2d8c7c26a61296d0aa6d6d49305c1c01a0898340"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "06d66619040c0abd3e5408da51e157a7bd6e5e11c58c6eb2cffa071630ba544c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4bf8077509e327eb5012ef8948108574f7bbad3b09202cba62caf8881df2eb43"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b4468593cce701f5d63754982acd49cf7f5f1b8b74c3b19873ea73ac6ff2162d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "40b44930609bb1217e1867d4cc6b022ccae06691e77b5eed12bff8771e6babda"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "336042af7186201ff93eb50061a1e0611d5193e6f4262b4461ecd53019934c03"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "813be212b88bae5d76a30f89dfb76bd84955f9c58f8563c93d0e7734a1b24996"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "56a755706dbce627a7857c8f09dbc0d4a458b95b66eb6d5da3730d73bd8e9619"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d63a932f6883a1e474c2e910b1167b70bc081b66b002dccdca31e329cd467b62"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ca9398af4e5e796553454024f23475f0e68bd188481300142556233e2a4e2575"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fa24d207147bc4d1a6f09a98377900cb02f439a637c9c0078827c358c9d835ea"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "942ab9b9b0245cebdf7717ec80e51b172ce497744cb4bd0dc31e7b663699ab1f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5693d8cb01ecf4c7cd0bd1ab8e34f652978f261e1b548c58717719f5d7c421f5"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fd18c3c0e2804a9f9ae657fc90b50e29e49fcf8ca1e977f063896e03f5e461ce"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2cebe444324e0c668b07408c3def882f3093e2e1e1335a5e81edcf7932bc4b43"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "755e8bdf18242b1e67d89c9d674921f6d57ac24edd2008bf67f6162f7a6f0f59"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8d035b859df9280e806942d1d964b5036e63de23f6f509d3f8cd47613f046106"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bf78c7082e72970cbf40371637754b2d24de2ee8f22d7f2c51b4f82abfe36ae0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b9ed15268bff60f67e1559600bcc93b11944f1a84432e4168630d7e48c50ef7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1a87f892ba397cfb3a94a0452a3a0f07f588492603784f88f270aa0583663527"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9863b9380860a92d271ff1c11d72565631020b26d2e9f736feeb9f93f024355d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 87,
      "start_column": 4,
      "end_line": 87,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case left\ncolor : \u2191(Set.Icc 1 solution_value) \u2192 Fin 2\n\u22a2 coloring_is_good color",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L87"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-17T11:03:23-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4dfcdfe291ff46c6fc82b53f0fca21f1b636bcff633ea8c0f9dc1411d818e8a1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1991P6.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a : \u211d\nha : 1 < a\n\u22a2 Bounded (solution a ha) \u2227 \u2200 (i j : \u2115), i \u2260 j \u2192 1 \u2264 |solution a ha i - solution a ha j| * |\u2191i - \u2191j|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1991P6.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-20T21:26:57-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9a27ead7e901d4b2a8237c3922016f7362874addcf8d84c29521c4212418e36d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2021P2.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nx : Fin n \u2192 \u211d\n\u22a2 \u2211 i, \u2211 j, \u221a|x i - x j| \u2264 \u2211 i, \u2211 j, \u221a|x i + x j|",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2021P2.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-04T09:33:15-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "d30938ff6debc5503d64b6164a3d310e42a1a410883d04d98c121791789f58ed"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2015P2.lean",
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c : \u2124\n\u22a2 (a, b, c) \u2208 SolutionSet \u2194\n    0 < a \u2227 0 < b \u2227 0 < c \u2227 is_power_of_two (a * b - c) \u2227 is_power_of_two (b * c - a) \u2227 is_power_of_two (c * a - b)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2015P2.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T18:22:25-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3931ff4e24b0e27b3a721bd58c4c0c4fb3d99add222117fbe86db98047cd9fd5"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1993P5.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 if DoesExist = true then \u2203 f, Good f else \u00ac\u2203 f, Good f",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1993P5.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:48:13-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b2eee41030bd1b84e31fcb8e72599d1d3785cce18cd948f2a3584e6da8159c3b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2007P1.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na x : Fin n \u2192 \u211d\nh : Monotone x\n\u22a2 (\u2a06 i, d a i) / 2 \u2264 \u2a06 i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0fa2c4666fb34d33a86e885cd30911f353a5e8db7640b27e303df0eaeebcb5a8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2007P1.lean",
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u211d\n\u22a2 \u2203 x, Monotone x \u2227 (\u2a06 i, d a i) / 2 = \u2a06 i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6ce2f8f3b0847e9ad0becb040b6fde0dbc8f1dcb19adea3c04eb0fb6a31f9102"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2023P3.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "k : \u2115\nhk : 2 \u2264 k\na : \u2115+ \u2192 \u2115+\n\u22a2 a \u2208 SolutionSet hk \u2194\n    \u2203 P,\n      P.Monic \u2227\n        P.degree = \u2191k \u2227\n          (\u2200 n \u2264 k, 0 \u2264 P.coeff n) \u2227\n            \u2200 (n : \u2115+), Polynomial.eval (\u2191\u2191(a n)) P = \u2191\u2191(\u220f i \u2208 Finset.range k, a \u27e8\u2191n + i + 1, \u22ef\u27e9)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P3.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-24T09:05:23-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1117e8a7a517122b73dbcb9fdd47dc1e91fcce2bc71ba0a142cbbb7b7a86c725"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1973P5.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "G : Set (\u211d \u2192 \u211d)\nhf : \u2200 f \u2208 G, \u2203 a b, a \u2260 0 \u2227 \u2200 (x : \u211d), f x = a * x + b\nhG : \u2200 f \u2208 G, \u2200 g \u2208 G, g \u2218 f \u2208 G\nhinv : \u2200 f \u2208 G, (\u2200 (x : \u211d), f x \u2260 0) \u2192 f\u207b\u00b9 \u2208 G\nhfix : \u2200 f \u2208 G, \u2203 x, f x = x\n\u22a2 \u2203 k, \u2200 f \u2208 G, f k = k",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1973P5.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T12:13:52-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "326e1256148b8163d39717c39796f00ef6ec4ce41f967dee46711a7b96d432fc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1966P4.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nx : \u211d\nhx : \u2200 (t : \u2115) (k : \u2124), x \u2260 \u2191k * Real.pi / 2 ^ t\n\u22a2 \u2211 i \u2208 Finset.range n, 1 / Real.sin (2 ^ (i + 1) * x) = 1 / Real.tan x - 1 / Real.tan (2 ^ n * x)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1966P4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-23T21:57:24-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "02c78a8299d63bc3541eca361742691e59f1ec71d835fa9df2de40d42d12eba8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo1970P6.lean",
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7
    },
    "debug_info": {
      "goal": "P : Fin 100 \u2192 Pt\nhP : \u2200 (a b c : Fin 100), [a, b, c].Nodup \u2192 \u00acCollinear \u211d {P c, P b, P c}\n\u22a2 let cardAll := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points};\n  let cardAcute := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points \u2227 AcuteTriangle t};\n  \u2191cardAcute / \u2191cardAll \u2264 7 / 10",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1970P6.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-21T09:27:31-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fc4853fef38f3fe863cf2d87956e1ee4a2e7ce864d586917dde85c4771408849"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2000P5.lean",
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : ZMod 3 \u2192 EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A 0, A 1, A 2]\n\u03c9 : Fin 7 \u2192 Circle\nhTangent : \u2200 i < 6, ExternallyTangent (\u03c9 i) (\u03c9 (i + 1))\nhA : \u2200 i < 7, A \u2191i \u2208 \u03c9 \u2191i \u2227 A (\u2191i + 1) \u2208 \u03c9 \u2191i\n\u22a2 \u03c9 0 = \u03c9 6",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2000P5.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-16T09:11:27-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e97dd05f8b02a88ccec3e6f2bced6a18341024aff9110c24dc12371251e8d418"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/CIIM2022P6.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\n\u22a2 d (n + 1).factorial \u2264 2 * d n.factorial",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/CIIM2022P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T20:57:01-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8594afb538b66f2210ef250234e20ef941d0de3624227a418f60b8acdff8173f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2023P5.lean",
      "start_line": 60,
      "start_column": 4,
      "end_line": 60,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mp\nn : \u2115\nhn : 2 < n\n\u22a2 n \u2208 solution_set \u2192\n    \u2200 (a : Fin n \u2192 Fin n \u2192 Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid \u22ef a ha \u2192 \u2203 p, \u2203 (hp : \u2200 (r : Fin n), Function.Injective (p r)), col_valid \u22ef (fun r c => a r (p r c)) \u22ef",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-04T12:29:47-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5cf8e96ea39aac4fd4af09646d3eb359d3353f76ab6fa68f329cc347261e5677"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Usa2023P5.lean",
      "start_line": 61,
      "start_column": 4,
      "end_line": 61,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\nhn : 2 < n\n\u22a2 (\u2200 (a : Fin n \u2192 Fin n \u2192 Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid \u22ef a ha \u2192\n        \u2203 p, \u2203 (hp : \u2200 (r : Fin n), Function.Injective (p r)), col_valid \u22ef (fun r c => a r (p r c)) \u22ef) \u2192\n    n \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-04T12:29:47-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3e6c2261cccc3c7a82006cbffa972069d8e9f7a3abbc6ffddb14c17dd8fba1a9"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Hilbert/NNFormula.lean",
      "start_line": 232,
      "start_column": 8,
      "end_line": 232,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalCNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Hilbert/NNFormula.lean#L232"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "f0baefe756d793167f4aed4538e43765c789b00c5b56a534e6fda856c1f30a7e"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Hilbert/NNFormula.lean",
      "start_line": 236,
      "start_column": 8,
      "end_line": 236,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalDNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Hilbert/NNFormula.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "7b3e9aaa254eaad25a3a2d606f909facf5f701fa4355bda0d9ad1093d54b4b7e"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 27,
      "start_column": 25,
      "end_line": 27,
      "end_column": 30
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\n\u22a2 \u03b3 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Maximal/Makinson.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "fd97dd1e7d34bf9309563159113086b03ebbff7deeeeb91c9b9aa2124f8fe9c8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 28,
      "start_column": 33,
      "end_line": 28,
      "end_column": 38
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\n\u22a2 \u03b3 \u2209 Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Maximal/Makinson.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "556d0bddc4a9d949ffdf66d298859240b5cadb13cfe471d0b53045e983f5df20"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 31,
      "start_column": 4,
      "end_line": 31,
      "end_column": 9
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u22a2 \u2203 \u03b4 \u2208 \u0393, (\u2191\u03b4).toFormula \u2208 L \u2227 (\u2191\u03b4).toFormula \u2209 Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Maximal/Makinson.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "b661d015eb00267ee4fc6bac5214828c30aa94bedcf58cb701364404d6db314d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mk.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\n\u03be : NNFormula \u2115\nproperty\u271d : (\u25a1\u03be).isPrebox \u2228 (\u25a1\u03be).isPredia \u2228 (\u25a1\u03be).degree = 0\nh\u03c8\u2081 : \u27e8\u25a1\u03be, property\u271d\u27e9 \u2208 \u0394\nh\u03c8\u2082 : (\u2191\u27e8\u25a1\u03be, property\u271d\u27e9).isPrebox\nthis : \u25a1\u03be.toFormula \u2208 Logic.Ver\n\u22a2 False",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Maximal/Makinson.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "b0fc38cbe8f22d8c0bce138335e887cbaab7ead1112ddbd047187013a18d6894"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 38,
      "start_column": 49,
      "end_line": 38,
      "end_column": 54
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Maximal/Makinson.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "ab7316574b00a7c5561f82e10567baa4a1f851b2f68bb541626fc573d7e37d73"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Maximal/Makinson.lean",
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.mk.intro.intro.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u00acHilbert.Ver \u22a2! \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\nthis : \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L\n\u22a2 \u2203 \u03c8, \u25c7\u03c8 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Maximal/Makinson.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "3a5eeac3ad6dc9987f35ff646382c45dd0cc83b1bb002e89d55d0f2774080afd"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean",
      "start_line": 42,
      "start_column": 4,
      "end_line": 42,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 FrameClass.finite_connected_partial_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-14T14:50:18+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "af48772cbc598a640f50eafa1b5ca7e7ac0213736d080e835f892c90d4783159"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean",
      "start_line": 33,
      "start_column": 101,
      "end_line": 33,
      "end_column": 106
    },
    "debug_info": {
      "goal": "\u22a2 Complete Hilbert.GLPoint3 FrameClass.finite_strict_linear_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-17T22:57:50+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "1161aa44a098ec838c81b0dbc47bde4a6afa13fd5af02b8ad80beb189d7cfe0a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "strict-hierarchy",
      "commit": "c5ba54bc11691b0978d756355a7a8191dd4eec41",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean",
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint2 \u03c6 \u2208 FrameClass.finite_confluent_partial_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c5ba54bc11691b0978d756355a7a8191dd4eec41/Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-14T14:50:18+09:00",
      "inclusion_date": "2025-04-26T23:33:31.647541+00:00"
    },
    "id": "3011fe079333483f83e4c162d2b58df07608e202f19aa0b5e2e7ad6cbc98e0dc"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "solovay-sentences",
      "commit": "96ecdcf3310a2fd8245872e8a962c668d61f0ce5",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/GL/Completeness.lean",
      "start_line": 111,
      "start_column": 2,
      "end_line": 111,
      "end_column": 7
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b2 : T.Delta1Definable\nM : Model\nr : M.World\ninst\u271d\u00b9 : M.IsFiniteTree r\ninst\u271d : Fintype M.World\nN N' : \u2115\nw : Fin N \u2192 Semiterm \u2112\u2092\u1d63 Empty N'\nt : M.World \u2192 Semiterm \u2112\u2092\u1d63 Empty N\ni : M.World\n\u22a2 (Rewriting.app (Rew.substs w)) (\u2a56 \u03b5, \u03b8ChainAux T t \u03b5) = \u2a56 \u03b5, \u03b8ChainAux T (fun i => (Rew.substs w) (t i)) \u03b5",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/96ecdcf3310a2fd8245872e8a962c668d61f0ce5/Foundation/ProvabilityLogic/GL/Completeness.lean#L111"
    },
    "metadata": {
      "blame_email_hash": "5a2548ae1d83",
      "blame_date": "2025-03-31T09:39:30+09:00",
      "inclusion_date": "2025-04-01T05:40:23.283040+00:00"
    },
    "id": "53f4f7361843fd4dac777d7c0e837d01743e4e73d6cc9e99fbc8c3bbe2452d92"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Carleson/LinearizedMetricCarleson.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "c310678d6982240739518fff83bb4c7b4b852dffb9d2a6da65f71a00216e5e57"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TileStructure.lean",
      "start_line": 526,
      "start_column": 70,
      "end_line": 526,
      "end_column": 75
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d\u00b2 : PseudoMetricSpace X\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u22a2 IsAntichain (fun x1 x2 => x1 \u2264 x2) (toTileLike '' \ud835\udd04) \u2194\n    \u2200 (p p' : \ud835\udd13 X), p \u2208 \ud835\udd04 \u2192 p' \u2208 \ud835\udd04 \u2192 p \u2260 p' \u2192 Disjoint (toTileLike p).toTile (toTileLike p').toTile",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TileStructure.lean#L526"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-03T17:09:05+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "b11fec209a8e9e6d28ba0f72be209af353af056d145d5e5bf091a912ceee00b6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Carleson/HolderVanDerCorput.lean",
      "start_line": 218,
      "start_column": 2,
      "end_line": 218,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR t : \u211d\nhR : 0 < R\nC : \u211d\u22650\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z R\nh2\u03d5 : HolderWith C nn\u03c4 \u03d5\nht : t \u2208 Ioc 0 1\n\u22a2 LipschitzWith (C8_0_1 \u2191a \u27e8t, \u22ef\u27e9) (holderApprox R t \u03d5)",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L218"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-19T16:30:05+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "393599577049b16ddc0284d92bb8541569987867e6056aaf90f085f7000f6d65"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Carleson/HolderVanDerCorput.lean",
      "start_line": 229,
      "start_column": 55,
      "end_line": 229,
      "end_column": 60
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR : \u211d\u22650\nhR : 0 < R\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z \u2191R\nh2\u03d5 : hnorm \u03d5 z R < \u22a4\nf g : \u0398 X\n\u22a2 \u2191\u2016\u222b (x : X), cexp (I * (\u2191(f x) - \u2191(g x))) * \u03d5 x\u2016\u208a \u2264\n    \u2191(C2_0_5 \u2191a) * volume (ball z \u2191R) * hnorm \u03d5 z R * (1 + \u2191(nndist_{z ,\u2191R} f g)) ^ (2 * \u2191a ^ 2 + \u2191a ^ 3)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "4f0774fdf1b5",
      "blame_date": "2024-07-01T23:56:16+08:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "0a7b83de487e4725261acd6846fed27d95d85448b239aef8106cf387db39e490"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Carleson/MetricCarleson.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "614b0b1fd379e2aab89e519f6043f2cd34f21de790b42d55b8bc704504a1d15e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 58,
      "start_column": 2,
      "end_line": 58,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nx : \u211d\n\u22a2 partialFourierSum n (partialFourierSum n f) x = partialFourierSum n f x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5cf368edd40f6686c7cf712723cd2708e16112dafe65202e7ceff6b93580caae"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\n\u22a2 \u222b (x : \u211d) in 0 ..2 * \u03c0, (starRingEnd \u2102) (partialFourierSum n f x) * g x =\n    \u222b (x : \u211d) in 0 ..2 * \u03c0, (starRingEnd \u2102) (f x) * partialFourierSum n g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "60c0cd3392949ba20afa599ece3f28e3db655d1e45f1b616574451b1fdfb5bdc"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7
    },
    "debug_info": {
      "goal": "g : \u211d \u2192 \u2102\nn : \u2115\nhmg : Measurable g\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\n\u22a2 (fun p => eLpNorm ((Ioc 0 (2 * \u03c0)).indicator (approxHilbertTransform n g)) p volume) \u2264 fun p =>\n    eLpNorm ((Ioc 0 (2 * \u03c0)).indicator g) p volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d0452e487bcae6fb1961fd7b6858cc14d0985e42138e76c88d15181c1c255be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nhg\u271d : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\nr : \u211d\nhr : r \u2208 Ioo 0 \u03c0\nhg : \u2200 (x : \u211d), \u2016g x\u2016 \u2264 niceKernel r x\n\u22a2 eLpNorm ((Ioc 0 (2 * \u03c0)).indicator fun x => \u222b (y : \u211d) in 0 ..2 * \u03c0, f y * g (x - y)) 2 volume \u2264\n    2 ^ 5 * eLpNorm ((Ioc 0 (2 * \u03c0)).indicator f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "613e84de0ee275a0f16c37b30e3825a2914e869a1ccd76c1e0fc5873330f9699"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 168,
      "start_column": 2,
      "end_line": 168,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 Continuous (dirichletApprox n)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L168"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "796332a3630b742c620666b1a0d6724ca4c0073475e742d21d7c9deb6a346274"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 172,
      "start_column": 2,
      "end_line": 172,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 Function.Periodic (dirichletApprox n) (2 * \u03c0)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L172"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a04d60225babf97b3e178476dea5a97d57d0b2fff018930ec691ca25ebed64c1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 182,
      "start_column": 2,
      "end_line": 182,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nn : \u2115\nx : \u211d\n\u22a2 approxHilbertTransform n f x = \u2191(2 * \u03c0)\u207b\u00b9 * \u222b (y : \u211d) in 0 ..2 * \u03c0, f y * dirichletApprox n (x - y)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L182"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a5c69bea75b27a811d2528bbc7737b8ecd2ca4000425f6fa438dfca2d868ae80"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 192,
      "start_column": 2,
      "end_line": 192,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nr : \u211d\nhr : r \u2208 Ioo 0 1\nn : \u2115\nhn : n = \u2308r\u207b\u00b9\u2309\u208a\nx : \u211d\n\u22a2 dist (dirichletApprox n x) ({y | \u2016y\u2016 \u2208 Ioo r 1}.indicator 1 \u2191x) \u2264 2 ^ 5 * niceKernel r x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L192"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "034e090b3b5d00fd6c5739e217cb6a1b098d003fa4a867f94e567c82879e24e6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7
    },
    "debug_info": {
      "goal": "r : \u211d\nhr : 0 < r\n\u22a2 HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts 4)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Classical/HilbertStrongType.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "a1e9bc78fc17042729da155c3a7456a7e1e5986eb838c8a87676ab4cebb90d9d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/BoundedFiniteSupport.lean",
      "start_line": 50,
      "start_column": 2,
      "end_line": 50,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u2074 : MeasurableSpace X\nf : X \u2192 E\ninst\u271d\u00b3 : TopologicalSpace E\ninst\u271d\u00b2 : ENorm E\ninst\u271d\u00b9 : Zero E\n\u03bc : Measure X\ninst\u271d : MeasurableSpace E\nbfs : BoundedFiniteSupport f \u03bc\n\u22a2 Measurable f",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/BoundedFiniteSupport.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-03-19T12:39:18+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "460cda378c202c78d0e03cc5cd25dea5a98c833356f0b9cac604cad9b5f2b37a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 78,
      "start_column": 2,
      "end_line": 78,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\nhf : LocallyIntegrable f \u03bc\n\u22a2 ContinuousOn (fun x => \u2a0d\u207b (y : X) in ball x.1 x.2, \u2016f y\u2016\u2091 \u2202\u03bc) (univ \u00d7\u02e2 Ioi 0)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ToMathlib/HardyLittlewood.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "1d709218915da423ce0156e6596fc449f536946b0c0b4cf6c5f5a8e9da5fa6f8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 391,
      "start_column": 33,
      "end_line": 391,
      "end_column": 38
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u00b9\u00b9 : MetricSpace X\ninst\u271d\u00b9\u2070 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2079 : \u03bc.IsDoubling A\ninst\u271d\u2078 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2077 : BorelSpace X\ninst\u271d\u2076 : NormedSpace \u211d E\ninst\u271d\u2075 : MeasurableSpace E\ninst\u271d\u2074 : BorelSpace E\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\nh\ud835\udcd1 : \ud835\udcd1.Countable\nR : \u211d\nhR : \u2200 i \u2208 \ud835\udcd1, r i \u2264 R\np : \u211d\u22650\nhp : 1 < p\n\u22a2 \u2200 (f : X \u2192 E), MemLp f (\u2191p) \u03bc \u2192 \u2200\u1d50 (x : X) \u2202\u03bc, MB \u03bc \ud835\udcd1 c r f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L391"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-20T18:21:24+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c7869fae856813b3e3c4345c57328e4428ee5e902a62545df85d66e836284c27"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 451,
      "start_column": 2,
      "end_line": 451,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    eLpNorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191(C2_0_6 A p\u2081 p\u2082) * eLpNorm v (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L451"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "815e25d02c1768da1982f769158ae3560951060b22880e8619f49d3bbe5e85be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 456,
      "start_column": 2,
      "end_line": 456,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (MB \u03bc \ud835\udcd1 c r f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L456"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "05e80ff9860b703391208b2cda69077ae36243fad6875f39785f9e1e1e35295f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 469,
      "start_column": 2,
      "end_line": 469,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    wnorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191(A ^ 2) * eLpNorm v (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L469"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "a65bf16630d6e102b858d7756662a7ae8631d5ae8fbaaddb09e4ca4e92f402cb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 535,
      "start_column": 31,
      "end_line": 535,
      "end_column": 36
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 \u2200 (f : X \u2192 E),\n    MemLp f (\u2191p\u2082) \u03bc \u2192\n      \u2200\u1d50 (x : X) \u2202\u03bc, maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L535"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "36bc1c4731292dca07e7f25f06f9fd49b9ecbd53961545f124f8197f49a5e0bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 546,
      "start_column": 29,
      "end_line": 546,
      "end_column": 34
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\n\u22a2 \u2200 (f : X \u2192 E),\n    MemLp f (\u2191p\u2082) \u03bc \u2192\n      \u2200\u1d50 (x : X) \u2202\u03bc, maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/HardyLittlewood.lean#L546"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
    },
    "id": "cea385dac1d112850bc06971123e5c0fa2db07a903a7bfbc542d04ce324857e5"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 560,
      "start_column": 2,
      "end_line": 560,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u00b2 : \u03bc.IsDoubling A\ninst\u271d\u00b9 : NormedAddCommGroup E\nf : X \u2192 E\ninst\u271d : ProperSpace X\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (globalMaximalFunction \u03bc 1 f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L560"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-20T19:02:09+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a135885236f8f9812986da33746dc9973c1d95f6ba49bded65d807027401a0be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/WeakType.lean",
      "start_line": 618,
      "start_column": 2,
      "end_line": 618,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b5 : Type u_3\ninst\u271d\u2075 : TopologicalSpace \u03b5\ninst\u271d\u2074 : ContinuousENorm \u03b5\n\ud835\udd5c : Type u_12\nE' : Type u_13\n\u03b1 : Type u_14\n\u03b1' : Type u_15\ninst\u271d\u00b3 : NormedAddCommGroup E'\n_x : MeasurableSpace \u03b1\n_x' : MeasurableSpace \u03b1'\nT : (\u03b1 \u2192 \u03b5) \u2192 \u03b1' \u2192 E'\np p' : \u211d\u22650\u221e\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\nc : \u211d\u22650\nh : HasWeakType T p p' \u03bc \u03bd c\ninst\u271d\u00b2 : NormedRing \ud835\udd5c\ninst\u271d\u00b9 : MulActionWithZero \ud835\udd5c E'\ninst\u271d : IsBoundedSMul \ud835\udd5c E'\nk : \ud835\udd5c\nf : \u03b1 \u2192 \u03b5\nhf : MemLp f p \u03bc\n\u22a2 wnorm ((k \u2022 T) f) p' \u03bd \u2264 \u2191(\u2016k\u2016\u208a * c) * eLpNorm f p \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/WeakType.lean#L618"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
    },
    "id": "688b3e0133f891911b1757ec0b89288ac24a5d49c47c3a0d8ac4b0762edbf08f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_4 a n) *\n        eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9a8e695223cd668091caf9069e8a3380828a4186c792edfeaa3281246711802a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_4 a n) *\n        eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "21e98d33c842da0b8a9dfa507c8c0a3b218b2a126cc0bd736f0e22d1dc343bac"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 255,
      "start_column": 2,
      "end_line": 255,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j : \u2115\nt : Forest X n\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhg : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm (\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f) 2 volume \u2264\n    \u2191(C7_7_2_1 a n) * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5ec26505c5d27a1809261c859101c4ca93a0703ed52561c1971d211a82b08b23"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 262,
      "start_column": 2,
      "end_line": 262,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j : \u2115\nt : Forest X n\nu : \ud835\udd13 X\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhf : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm ((\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, F.indicator) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f)) 2 volume \u2264\n    \u2191(C7_7_2_2 a n) * dens\u2082 (\u22c3 u \u2208 t, (fun x => t.\ud835\udd17 x) u) ^ 2\u207b\u00b9 * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "189f0b1e011dcc5f7972e95e055f27bd5655a2de5faff1d289fe40c78149ca6d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 276,
      "start_column": 2,
      "end_line": 276,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j j' : \u2115\nt : Forest X n\nf\u2081 f\u2082 : X \u2192 \u2102\nhjj' : j < j'\nhj' : j' < 2 ^ n\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nh3f\u2081 : \u2200 (x : X), \u2016f\u2081 x\u2016 \u2264 G.indicator 1 x\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\nh3f\u2082 : \u2200 (x : X), \u2016f\u2082 x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (x : X),\n          (\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2081 x) *\n            \u2211 u \u2208 {p | p \u2208 t.rowDecomp j'}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2082 x\u2016\u208a \u2264\n    \u2191(C7_7_3 a n) * eLpNorm f\u2081 2 volume * eLpNorm f\u2082 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9b07894f7d8ad30e35e87d859858543d5fc2574fc7497d546e08d9fdc540301f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 346,
      "start_column": 2,
      "end_line": 346,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\n\ud835\udd09 : Forest X n\nf g : X \u2192 \u2102\nhf : Measurable f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nh2g : Bornology.IsBounded (support g)\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 u \u2208 {p | p \u2208 \ud835\udd09}, carlesonSum ((fun x => \ud835\udd09.\ud835\udd17 x) u) f x\u2016\u208a \u2264\n    \u2191(C2_0_4 (\u2191a) q n) * dens\u2082 (\u22c3 u \u2208 \ud835\udd09, (fun x => \ud835\udd09.\ud835\udd17 x) u) ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume * eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L346"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6e86ac46e8b53c6748f5f525b75b04aa05b7d30bb539ceb386b3a703c7fe1d64"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/RemainingTiles.lean",
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf : Bornology.IsBounded (range f)\nh2f : HasCompactSupport f\nh3f : AEStronglyMeasurable f volume\n\u22a2 eLpNorm (approxOnCube (t.\ud835\udcd9\u2086 u\u2081) fun x => \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016) 2 volume \u2264\n    \u2191(C7_6_2 a n) * eLpNorm ((\u2191(\ud835\udcd8 u\u2081)).indicator fun x => (MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "4d015f611f4aaf2a01974bcaff01986b9180ceeac03d5716da495e1d2717d512"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/RemainingTiles.lean",
      "start_line": 385,
      "start_column": 2,
      "end_line": 385,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_6 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L385"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "8cb6159b07625d48c00c7d86fc540744d67a6e3e114eed79458f2bbb660a8e3e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/LargeSeparation.lean",
      "start_line": 1471,
      "start_column": 2,
      "end_line": 1471,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 t.\ud835\udcd9\u2085 u\u2081 u\u2082\nhf : BoundedCompactSupport f\n\u22a2 \u2191(\u2a06 x \u2208 ball (c J) (8 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016\u208a) \u2264\n    \u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J),\n      \u2191\u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f x\u2016\u208a + \u2191(C7_5_10 a) * \u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1471"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3e5af1872ae08407ee90e3eac0d1240ca0de39efcceedca0bf7b85f740c605a8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/LargeSeparation.lean",
      "start_line": 1489,
      "start_column": 2,
      "end_line": 1489,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 t.\ud835\udcd9\u2085 u\u2081 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 HolderOnWith\n    (C7_5_4 a *\n        ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) f\u2081 x\u2016\u208a) +\n          (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2081 x\u2016) x).toNNReal) *\n      ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f\u2082 x\u2016\u208a) +\n        (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2082 x\u2016) x).toNNReal))\n    nn\u03c4 (t.holderFunction u\u2081 u\u2082 f\u2081 f\u2082 J) (ball (c J) (8 * \u2191D ^ s J))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1489"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f74815f5814774759ce140182d237b651e2816c81d4a7c7717e673e78cd0d9c0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Carleson/ForestOperator/LargeSeparation.lean",
      "start_line": 1590,
      "start_column": 2,
      "end_line": 1590,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_5 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/ForestOperator/LargeSeparation.lean#L1590"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "26e629ab562912a8106cd781ac490c4717fde3b0b5d65acc2036af727f39a87c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainTileCount.lean",
      "start_line": 343,
      "start_column": 83,
      "end_line": 343,
      "end_column": 88
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\n\u22a2 \u2211 p \u2208 \ud835\udd04_aux \ud835\udd04 \u03d1 N, volume (E p \u2229 G) \u2264 \u2191(C_6_3_4 a N) * dens\u2081 \u2191\ud835\udd04 * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L343"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-11-16T17:32:56+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "adc132913be3022f3730af799610f485f01120cd7ab74a685fb71670fef79372"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainTileCount.lean",
      "start_line": 357,
      "start_column": 2,
      "end_line": 357,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 \ud835\udd04' : Finset (\ud835\udd13 X)\nh_le : \ud835\udd04' \u2286 \ud835\udd04\n\u03d1 : \u0398 X\n\u22a2 eLpNorm\n      (\u2211 \ud835\udd2d \u2208 \ud835\udd04',\n        (1 + dist_{\ud835\udd20 \ud835\udd2d ,\u2191D ^ \ud835\udd30 \ud835\udd2d / 4} (\ud835\udcac \ud835\udd2d) \u03d1) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) \u2022 (E \ud835\udd2d).indicator 1 * G.indicator 1)\n      (\u2191(Antichain.p a)) volume \u2264\n    \u2191(C_6_1_6 a) * dens\u2081 \u2191\ud835\udd04 ^ (1 / \u2191(Antichain.p a)) * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p)) ^ (1 / \u2191(Antichain.p a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L357"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-28T18:13:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "06f3fc55faced5482011d84f9d1ae1d8acaf7f54de575585ad39e36918fc8c96"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 329,
      "start_column": 6,
      "end_line": 329,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2 = \u2191(3 * (2 * nnq / (nnq + 1)) - 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L329"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "8c1765e70683251fea028a23ac0b7340c8480c10ec4b5843d5d4d2fd814e4678"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 334,
      "start_column": 6,
      "end_line": 334,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) / (2 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "da54b74fccee08845a7f0951246a3ae63d24ea0c97c518704d24d356956d5b72"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 312,
      "start_column": 6,
      "end_line": 312,
      "end_column": 11
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "50248e80408268fca85717aa466c8a09571a3e7de3f6820511951d7dea65568f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 379,
      "start_column": 86,
      "end_line": 379,
      "end_column": 91
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\n\u22a2 (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L379"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a65910d5fb7f63889e11885ed3543e8ccf74f82360ccd62d73d8aac6d7d90403"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 385,
      "start_column": 4,
      "end_line": 385,
      "end_column": 9
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L385"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "e66468d344f740ee9c32dfd9cba7699cb20dedd7ce74cb44e72738ffa76b9016"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 420,
      "start_column": 6,
      "end_line": 420,
      "end_column": 11
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 p \u2208 \ud835\udd04, carlesonOn p f x\u2016\u208a \u2264\n    eLpNorm g 2 volume * eLpNorm (\u2211 p \u2208 \ud835\udd04, carlesonOn p f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L420"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "fdaac9a729117fda775fcc30f221a6df6b6bbe2d5ef259c2aafeef241aa53a1b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 434,
      "start_column": 8,
      "end_line": 434,
      "end_column": 13
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\nh2 : 2 ^ (107 * a ^ 3) = \u2191\u20162 ^ (107 * a ^ 3)\u2016\u208a\nz : X\n\u22a2 MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f z \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L434"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d4b881520eea376d1e741f6574d04f2f72ae4a9ea8529be360fb69f16e36b50f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 449,
      "start_column": 6,
      "end_line": 449,
      "end_column": 11
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    2 ^ (2 * a + 2) *\n      (\u2191(2 * nnq / (nnq + 1) - 1)\u207b\u00b9 * (dens\u2082 \u2191\ud835\udd04 ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L449"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "da5097657100e02172a7422229c556d28bf7428304eeb7d36a8e9a5fb237db93"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 511,
      "start_column": 51,
      "end_line": 511,
      "end_column": 56
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u208a \u2264\n    \u2191(C_2_0_3 \u2191a nnq) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/Antichain/AntichainOperator.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-01-09T16:08:11+01:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "4d02ec0de229e53442cd8d7d10fef21977c2bbb137a6e7a812b11e2cc537ad2d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 359,
      "start_column": 2,
      "end_line": 359,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a \u2264\n    \u2191(C_6_1_5 a) * (1 + dist_{\ud835\udd20 p' ,\u2191D ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p)) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) /\n        \u2191(volume.nnreal \u2191(\ud835\udcd8 p)) *\n      \u222b (y : X) in E p', \u2016g y\u2016 * \u222b (y : X) in E p, \u2016g y\u2016",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L359"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "edffe990c24946bdfd096d7d425b0c720841deb29ce19499d59cfc36be0645f7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "44ce6540a88da0802e894ee902ce4c82444ab5be883869d39a93054cd1579559"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 368,
      "start_column": 84,
      "end_line": 368,
      "end_column": 89
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0ae5a937f31822b7e0e1866f76c40b62dd3c1e5691225fb8795f24a418d1c197"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 121,
      "start_column": 2,
      "end_line": 121,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\nhx : dist x x' \u2264 r\n\u22a2 \u2191(nndist (czOperator K r g x) (czOperator K r g x')) \u2264 \u2191(C10_1_2 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d24c562a103f9d5c5263b1edb4991cdd2efb5914bdd754323a3ae5da4bb9bf3b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 131,
      "start_column": 2,
      "end_line": 131,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\nhx : dist x x' \u2264 R / 4\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    \u2016czOperator K r ((ball x (R / 2))\u1d9c.indicator g) x'\u2016\u2091 + \u2191(C10_1_3 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0b9032e3a8c6b06e3363eeb38edeeacd8b8b1e21bb113cbef55de9d6e6e08aad"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume {x' | x' \u2208 ball x (R / 4) \u2227 4 * globalMaximalFunction volume 1 (czOperator K r g) x < \u2016czOperator K r g x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "96ed4696e3ff93212edaa6857e86be54312e9e7c762e4b49b6aa69aa1dce032f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 153,
      "start_column": 2,
      "end_line": 153,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume\n      {x' |\n        x' \u2208 ball x (R / 4) \u2227\n          \u2191(C10_1_4 a) * globalMaximalFunction volume 1 g x < \u2016czOperator K r ((ball x (R / 2)).indicator g) x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L153"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "b4b1117d1cddd63c605a19612f286428bcde49fe93b21cdf6c8ef9aa261d48b2"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + \u2191(C10_1_5 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "4f535c614e2276213415136b01e0d556f2972cb9853994652b369b213132f397"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 175,
      "start_column": 2,
      "end_line": 175,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "10a0528a1cd1de6cd54bcfc5f41dc722d76f5229096d9dd69b0b3049dbdddbbb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 183,
      "start_column": 2,
      "end_line": 183,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "f0d5865f4327a57b55c4dd78ad977758ecd22d168459b7f309fbebddd35ff44b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 190,
      "start_column": 2,
      "end_line": 190,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2081 : \u211d\n\u22a2 Continuous fun R\u2082 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L190"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "0cb8ab414f4fae5a46c97491e27da5e532b8557bbcb82d7ecd79398c9517f44b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2082 : \u211d\n\u22a2 Continuous fun R\u2081 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "79798fe1e067378119b2470abc930f8f47c29dc8edf9c8ae2aa186e95802b96c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 739,
      "start_column": 2,
      "end_line": 739,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 nontangentialOperator K f x =\n    \u2a06 R\u2081, \u2a06 R\u2082, \u2a06 (_ : R\u2081 < R\u2082), \u2a06 x', \u2a06 (_ : dist x x' \u2264 R\u2081), \u2016\u222b (y : X) in ball x' R\u2082 \\ ball x' R\u2081, K x' y * f y\u2016\u2091",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L739"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "9782a6e5d496500c04901fbb393ddf24a2b929894c7cc0a95690c181e624fb9f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 216,
      "start_column": 2,
      "end_line": 216,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume (C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume (C10_0_2 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "b295d887e2ebe1477bd0d8fe9b63eb5d7df204ff8de62209e1d2f1d9c97c01f1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "55316ee7ff6bda7ee05ebd30d9336efbccd10baa858aaaf4189189bade66565c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 36,
      "start_column": 31,
      "end_line": 36,
      "end_column": 36
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nthis : C10_2_1 a = \u2191(defaultA a) ^ 4\n\u22a2 \u2200 (f : X \u2192 \u2102), MemLp f 1 volume \u2192 \u2200\u1d50 (x : X), globalMaximalFunction volume 1 f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6ac2db58396b0d5a22eac364b7897d17af11ae2c24dd334ab114c859afb215d3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 50,
      "start_column": 2,
      "end_line": 50,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 \u2200\u1d50 (x : X),\n    \u2203 c r,\n      Tendsto (fun i => \u2a0d (y : X) in ball (c i) (r i), f y) atTop (\ud835\udcdd (f x)) \u2227\n        Tendsto r atTop (\ud835\udcdd[>] 0) \u2227 \u2200 (i : \u2115), x \u2208 ball (c i) (r i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6ab79ba19ffd9d83a9efd5388b98fc21700dbe0057fb2b8f629355096e42b702"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nO : Set X\nhO : IsOpen O \u2227 O \u2260 univ\n\u22a2 \u2203 c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) \u2227\n      \u22c3 i, ball (c i) (3 * r i) = O \u2227\n        (\u2200 (i : \u2115), \u00acDisjoint (ball (c i) (7 * r i)) O\u1d9c) \u2227\n          \u2200 x \u2208 O, Cardinal.mk \u2191{i | x \u2208 ball (c i) (3 * r i)} \u2264 \u2191(2 ^ (6 * a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "35d3cfe2ed3aedcece1c8d313be0fb81b531c0944b6610729384c0c547c840fc"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 82,
      "start_column": 2,
      "end_line": 82,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nh : \u00acGeneralCase f \u03b1\n\u22a2 volume univ < \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "76edf11015d2f4e455b520626d92be74d43df7b418716a280bb9c24a6e9b60c6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 IsOpen (globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1) \u2227 globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1 \u2260 univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d7951e9db5640cfd60b6d0161639c6ca82c9aa0645c59afcc612c840e7b8111"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 czBall3 hf hX i}.Finite",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "661be72b888469d048015fea1f8c9d57038fc53605017cf96a5dd937b7bdb83f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ni : \u2115\n\u22a2 czBall hf hX i \u2286 czPartition hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "ea0a98ee2716e72972242a884616109837af0f597078a6106827fd6620b58aef"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => czPartition hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "bc1271ca08a2e565e762e5fdcd27f56d20d2ce16d3fd506a42ff28e2ecff551e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 czPartition hf hX i\nhj : x \u2208 czPartition hf hX j\n\u22a2 i = j",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "bef8fe270fc7854e5072d5f060598b8e16f7ca0ca926c01bb2db901821d1d994"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 \u22c3 i, czPartition hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a4881259c4913b7a297f4e4f189fa8db9be67ed1a9577dadf4d8368a150619bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), czRemainder' hf hX i x = czRemainder hf \u03b1 x",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T17:21:05+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "e9485aa0ceb780aa7fd852f0848204116d95496da780b1c892b80daad0a10300"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 202,
      "start_column": 2,
      "end_line": 202,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (czApproximation hf \u03b1)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "8d0e7125c9131b2e2fd18f757ffeb3b3c78c2cf47e5fe55ade95ac2376652080"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c5fae2a6f3ed0f2133638fb2e7851a7a9d12cfb67471f4ed6314796db5417547"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "f99dc4074ffc88be450cc84023bdb9e6006f7291f13d937c1bd05a08030f7806"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czApproximation hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "92ca7c7a65aee32ce23b03e64882af6a75d379ffc8da735c4f0f852e0c9039d7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 230,
      "start_column": 2,
      "end_line": 230,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (czRemainder' hf hX i) \u2286 czBall3 hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "8cb9b98a34d7e4033311fb7ef06bedd0f504ad8eafd787b6fc9ba27c9ada6204"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 236,
      "start_column": 2,
      "end_line": 236,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), czRemainder' hf hX i x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "57e3d229379484c7daf59b8728f3b24972459d5a69756e708c2eeb1464f44016"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 241,
      "start_column": 2,
      "end_line": 241,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), czRemainder hf \u03b1 x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0859f73bf06334982076ba8ef93b00810fda286cd33540d19e049f703b659f06"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (czRemainder' hf hX i) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume (czBall3 hf hX i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c621919be3af7d0b02fef8b661d98ef314017303af4c879916217944935339bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 252,
      "start_column": 2,
      "end_line": 252,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L252"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "576e1bd794657e644ec7aca795dd3f3a9791a3aa8dd3bbd75d7bd022d8e842c0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (czBall3 hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a367981a94d8d52068531989a85ecbb5fa1d0efb88b129fdb2f928bd47517229"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 262,
      "start_column": 2,
      "end_line": 262,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "f4abb6415f63d2fdcc807fd089730c9aadbf2bc009b5b3a94c36fb1b826e62d3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 268,
      "start_column": 2,
      "end_line": 268,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (czRemainder' hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L268"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "33f6c66298c7e80eca6b4b4dc521d0bbea420eac7d881b7e14238a4e323f5989"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 274,
      "start_column": 2,
      "end_line": 274,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L274"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "98202fd18d17752300cdee85000ef432cbfd9f88595c7e0bb0a7e221625b2a9b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 292,
      "start_column": 2,
      "end_line": 292,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (czApproximation hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L292"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "01b926c6b7a70c907f205655a86e324866173858ca317c72a8647d1f4030b588"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 307,
      "start_column": 2,
      "end_line": 307,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (\u03a9 hf \u03b1)\u1d9c\nhX : GeneralCase f \u03b1\n\u22a2 \u2016czOperator K r (czRemainder hf \u03b1) x\u2016\u2091 \u2264 3 * czOperatorBound hf hX x + \u03b1 / 8",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L307"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a18a6174579adfc88f25bf9de4e93002f771db35b364318b5712401d66586e5e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 317,
      "start_column": 2,
      "end_line": 317,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 volume ((\u03a9 hf \u03b1)\u1d9c \u2229 czOperatorBound hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264 \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L317"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0dba88cfa78cb53fd805d5fa5edce059644a81b5090c9633861f73d9b0c92dfb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 328,
      "start_column": 2,
      "end_line": 328,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 distribution (czOperator K r (czRemainder hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L328"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c3655a201bc62093a5dabb7ad9fd9e981517d16735637f3b9bbf084f6cd3db19"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 344,
      "start_column": 2,
      "end_line": 344,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\n\u22a2 HasBoundedWeakType (czOperator K r) 1 1 volume volume (C10_0_3 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L344"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "84dd636a123b0d04f995de2b8db851c6dacdc0df4e39a318c0e5a5efb899f749"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 84,
      "start_column": 21,
      "end_line": 84,
      "end_column": 26
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\nc : \u2102\nx : GL (Fin 0) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)\n\u22a2 \u22a4.FG",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L84"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-01-18T16:24:18+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "9e387459881cd06e272e824be590ae23b8dbeea7f8a795b138793d41827a9361"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 128,
      "start_column": 19,
      "end_line": 128,
      "end_column": 24
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 IsSmooth fun x => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "82d1219a31ec6248c082e52254b9ea0e5469453722467bd455f48ca7e8bab7e5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 129,
      "start_column": 21,
      "end_line": 129,
      "end_column": 26
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (g : GL (Fin n) \u211a) (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)) (y : GL (Fin n) \u211d),\n    (fun x => z)\n        (((algebraMap \u211a (DedekindDomain.FiniteAdeleRing \u2124 \u211a)).GL (Fin n)) g * x, ((algebraMap \u211a \u211d).GL (Fin n)) g * y) =\n      (fun x => z) (x, y)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L129"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "6ca591f359cc5cfe62ef7ba54fe8a2445a82ffceb099ddc8af7ea10afd209a65"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 130,
      "start_column": 30,
      "end_line": 130,
      "end_column": 35
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)), IsSlowlyIncreasing fun y => (fun x => z) (x, y)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "acb487a3f803ef24437362c40783ccfc64dd3ed0312143596ae842f3acf31bb9"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 132,
      "start_column": 26,
      "end_line": 132,
      "end_column": 31
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2203 U, IsConstantOn U fun x => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:32:34+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "3e33fcaa7e39bed563d6e4aff873004a6260a2d06811154a0d3104466c513cba"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 131,
      "start_column": 23,
      "end_line": 131,
      "end_column": 28
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => (fun x => z) (x, y), \u22ef\u27e9))",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:29:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2d14df01adfe386a57e34463a79d0a34952873d53b218d69ae2cd9df1efbffbe"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 137,
      "start_column": 28,
      "end_line": 137,
      "end_column": 33
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\nz : \u2102\n\u22a2 \u03c1.IsTrivial",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L137"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "7308b79f890354ea9fd42f982e1334101ff8882e1e369f274cf2162ce59e77d1"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 138,
      "start_column": 14,
      "end_line": 138,
      "end_column": 19
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\n\u22a2 Function.LeftInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "acf4aa7f710e488628f0cc7f15a91896a6cbdb0ce427d958d0e340411919c730"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 139,
      "start_column": 15,
      "end_line": 139,
      "end_column": 20
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\n\u22a2 Function.RightInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "313d43ba40c7115106eb34b2e8729d3f504d3a4cd15597114f845635c8d50803"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/HaarMeasure/MeasurableSpacePadics.lean",
      "start_line": 67,
      "start_column": 87,
      "end_line": 67,
      "end_column": 92
    },
    "debug_info": {
      "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\ns : Set \u2124_[p]\n\u22a2 volume (Subtype.val '' s) = volume s",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/HaarMeasure/MeasurableSpacePadics.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4248b9ccf6199b196ebb612bb6ff5d1e4daf76992d0480cdfe62a068dbe79d3c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Basic/Reductions.lean",
      "start_line": 324,
      "start_column": 93,
      "end_line": 324,
      "end_column": 98
    },
    "debug_info": {
      "goal": "P : FreyPackage\n\u22a2 IsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L324"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-04-30T10:03:06+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2189ad07df84bb378d050a31805a1b39aa348c4bcc7fd1399b8309cbf8ec24dd"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Basic/Reductions.lean",
      "start_line": 334,
      "start_column": 95,
      "end_line": 334,
      "end_column": 100
    },
    "debug_info": {
      "goal": "P : FreyPackage\n\u22a2 \u00acIsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-04-30T10:03:06+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "410ec6dd9751afc45db92cf2f11470387a0ed41450c95a0d3be2793f315dda10"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/EllipticCurve/Torsion.lean",
      "start_line": 35,
      "start_column": 26,
      "end_line": 35,
      "end_column": 31
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\n\u22a2 \u2200 (x : E.n_torsion n), n \u2022 x = 0",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T22:55:14+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "aad435e98450cc8eda7ac39deb77c6ff11556d4d50eba3ab1e97c6debebb802c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/EllipticCurve/Torsion.lean",
      "start_line": 39,
      "start_column": 91,
      "end_line": 39,
      "end_column": 96
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\nhn : 0 < n\n\u22a2 Finite (E.n_torsion n)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "cb8a28cde12be451040d5770e1012634fd01b89b2ed581e35d36e870d0deca49"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/EllipticCurve/Torsion.lean",
      "start_line": 44,
      "start_column": 38,
      "end_line": 44,
      "end_column": 43
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 Nat.card (E.n_torsion n) = n ^ 2",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-03-23T17:52:39+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "55e067881a3bc4db5dd8fdc930d16748550c26f26f88575d27b1df7d31413933"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/EllipticCurve/Torsion.lean",
      "start_line": 49,
      "start_column": 66,
      "end_line": 49,
      "end_column": 71
    },
    "debug_info": {
      "goal": "d : \u2115\nA : Type u_1\ninst\u271d : AddCommGroup A\nn : \u2115\nhn : 0 < n\nr : \u2115\nh : \u2200 (d : \u2115), d \u2223 n \u2192 Nat.card \u21a5(Submodule.torsionBy \u2124 A \u2191d) = d ^ r\n\u22a2 \u2203 \u03c6, True",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-01T22:28:50+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "66701e276775a8dd04353eb1fd9883a918acb022aa8aefedce517788f5ae6950"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/EllipticCurve/Torsion.lean",
      "start_line": 55,
      "start_column": 56,
      "end_line": 55,
      "end_column": 61
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 \u2203 \u03c6, True",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L55"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-03-23T18:21:01+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "c796ca5dc0d4e3f5fe9881a7858514e417553f2de717e7690240cb4dc73fe01d"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/EllipticCurve/Torsion.lean",
      "start_line": 64,
      "start_column": 73,
      "end_line": 64,
      "end_column": 78
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b3 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b2 : E.IsElliptic\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : Algebra k K\n\u22a2 map E (AlgHom.id k K) = AddMonoidHom.id E\u27eeK\u27ef",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4fcf2fb55e3a98d5f1d6aa5a573795d7cef32383f7c213f3e1c13947a7ed6977"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/EllipticCurve/Torsion.lean",
      "start_line": 69,
      "start_column": 48,
      "end_line": 69,
      "end_column": 53
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u2077 : Field k\nE : WeierstrassCurve k\ninst\u271d\u2076 : E.IsElliptic\nK L M : Type u\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : Field L\ninst\u271d\u00b3 : Field M\ninst\u271d\u00b2 : Algebra k K\ninst\u271d\u00b9 : Algebra k L\ninst\u271d : Algebra k M\nf : K \u2192\u2090[k] L\ng : L \u2192\u2090[k] M\n\u22a2 (map E g).comp (map E f) = map E (g.comp f)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4f65649d399b1e7211a7f204454bf8b25786f4755c28d5124477820cdbd0fb32"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicRepresentation/Example.lean",
      "start_line": 307,
      "start_column": 28,
      "end_line": 307,
      "end_column": 33
    },
    "debug_info": {
      "goal": "x : QHat\n\u22a2 (\u2203 N z, IsCoprime N z \u2227 x = (1 / \u2191\u2191N) \u2297\u209c[\u2124] z) \u2227\n    \u2200 (N\u2081 N\u2082 : \u2115+) (z\u2081 z\u2082 : ZHat),\n      IsCoprime N\u2081 z\u2081 \u2227 IsCoprime N\u2082 z\u2082 \u2227 (1 / \u2191\u2191N\u2081) \u2297\u209c[\u2124] z\u2081 = (1 / \u2191\u2191N\u2082) \u2297\u209c[\u2124] z\u2082 \u2192 N\u2081 = N\u2082 \u2227 z\u2081 = z\u2082",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L307"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-06T01:01:13+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "575d2cf03b8e1b190f9460c549e6e9d5aebdd328d5045a25c142b9574e245895"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicRepresentation/Example.lean",
      "start_line": 472,
      "start_column": 66,
      "end_line": 472,
      "end_column": 71
    },
    "debug_info": {
      "goal": "\u22a2 unitsratsub \u2294 unitszHatsub = \u22a4",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L472"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-06T01:54:08+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d8ab1086af92400d1e0380d15a45467deea7fec9e374a5c825c96c069c3e31b3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicRepresentation/Example.lean",
      "start_line": 1052,
      "start_column": 29,
      "end_line": 1052,
      "end_column": 34
    },
    "debug_info": {
      "goal": "\u22a2 Function.Injective \u21d1j\u2081",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1052"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "33b3f9cd03be709077d97d6ef55afbb006d2898a3b3672787c86ae7d431acfcb"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicRepresentation/Example.lean",
      "start_line": 1059,
      "start_column": 29,
      "end_line": 1059,
      "end_column": 34
    },
    "debug_info": {
      "goal": "\u22a2 Function.Injective \u21d1j\u2082",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1059"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "548f6e54bb2a1566d16586c1aa7c3db3e24b4f98b4831cbf2392ed436a0339b1"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicRepresentation/Example.lean",
      "start_line": 1063,
      "start_column": 2,
      "end_line": 1063,
      "end_column": 7
    },
    "debug_info": {
      "goal": "z : D^\n\u22a2 \u2203 N z', z = j\u2081 ((\u2191\u2191N)\u207b\u00b9 \u2297\u209c[\u2124] 1) * j\u2082 z'",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1063"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2787052271a8828db0e207fce679f14d06b8a668073ef9e75b1f74a474723eb3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicRepresentation/Example.lean",
      "start_line": 1065,
      "start_column": 82,
      "end_line": 1065,
      "end_column": 87
    },
    "debug_info": {
      "goal": "z : D^\u02e3\n\u22a2 \u2203 u v, \u2191z = j\u2081 \u2191u * j\u2082 \u2191v",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1065"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "0189f8fb7c76b0126de4da39ec0923b904fae293f823025aa22d951c879d993b"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 172,
      "start_column": 2,
      "end_line": 172,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localFullLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L172"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "918aec9a99e7efdf6acae4f19f1ff000d0f0099f69f15b8ae1b316e1debcb987"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 176,
      "start_column": 2,
      "end_line": 176,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localFullLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L176"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "8e2146f4a30a231a6ec61953a7bcc51ec68dd4e083a7dd704cce2ca9124ba2d2"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 261,
      "start_column": 2,
      "end_line": 261,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localTameLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L261"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "99a782dc181aa18fb17525521ae429273904e3c9e4fb090c48c5041cc34f6c36"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localTameLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "248b4e4e5486e631159f9cea279a858ad0466f02199900a86296183031358d1f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 313,
      "start_column": 2,
      "end_line": 313,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 IsOpen (TameLevel S).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L313"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "6c7aa55333f8b9c8af3c3aefe47d0554f084198b4f6c91d4445d22955c00e61f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 316,
      "start_column": 2,
      "end_line": 316,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 IsCompact (TameLevel S).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L316"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d83950d603e9af205e68da765af229ff2154e74689a46b81a82e7d4ee37f189e"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/NumberField/Completion.lean",
      "start_line": 92,
      "start_column": 2,
      "end_line": 92,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : Algebra K L\nv : InfinitePlace K\ninst\u271d : NumberField L\n\u22a2 Module.finrank v.Completion ((w : ExtensionPlace L v) \u2192 (\u2191w).Completion) =\n    Module.finrank v.Completion (L \u2297[K] v.Completion)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/Completion.lean#L92"
    },
    "metadata": {
      "blame_email_hash": "82b95686a14c",
      "blame_date": "2025-03-27T09:14:59+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "782b95147e01ec113f6da3ea5d044879f88d4007fb0204c9c9292fb3fce89924"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/NumberField/AdeleRing.lean",
      "start_line": 26,
      "start_column": 2,
      "end_line": 26,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\n\u22a2 LocallyCompactSpace (AdeleRing (\ud835\udcde K) K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-12-02T00:05:18+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "b138b46a0b4c5fb6cdcb7311b498a989628285d1f315b824553507dd9747e4cb"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/NumberField/AdeleRing.lean",
      "start_line": 73,
      "start_column": 2,
      "end_line": 73,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : NumberField L\ninst\u271d : Algebra K L\nl : L\n\u22a2 (baseChangeEquiv K L) (l \u2297\u209c[K] 1) = (algebraMap L (AdeleRing (\ud835\udcde L) L)) l",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-21T18:04:24+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "ca08523a05645c7a469b0c92a7d78139914b44d6921fc6fed5527c1b6165f122"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/NumberField/AdeleRing.lean",
      "start_line": 289,
      "start_column": 2,
      "end_line": 289,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 CompactSpace (AdeleRing (\ud835\udcde \u211a) \u211a \u29f8 AdeleRing.principalSubgroup (\ud835\udcde \u211a) \u211a)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L289"
    },
    "metadata": {
      "blame_email_hash": "82b95686a14c",
      "blame_date": "2025-02-08T15:57:20+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a8e1eca51621562e4746e894e62391e5bcb7122f667f9165071496ee611a6f14"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DivisionAlgebra/Finiteness.lean",
      "start_line": 39,
      "start_column": 87,
      "end_line": 39,
      "end_column": 92
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : NumberField K\nD : Type u_2\ninst\u271d\u00b9 : DivisionRing D\ninst\u271d : Algebra K D\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde K) K) (D \u2297[K] FiniteAdeleRing (\ud835\udcde K) K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-09T16:34:07+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a742558194f888ebbac37922e95767e75bb780311206c816d1622563d7014e02"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DivisionAlgebra/Finiteness.lean",
      "start_line": 71,
      "start_column": 2,
      "end_line": 71,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : NumberField K\nD : Type u_2\ninst\u271d\u00b3 : DivisionRing D\ninst\u271d\u00b2 : Algebra K D\ninst\u271d\u00b9 : FiniteDimensional K D\ninst\u271d : Algebra.IsCentral K D\nU : Subgroup (Dfx K D)\nhU : IsOpen \u2191U\n\u22a2 Finite (Doset.Quotient (Set.range \u21d1(incl\u2081 K D)) \u2191U)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-10-18T18:57:02+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "1a8380d1447b935db0d1ad4785a60c3805b6767069dc936941198d22530f6cea"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 420,
      "start_column": 2,
      "end_line": 420,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\n\u22a2 Function.Bijective \u21d1(tensorAdicCompletionComapAlgHom A K L B v)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L420"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d59614c30f225289f5dc68ec7b021ad171d7c0860d47de2f0862a732e62e9e90"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 531,
      "start_column": 77,
      "end_line": 531,
      "end_column": 82
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 \u2203 S,\n    \u2200 v \u2209 S,\n      ((AlgHom.restrictScalars B (tensorAdicCompletionComapAlgHom A K L B v)).comp\n            (tensorAdicCompletionIntegersTo A K L B v)).range =\n        Subalgebra.pi Set.univ fun x => adicCompletionIntegersSubalgebra L \u2191x",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L531"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "285fac86127eaef84d7a8be7da5ff815b52b6acc28cfd9af039a473477dba02c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 684,
      "start_column": 4,
      "end_line": 684,
      "end_column": 9
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Function.Bijective \u21d1(baseChange A K L B).baseChange_of_algebraMap",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L684"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "93ea3a69f3f41ec84425f5c095279a6fb97c151f848b3fcf5161bad08cc0412f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 613,
      "start_column": 84,
      "end_line": 613,
      "end_column": 89
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChange A K L B) x).IsFiniteAdele",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L613"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-11-26T09:29:45+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "8f8520d9be73c10e7f377bd42e354d0a9d34242aa641e396e9e4d07ef2d48f64"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 621,
      "start_column": 2,
      "end_line": 621,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChangeEquiv A K L B) (1 \u2297\u209c[K] x)).IsFiniteAdele",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L621"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-11-26T09:29:45+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "e6e8ac5c2400d8826cf13ae192c9b32fe2cb894cd7dfe3a0ff81acac99fa7bd7"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 673,
      "start_column": 2,
      "end_line": 673,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 IsModuleTopology (FiniteAdeleRing A K) (FiniteAdeleRing B L)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L673"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "dab045ce4cb80848b486b7a8626887c53ac68f2f800ffa6f32e8c94a2cf93b46"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 689,
      "start_column": 22,
      "end_line": 689,
      "end_column": 27
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.toFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L689"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "7b1b679e889c62f5a98a5fc2c2e10604fcc43253e250c09a356cb22f6860dbf4"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 690,
      "start_column": 23,
      "end_line": 690,
      "end_column": 28
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.invFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a4a59ea585620cffd1aa9966388bb1b2b8495f30f5af7edd10c89b95c2972fec"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7
    },
    "debug_info": {
      "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\nx : \u2124_[p]\ns : Submodule \u2124_[p] \u211a_[p]\n\u22a2 \u2191((x \u2022 s.toAddSubgroup).relindex s.toAddSubgroup) = \u2016x\u2016\u208a\u207b\u00b9",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "5dc4f2b0a450cca89e5a7ff72ad3bf79061e16dad7aea67468dad24672a44f43"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
      "start_line": 25,
      "start_column": 69,
      "end_line": 25,
      "end_column": 74
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableInv G\n\u22a2 Measurable Inv.inv",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "b98d560670085a3ba260dbe34619c1b043c776f4f0df313a2f7c05b4c9b07660"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
      "start_line": 32,
      "start_column": 28,
      "end_line": 32,
      "end_column": 33
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableMul G\nc : \u21a5H\n\u22a2 Measurable fun x => c * x",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2921651c760a6e7e8e29f855c99114c250cc1ac7f8eea546ca1d6f83d63bc615"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
      "start_line": 37,
      "start_column": 28,
      "end_line": 37,
      "end_column": 33
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulLeftInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => g * x) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "107a8792b910065b42e216ff8e1445758550991b6dda03f6b33be351f711ae1d"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
      "start_line": 42,
      "start_column": 29,
      "end_line": 42,
      "end_column": 34
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulRightInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => x * g) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "5b4b43ac80720372f1359ebd97893520b6afe1c0b62f0a5ed6c5876436a41253"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean",
      "start_line": 169,
      "start_column": 2,
      "end_line": 169,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\nM : Type u_3\ninst\u271d\u00b9\u00b2 : CommRing R\ninst\u271d\u00b9\u00b9 : TopologicalSpace R\ninst\u271d\u00b9\u2070 : IsTopologicalRing R\ninst\u271d\u2079 : CommRing S\ninst\u271d\u2078 : TopologicalSpace S\ninst\u271d\u2077 : IsTopologicalRing S\ninst\u271d\u2076 : Algebra R S\ninst\u271d\u2075 : Module.Finite R S\ninst\u271d\u2074 : IsModuleTopology R S\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\ninst\u271d\u00b9 : Module S M\ninst\u271d : IsScalarTower R S M\n\u22a2 moduleTopology R M = moduleTopology S M",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-30T11:02:34+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "f60d24236ef7b3ebc4273e895f4b413884192e0695143f47ed910a475dabe454"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean",
      "start_line": 204,
      "start_column": 2,
      "end_line": 204,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u2076 : CommRing R\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : IsTopologicalRing R\ninst\u271d\u00b3 : CommRing S\ninst\u271d\u00b2 : TopologicalSpace S\ninst\u271d\u00b9 : IsTopologicalRing S\ninst\u271d : Algebra R S\nhcont : Continuous \u21d1(algebraMap R S)\nhopen : IsOpenMap \u21d1(algebraMap R S)\n\u22a2 IsModuleTopology R S",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L204"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-30T11:02:34+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "54c98af769c9ca6879828e3ad7b55a94e4b5d02db766da1edf5f07c97bdc7b81"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean",
      "start_line": 20,
      "start_column": 2,
      "end_line": 20,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u2076 : Field F\ninst\u271d\u2075 : NumberField F\ninst\u271d\u2074 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b3 : Ring D\ninst\u271d\u00b2 : Algebra F D\ninst\u271d\u00b9 : IsQuaternionAlgebra F D\nK : Type u_3\ninst\u271d : Field K\nU : Subgroup (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)\u02e3\n\u22a2 FiniteDimensional K (WeightTwoAutomorphicFormOfLevel U K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2f4c6b7472cd6724b1396e8d3fa00a413e50315f0cf763f1fa9a103e24e2af18"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b3 : Field F\ninst\u271d\u00b2 : NumberField F\nD : Type u_2\ninst\u271d\u00b9 : Ring D\ninst\u271d : Algebra F D\n\u22a2 (incl\u2082 F D).range \u2264 Subgroup.center (Dfx F D)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "de75557e0fe14dab1d7baca3364d1230e4b0dd856849bde1b66eef6dbb32d84a"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
      "start_line": 178,
      "start_column": 2,
      "end_line": 178,
      "end_column": 7
    },
    "debug_info": {
      "goal": "G : Type u_4\ninst\u271d\u00b2 : Group G\ninst\u271d\u00b9 : TopologicalSpace G\ninst\u271d : IsTopologicalGroup G\nU : Subgroup G\nhU : IsOpen \u2191U\ng : ConjAct G\n\u22a2 IsOpen \u2191(g \u2022 U)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L178"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "61effcac3c2120fde9211c249603d077ef88f3854416c72690411f22cadbd327"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/quote4",
      "branch": "stable",
      "commit": "fa4f7f15d97591a9cf3aa7724ba371c7fc6dda02",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "examples/introQ.lean",
      "start_line": 16,
      "start_column": 18,
      "end_line": 16,
      "end_column": 23
    },
    "debug_info": {
      "goal": "\u00ab$P\u00bb : \u2200 {n : Nat}, n = 1\n$fst\u271d : Nat\n\u00ab$m\u00bb : $fst\u271d = 1\n\u22a2 $fst\u271d = 1",
      "url": "https://github.com/leanprover-community/quote4/blob/fa4f7f15d97591a9cf3aa7724ba371c7fc6dda02/examples/introQ.lean#L16"
    },
    "metadata": {
      "blame_email_hash": "1c4ac4603b04",
      "blame_date": "2023-07-14T18:25:43-07:00",
      "inclusion_date": "2025-05-01T23:45:24.130436+00:00"
    },
    "id": "de2af27bbaf69bc7908c89e9a00b6475ebf27556df4c1fc487fd0172d1fff155"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "8c6873cadf17101b26061f2a409fc10474c93f5c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Duper/Tests/lastAsylum.lean",
      "start_line": 35,
      "start_column": 13,
      "end_line": 35,
      "end_column": 18
    },
    "debug_info": {
      "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 \u2200 (x : Inhab), Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
      "url": "https://github.com/leanprover-community/duper/blob/8c6873cadf17101b26061f2a409fc10474c93f5c/Duper/Tests/lastAsylum.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "d9c480704efb",
      "blame_date": "2022-08-01T22:37:02-04:00",
      "inclusion_date": "2025-05-04T23:48:11.487987+00:00"
    },
    "id": "d5aa7eb34a282ccaa9feea1bd21d01e989eac15ebb2e7c66d569c3a2d704b1e1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "8c6873cadf17101b26061f2a409fc10474c93f5c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Duper/Tests/test_continuity.lean",
      "start_line": 18,
      "start_column": 50,
      "end_line": 18,
      "end_column": 55
    },
    "debug_info": {
      "goal": "a : Real\n\u22a2 dist a a = zero",
      "url": "https://github.com/leanprover-community/duper/blob/8c6873cadf17101b26061f2a409fc10474c93f5c/Duper/Tests/test_continuity.lean#L18"
    },
    "metadata": {
      "blame_email_hash": "4ac7eab8a488",
      "blame_date": "2023-06-05T10:39:00+02:00",
      "inclusion_date": "2025-05-04T23:48:11.487987+00:00"
    },
    "id": "ccb37d916d0eee5746a60545b3315614bc2ac6946c554f6346fc23eb39d90044"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "8c6873cadf17101b26061f2a409fc10474c93f5c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Duper/Tests/test_continuity.lean",
      "start_line": 20,
      "start_column": 48,
      "end_line": 20,
      "end_column": 53
    },
    "debug_info": {
      "goal": "a : Real\n\u22a2 lt zero one",
      "url": "https://github.com/leanprover-community/duper/blob/8c6873cadf17101b26061f2a409fc10474c93f5c/Duper/Tests/test_continuity.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "4ac7eab8a488",
      "blame_date": "2023-06-05T10:39:00+02:00",
      "inclusion_date": "2025-05-04T23:48:11.487987+00:00"
    },
    "id": "83ba12b5a2c4ccea7c1bcdb3c58b8d6aa91fe13eed1553e9aa55bbf30c1d5440"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "514c6039d70f6e63fb7bc3ab853adeb71bc56305",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "BatteriesTest/lintsimp.lean",
      "start_line": 37,
      "start_column": 64,
      "end_line": 37,
      "end_column": 69
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : \u03b1\u1d50\u1d52\u1d56\n\u22a2 SemiconjBy a.unop y.unop x.unop \u2194 SemiconjBy a x y",
      "url": "https://github.com/leanprover-community/batteries/blob/514c6039d70f6e63fb7bc3ab853adeb71bc56305/BatteriesTest/lintsimp.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "8a7dcd08b95f",
      "blame_date": "2022-12-18T15:51:52-05:00",
      "inclusion_date": "2025-05-01T23:47:48.985035+00:00"
    },
    "id": "8b612b64eaaca2b8994fc9fc4c141fc33150ec5b80b48fbc6853e07f286e62ff"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "stable",
      "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "BatteriesTest/lintunused.lean",
      "start_line": 7,
      "start_column": 2,
      "end_line": 7,
      "end_column": 7
    },
    "debug_info": {
      "goal": "h : 1 = 1\n\u22a2 True",
      "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lintunused.lean#L7"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-08T02:17:31+02:00",
      "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
    },
    "id": "65144ba85df13429af184bbcebc9acec1069c551c47131a7f16569a4bffb8e41"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "stable",
      "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "BatteriesTest/lint_unreachableTactic.lean",
      "start_line": 23,
      "start_column": 2,
      "end_line": 24,
      "end_column": 5
    },
    "debug_info": {
      "goal": "\u22a2 1 = 1",
      "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lint_unreachableTactic.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-26T11:27:15+01:00",
      "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
    },
    "id": "93629563ae76c71f4794260dc9c20b692c4af15ca09cc741848e9e2a5b34eeb1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "stable",
      "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "BatteriesTest/lint_unreachableTactic.lean",
      "start_line": 31,
      "start_column": 33,
      "end_line": 31,
      "end_column": 38
    },
    "debug_info": {
      "goal": "aa : Nat\n\u22a2 aa = 0 \u2192 t aa = 0",
      "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lint_unreachableTactic.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-26T11:27:15+01:00",
      "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
    },
    "id": "644435573ac6d86d1d3ce2d41e0a3473df4e1f537ec4c9c972b8a3b52de1e4ad"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.fst = q.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "a51721b91b0b2117510c4cc666527c8e120c12b15fa99e03efab91ba8013b48e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.snd = q.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "e7c40d7381ef8a3bf20eb5f2ad02ec504ba7d996b43e400e5a0182d0667e53aa"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.fst = q.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "c60be0eb3493d05540c6b0afcd11697dfe931fd0019344f94d5c304a9280896f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.fst = q.snd.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "e137cb4370b5094681f3472ed98fadce92933e08d5a5777bc0ae77a25f8325d9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.snd = q.snd.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "b1d791d51e35967d109fa20959f15cade1f426f0ab9f1d4f61648afd835f9d34"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "5bf66af5710b22c9a6fc547d31f0049c2fea49a2142c06a7b21a250d23aca054"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 p.snd = q.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "0a82e6fb321217eab1b9685c9be1687c56b7e1ffb9924cd27de794614833e9b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 78,
      "start_column": 12,
      "end_line": 78,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "49046b306d9903282b3d2c27b3e303c7dc2bdd61e065f1a981d456be81a89402"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 78,
      "start_column": 12,
      "end_line": 78,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd.h.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b3\nx_1 : \u03b4\n\u22a2 p.snd x x_1 = q.snd x x_1",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "5a5c0a10ddb76559325fd6271339e247dede37b87f2cc2112c58d22a70e9c688"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 103,
      "start_column": 12,
      "end_line": 103,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\n\u22a2 u = v",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L103"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-09-10T21:14:20+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "304f8958c7cf13589590d08387a72628a00024ccf88f9089d668b48f937fb1c6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 103,
      "start_column": 12,
      "end_line": 103,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\nu v : U\n\u22a2 u = v",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L103"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-09-10T21:14:20+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "ea4972e01635cd6d3fb9bedf84a62a0df15525babbca6b159b3417c0e1e6ae87"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\nG : SimpleGraph \u03b1\na : \u03b1\nw : G.Walk a a\nhw : Odd w.length\n\u22a2 \u2203 b p, Odd (\u2191p).length",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "e53359d633abc8eb5a4a7f15f0371137577ec379e5e4bca13976fe3168e3a498"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 57,
      "start_column": 2,
      "end_line": 57,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 a b, a \u2260 b \u2227 G.degree a = G.degree b",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "94cc3e8613c67eabb828a15e18e11826833adb0233a0f2e27b35f59a39f00620"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 70,
      "start_column": 2,
      "end_line": 70,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\n\u03b1 : Type u_2\ninst\u271d\u00b9 : Finite \u03b1\ninst\u271d : Nontrivial \u03b1\nG : SimpleGraph \u03b1\nhG : G.Connected\nval\u271d : Fintype \u03b1\n\u22a2 \u2203 a, (\u22a4.deleteVerts {a}).coe.Connected",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2022-11-20T17:08:07+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "1391d0524974b13a200145cc377faaa9f466ae9eec3ad8dabededd885863256e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 83,
      "start_column": 2,
      "end_line": 83,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case inr\n\u03b1 : Type u_2\ninst\u271d\u00b2 : Fintype \u03b1\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\nhG : G.IsAcyclic\nh\u271d : Nonempty \u03b1\n\u22a2 G.edgeFinset.card \u2264 card \u03b1 - 1",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2022-11-20T17:08:07+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "5348d23419967e6b8fd055ca91d957145622c42ca3b03784bffe17c6fb82d0aa"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 101,
      "start_column": 2,
      "end_line": 101,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, degreeSequence G = s",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "63d07dffb67aae4cdb0cac3b28801a01b2dbc0aa7fd1faef1eac94a6f7fef6cd"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type u_1\n\u03b1 : Type u_2\nG : SimpleGraph \u03b1\nhG : G.IsAcyclic\ns : Finset \u03b9\nf : \u03b9 \u2192 G.Subgraph\nhf : \u2200 i \u2208 s, (f i).coe.IsAcyclic\nh : \u2200 i \u2208 s, \u2200 j \u2208 s, f i \u2293 f j \u2260 \u22a5\n\u22a2 s.inf f \u2260 \u22a5",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "50db1c76d61f6ff19bc097b50ef35374c100869a7cb16a673c9e0f6016019e4c"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 128,
      "start_column": 2,
      "end_line": 128,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), averageDegree G / 2 \u2264 \u2191(H.degree a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "0aecd8513d95a3c39227c935c1102befbd938dec0b9c8f84ce14971e67bf005d"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 145,
      "start_column": 2,
      "end_line": 145,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 (\u2203 \ud835\udc9c,\n      (\u2200 (p q : (a : \u03b1) \u00d7 G.Path a a), (\u2191p.snd).edges.Disjoint (\u2191q.snd).edges) \u2227\n        \u2200 (e : Sym2 \u03b1), \u2203 p \u2208 \ud835\udc9c, e \u2208 (\u2191p.snd).edges) \u2194\n    \u2200 (a : \u03b1), Even (G.degree a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "a2171bc40c811962fa336b5a23f31bb8a28bc8fd0cc854c6cd46052ce00e1b7d"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : DecidableEq \u03b1\nn : \u2115\n\u22a2 (\u2203 G x k, G.IsRegularOfDegree k \u2227 G.cliqueNum = n) \u2194 n \u2264 card \u03b1 / 2 \u2228 n = card \u03b1",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "546e460fb0141fa6802b688a83ef3882204f5fa8828b1e0aa0fe5da86ceaf229"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 181,
      "start_column": 2,
      "end_line": 181,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227 (\u2200 a \u2208 u, Even #{ x // x \u2208 {b \u2208 u | G.Adj a b} }) \u2227 \u2200 a \u2208 v, Even #{ x // x \u2208 {b \u2208 v | G.Adj a b} }",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "9b32dab5d4cb28f91d6b01b4aa1011a4f891c4c36c835c30743b93a363c49b0a"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : IsLatin f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 IsLatin f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "2a76f7b8970defcfa191b88a9ff249b73e9aa9fdbf6fc6ded13772215f4de3ac"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 214,
      "start_column": 2,
      "end_line": 214,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 #\u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "cc184c9b5d49cb6bd85611b690f265e6aa231d9a088cf9156737b6c2c641ba21"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : DecidableEq \u03b2\ninst\u271d\u00b2 : Countable \u03b1\ninst\u271d\u00b9 : Countable \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "1b45661ff8497442d88727ebeb81179b8e0c99d69adb30951e703bf143d54747"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b9 : DecidableEq \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "0cba9d47f7b10920a840cbbf5c18260c2865e5609beefb9f13e7d96562aa541e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u221a\u2191(card \u03b1) \u2264 distortion f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "8e26cd54b8be1340d8d563c8684323358197b445960de25fa966dc98367ab182"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 252,
      "start_column": 2,
      "end_line": 252,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u2191(card \u03b1) \u2264 distortion f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "8b867f6b08c33bef9844ac470761aa75a51758590ce5d5645a0dc7c8663125c3"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
      "start_line": 46,
      "start_column": 75,
      "end_line": 46,
      "end_column": 80
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : \u211d\u22650\n\u03bc : Measure \u03a9\nhG : IsBinomialRandomGraph G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-06T17:45:28+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "46b51bb59c19a979862a472d54fe0443db1e06fd4900df7d9725c480a4a05693"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 117,
      "start_column": 8,
      "end_line": 117,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "c06097e51866c5822f2ad5c1f1270bafce0377529b89ed6cb91d59de11397399"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 118,
      "start_column": 8,
      "end_line": 118,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "c5663979c4e4160eb9e17548e7362b1b6a1e30575570fc12969c59fdaf579ebc"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 126,
      "start_column": 8,
      "end_line": 126,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "2d1ba1571cdeea5db20afd81a9e33e81b25c72235079eeeba0fbfcd78bcbaede"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 127,
      "start_column": 8,
      "end_line": 127,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "bc51c379889ca30374c7178ae2623e99043d06fd3c005f816ba5bebedcd3509a"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 130,
      "start_column": 6,
      "end_line": 130,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "0183bd953d3b7d8140d29187a408e2af62297dfb521544521b74627a89e2ee62"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 131,
      "start_column": 6,
      "end_line": 131,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "06324b761a5af46b48dd70c49ede9cbd3c0668d0e42d231cd7f1e810746e51ab"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 132,
      "start_column": 11,
      "end_line": 132,
      "end_column": 16
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "532f84982618eda07d712d8400024a254e9e844c3d41a1de312c949aefc0ee38"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 0)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "f91cda7e4cffbd3704db63e56f69d9308223c66e0e6a13fac8e83defeaa77450"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 1)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "38c11c492591e4f1eaa791522219fb7aa5c05d2305da24cc98dd50cebd619d6f"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean",
      "start_line": 97,
      "start_column": 72,
      "end_line": 97,
      "end_column": 77
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * #(\ud835\udc9c \u25a1 \u212c) \u2264 #\ud835\udc9c * #\u212c",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-21T08:29:20+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "0fcbdc47a490598239e7f1e78eaa58164a051ca492662eb6f40959b437097dc1"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : #P.parts = (#s).choose (#s / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    #P.parts = (#(insert i s)).choose (#(insert i s) / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "25b2db5be9910c4c534877f6d268145ded7f52147caef0fa9dbe2b1d44b27387"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/StableCombi/Rel.lean",
      "start_line": 38,
      "start_column": 42,
      "end_line": 38,
      "end_column": 47
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsStableRelWith n r\n\u22a2 IsTreeBoundedRelWith (2 ^ n + 1) r",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T20:50:42+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "ac26d5ff17429f369dcb78856730b3664538c3a71d3cf04649cc583df6c86224"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/StableCombi/Rel.lean",
      "start_line": 41,
      "start_column": 33,
      "end_line": 41,
      "end_column": 38
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsTreeBoundedRelWith n r\n\u22a2 IsStableRelWith (2 ^ n) r",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T20:50:42+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "7b02aff6f66f487495b5f76843ba7dc3a04ce36bc3b154104ed8f1992544b205"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
      "start_line": 25,
      "start_column": 60,
      "end_line": 25,
      "end_column": 65
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191(#A) \u2264 \u2191(#({x \u2208 A ^ 4 | Commute \u03b3 x}))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "9e9e2251f953eab398c6e3389c032592aa31c5dbd9c2c8f24144e38875d630eb"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
      "start_line": 30,
      "start_column": 30,
      "end_line": 30,
      "end_column": 35
    },
    "debug_info": {
      "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set SL(2, \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, #F \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "bc809e511427e236c2df25fd3d34a06f10fae32fc59b42754634786397cca7ff"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
      "start_line": 41,
      "start_column": 69,
      "end_line": 41,
      "end_column": 74
    },
    "debug_info": {
      "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(#(S ^ n)) \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "27ebd927086c4db93549c5a98d6cf30a84d8c7108f91354d83a57fe135fc2189"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 24,
      "start_column": 6,
      "end_line": 24,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(#(F i)) \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "edd13d8191b120ebea432442b2ba6f559c7fac2d3401253ce8d4c99e15ebfac8"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 42,
      "start_column": 64,
      "end_line": 42,
      "end_column": 69
    },
    "debug_info": {
      "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192 (\u2191(#A) / (2 * K) \u2264 \u2191(#((MulOpposite.op a\u271d)\u207b\u00b9 \u2022> A \u2229 A)) \u2194 \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 a\u271d \u2229 A)))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "cb50e1caabd09046920c755e06c55399a308100ee27c75b2936f66ac91ebb5f0"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 59,
      "start_column": 4,
      "end_line": 59,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(S ^ 2)) \u2264 16 * K ^ 12 * \u2191(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "721cb512ffad45e7933f66dd12e701f60a41596bd9a7b5c7473e45302bb65d93"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 60,
      "start_column": 4,
      "end_line": 60,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191(#A) / (2 * K) \u2264 \u2191(#(A \u2229 S ^ 2 <\u2022 a))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "3e635215843fdf70c6597f1bfed9e55c9faceff82c41ca1fc138b5ddcacd4ffd"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 45,
      "start_column": 22,
      "end_line": 45,
      "end_column": 27
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(#(A\u207b\u00b9 * A)) \u2264 K ^ 2 * \u2191(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "58fc57b29c1148d6decafbb5b43525f88aa71e1cffaea3fcc32a423d64b34705"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 46,
      "start_column": 69,
      "end_line": 46,
      "end_column": 74
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\n\u22a2 \u2203 F \u2286 A, \u2191(#F) \u2264 2 * K \u2227 A \u2286 S * F",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "19c0481c5bc3939a05949d6d735fc88f540a6fac6a649b96ac38c8dacf7ded32"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 54,
      "start_column": 29,
      "end_line": 54,
      "end_column": 34
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(A * S ^ 3 * A\u207b\u00b9)) \u2264 8 * K ^ 11 * \u2191(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "03aa836926fe6e9fa2eb93286d620ec46ac808bb6783d3f72983bf8b132889ef"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Wiener.lean",
      "start_line": 2275,
      "start_column": 61,
      "end_line": 2275,
      "end_column": 66
    },
    "debug_info": {
      "goal": "A x : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\nhx : 1 \u2264 x\n\u22a2 \u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x)) -\n      \u2191A * \u222b (u : \u211d) in Ici (-Real.log x), \ud835\udcd5 \u03c8.toFun (u / (2 * \u03c0)) =\n    \u222b (t : \u211d), G (1 + \u2191t * I) * \u03c8.toFun t * \u2191x ^ (\u2191t * I)",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Wiener.lean#L2275"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-04-04T12:17:01-07:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "b26916486e5850256b0eed6caf786ec823c22e23726c545f8ee8b13c8edb9447"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Wiener.lean",
      "start_line": 2297,
      "start_column": 90,
      "end_line": 2297,
      "end_column": 95
    },
    "debug_info": {
      "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\n\u22a2 \u2203 B, \u2200 (x : \u211d), 0 < x \u2192 \u2016\u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x))\u2016 \u2264 B",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Wiener.lean#L2297"
    },
    "metadata": {
      "blame_email_hash": "4d01d7c10d46",
      "blame_date": "2024-04-16T02:15:35+02:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "db1247171c97ceeeab233775a62ffbd4e5a1bbaeab475d1218f95e54a97eb4bb"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Wiener.lean",
      "start_line": 2315,
      "start_column": 2,
      "end_line": 2315,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\n\u22a2 cheby fun n => \u2191(f n)",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Wiener.lean#L2315"
    },
    "metadata": {
      "blame_email_hash": "4d01d7c10d46",
      "blame_date": "2024-04-16T02:15:35+02:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "486aca387903978e28c770610284dfb5ca299523a415b2f60c2bcab8beab43ae"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 328,
      "start_column": 2,
      "end_line": 328,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nCpos : 0 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), \u039b n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) - \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1\u039b)\u2016 \u2264 C * \u03b5 * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L328"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "5f3104a917032b249932ce6f08c0c08e464ff200ddc7419e5587a268f0caa950"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 319,
      "start_column": 23,
      "end_line": 319,
      "end_column": 28
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX : \u211d\nC : \u211d := sorry\n\u22a2 0 < C",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L319"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-14T14:09:55-05:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "14fd33fdc080f056e7eed7aa93579499f13ed1df0bcaae4c7b4559fea8019345"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 365,
      "start_column": 2,
      "end_line": 365,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX \u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) volume",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L365"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-28T10:57:09-05:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "0022dadb153328384264e096a766cb9af956f2f9df686bdabaae82880b49e44a"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 399,
      "start_column": 2,
      "end_line": 399,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191\u03c0 * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) 2 (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) =\n    \ud835\udcdc (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X +\n      1 / (2 * \u2191\u03c0 * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I))",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-10T12:59:29-05:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "8a5f497557d4896ce8c37874eca4b8585364a3abd8ceb30f6ee6171d8482ad06"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 582,
      "start_column": 2,
      "end_line": 582,
      "end_column": 7
    },
    "debug_info": {
      "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\n\u22a2 \u2016(ChebyshevPsi - id) X\u2016 \u2264 C * \u2016X * rexp (-c * Real.log X ^ (1 / 10))\u2016",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L582"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "ae2e14c857bb150d685e8c3ae4bc2b4ba42e9005daf22e0b78acf87bc3dbf5bf"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 501,
      "start_column": 23,
      "end_line": 501,
      "end_column": 28
    },
    "debug_info": {
      "goal": "c : \u211d := sorry\n\u22a2 0 < c",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L501"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-14T15:25:09-05:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "16b6ef91e63f19252af4450c3e33e0f05990bf2f7a30ab9218ff662ce9db5514"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 1844,
      "start_column": 2,
      "end_line": 1844,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 c, (c =o[atTop] fun x => 1) \u2227 \u2200 (n : \u2115), \u2191(nth Nat.Prime n) = (1 + c n) * \u2191n * log \u2191n",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/Consequences.lean#L1844"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "ff0619f148f42d8e6525d7acf9ec2f048294e754232cedc06f6c5c449148e78e"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 2060,
      "start_column": 2,
      "end_line": 2060,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u2203 p, Nat.Prime p \u2227 x < \u2191p \u2227 \u2191p < (1 + \u03b5) * x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2060"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "18ca9b412e4a75a674094e2c67fa2087cfac73bfafa370b5d80bea962e8cef1f"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 2161,
      "start_column": 81,
      "end_line": 2161,
      "end_column": 86
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u03bc n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2161"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "98e9ca1182f2e2c6ed23ddba3dbbea5ae879239b810331cf95b2221ade5925ea"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 2197,
      "start_column": 2,
      "end_line": 2197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, (-1) ^ \u03a9 n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2197"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "984e5a323e612c69c8530c42eaefe7d0a1a0cecee6bedc9695186baffb39331e"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 2221,
      "start_column": 98,
      "end_line": 2221,
      "end_column": 103
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u2191(\u03bc n) / \u2191n) =o[atTop] fun x => 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2221"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "afab4cd1c58d8fdec1744839690eae37a8b6cfdf8260ca9d20748696b24f180c"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean",
      "start_line": 70,
      "start_column": 44,
      "end_line": 70,
      "end_column": 49
    },
    "debug_info": {
      "goal": "K : Type u\ninst\u271d\u00b9 : Category.{v, u} K\ninst\u271d : InfinityCosmos K\nX Y X' Y' : K\nf : X \u21a0 Y\ng : X' \u21a0 Y'\n\u22a2 IsIsofibration (prod.map \u2191f \u2191g)",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "eaaeec08515d",
      "blame_date": "2024-12-03T11:33:30-05:00",
      "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
    },
    "id": "7bfe8732d5962bbb479ac52b80759d74498dd77834421eb0c4574c2a5891bfc6"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
      "start_line": 133,
      "start_column": 50,
      "end_line": 133,
      "end_column": 55
    },
    "debug_info": {
      "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u22a2 SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
    },
    "id": "e145769b3210c6f1a055e23e8bf0b1fc4ea2ace94285c386366305707117b87a"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
      "start_line": 134,
      "start_column": 36,
      "end_line": 134,
      "end_column": 41
    },
    "debug_info": {
      "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u22a2 SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
    },
    "id": "4f7d5896175e711b887c3aec607b8fcba17340ee713df4bf19a92ed8e3eb5680"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
      "start_line": 135,
      "start_column": 36,
      "end_line": 135,
      "end_column": 41
    },
    "debug_info": {
      "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u03c4\u2082 : SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex\n\u22a2 SimplicialObject.\u03b4 A 3 \u03c4 = H\u2081.simplex",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
    },
    "id": "74b2f697370a4a9bddd820434ad83e677b9b29e13abf89b3e889097d2c59a6cc"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
      "start_line": 159,
      "start_column": 39,
      "end_line": 159,
      "end_column": 44
    },
    "debug_info": {
      "goal": "A : SSet\nf g : A _\u298b1\u298c\ninst\u271d : A.Quasicategory\n\u22a2 HomotopicL f g \u2194 HomotopicR f g",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L159"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-05T19:17:58+01:00",
      "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
    },
    "id": "39507d56dd2a9b4e7d6eecf744a216cd44fcf0dfaf6843976224448860244af0"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 144,
      "start_column": 4,
      "end_line": 144,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mp\nL : Logic\ninst\u271d : L.QuasiNormal\n\u0393 : FormulaFinset \u2115\nh : Finset.conj \u0393 \u2208 L\n\u03c6 : Formula \u2115\nh\u03c6 : \u03c6 \u2208 \u0393\n\u22a2 \u03c6 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "c5258f811bdb8990e381525f91fc584e6cb3b4038502d5aeb75ae949e5a660f3"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 146,
      "start_column": 4,
      "end_line": 146,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nL : Logic\ninst\u271d : L.QuasiNormal\n\u0393 : FormulaFinset \u2115\nh : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 L\n\u22a2 Finset.conj \u0393 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "dda53ec29b1103f63934ec7e08f1fc466f776cddfb338f1434e28180443cb4bf"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 209,
      "start_column": 104,
      "end_line": 209,
      "end_column": 109
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2079 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2078 : L.DecidableEq\nT\u2080 T\u271d : Theory L\ninst\u271d\u2077 : T\u2080 \u2aaf T\u271d\ninst\u271d\u2076 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2075 : Nonempty M\ninst\u271d\u2074 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\u271d\ninst\u271d\u00b3 : \ud835\udd05.HBL\ninst\u271d\u00b2 : \ud835\udd05.Justified M\nA B : Modal.Formula \u2115\nT : Theory \u2112\u2092\u1d63\ninst\u271d\u00b9 : \ud835\udc0f\ud835\udc00 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 (\ud835\udc0f\ud835\udc00.standardDP T).Justified \u2115",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "b8820a4c9889e8e022e61aef8ecebe5e16ccf681866bbde93fe2f724ed9e175c"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 219,
      "start_column": 86,
      "end_line": 219,
      "end_column": 91
    },
    "debug_info": {
      "goal": "A : Modal.Formula \u2115\nh : \u25a1A \u2208 Logic.S\nf : Realization \u2112\u2092\u1d63\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, \ud835\udc0f\ud835\udc00 \u22a2!. \u03c3 \u2192 \u2115 \u22a7\u2098\u2080 \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-02T11:19:40+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "18f138ae18ab351667f062caf8c16ae0777df0e5485811ea46d9c7283c4d148b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 247,
      "start_column": 6,
      "end_line": 247,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case hSound\nL : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\nh : A \u2208 Logic.S\nf : Realization L\n\u22a2 \u2200 {\u03c3 : Sentence L}, T \u22a2!. \u03c3 \u2192 M \u22a7\u2098\u2080 \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "14cb0ffdb4fd72cb29857360d735a756714be047f41508d11574a2f4ff5af3c8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 326,
      "start_column": 27,
      "end_line": 326,
      "end_column": 32
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : T\u2080 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret \ud835\udd05 B\n\u22a2 T\u2080.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L326"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "120a42e014cab0523fb7de3073411dd4250d7695a529d99a3f29445438fb4c63"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 339,
      "start_column": 61,
      "end_line": 339,
      "end_column": 66
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis : T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L339"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "9302abeca2fc455412c4e7fd0a618c79821702497ccc1e71686a2b9d83943d7f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 341,
      "start_column": 20,
      "end_line": 341,
      "end_column": 25
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis\u271d : T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A\nthis : M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00acM \u22a7\u2098\u2080 \u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L341"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "dff1e90350cbcf3332f10cbce3b9fa17e3f6ad3eb3e449f2fb49a3269c7abe7e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/LinearizedMetricCarleson.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "3dfb5cb6b310a05e71f8ab04822baf7038e7ca458e900e3ea3a118873ae6f925"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/HolderVanDerCorput.lean",
      "start_line": 443,
      "start_column": 55,
      "end_line": 443,
      "end_column": 60
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR : \u211d\u22650\nhR : 0 < R\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z \u2191R\nh2\u03d5 : iHolENorm \u03d5 z \u2191R < \u22a4\nf g : \u0398 X\n\u22a2 \u2191\u2016\u222b (x : X), cexp (I * (\u2191(f x) - \u2191(g x))) * \u03d5 x\u2016\u208a \u2264\n    \u2191(C2_0_5 \u2191a) * volume (ball z \u2191R) * iHolENorm \u03d5 z \u2191R * (1 + \u2191(nndist_{z ,\u2191R} f g)) ^ (2 * \u2191a ^ 2 + \u2191a ^ 3)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/HolderVanDerCorput.lean#L443"
    },
    "metadata": {
      "blame_email_hash": "4f0774fdf1b5",
      "blame_date": "2024-07-01T23:56:16+08:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1d019c5d4b2138efdb149a15b6c4d49735c43c43addb334f4bce8845432268a8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/MetricCarleson.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "fa42f2793513a76e639cd89fb0b256f0689665b97fd5d71ea672ea914d79501c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ForestOperator/LargeSeparation.lean",
      "start_line": 1598,
      "start_column": 2,
      "end_line": 1598,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2016\u222b (x : X),\n        adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n          (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u2091 \u2264\n    \u2191(C7_4_5 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1598"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "680ce4eddb77eea9d9020204336fe3b5341d6a2ff7516f54d1947d6afa1d1e60"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 499,
      "start_column": 51,
      "end_line": 499,
      "end_column": 56
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u2091 \u2264\n    \u2191(C_2_0_3 \u2191a nnq) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L499"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-01-09T16:08:11+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7bfdea9f30e10565b6dc8fc3168ed3461d57aca5edfbfe2b35d98acfb19e2a3c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "f2f88b4c32ecc0ef187ca775dfbff34415214457612d1d89800c0465daf678ea"
  },
  {
    "repo": {
      "remote": "https://github.com/frenzymath/jixia",
      "branch": "main",
      "commit": "d171b92cfcc808c3fcfa73b4f41c792648c9d48f",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Example.lean",
      "start_line": 82,
      "start_column": 55,
      "end_line": 82,
      "end_column": 60
    },
    "debug_info": {
      "goal": "\u03b1 : Type u\n\u22a2 \u00acnone.IsSome",
      "url": "https://github.com/frenzymath/jixia/blob/d171b92cfcc808c3fcfa73b4f41c792648c9d48f/Example.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "aa8cba96a488",
      "blame_date": "2024-06-20T19:17:07+08:00",
      "inclusion_date": "2025-05-01T23:43:58.830638+00:00"
    },
    "id": "dda6eca1c24f3d179409b6135dea8b03fa033226aef1a1f3e8df49fa215ab69b"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "LeanByExample/Attribute/Aesop.lean",
      "start_line": 60,
      "start_column": 2,
      "end_line": 60,
      "end_column": 7
    },
    "debug_info": {
      "goal": "P : Prop\nhp : P\n\u22a2 MyAnd P P",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "9a3464a8a3704a49b2292a811715e854fc1a1287ea0a702edbd56d942da7a48e"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "LeanByExample/Attribute/Aesop.lean",
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 NonEmpty (MyList.cons 1 MyList.nil)",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "1c30fc32ce15f669075451698d47ff13a411eeaeb7c51b6964ed5e274eeafc8f"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "b6afdbee9516862a93891034ab6415399391c13b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanByExample/Attribute/Aesop.lean",
      "start_line": 107,
      "start_column": 2,
      "end_line": 107,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c d e : Nat\nh1 : a \u2264 b\nh2 : b \u2264 c\nh3 : c \u2264 d\nh4 : d \u2264 e\n\u22a2 a \u2264 e",
      "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Attribute/Aesop.lean#L107"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
    },
    "id": "dda60bffce0fed704f9bad819514ab85e5332bbe353ed5ed67b3555cfd311aea"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "b6afdbee9516862a93891034ab6415399391c13b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanByExample/Declarative/ProofWanted.lean",
      "start_line": 16,
      "start_column": 41,
      "end_line": 16,
      "end_column": 46
    },
    "debug_info": {
      "goal": "n : Nat\n\u22a2 n + 0 = n",
      "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Declarative/ProofWanted.lean#L16"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-06-19T23:24:32+09:00",
      "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
    },
    "id": "e5faba745f8d444809ba4a7abadfc00f250efec3a787fcc8953a5f5c7d5515cc"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "LeanByExample/Tactic/Sorry.lean",
      "start_line": 12,
      "start_column": 2,
      "end_line": 12,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 FermatLastTheorem",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Sorry.lean#L12"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-01-08T13:38:12+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "c1a5136e850b138a20962c448ffd3c5e1cfdf7d06860186676464fba8bbbf968"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "LeanByExample/Tactic/Ext.lean",
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u\na b : Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "a79fbc1f99b4e315596137033e19ea503dda427a7c0dce0aaa7b85b74fd76775"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "LeanByExample/Tactic/Ext.lean",
      "start_line": 95,
      "start_column": 2,
      "end_line": 95,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type\np q : Foo\nhx : p.x = q.x\nhy : p.y = q.y\n\u22a2 p = q",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "5f71aae7fe81842dbdfa9970601f6c62c5de0ff5b96d88d5fb78baef222d3b88"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "b6afdbee9516862a93891034ab6415399391c13b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanByExample/Tactic/Ring.lean",
      "start_line": 115,
      "start_column": 2,
      "end_line": 115,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m n : MyNat\n\u22a2 n * (n + m) = n * n + n * m",
      "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Ring.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-02-17T22:51:43+09:00",
      "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
    },
    "id": "8853ad6a657041f722b29f3afcd35f6e03efb25a729b1fb9baf5c0b9d64332f7"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "b6afdbee9516862a93891034ab6415399391c13b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanByExample/Tactic/Induction.lean",
      "start_line": 73,
      "start_column": 4,
      "end_line": 73,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case succ\nn m : \u2115\nih : m + n = 0 \u2192 m = 0 \u2227 n = 0\nh : m + 1 + n = 0\n\u22a2 False",
      "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Induction.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-11-07T02:25:02+09:00",
      "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
    },
    "id": "b0f8d158d891969ca9d25e962c837182c2733d7e8eff00cf0495e4b5039ba37a"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "b6afdbee9516862a93891034ab6415399391c13b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanByExample/Tactic/Induction.lean",
      "start_line": 133,
      "start_column": 6,
      "end_line": 133,
      "end_column": 11
    },
    "debug_info": {
      "goal": "n\u271d n : \u2115\n\u22a2 sum (n + 1) = \u2191(n + 1) * (\u2191(n + 1) + 1) / 2",
      "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Induction.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-04-25T03:36:30+09:00",
      "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
    },
    "id": "c26294888fd43f47b34aacef3aba1b20b7b61407c8c38ad23fc27197e3c09a2a"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "LeanByExample/Tactic/Plausible.lean",
      "start_line": 67,
      "start_column": 2,
      "end_line": 67,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2200 (a b : MyNat), a = b",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Plausible.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-11-25T09:56:34+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "2923421152e5be64de021405d7350f597dee8d1e824b49847a8ac1aec39e67b6"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 262,
      "start_column": 105,
      "end_line": 262,
      "end_column": 110
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u00b9\u2070 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2079 : L.DecidableEq\nT\u2080 T\u271d : Theory L\ninst\u271d\u2078 : T\u2080 \u2aaf T\u271d\ninst\u271d\u2077 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2076 : Nonempty M\ninst\u271d\u2075 : Structure L M\ninst\u271d\u2074 : M \u22a7\u2098* T\u271d\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\u271d\ninst\u271d\u00b3 : \ud835\udd05.HBL\ninst\u271d\u00b2 : \ud835\udd05.Justified M\nA B : Modal.Formula \u2115\nT : Theory \u2112\u2092\u1d63\ninst\u271d\u00b9 : \ud835\udc0f\ud835\udc00 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, T \u22a2!. \u03c3 \u2194 \u2115 \u22a7\u2098\u2080 \u2191(\ud835\udc0f\ud835\udc00.standardDP T) \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T11:15:03+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "281bc26d3b1b574f84087a8e0af4b52ab8dad41d9e415b472ca5e30288168d47"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 378,
      "start_column": 27,
      "end_line": 378,
      "end_column": 32
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2074 : Nonempty M\ninst\u271d\u00b3 : Structure L M\ninst\u271d\u00b2 : M \u22a7\u2098* T\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : T\u2080 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret \ud835\udd05 B\n\u22a2 T\u2080.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L378"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "815da39e1f4ae2018ba3376dbcfc478597f566520ff058234a2607fcb58a784a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Basic.lean",
      "start_line": 393,
      "start_column": 20,
      "end_line": 393,
      "end_column": 25
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2074 : Nonempty M\ninst\u271d\u00b3 : Structure L M\ninst\u271d\u00b2 : M \u22a7\u2098* T\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis\u271d : M \u22a7\u2098* T\u2080\nthis : M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00acM \u22a7\u2098\u2080 \u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "bcba129cb76ab930cd07720444e2484f4cad12efe6794d3da0d66fd69e2c2819"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/ZetaBounds.lean",
      "start_line": 2600,
      "start_column": 2,
      "end_line": 2600,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h\nA : \u211d\nhA : A \u2208 Ioc 0 (1 / 2)\nh\u271d :\n  \u2203 C,\n    \u2203 (_ : 0 < C),\n      \u2200 (\u03c3 t : \u211d),\n        3 < |t| \u2192\n          \u03c3 \u2208 Ico (1 - A / Real.log |t| ^ 9) 1 \u2192 \u2016deriv \u03b6 (\u2191\u03c3 + \u2191t * I) / \u03b6 (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C * Real.log |t| ^ 9\nT : \u211d\nT_gt : 3 < T\n\u22a2 HolomorphicOn (fun s => deriv \u03b6 s / \u03b6 s) (Ioc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/ZetaBounds.lean#L2600"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-07T16:45:37-05:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "37cf89e56cd035b931d71680eaca6f9d28e983fe3def14f17417bd7a2dacf9c8"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "82bb9617b8ccfa68054450b8e6f44c054f03fb74",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 362,
      "start_column": 2,
      "end_line": 362,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/82bb9617b8ccfa68054450b8e6f44c054f03fb74/PrimeNumberTheoremAnd/MediumPNT.lean#L362"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-29T23:14:01.338928+00:00"
    },
    "id": "220197c00a78e02df3ecd8138d363e8d1f7a7661a383a115f1632de961d2bd59"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "82bb9617b8ccfa68054450b8e6f44c054f03fb74",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 353,
      "start_column": 23,
      "end_line": 353,
      "end_column": 28
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX : \u211d\nC : \u211d := sorry\n\u22a2 3 < C",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/82bb9617b8ccfa68054450b8e6f44c054f03fb74/PrimeNumberTheoremAnd/MediumPNT.lean#L353"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-08T10:26:01-05:00",
      "inclusion_date": "2025-04-29T23:14:01.338928+00:00"
    },
    "id": "ca307cce52176a7909d378dafc3273a2785f2c5c8fe8371098ad000a65c1f11f"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 464,
      "start_column": 2,
      "end_line": 464,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) volume",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L464"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-07T17:04:05-05:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "459690685073fc04822c91f069ce6a09ca5a3b15fe6b2ead96fe9bc49d03b3a5"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 470,
      "start_column": 2,
      "end_line": 470,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191\u03c0 * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (1 + (Real.log X)\u207b\u00b9) (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) =\n    1 / (2 * \u2191\u03c0 * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) +\n      \ud835\udcdc (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L470"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-10T12:59:29-05:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "1b95116178011a6ece4ffaaa49a093a8753aae136a1ee13ec4fb0aa23f182333"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "8dd6f415d456277d098fea761f015a635c09769e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25135 \u2208 \u2191ys then ?m.25164 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
    },
    "id": "f81b74aae3103e71f48752698c13e903a86def12b61579cde195e801f908775f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "8dd6f415d456277d098fea761f015a635c09769e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25135 \u2208 \u2191ys then ?m.25164 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
    },
    "id": "747528909d823ad66c5be55364bd463d8d47429fefedb47c7d201864a676e9d6"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/GL/Height.lean",
      "start_line": 37,
      "start_column": 50,
      "end_line": 37,
      "end_column": 55
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\n\u03c3 : Sentence L\n\u22a2 (\ud835\udd05^[n + 1])/[\u231c\u03c3\u231d] = \u2191\ud835\udd05 ((\ud835\udd05^[n])/[\u231c\u03c3\u231d])",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T09:21:39+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "6dcb0d6b1dacb386ec78231da3a1460d503041b76010a501338b8e79288c95ba"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/GL/Height.lean",
      "start_line": 179,
      "start_column": 2,
      "end_line": 179,
      "end_column": 7
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T U : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\n\u22a2 WellFounded fun a b => a < b \u2227 a \u2208 provabilityHeightSet U \ud835\udd05 \u2227 b \u2208 provabilityHeightSet U \ud835\udd05",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L179"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "c0a7740449e84840c053ef6013b2f860ab0f97fb569841faf7e442806bc0d69a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/GL/Height.lean",
      "start_line": 189,
      "start_column": 4,
      "end_line": 189,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T U : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\n\u22a2 (provabilityHeightSet U \ud835\udd05).Nonempty \u2192 provabilityHeight U \ud835\udd05 \u2260 0",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L189"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "f0a04e7a5a29ab70dd975a193b8284e3d114a3284a4fc7bddbf9d0f5b0796fa9"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/GL/Height.lean",
      "start_line": 217,
      "start_column": 4,
      "end_line": 217,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\nh : Theory.provabilityHeight T \ud835\udd05 = \u2191n\n\u22a2 \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GLBB n",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L217"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "3f93f32d684a3cce34eaa0404e2cedd284f19677a3b468d55a932a5e2fbd01d5"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/GL/Height.lean",
      "start_line": 219,
      "start_column": 4,
      "end_line": 219,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\nh : \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GLBB n\n\u22a2 Theory.provabilityHeight T \ud835\udd05 = \u2191n",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "8d3279d9fe07b8f6f4a9b57cee8a31c02646091d17f284e46d8381157e838840"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/GL/Height.lean",
      "start_line": 227,
      "start_column": 4,
      "end_line": 227,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nh : Theory.provabilityHeight T \ud835\udd05 = 0\nthis : \u2200 (n : \u2115+), T \u22ac. (\ud835\udd05^[n])/[\u231c\u22a5\u231d]\n\u22a2 \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GL",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L227"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "218f14961eda369ebfcba1337b7a9bfd0e1c3b80692aab999af2fe184089d2ef"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/LinearizedMetricCarleson.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "46571c141c45661b939dbb755ff9dc42ab02217902ab23e25c5e0dd5ce4c3333"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/MetricCarleson.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7564bdd3b6d99f989b43bcf6f05d99a593eecc27bf75a45907f2fe2d60b714f4"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7
    },
    "debug_info": {
      "goal": "r : \u211d\nhr : 0 < r\n\u22a2 HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts 4)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "e62fea331652faea1433df21c0f0babe3fbd78b4bba6433f951655a36b70dcfa"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 469,
      "start_column": 2,
      "end_line": 469,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    wnorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191A ^ 2 * eLpNorm v (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L469"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "cdca701e71c81765753bb5eca58fe2c8541741e0de1f81e615706d3e2918dad9"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14
    },
    "debug_info": {
      "goal": "case a\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType\n      (fun u x =>\n        (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n      (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (\u2191A ^ 4) \u2194\n    MemLp ?convert_4 (\u2191p\u2082) \u03bc \u2192\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) \u03bc \u2227\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (\u2191p\u2082) \u03bc \u2264 \u2016A ^ 2\u2016\u2091 * \u2191A ^ 2 * eLpNorm ?convert_4 (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1b8ceb4a3627eb18cd924f0b5c8dac8101b0dc2757319bfd9d2b3f318a9a6769"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14
    },
    "debug_info": {
      "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType sorry (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (\u2191A ^ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a14850251f9f3be49295603c5034136e361ae1afdf316c66d134e31e74728ccd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 329,
      "start_column": 6,
      "end_line": 329,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2 = \u2191(3 * (2 * nnq / (nnq + 1)) - 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L329"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1f49331d276e06d74ad989aa99269a948b369080bae089d711399bab04b4ea06"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 334,
      "start_column": 6,
      "end_line": 334,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) / (2 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c0532c467566b54cd19f2aa89de565551e24a98abf7879a8690de41dc4fd35d1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 312,
      "start_column": 6,
      "end_line": 312,
      "end_column": 11
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d934dafcedfd3ab16de4de2c207aa447b16a86db0d052b61a83f6c369ae37b1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 677,
      "start_column": 2,
      "end_line": 677,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume {x' | x' \u2208 ball x (R / 4) \u2227 4 * globalMaximalFunction volume 1 (czOperator K r g) x < \u2016czOperator K r g x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L677"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "35642a9929dac01037c1d92ad8f174199b1e977d1e1125f282cc8a2921e4cb2c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 687,
      "start_column": 2,
      "end_line": 687,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume\n      {x' |\n        x' \u2208 ball x (R / 4) \u2227\n          \u2191(C10_1_4 a) * globalMaximalFunction volume 1 g x < \u2016czOperator K r ((ball x (R / 2)).indicator g) x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L687"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "016bc619d25b75226847f500a8b5c22215881f53fe1b1b7766054d40212b5623"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 698,
      "start_column": 2,
      "end_line": 698,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + \u2191(C10_1_5 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L698"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "dc5a5fbfe5f84df0c99e102a6986fa19f7121fc0b371dd8638a5a2932fc24d3d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 175,
      "start_column": 2,
      "end_line": 175,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume \u2191(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c046998b5798fb0ba303d374d736df52a0c164a8b4a846d1a7eea7b9e9e1c296"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 183,
      "start_column": 2,
      "end_line": 183,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume \u2191(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9235b215f8a0b47574db3fa31bcb41fe27c1d4415b53c9211a3c754a7982b2c6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 724,
      "start_column": 2,
      "end_line": 724,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2081 : \u211d\n\u22a2 Continuous fun R\u2082 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L724"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "e8dd69f5327cfeb3342ee61601bbb3f2a6346d3d02a207bf85f16102d849845b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 731,
      "start_column": 2,
      "end_line": 731,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2082 : \u211d\n\u22a2 Continuous fun R\u2081 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L731"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "fa45cb7c2fe65aeaf4107f7dcc394b289de0c76fb6d54079f729808acefa143e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 216,
      "start_column": 2,
      "end_line": 216,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume \u2191(C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume \u2191(C10_0_2 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9ef4ba451768e4c88e0b3a27fbe99fec4cae64d33e6b0d89a596a18001e4b6aa"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "452ca98a69e0649b0cd0f73b1979bcc99e085da756a52f7b120126a834d248db"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 349,
      "start_column": 2,
      "end_line": 349,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\n\u22a2 HasBoundedWeakType (czOperator K r) 1 1 volume volume \u2191(C10_0_3 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L349"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "91a31f7567fe887a8aeeba88a869954dd6adeeb1ae3b6d7c7ea01b0740959b34"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14
    },
    "debug_info": {
      "goal": "case a\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType\n      (fun u x =>\n        (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n      (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (A ^ 4) \u2194\n    MemLp ?convert_4 (\u2191p\u2082) \u03bc \u2192\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) \u03bc \u2227\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (\u2191p\u2082) \u03bc \u2264\n          \u2191(\u2016A ^ 2\u2016\u208a * A ^ 2) * eLpNorm ?convert_4 (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "0d9aee127c8f347b0bb1e30e57bd700904d28c75c0ce542cb6e1e8c93cd8b977"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14
    },
    "debug_info": {
      "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType sorry (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (A ^ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "ed26d0428aed69bbe7e40b125abb6bb124bc00c6fc837132db120f9d3007342c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-rigidification-refactor",
      "commit": "aa6d8c9e1d5f5b404fac024c800062d156669ef0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 213,
      "start_column": 87,
      "end_line": 213,
      "end_column": 92
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde F) F) (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/aa6d8c9e1d5f5b404fac024c800062d156669ef0/FLT/QuaternionAlgebra/NumberField.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T17:21:54+01:00",
      "inclusion_date": "2025-04-05T01:25:01.623280+00:00"
    },
    "id": "77d883852a3a57f13c9c67e2b2b4a11a04b867d157857bff82e2313ea837a85f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 66,
      "start_column": 2,
      "end_line": 66,
      "end_column": 7
    },
    "debug_info": {
      "goal": "M : Type u_3\nN : Type u_4\ninst\u271d\u00b3 : Monoid M\ninst\u271d\u00b2 : Monoid N\ninst\u271d\u00b9 : TopologicalSpace M\ninst\u271d : TopologicalSpace N\nf : M \u2192* N\nhf : IsOpenMap \u21d1f\n\u22a2 IsOpenMap fun u => { val := f \u2191u, inv := f \u2191u\u207b\u00b9, val_inv := \u22ef, inv_val := \u22ef }",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T09:45:19+01:00",
      "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
    },
    "id": "afd41ed70417ad4135fcbab1dfec134972d96099d85e20347bbe4ba85e6769d5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 82,
      "start_column": 2,
      "end_line": 82,
      "end_column": 7
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpenMap \u21d1(Units.map \u2191(HeightOneSpectrum.adicCompletionIntegers F v).subtype.mapMatrix)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T09:45:19+01:00",
      "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
    },
    "id": "be1cf925cb078da15ecb1bd227b47a63c3b7c6aa5cf8e03a733fc38ffd1e4c47"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 50,
      "start_column": 77,
      "end_line": 50,
      "end_column": 82
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "98735a10acb5a7bc5abf67cfa46478b3c359bf0d874a18624b81e3d09011393c"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 52,
      "start_column": 77,
      "end_line": 52,
      "end_column": 82
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "fee3a567bc7cda147b664bb160c06767e4b1e54d07160e5d1ed6250cf2efe99a"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 54,
      "start_column": 77,
      "end_line": 54,
      "end_column": 82
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "451fb0015c6418b9727b1aee983e4d8fbc52cc07f588aac5fd1254c79e4cb470"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 58,
      "start_column": 74,
      "end_line": 58,
      "end_column": 79
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "0381ab7073b4982159ac5623798bea6ea615a71bf007c9a54a9124baf57d9669"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 61,
      "start_column": 94,
      "end_line": 61,
      "end_column": 99
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "a1754d8ebf63b6090e9d889d468987275ebe12e78c5241969d575d4d138b7f52"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 64,
      "start_column": 60,
      "end_line": 64,
      "end_column": 65
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "42173fa706de4b468e991e3c9cc0fb7a25a22e64790e6cc5f3790bc6d33784c2"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 67,
      "start_column": 88,
      "end_line": 67,
      "end_column": 93
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "eed20aa9302fa53c3ee24795645044bcd19beff22e6a6cffb96c8c4289ca24ab"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 79,
      "start_column": 398,
      "end_line": 79,
      "end_column": 403
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : MeasureableFinGroup G\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nT\u2081 T\u2082 T\u2083 : \u03a9 \u2192 G\nhsum : T\u2081 + T\u2082 + T\u2083 = 0\nn : \u2115\n\u03a9' : Fin n \u2192 Type u_3\nh\u03a9' : (i : Fin n) \u2192 MeasureSpace (\u03a9' i)\nY : (i : Fin n) \u2192 \u03a9' i \u2192 G\n\u03b1 : \u211d\nh\u03b1 : \u03b1 > 0\n\u22a2 \u2203 \u03a9'' h\u03a9'' U,\n    d[U # U] + \u03b1 * \u2211 i, d[Y i # U] \u2264 (2 + \u03b1 * \u2191n / 2) * (I[T\u2081 : T\u2082] + I[T\u2081 : T\u2083] + I[T\u2082 : T\u2083]) + \u03b1 * \u2211 i, d[Y i # T\u2082]",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-04-17T21:11:56+01:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "bedcdd310e4575a3481985913c38d0ac3e9ce6b3dbb61c2dd3c3886c3b4adc26"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 82,
      "start_column": 27,
      "end_line": 82,
      "end_column": 32
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u22a2 multiTau p \u03a9 h\u03a9 X = 0",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-28T21:28:18-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "4eae9d5d44e2c66ad187e78851e77ba525a60b87e3aae1fc008ab610386c447e"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 89,
      "start_column": 54,
      "end_line": 89,
      "end_column": 59
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U \u2119 \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L89"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-28T21:28:18-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "affce0b8ad784ae4fb1eb28a54faf85650fdcc5be46728fc59806179c398bedc"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 102,
      "start_column": 64,
      "end_line": 102,
      "end_column": 69
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\nA : Set G\ninst\u271d : Finite \u2191A\nK : \u211d\nh\u2080A : A.Nonempty\nhA : \u2191(Nat.card \u2191(A + A)) \u2264 K * \u2191(Nat.card \u2191A)\n\u22a2 \u2203 H c,\n    \u2191(Nat.card \u2191c) \u2264 K ^ (64 * \u2191m ^ 3 + 2) * \u2191(Nat.card \u2191A) ^ (1 / 2) * \u2191(Nat.card \u21a5H) ^ (-1 / 2) \u2227\n      \u2191(Nat.card \u21a5H) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u2191A) \u2227\n        \u2191(Nat.card \u2191A) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u21a5H) \u2227 A \u2286 c + \u2191H",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2024-08-18T18:37:52+02:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "3c13f3e7b0e75872d7dfa8e23b980b1d0ffd06c654bd2b79e1420964d10544c3"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/BoundingMutual.lean",
      "start_line": 36,
      "start_column": 79,
      "end_line": 36,
      "end_column": 84
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' \u2119\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) \u2119 \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/BoundingMutual.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "1bbff35f827b226473c16ec439932d644591efee74849ae8e1338c81a2fe5eeb"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 527,
      "start_column": 2,
      "end_line": 527,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type u_1\nG : Type u_5\nm\u03a9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : IsProbabilityMeasure \u03bc\nI : Type u_8\ns t : Finset I\nhdisj : Disjoint s t\nhs : s.Nonempty\nht : t.Nonempty\nX : I \u2192 \u03a9 \u2192 G\nhX : \u2200 (i : I), Measurable (X i)\nhX' : \u2200 (i : I), FiniteRange (X i)\nh_indep : iIndepFun X \u03bc\nf : I \u2192 I\nhf : Finset.image f t \u2286 s\n\u22a2 H[\u2211 i \u2208 t, X i ; \u03bc] \u2264 H[\u2211 i \u2208 s, X i ; \u03bc] + \u2211 i \u2208 t, (H[X i - X (f i) ; \u03bc] - H[X (f i) ; \u03bc])",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L527"
    },
    "metadata": {
      "blame_email_hash": "6e8091041644",
      "blame_date": "2024-05-31T19:35:50+01:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "bba1161fd99dbd93bfbcbbbfc17b8f0a373b2ecc3fd3e16b40ec531ba7aeb8d5"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 760,
      "start_column": 62,
      "end_line": 760,
      "end_column": 67
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 D[X ; fun x => h\u03a9] = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L760"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-22T09:31:46-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "53952a34d0aa5bb64a0888247bda3172fe2169cc81bf4d400733ade08457c553"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 857,
      "start_column": 105,
      "end_line": 857,
      "end_column": 110
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 (\u2211 j, \u2211 k, if j = k then 0 else d[X j # X k]) \u2264 \u2191m * (\u2191m - 1) * D[X ; h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L857"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "9de8ea8429dbd769777e03886a061a9d6d1fea2772386257a7abea2d694c9251"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 862,
      "start_column": 69,
      "end_line": 862,
      "end_column": 74
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 \u2211 j, d[X j # X j] \u2264 2 * \u2191m * D[X ; h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L862"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "02a6bfca12778b8d54058abf6a2be8276203ac786965e258b31668ea565b4848"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 868,
      "start_column": 108,
      "end_line": 868,
      "end_column": 113
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhidenT : \u2200 (j k : Fin m), IdentDistrib (X j) (X k) \u2119 \u2119\n\u22a2 \u2200 (i : Fin m), D[X ; h\u03a9] \u2264 \u2191m * d[X i # X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L868"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "48ea0753abd67fbe6fe270d0a60c2749648b01ff3c66fd725d932e1a3aeeeae7"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 873,
      "start_column": 82,
      "end_line": 873,
      "end_column": 87
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * D[X ; fun x => h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L873"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "c2520a606cf7e2d5f451db4e8ba0e272bcf4c9aa6a21d0424c7abe5524c58452"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 877,
      "start_column": 235,
      "end_line": 877,
      "end_column": 240
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhvanish : D[X ; h\u03a9] = 0\n\u22a2 \u2200 (i : Fin m), \u2203 H U, Measurable U \u2227 IsUniform (\u2191H) U \u2119 \u2227 d[X i # U] = 0",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L877"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "c52d6e6eb7a0dded9b209c517f5a02052305d773f48d73baaa445693f6829613"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 1504,
      "start_column": 8,
      "end_line": 1504,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case bc.h.e_11\nm : \u2115\nhm : m > 0\nG : Fin (m + 1) \u2192 Type u_8\nhG : (i : Fin (m + 1)) \u2192 MeasurableSpace (G i)\nhGs : \u2200 (i : Fin (m + 1)), MeasurableSingletonClass (G i)\nhGa : (i : Fin (m + 1)) \u2192 AddCommGroup (G i)\nhGcount : (i : Fin (m + 1)) \u2192 Fintype (G i)\n\u03c6 : (i : Fin m) \u2192 G i.succ \u2192+ G i.castSucc\n\u03c0 : (d : Fin (m + 1)) \u2192 G \u2191m \u2192+ G d\nh\u03c00 : \u03c0 0 = 0\nhcomp : \u2200 (i : Fin m), \u21d1(\u03c0 i.castSucc) = \u21d1(\u03c6 i) \u2218 \u21d1(\u03c0 i.succ)\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G \u2191m\nhX : \u2200 (i : Fin m), Measurable (X i)\nh_indep : iIndepFun X \u2119\nthis\u271d : IsProbabilityMeasure \u2119\nthis : NeZero m\nf : Fin m \u2192 \u211d :=\n  fun i => I[\u2211 i', X i' : fun \u03c9 i' => (\u03c0 i.succ) (X i' \u03c9)|\u27e8\u21d1(\u03c0 i.succ) \u2218 \u2211 i', X i', fun \u03c9 i' => (\u03c0 \u2191\u2191i) (X i' \u03c9)\u27e9]\nhf : \u2200 (i : Fin m), 0 \u2264 f i\nF : G 1 \u2192 G 1 \u00d7 (Fin m \u2192 G 0) := fun x => (x, fun x => 0)\nhF : Injective F\n\u22a2 HEq (fun x => (\u2211 x_1, (\u03c0 1) (X x_1 x), fun x => 0))\n    (\u27e8fun x => \u2211 x_1, (\u03c0 (Fin.succ 0)) (X x_1 x), fun \u03c9 i' => (\u03c0 \u21910) (X i' \u03c9)\u27e9)",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1504"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-14T04:44:11+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "7249c84cd6c3a75dd2d0ba153f332dc341ed72e13fe5478ca8df0d5bbf887cc9"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 1518,
      "start_column": 54,
      "end_line": 1518,
      "end_column": 59
    },
    "debug_info": {
      "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    \u2211 j,\n          (D[fun i => X (i, j) ; fun x => h\u03a9] -\n            D[fun i => X (i, j) | fun i => \u2211 k \u2208 Finset.Ici j, X (i, k) ; fun x => h\u03a9]) +\n        D[fun i => X (i, \u2191m) ; fun x => h\u03a9] -\n      D[fun i => \u2211 j, X (i, j) ; fun x => h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1518"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "52a1721dbb8c0782862edb4930da8a40c05f7962f40ed2c64d0bf263ae0810ea"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MultiTauFunctional.lean",
      "start_line": 54,
      "start_column": 111,
      "end_line": 54,
      "end_column": 116
    },
    "debug_info": {
      "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 Continuous fun \u03bc => multiTau p (fun x => G) (fun i => MeasureSpace.mk \u2191(\u03bc i)) fun x => id",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T09:57:28-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "0c8f0ab87fd932f370996a1f8af2a028fe9d72d6d44d76818ccf2c803d381e05"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PFR/MultiTauFunctional.lean",
      "start_line": 57,
      "start_column": 222,
      "end_line": 57,
      "end_column": 227
    },
    "debug_info": {
      "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 \u2203 \u03a9 h\u03a9 X, multiTauMinimizes p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L57"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-08-18T19:14:43-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "046a4809402ab4f13c0d6b2294f7b92b3ade7aee4fc484f440dc900a17c4a088"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/ENorm.lean",
      "start_line": 79,
      "start_column": 43,
      "end_line": 79,
      "end_column": 48
    },
    "debug_info": {
      "goal": "\u03b5 : Type u_9\n\u03b5' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace \u03b5\ninst\u271d\u00b2 : ContinuousENorm \u03b5\ninst\u271d\u00b9 : TopologicalSpace \u03b5'\ninst\u271d : ContinuousENorm \u03b5'\n\u03b1 : Type u_11\nm0 : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 \u03b5\ng : \u03b1 \u2192 \u03b5'\nc : \u211d\u22650\nh : \u2200\u1d50 (x : \u03b1) \u2202\u03bc, \u2016f x\u2016\u2091 \u2264 \u2191c * \u2016g x\u2016\u2091\np : \u211d\nhp : 0 < p\n\u22a2 eLpNorm' f p \u03bc \u2264 c \u2022 eLpNorm' g p \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-05T21:50:03+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "81c61f87d56a75a64a440ada9e33545c4d24b088778c74663b9d71ad5e93debf"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/ENorm.lean",
      "start_line": 83,
      "start_column": 90,
      "end_line": 83,
      "end_column": 95
    },
    "debug_info": {
      "goal": "\u03b5 : Type u_9\n\u03b5' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace \u03b5\ninst\u271d\u00b2 : ContinuousENorm \u03b5\ninst\u271d\u00b9 : TopologicalSpace \u03b5'\ninst\u271d : ContinuousENorm \u03b5'\n\u03b1 : Type u_11\nm0 : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 \u03b5\ng : \u03b1 \u2192 \u03b5'\nc : \u211d\u22650\nh : \u2200\u1d50 (x : \u03b1) \u2202\u03bc, \u2016f x\u2016\u2091 \u2264 \u2191c * \u2016g x\u2016\u2091\n\u22a2 eLpNormEssSup f \u03bc \u2264 c \u2022 eLpNormEssSup g \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-05T21:50:03+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "b845d5c723853d801ec19af37505f118126947084cb0f03384055585a5e985fe"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 533,
      "start_column": 2,
      "end_line": 533,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 HasStrongType\n    (fun u x =>\n      (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n    (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc \u2191(A ^ 2 * C2_0_6 A p\u2081 p\u2082)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/HardyLittlewood.lean#L533"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T23:13:58+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "61e81a0a60df1dee63473d6d592c13a9baa9ca1ca59d46690dab11a133343760"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 121,
      "start_column": 21,
      "end_line": 121,
      "end_column": 26
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 GL (Fin n) \u211a \u2192 GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 GL (Fin n) \u211d \u2192 z = z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "7104965d4fd8eeff3884bc6da037f0e14cc01966382f94d4298a2896447174ec"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 122,
      "start_column": 30,
      "end_line": 122,
      "end_column": 35
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 IsSlowlyIncreasing fun y => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "56d4a469ae49648e66a7c86fdc91bcd12296e4cf2f0bc90c6e0f56c5a4b0fe09"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
      "start_line": 123,
      "start_column": 23,
      "end_line": 123,
      "end_column": 28
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => z, \u22ef\u27e9))",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L123"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:29:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "275a47fb62ec9d1334905a53daf10d5b0b1ad9e08c8373e7b7836effda52de65"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 690,
      "start_column": 22,
      "end_line": 690,
      "end_column": 27
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous (baseChangeAlgEquiv A K L B).toFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "fba969b0c1b7f96394ee4cef57111ab977ab330798b7c4eeed7c7753417432f5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
      "start_line": 691,
      "start_column": 23,
      "end_line": 691,
      "end_column": 28
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous (baseChangeAlgEquiv A K L B).invFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L691"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "856bd9a2207cc21cc19cdf70843c95d8df860134913b418a70a3dbbbe24e05c1"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
      "start_line": 251,
      "start_column": 57,
      "end_line": 251,
      "end_column": 62
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2076 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2075 : L.DecidableEq\nT\u2080 T : Theory \u2112\u2092\u1d63\ninst\u271d\u2074 : T\u2080 \u2aaf T\ninst\u271d\u00b3 : Diagonalization T\u2080\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b2 : \ud835\udd05.HBL\ninst\u271d\u00b9 : \u2115 \u22a7\u2098* T\ninst\u271d : \ud835\udd05.Justified \u2115\nA B : Modal.Formula \u2115\n\u22a2 Arith.SoundOn \ud835\udc08\ud835\udeba\u2081 (Arith.Hierarchy \ud835\udeb7 2)",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L251"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "561aea2f41ccdded4a549bba38c20c7aff4ca18aed7fa403980d371473caf511"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
      "start_line": 253,
      "start_column": 81,
      "end_line": 253,
      "end_column": 86
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory \u2112\u2092\u1d63\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u2074 : \ud835\udd05.HBL\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\ninst\u271d\u00b2 : \ud835\udd05.Justified \u2115\nA B : Modal.Formula \u2115\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, T \u22a2!. \u03c3 \u2194 \u2115 \u22a7\u2098\u2080 \u2191(\ud835\udc08\ud835\udeba\u2081.standardDP T) \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "258a7b918aeb06e842e71f2a126f95eb9e77b9b4822bcaaa065e40580452cc13"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
      "start_line": 375,
      "start_column": 27,
      "end_line": 375,
      "end_column": 32
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\nthis\u271d : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080\u271d :=\n  SolovaySentence.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : \ud835\udc08\ud835\udeba\u2081 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B\n\u22a2 \ud835\udc08\ud835\udeba\u2081.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L375"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
    },
    "id": "d7a66edadb2d3aea140f4728c8b1dd14daaa81c197de56e13742652f79511831"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
      "start_line": 393,
      "start_column": 20,
      "end_line": 393,
      "end_column": 25
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\nthis\u271d\u00b9 : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080\u271d :=\n  SolovaySentence.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nthis\u271d : \u2115 \u22a7\u2098* \ud835\udc08\ud835\udeba\u2081\nthis : \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00ac\u2115 \u22a7\u2098\u2080 \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\n\u22a2 \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
    },
    "id": "6f057b9e862a642dde34e8e6af4174370ecc50c1eac8f84693a55e360e8f3448"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-adele-refactor",
      "commit": "c5f85a01641c0135f6e95906e74b59461497f5cf",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/NumberField/AdeleRing.lean",
      "start_line": 170,
      "start_column": 4,
      "end_line": 170,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.refine_1.ht\nintegralAdeles : Set (FiniteAdeleRing (\ud835\udcde \u211a) \u211a) :=\n  {f |\n    \u2200 (v : IsDedekindDomain.HeightOneSpectrum (\ud835\udcde \u211a)),\n      f v \u2208 IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers \u211a v}\n\u22a2 IsOpen integralAdeles",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/c5f85a01641c0135f6e95906e74b59461497f5cf/FLT/NumberField/AdeleRing.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-06T18:09:43+01:00",
      "inclusion_date": "2025-04-14T23:44:51.413177+00:00"
    },
    "id": "7ff98dbd552c3feaca88b99da397b1db5fd47b3a853e70778b49ce125fcec19d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "RD_erealStieltjes",
      "commit": "d2f1f177e8408f47342c6a02c9fcc745d21dcf3d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/MeasureTheory/Measure/ERealStieltjes.lean",
      "start_line": 1226,
      "start_column": 2,
      "end_line": 1226,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : ERealStieltjes\n\u22a2 SFinite f.measure",
      "url": "https://github.com/leanprover-community/mathlib4/blob/d2f1f177e8408f47342c6a02c9fcc745d21dcf3d/Mathlib/MeasureTheory/Measure/ERealStieltjes.lean#L1226"
    },
    "metadata": {
      "blame_email_hash": "d765cd676b3d",
      "blame_date": "2025-04-09T09:41:05+02:00",
      "inclusion_date": "2025-04-09T23:09:10.124596+00:00"
    },
    "id": "1179c281c69582647601ca4de1353620f50570af58f80f961882d8cb1e002d5f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 462,
      "start_column": 6,
      "end_line": 462,
      "end_column": 11
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q)) *\n          house\n            ((\u2191\u2191(finProdFinEquiv.symm.toFun t).1 + 1 + (\u2191\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * \u03b2') ^\n              \u2191(finProdFinEquiv.symm.toFun u).2) *\n        house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264\n    house (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q)) *\n          house ((\u2191a + \u2191b * \u03b2') ^ k) *\n        house (\u03b1' ^ (a * l)) *\n      house (\u03b3' ^ (b * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L462"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "c18faff69f09228240341a2dcf4a17551a1c4190ad8e2ea1a2c6292ed81f9c7e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 466,
      "start_column": 6,
      "end_line": 466,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 |\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q)| *\n          house\n            ((\u2191(\u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1) \u2022 \u03b2') ^\n              \u2191(finProdFinEquiv.symm.toFun u\u271d).2) *\n        house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1))) \u2264\n    let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n    let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n    let k := \u2191(finProdFinEquiv.symm.toFun u).2;\n    let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n    1 \u2294 |\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q)| * house ((\u2191a + b \u2022 \u03b2') ^ k) * house (\u03b1' ^ (a * l)) * house (\u03b3' ^ (b * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L466"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "0235c952ffd9324b86bbd044d68259fb50db3f23ebef366b68d89c91f535a097"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 480,
      "start_column": 4,
      "end_line": 480,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc.step\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 c\u2083 K \u03b1' \u03b2' \u03b3' q u t ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2) \u2264\n    c\u2083 K \u03b1' \u03b2' \u03b3' q u\u271d t\u271d ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9ede7cc59c6c010bd09ea5f1342aba8ee0d71f9ac6d21bb13430dff5204b9412"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 594,
      "start_column": 6,
      "end_line": 594,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case neg\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\n\u22a2 \u00ac\u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun i).2 + 1) \u2022 \u03b2 =\n      \u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun j).2 + 1) \u2022 \u03b2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L594"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ac77ca4b7191ceaf64dad19943fbe8a2ac751f23565a0cc09a4b395e5d34ebc3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 674,
      "start_column": 2,
      "end_line": 674,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhR : \u2211 t, \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) = 0\n\u22a2 ((fun t => \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t)) \u1d65* vandermonde fun t => \u03c1 \u03b1 \u03b2 q t) = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L674"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T00:24:25+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "921f85881b2e7bdf297989acac8cfcb3ae979d90b3495745d8e5c3704cda62fd"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 739,
      "start_column": 2,
      "end_line": 739,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case a.h.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nH : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x = 0\nHC\u271d : \u2200 (x : Fin (q * q)), \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u x hq0 x) = 0\nt : Fin (q * q)\nHC : \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0\n\u22a2 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t\u271d ?hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L739"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "722a7424ddc03322cb20178c049ff38d9c8490931c3894ad50038d94ba7d3eea"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 740,
      "start_column": 2,
      "end_line": 740,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case hq0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nH : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t x = 0\nHC : \u2200 (x : Fin (q * q)), \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u x hq0 x) = 0\n\u22a2 0 < q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L740"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9c55146b3e4ea72bd5fa5060f7bb6c314730becd0dc8e9a325425c9d12b3983c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 779,
      "start_column": 2,
      "end_line": 779,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case hR.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nk : Fin (q * q)\nl : Fin (m K)\nhl : \u2191l < n K q\nx : \u2102\nt : Fin (q * q)\nht : t \u2208 Finset.univ\nH :\n  R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 = 0 \u2192\n    (fun t => \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t)) = 0\nthis : A K \u03b1' \u03b2' \u03b3' q h2mq hq0 *\u1d65 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 = 0\n\u22a2 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L779"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:10:19+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "104be27b1167a4a721504ad8b5dc420ef85d3d106504f8e6906b60683ac99317"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 791,
      "start_column": 92,
      "end_line": 791,
      "end_column": 97
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 (Exists.choose \u22ef).order \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L791"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:29:48+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9e430d82ad2132edeac14be7f8eca6326db9146e44417146098a7e8f74e8e93b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 793,
      "start_column": 80,
      "end_line": 793,
      "end_column": 85
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L793"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "83102d5f7f548c91cc42030de1e8ae208b14107890047209b45754828c087d60"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 797,
      "start_column": 67,
      "end_line": 797,
      "end_column": 72
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nhq0 : 0 < q\nt : Fin (q * q)\n\u22a2 \u2203 l\u2080,\n    iteratedDeriv (r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n        (R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t) \u2191\u2191l\u2080 \u2260\n      0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L797"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "e7e8888fa6f6eb61e9dc68c3f523beb481e8196f4a62124e25d6813a600bfb23"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 822,
      "start_column": 2,
      "end_line": 822,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nthis : \u00ac\u22ef.choose = 0\nH : \u22ef.choose t = 0\n\u22a2 \u22ef.choose = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L822"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-01T02:10:10+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "29c9e004acac74b2369d248130afbbb37a1717d468bf0bae29ef8c77f8028ea9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1026,
      "start_column": 2,
      "end_line": 1026,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 IsIntegral \u2124\n    (c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022\n      (algebraMap (\ud835\udcde K) K) (\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1026"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8b1e888e8279cba1149b83df9362c290242be2102e5d71ae9edef4e505d4ec82"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 867,
      "start_column": 6,
      "end_line": 867,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L867"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "4d52e56c26a7aed30845bcbd3649a164e7d061272c2c607a84b5d381d5737d23"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 868,
      "start_column": 6,
      "end_line": 868,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_1.ha\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 0 < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L868"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5e8ce56e1c74a450e14dda6ce6f79ea84da7ac5c43e6ea9dbc22749e10e3722b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 869,
      "start_column": 6,
      "end_line": 869,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_1.hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L869"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "6790cd97a655463d452f9cb9f35222e1d4ef1c416bf856132745c51729fb4058"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 870,
      "start_column": 4,
      "end_line": 870,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2016(Algebra.norm \u211a) \u03c1\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L870"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5b47b9529867a39550c94b62ca8d85854d866a4193ba6552fa50549e9ab10b3a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 897,
      "start_column": 4,
      "end_line": 897,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) \u2264\n    \u2191\u2191t * c\u2084 * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ n K q * c\u2087 ^ \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L897"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "55bf0e831868323ba86ff7bb6a4ed70b5a51a84c454ecc2cc0b059ff122032bf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 898,
      "start_column": 4,
      "end_line": 898,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191\u2191t * c\u2084 * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ n K q * c\u2087 ^ \u2191q \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L898"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "a4c334d81cdd8bea76f85afbbbc5daf9fa792c0a5ab84c0f1dc46926859d3c4e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 912,
      "start_column": 4,
      "end_line": 912,
      "end_column": 9
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  DifferentiableAt \u2102 S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L912"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "98d35623a629a18d8978bd9e5129c588e63eb5d552ad952e6655aeb03d2dea12"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 926,
      "start_column": 4,
      "end_line": 926,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hd\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 DifferentiableOn \u2102 (S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191(r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q)))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L926"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "b7dfe85e337c62782d81d9b7ced6d74fefa4787bb56c7aa07982a9b0dd5e99e3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 931,
      "start_column": 6,
      "end_line": 931,
      "end_column": 11
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 < m K",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L931"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "867c91750524d482a06f6d4be3135841e60840fa3d48d979a9a5b78a43278edb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1193,
      "start_column": 8,
      "end_line": 1193,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case hb.intro.intro.intro\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhirr : \u2200 (i j : \u2124), \u03c3 \u03b2' \u2260 \u2191i / \u2191j\nleft : \u03c3 \u03b1' \u2260 0\nright : \u03c3 \u03b1' \u2260 1\nright_1 : \u03c3 \u03b1' ^ \u03c3 \u03b2' = \u03c3 \u03b3'\nl\u2080 : \u2115 := _root_.l\u2080 K (\u03c3 \u03b1') (\u03c3 \u03b2') hirr \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0\nthis : _root_.l\u2080 K (\u03c3 \u03b1') (\u03c3 \u03b2') \u22ef \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0 < m K\n\u22a2 0 < r K (\u03c3 \u03b1') (\u03c3 \u03b2') \u22ef \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1193"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f4d80544d130781ab4fc62ddcc6abaed3a6f05a29e69b888e1688d260d840353"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 968,
      "start_column": 8,
      "end_line": 968,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 1 < 1 + \u2191r / \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L968"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "0e747424280355a68aac241a6e0c8109ddb5fcea76519a73aa4dd474c77749ce"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 972,
      "start_column": 4,
      "end_line": 972,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hc\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q)\n\u22a2 ContinuousWithinAt (_root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q))) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L972"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "7e62ba673e651ac51de0a7af0fd238c9de1fbcc620eb9edd65276f393ec4e887"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 979,
      "start_column": 4,
      "end_line": 979,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case intro\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nz : \u2102\nhzabs : \u2016z\u2016 < \u2191(m K) * (1 + \u2191r / \u2191q)\nhzneq : \u00acz = \u2191l\u2080\n\u22a2 DifferentiableAt \u2102 S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L979"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "e5a0e4111ac070844d418d361969508675a2e7d7d6df186ceefc6984483df674"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 963,
      "start_column": 29,
      "end_line": 963,
      "end_column": 34
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191l\u2080 < \u2191(m K)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L963"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5faf5f86e1806fdc46a8c70abbd7d33b3334389faa4e231dbd941afce81087a7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1010,
      "start_column": 4,
      "end_line": 1010,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u03c3 (rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) = Complex.log \u03b1 ^ (-\u2191r) * S \u2191l\u2080",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1010"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "2c86848954dd97fb7728c8540e7d30195a1c07a92cdbd4a7a91969fdf2a54b0f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1037,
      "start_column": 4,
      "end_line": 1037,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2016_root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t z\u2016 \u2264\n    \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1037"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "4e8e77040d99c3327083ad6f4a8e175b2ea2f6bedbac4a827587d57a63373a71"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1038,
      "start_column": 4,
      "end_line": 1038,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q)) \u2264\n    \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1038"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ed69a399692192c562277a3c8e38274d418ec21ee3f814ce7a52becf71817ab5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1039,
      "start_column": 4,
      "end_line": 1039,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1039"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1fbb30a28ae522eb300c1a7094d153db0d0af6d1573dbee84056ff458362c1ba"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1064,
      "start_column": 4,
      "end_line": 1064,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 \u2191(m K) * \u2191r / \u2191q = \u2191(m K) * (1 + \u2191r / \u2191q) - \u2191(m K)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1064"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ebcfe16a308e25788cab3c686cae35f7a2187a5c6eed3c1ad3c4106810dd2af1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1068,
      "start_column": 8,
      "end_line": 1068,
      "end_column": 13
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 l\u2080 < m K",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1068"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "cf97aa12a87229bcb00b80a9f5741ef6fb0e9820f48ca35fd23324b4ebc8bea3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1070,
      "start_column": 4,
      "end_line": 1070,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 \u2191(m K) * (1 + \u2191r / \u2191q) - \u2191(m K) \u2264 \u2016z\u2016 - \u2191l\u2080",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1070"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ac975c9beae6949194039d9e808495473906ff76589becdf222a5201a65be58e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1329,
      "start_column": 4,
      "end_line": 1329,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1.hz\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1329"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "59e05b3dc741450705fba28231a57fd5560cb1c5a4d0eaff1d212abb0860b5cf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1330,
      "start_column": 4,
      "end_line": 1330,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 \u2016z - \u2191l\u2080\u2016 \u2264 \u2016z - k\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1330"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "0bf98d08c0cffde06e93cfd5e7c05c29be843989d7887a4322600e5d9039be36"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1345,
      "start_column": 41,
      "end_line": 1345,
      "end_column": 46
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q)) \u2192\n    \u2016(z - \u2191l\u2080) ^ (-\u2191r) * \u220f k \u2208 Finset.range (m K + 1) \\ {l\u2080}, ((\u2191l\u2080 - \u2191k) / (z - \u2191k)) ^ r\u2016 \u2264\n      c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1345"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a6bce69f636e0bef9ca1d2c3dbeefaa280160f83d07ee0f5049db46d2258955c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1128,
      "start_column": 2,
      "end_line": 1128,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 let R := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  \u2016S z\u2016 \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1128"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1214a1d0d21f20a6cee8d9b8a00f0a743b70a087b96b2224d2105ad2954712e3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1398,
      "start_column": 52,
      "end_line": 1398,
      "end_column": 57
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\n\u22a2 let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  \u03c3 \u03c1 = \u2191(2 * Real.pi)\u207b\u00b9 * \u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191l\u2080)\u207b\u00b9 * S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1398"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "538bc7c81c1f7ef2b9df699872e2a04126f4e0de069ee854f109e1aa508e37bb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1426,
      "start_column": 4,
      "end_line": 1426,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016(2 * Real.pi)\u207b\u00b9\u2016 * \u2016\u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191l\u2080)\u207b\u00b9 * S z\u2016 \u2264\n    \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1426"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b1b42d2a67fc3cef09e65f1400866e41dc1442e39e73d9b906796f554477de24"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1427,
      "start_column": 4,
      "end_line": 1427,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_4\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r) \u2264\n    c\u2081\u2083 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1427"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "49bbbf0cdd89c31d90eba4098e9d4b1588805da406a22b8d7c68f25c9782ac3c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1220,
      "start_column": 4,
      "end_line": 1220,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1220"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1d236988296720703db9e6a8c8ebd0a049f83d6aae0b2eb5062aeada0bf9c59a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1221,
      "start_column": 4,
      "end_line": 1221,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c\u2081\u2084 ^ r * \u2191r ^ (-\u2191r / 2 + 3 * \u2191(h K) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1221"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "dafff168f96d20962236891a8a4cc766e21c33ea6f14594a6388624d6438c85e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1460,
      "start_column": 2,
      "end_line": 1460,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h.right\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 \u2191(r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) ^\n      ((r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 - 3 * h K) / 2) \u2265\n    c\u2081\u2085 ^ r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1460"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3edb81b63e4b2932eb334f938aab8cc72abec5eb559ed8f8bd98041975a6d9f6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1246,
      "start_column": 4,
      "end_line": 1246,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) ^\n      (_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 / 2 - 3 * h K / 2) <\n    c\u2081\u2084 ^ r * c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1246"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "2dfb0de1ca23bd1b9aab32cf53cc50b316611b0ff82798934c9756709dba09c4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1480,
      "start_column": 2,
      "end_line": 1480,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.intro.intro.intro.intro.intro.intro\nK\u271d : Type\ninst\u271d\u00b9 : Field K\u271d\n\u03b1 \u03b2 : \u2102\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\n\u03c3\u271d : K\u271d \u2192+* \u2102\n\u03b1'\u271d \u03b2'\u271d \u03b3'\u271d : K\u271d\ninst\u271d : NumberField K\u271d\nq : \u2115\nu : Fin (m K\u271d * n K\u271d q)\nh\u03b3 : IsAlgebraic \u211a (\u03b1 ^ \u03b2)\nK : Type\nhK : Field K\nhNK : NumberField K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nha : \u03b1 = \u03c3 \u03b1'\nhb : \u03b2 = \u03c3 \u03b2'\nhc : \u03b1 ^ \u03b2 = \u03c3 \u03b3'\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "c26874e43979047d038540167cc6cf0f0808c5d5de18e89a12c26c7514223057"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "a5795764142a42265d7046750165aa183184fc94",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Combinatorics/MyGraph/Basic.lean",
      "start_line": 685,
      "start_column": 2,
      "end_line": 685,
      "end_column": 7
    },
    "debug_info": {
      "goal": "V : Type u\nG H : MyGraph V\nh : H \u2264 G\n\u22a2 G \\ (G \\ H) = H",
      "url": "https://github.com/leanprover-community/mathlib4/blob/a5795764142a42265d7046750165aa183184fc94/Mathlib/Combinatorics/MyGraph/Basic.lean#L685"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-09T23:24:48.994862+00:00"
    },
    "id": "0c1a4056a338c9060ee38e933527c2904aafab92e75d2c2eae5c0fc86ae26560"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Combinatorics/MyGraph/Basic.lean",
      "start_line": 1034,
      "start_column": 2,
      "end_line": 1034,
      "end_column": 7
    },
    "debug_info": {
      "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\nh : Disjoint G (fromEdgeSet s)\ne : Sym2 V\nhe : e \u2208 G.edgeSet\nhf : e \u2208 s\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1034"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
    },
    "id": "46471fe2402bf29d56294f82728c19182e92c7d2dd858813536369af1d30af14"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Combinatorics/MyGraph/Basic.lean",
      "start_line": 1037,
      "start_column": 2,
      "end_line": 1037,
      "end_column": 7
    },
    "debug_info": {
      "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\n\u22a2 Disjoint (fromEdgeSet s) G \u2194 Disjoint s G.edgeSet",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1037"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
    },
    "id": "45d30a90910e455b19093a1a0d1bc85c86b593011c423ff84b5f65bd0f9ab0cc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mans0954/bipolar-theorem",
      "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Analysis/LocallyConvex/Bipolar.lean",
      "start_line": 65,
      "start_column": 2,
      "end_line": 65,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\nE : Type u_2\nF : Type u_3\ninst\u271d\u2076 : RCLike \ud835\udd5c\ninst\u271d\u2075 : AddCommGroup E\ninst\u271d\u2074 : AddCommGroup F\ninst\u271d\u00b3 : Module \ud835\udd5c E\ninst\u271d\u00b2 : Module \ud835\udd5c F\nB : E \u2192\u2097[\ud835\udd5c] F \u2192\u2097[\ud835\udd5c] \ud835\udd5c\ninst\u271d\u00b9 : Module \u211d E\ninst\u271d : IsScalarTower \u211d \ud835\udd5c E\nf\u2081 : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c\n\u22a2 \u2203 a, (WeakBilin.eval B) a = f\u2081",
      "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L65"
    },
    "metadata": {
      "blame_email_hash": "b075c7797d16",
      "blame_date": "2025-04-09T08:31:51+01:00",
      "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
    },
    "id": "6fb6962af2f299b3e0f28708b03dab08b6d6bfadf361083ee2a93015c9a30da9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mans0954/bipolar-theorem",
      "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Analysis/LocallyConvex/Bipolar.lean",
      "start_line": 102,
      "start_column": 4,
      "end_line": 102,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case a.intro.intro.intro\n\ud835\udd5c : Type u_1\nE : Type u_2\nF : Type u_3\ninst\u271d\u2077 : RCLike \ud835\udd5c\ninst\u271d\u2076 : AddCommGroup E\ninst\u271d\u2075 : AddCommGroup F\ninst\u271d\u2074 : Module \ud835\udd5c E\ninst\u271d\u00b3 : Module \ud835\udd5c F\ninst\u271d\u00b2 : Module \u211d E\ninst\u271d\u00b9 : IsScalarTower \u211d \ud835\udd5c E\nB : E \u2192\u2097[\ud835\udd5c] F \u2192\u2097[\ud835\udd5c] \ud835\udd5c\ns : Set E\ninst\u271d : Nonempty \u2191s\nh : B.Nondegenerate\nx : E\nhx : x \u2209 (closedAbsConvexHull \ud835\udd5c) s\nf : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c\nu : \u211d\nhf\u2081 : \u2200 a \u2208 (closedAbsConvexHull \ud835\udd5c) s, RCLike.re (f a) < u\nhf\u2082 : u < RCLike.re (f x)\ne3 : 0 < u\ng : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c := (1 / u) \u2022 f\nfg : g = (1 / u) \u2022 f\nhg\u2081 : \u2200 a \u2208 (closedAbsConvexHull \ud835\udd5c) s, RCLike.re (g a) < 1\n\u22a2 x \u2208 (B.flip.polar (B.polar s))\u1d9c",
      "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "b075c7797d16",
      "blame_date": "2025-04-09T08:31:51+01:00",
      "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
    },
    "id": "ed306d8ef427052daefa01ae9155736ec4e25bb70fee346f016285c260266d81"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.24977 \u2208 \u2191ys then ?m.25006 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
    },
    "id": "aaa1785e9906507f71d6fda052deb608b0e68f8c29a5702e5c749538052c200d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.24977 \u2208 \u2191ys then ?m.25006 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
    },
    "id": "92c4519c020b562fbd1913f0b0df29cc4ac6f33da9857d9d1bf7729825848dfc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2020P3.lean",
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nc : Fin (4 * n) \u2192 Fin n\nh : \u2200 (i : Fin n), #{j | c j = i} = 4\n\u22a2 \u2203 S, \u2211 i \u2208 S, (\u2191i + 1) = \u2211 i \u2208 S\u1d9c, (\u2191i + 1) \u2227 \u2200 (i : Fin n), #({j \u2208 S | c j = i}) = 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P3.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-04-08T13:09:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70eb82b882388275af62794a7d8761678aee0776c17f603eefa6183ecd229e75"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
      "start_line": 379,
      "start_column": 27,
      "end_line": 379,
      "end_column": 32
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080 : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, r\u2081 \u22a7 \u03c6\nhA\u2082 : \u00acr\u2081 \u22a7 A\nthis\u271d\u00b9 : (M\u2081.extendRoot r\u2081).IsFiniteTree r\u2080\nthis\u271d : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080 :=\n  SolovaySentences.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (r\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acr\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : r\u2081 \u22a7 \u25a1B\nthis : \ud835\udc08\ud835\udeba\u2081 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B\n\u22a2 \ud835\udc08\ud835\udeba\u2081.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L379"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "0b6e09e771d72bdfa1de4fc09d3d2a5adacb06abd1b9f5a3905e63f3ca1ba35f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
      "start_line": 397,
      "start_column": 20,
      "end_line": 397,
      "end_column": 25
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080 : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, r\u2081 \u22a7 \u03c6\nhA\u2082 : \u00acr\u2081 \u22a7 A\nthis\u271d\u00b2 : (M\u2081.extendRoot r\u2081).IsFiniteTree r\u2080\nthis\u271d\u00b9 : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080 :=\n  SolovaySentences.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (r\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acr\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nthis\u271d : \u2115 \u22a7\u2098* \ud835\udc08\ud835\udeba\u2081\nthis : \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00ac\u2115 \u22a7\u2098\u2080 \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\n\u22a2 \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L397"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "6175f8f733d259760ce20c2111278a5626f776ba0f081f606bcca07919386ced"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/04Exists.lean",
      "start_line": 41,
      "start_column": 2,
      "end_line": 41,
      "end_column": 7
    },
    "debug_info": {
      "goal": "p q r : Prop\n\u22a2 p \u2192 q \u2192 r \u2194 p \u2227 q \u2192 r",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/04Exists.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "7acc14f1d908d772d0f98742bb22e719491d8807fcfe4ba4d2bc1a48d0d94f3b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/04Exists.lean",
      "start_line": 82,
      "start_column": 2,
      "end_line": 82,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : b \u2223 c\n\u22a2 a \u2223 c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/04Exists.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:40:08+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "b61e6f0a070eb11259e897c3cf4c1073d4b4e292550926cf51246693de203676"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/04Exists.lean",
      "start_line": 92,
      "start_column": 2,
      "end_line": 92,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u211d\nh : Surjective (g \u2218 f)\n\u22a2 Surjective g",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/04Exists.lean#L92"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:40:08+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "ee4781e66d20aca57fd157e83e8691442014a2fd601d00c4be495fec3fc1c7ac"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 44,
      "start_column": 2,
      "end_line": 44,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 (a + b) * (a - b) = a ^ 2 - b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "8fa1f6d129283e70b9d8cc2425f6d82e6ca50095241adadc818d894a66932437"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 63,
      "start_column": 2,
      "end_line": 63,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\n\u22a2 f ((a + b) ^ 2 - 2 * a * b) = f (a ^ 2 + b ^ 2)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L63"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "2eb1ed7fb0d66f9d99c62a4c00aaaa6b11b73ad8665457527e8723b959b8c98f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 130,
      "start_column": 2,
      "end_line": 130,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = -b\nh' : b + c = 0\n\u22a2 b * (a - c) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "c06889dc0a34e793aceb598bad1d5c0bedf653b1f56ce6c60dca8f45b17217f0"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\nh : b \u2264 a\n\u22a2 a + b \u2264 2 * a",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "0ecac9d02c57eaa3038998c7b0d8d6d5c9593e7441203a6f5ded95d535731436"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 203,
      "start_column": 2,
      "end_line": 203,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 f (-5) = f 5",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L203"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "ed81020672f317931016dd0655346081a2680639a731693e13faa1e5f32cff13"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 317,
      "start_column": 2,
      "end_line": 317,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 even_fun (g \u2218 f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L317"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5e83520fe483aebbc15c3b371f4cea2e27fa9860485aba462a373e1da7f24b7f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 388,
      "start_column": 2,
      "end_line": 388,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u211d\nhf : non_decreasing f\nhg : non_increasing g\n\u22a2 non_increasing (g \u2218 f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L388"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f91f8dba73adccc676d4a7383327b45a3aa87eb3990ccbef77c79aa72695de5e"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 393,
      "start_column": 2,
      "end_line": 393,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : \u211d\nX Y : Set \u211d\nhx : x \u2208 X\n\u22a2 x \u2208 X \u2229 Y \u222a X \\ Y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "f6649f673f4266876a415cf95f629735c662cd366ec2098bf5397d196f07ae64"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 403,
      "start_column": 2,
      "end_line": 403,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u211d\nhf : Continuous f\nh2f : HasCompactSupport f\n\u22a2 \u2203 x, \u2200 (y : \u211d), f x \u2264 f y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L403"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "89736adb75ccbfb6f8e8aefae082ae2ace02054600a47ba183e3d1178eb7dc6b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 442,
      "start_column": 2,
      "end_line": 442,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : a \u2223 c\n\u22a2 a \u2223 b + c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L442"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "d6b77dc16ce49157f5ec1a47db46da6979439184f96cd477b8c058b238750222"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 570,
      "start_column": 2,
      "end_line": 570,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nw v : \u2115 \u2192 \u211d\nhu : seq_limit u l\nhw : seq_limit w l\nh : \u2200 (n : \u2115), u n \u2264 v n\nh' : \u2200 (n : \u2115), v n \u2264 w n\n\u22a2 seq_limit v l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L570"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ea2fa22461118eb86a0523e0e7523686172d7457abf6b58eaf01b8a0a9f03b9c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 547,
      "start_column": 2,
      "end_line": 547,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h\nu : \u2115 \u2192 \u211d\nl l' : \u211d\nhl : seq_limit u l\nhl' : seq_limit u l'\n\u22a2 \u2200 \u03b5 > 0, |l - l'| \u2264 \u03b5",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L547"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "76863e7130577cfc60b795e50a87e77059307a579c42cfd2df46ae3c44002f0f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 628,
      "start_column": 2,
      "end_line": 628,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03c6 : \u2115 \u2192 \u2115\n\u22a2 extraction \u03c6 \u2192 \u2200 (N N' : \u2115), \u2203 n \u2265 N', \u03c6 n \u2265 N",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L628"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "acc2a016c137284d9ca15d47d4a8a99b51f367fb5c2afa582db2266a934c2ead"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 639,
      "start_column": 2,
      "end_line": 639,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\na : \u211d\n\u22a2 cluster_point u a \u2192 \u2200 \u03b5 > 0, \u2200 (N : \u2115), \u2203 n \u2265 N, |u n - a| \u2264 \u03b5",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L639"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4e017b7c43c78766663bf5dda65f42b58bce962c75c8f9b55dd3c2d16801d84b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 646,
      "start_column": 2,
      "end_line": 646,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\n\u03c6 : \u2115 \u2192 \u2115\nh : seq_limit u l\nh\u03c6 : extraction \u03c6\n\u22a2 seq_limit (u \u2218 \u03c6) l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L646"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "1e49d681ba41e0e4a2ab26478663a210c8933e17f0fceca8fdbc866174cfece4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 608,
      "start_column": 2,
      "end_line": 608,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl a : \u211d\nhl : seq_limit u l\nha : cluster_point u a\n\u22a2 a = l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Shorter.lean#L608"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "610f75cbeb71ba6ed338753d9e431283fb0031344d8da11d4de30e01b405bbd1"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Shorter.lean",
      "start_line": 660,
      "start_column": 2,
      "end_line": 660,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\n\u22a2 (\u2203 l, seq_limit u l) \u2192 CauchySequence u",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L660"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "25dff7d0235178f2ab9d996cd0a31220b3057d04bae4e4e39333b0ffe0063196"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/02Iff.lean",
      "start_line": 41,
      "start_column": 2,
      "end_line": 41,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\nha : 0 < a\nhb : 0 < b\n\u22a2 0 < a ^ 2 + b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/02Iff.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "22e32e14b41885ff8e1074686d04d4e876012deb142f76de96009c2700617688"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/02Iff.lean",
      "start_line": 117,
      "start_column": 2,
      "end_line": 117,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c : \u211d\n\u22a2 a + c \u2264 b + c \u2194 a \u2264 b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/02Iff.lean#L117"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "7c66015c63b666bcfc87f7587e61049cc7203e264a6b8065a386678284e3135d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/02Iff.lean",
      "start_line": 152,
      "start_column": 2,
      "end_line": 152,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\nhb : 0 \u2264 b\n\u22a2 a \u2264 a + b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/02Iff.lean#L152"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "ef00ee2747076601cda35390d8fba71bfd75ea48dd7357d0465b31a6b6ab7598"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/02Iff.lean",
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 a = b \u2194 b - a = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/02Iff.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "47604c5999bd24acd5acc2061be32dd8edce5a7715604787da0cac4d368d97de"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 (a + b) ^ 2 = a ^ 2 + 2 * a * b + b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "8eeba31a84c7ac0268ac0d607742c3beb50ece8744754c3d5541cb6bb9ad53fe"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nh : b = d + d\nh' : a = b + c\n\u22a2 a + b = c + 4 * d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:38:53+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "39ecad60116c235d7d5253d883c3a7fa853675241c3516c09ce8430a88374cfa"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c : \u211d\n\u22a2 exp (a + b - c) = exp a * exp b / (exp c * exp 0)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "cfc8984b5dc3f1e7d7ecccf3d716e096d20b622be34f3e76b1a274e99eb71fae"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nh : a = b + b\nh' : b = c\nh'' : a = d\n\u22a2 b + c = d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "16d5338e1bee9f91e7d1a0e37133f63b0f2f3ce505ee66e212d0704648fe8859"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 174,
      "start_column": 58,
      "end_line": 174,
      "end_column": 63
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * a) = exp (2 * (b + c))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L174"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "b1182e2cdd658509bc7843dbf4d2045dc81f200dcab1c4cc876b90bc9c8348cf"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 175,
      "start_column": 58,
      "end_line": 175,
      "end_column": 63
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * (b + c)) = exp (b + b + (c + c))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L175"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "8feb36eccce8173625533d2ac02d8b199e7f5bf146ae8bb2703072977d83bc0a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 176,
      "start_column": 58,
      "end_line": 176,
      "end_column": 63
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b + (c + c)) = exp (b + b) * exp (c + c)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L176"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "abb487e1ff83678602f96fd62b4638d9889afa318c4b6867821e26b30403b77d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 177,
      "start_column": 58,
      "end_line": 177,
      "end_column": 63
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b) * exp (c + c) = exp b * exp b * (exp c * exp c)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "c3399268517b866eb3127505e527064c4764968233d06c999a9ed3b35f34be66"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 178,
      "start_column": 58,
      "end_line": 178,
      "end_column": 63
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp b * exp b * (exp c * exp c) = exp b ^ 2 * exp c ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L178"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "badc6bd97be2214666c547bd9aa9bc7cb4a40331c559a34956a8fe9dda9a6cce"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
      "start_line": 192,
      "start_column": 2,
      "end_line": 192,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nh : c = d * a + b\nh' : b = a * d\n\u22a2 c = 2 * a * d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/01Rewriting.lean#L192"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "6b0d5cfa79d65b99baf772b2f0379975c00b4fe1dde98ad093e3d28503acc9f0"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 : X\nh : isInf s x\u2080\n\u22a2 x\u2080 \u2208 lowerBounds s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "fb48b482aa0856682fcacb4dea51b4ad8d30b953af0c7720d8cbb444aabda786"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 x\u2081 : X\nhx\u2080 : isInf s x\u2080\nhx\u2081 : isInf s x\u2081\n\u22a2 x\u2080 = x\u2081",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ed81f4a0fca149c4e2d4f2601720b079632accc9e4cc44547948fd7aa9538a35"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\nI : Set X \u2192 X\nh : isInfFun I\n\u22a2 isSupFun fun s => I (upperBounds s)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e246e54cdc4e25d003aa48ce1159528038601bda72ecf8b8a283dd9a9362b481"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 148,
      "start_column": 2,
      "end_line": 148,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\ns t : Set X\nh : s \u2286 t\n\u22a2 Inf t \u2264 Inf s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L148"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "3d7f7264d7733abd1f987d1949ad0c68569e4bcc98f85e4c412a2c2cd038934b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx x' : X\n\u22a2 x \u2264 x' \u2194 Inf {x, x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "be92e50e481731da569cbd7f0eb900290ea45e528159033b330e0954a489d36b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx : X\n\u22a2 Inf {x' | x \u2264 x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "489561954e76809c197271bd602e8a2166160596238361e21379495f38054f7c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 173,
      "start_column": 2,
      "end_line": 173,
      "end_column": 7
    },
    "debug_info": {
      "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isInf S (\u22c2\u2080 S)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L173"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a6093176ad78b0fa55c64b8611fb8c03c92b12eaed3f927dc3a2bbcdf77fc4cc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7
    },
    "debug_info": {
      "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isSup S (\u22c3\u2080 S)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a40887c50ab269636bd32d17efd62f8ce4673949aff59e07a0230296c7695955"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nY : Type u_2\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\n\u22a2 adjunction r l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "784c4d681e0f1ffb524b11b6c17486390c329fbc8be374651f3710c14ea5ecfd"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 248,
      "start_column": 2,
      "end_line": 248,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X Y : Type\ninst\u271d\u00b3 : PartialOrder X\ninst\u271d\u00b2 : CompleteLattice X\ninst\u271d\u00b9 : PartialOrder Y\ninst\u271d : CompleteLattice Y\nl : X \u2192 Y\nh : \u2200 (s : Set X), l (Sup s) = Sup (l '' s)\n\u22a2 adjunction l (mk_right l)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L248"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "70c0026107c402b07f2812a615d812915b8e891da23c7b6322d9d32a9bae980a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 383,
      "start_column": 2,
      "end_line": 383,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X Y : Type\nf : X \u2192 Y\nt : Set (Topology X)\n\u22a2 f\u204e (Sup t) = Sup (f\u204e '' t)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L383"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "656c3fc3ab9df2e87ac412b99e2f243fd8ee1214f053153e35b2c08b80bcafb8"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 396,
      "start_column": 2,
      "end_line": 396,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\nX : \u03b9 \u2192 Type\nT : \u03a0 (i : \u03b9), Topology (X i)\nZ : Type\nTZ : Topology Z\nf : Z \u2192 \u03a0 (i : \u03b9), X i\n\u22a2 Continuous TZ (ProductTopology T) f \u2194 \u2200 (i : \u03b9), Continuous TZ (T i) fun z => f z i",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L396"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "263aba893955dd29a3222b96894aca1518324e6a50f33c7a36740674214f4c94"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 422,
      "start_column": 4,
      "end_line": 422,
      "end_column": 9
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d : Group G\ns : Set (Subgroup G)\n\u22a2 1 \u2208 \u22c2 H \u2208 s, H.carrier",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L422"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c186b3b3f79bfdb8cb8013f818f0a3252faea0eb1475773541581572ffa2f0b3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 436,
      "start_column": 2,
      "end_line": 436,
      "end_column": 7
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d : Group G\n\u22a2 isInfFun SubgroupInf",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L436"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "16c306087fbed5df2e20cf4771a7e2e9bec1df661cb6ece6b11b26211cf4d935"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 449,
      "start_column": 2,
      "end_line": 449,
      "end_column": 7
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d : Group G\n\u22a2 adjunction generate forget",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L449"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "45f059b615def0bc21f423f85c71cbe400c192038d83189b3feb5ef1ecd51494"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 457,
      "start_column": 4,
      "end_line": 457,
      "end_column": 9
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Subgroup G'\n\u22a2 1 \u2208 \u21d1f \u207b\u00b9' H'.carrier",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L457"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d782436a4cf9f1eba597dfe6ae7c243e06fef5ed3745957340d22c4a6512285c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 474,
      "start_column": 2,
      "end_line": 474,
      "end_column": 7
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 adjunction (push f) (pull f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L474"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "848a88221b50f594184c0b37f1d804f3ec5df7f6a1efaa9b6df1b12de9623cbe"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 490,
      "start_column": 2,
      "end_line": 490,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl l' : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nh' : adjunction l' r\n\u22a2 l = l'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L490"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4d9727093500ea892db102c584888d894a3db80e2826660cea74274a134c3d56"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 495,
      "start_column": 2,
      "end_line": 495,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr r' : Y \u2192 X\nh : adjunction l r\nh' : adjunction l r'\n\u22a2 r = r'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L495"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "7a41dbeb8df1efc710d5af31bae9c9671e774809648ea3f54475aacd9e26736b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 502,
      "start_column": 2,
      "end_line": 502,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b2 : PartialOrder X\nY : Type\ninst\u271d\u00b9 : PartialOrder Y\nZ : Type\ninst\u271d : PartialOrder Z\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nl' : Y \u2192 Z\nr' : Z \u2192 Y\nh' : adjunction l' r'\n\u22a2 adjunction (l' \u2218 l) (r \u2218 r')",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L502"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "9da1e288f0382366952ec611bc92d3d6a7c8b743353cb1d1d97ba8d0d524253e"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 517,
      "start_column": 2,
      "end_line": 517,
      "end_column": 7
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 push f \u2218 generate = generate \u2218 Set.image \u21d1f",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L517"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "8435d8cd698bdfceeb8217861a91d74480d58eefa5607186cd3033e9fcdbe33b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 54,
      "start_column": 2,
      "end_line": 54,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 IndepSet A B \u2192 IndepSet B A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "2f9731105fae795b1ca7739f54772f72f05c51adec11b26fa333257973f8fd31"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 64,
      "start_column": 2,
      "end_line": 64,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B \u2192 IndepSet A B\u1d9c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ddadc8968c74f61b562b9d11dc06f3747e3e596bfe5d52314d62ebacd1c24b2b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 71,
      "start_column": 2,
      "end_line": 71,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B\u1d9c \u2194 IndepSet A B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "67addfe9d8c814b350ca38bee763cec3b650b9c3262e865cfe7f79eea442a813"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\nh : IndepSet A B\n\u22a2 IndepSet A\u1d9c B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "3577f3cf5999bad2f3b6bd7ce1a7b4b43afe49b10f7643e474cff5dfb1aa018b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 86,
      "start_column": 2,
      "end_line": 86,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA : Set \u03a9\nh : IndepSet A A\n\u22a2 \u2119 A = 0 \u2228 \u2119 A = 1",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L86"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "926e207c68bf5e0eee2705fbb68f26df59dede909b1f81f8c8ef961360bae260"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 108,
      "start_column": 2,
      "end_line": 108,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A = 0\n\u22a2 \u2119(A|B) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "212f9d566f3205e8383b7539fb3aef5fba81877c8733ec919faed61dcbe31141"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhB : \u2119 B = 0\n\u22a2 \u2119(A|B) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "fb467e8a702c20860b6ab5281b83e6c6694b2764003c2bd702f1823787f01990"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 126,
      "start_column": 2,
      "end_line": 126,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A \u2260 0\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "b9b6d794bf0fd543ef37805109dacd50932254d635086815acf843d35d79ff06"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 136,
      "start_column": 2,
      "end_line": 136,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "62759d0fbdfa04ae04a63e63ec6fd0e75081cac92966d39e10e50fa9921fb367"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 140,
      "start_column": 2,
      "end_line": 140,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nh : IndepSet B A\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L140"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e71ea4e4994260377362f7ab9f19a72614d1c65d2db29a224809e16a77bf1f14"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\n\u22a2 0 \u2264 a + b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "85509da8bde46d723c56ec116a334b4907932227a07badf164ea31cf48bcaee0"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nhab : a \u2264 b\nhcd : c \u2264 d\n\u22a2 a + c \u2264 b + d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "3b1089555a80cc325a67532287a0edd6d268c1867b9dccb8ca0fc637d0d39990"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : \u2200 (n : \u2115), u n = l\n\u22a2 seq_limit u l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f51bdd3ef5cef0938f1aa098b662d8c9e4ab9293e4d6b993c87d05613f6f3d68"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 90,
      "start_column": 2,
      "end_line": 90,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : seq_limit u l\nhl : l > 0\n\u22a2 \u2203 N, \u2200 n \u2265 N, u n \u2265 l / 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L90"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6364d6640c356bc88ffa68816c8c375a10af34f630025c14c6980e86d29e04a6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 146,
      "start_column": 2,
      "end_line": 146,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl l' : \u211d\n\u22a2 seq_limit u l \u2192 seq_limit u l' \u2192 l = l'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5b33a5c1ef3874031f3fab4e6b21b7e7bb1dbe446ce79180044fcd97fa7919bc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 161,
      "start_column": 2,
      "end_line": 161,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nM : \u211d\nh : is_seq_sup M u\nh' : non_decreasing u\n\u22a2 seq_limit u M",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L161"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "28ef10d7c175fa2e6ea6552770b9507dc76c47d53ae04700c59a92c30f976631"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 239,
      "start_column": 2,
      "end_line": 239,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nhu : CauchySequence u\nhl : cluster_point u l\n\u22a2 seq_limit u l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L239"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4de6998a49e29646ebbaeea23f3785ef9690cc9fff66f4152c603b032872c954"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 61,
      "start_column": 2,
      "end_line": 61,
      "end_column": 7
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\n\u22a2 IsTrue v \u22a4",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ecccb0e6df9670b5d97a10320bcf4772173f5c0bd5576a9426bb61e9fb74a8af"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 65,
      "start_column": 2,
      "end_line": 65,
      "end_column": 7
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 IsTrue v (A \u21d4 B) \u2194 (IsTrue v A \u2194 IsTrue v B)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L65"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a0f840df63e15439057b7521bdf33a12c5446670d81a8be1af13925867381097"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 72,
      "start_column": 2,
      "end_line": 72,
      "end_column": 7
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 Valid (~~A \u21d4 A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L72"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c40cb3b87752db627ed06f0bfc1d9e9b46018e1bc73dd83b7ef1cc3b26c1ed2d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~~A \u21d4 A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6169fe714e5d27b56699f26c0aa6e7ef5684ce6db8e580ff2fbf4a9ef78072a0"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 139,
      "start_column": 2,
      "end_line": 139,
      "end_column": 7
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (A || ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e981025cfcacb89dcd6244a88b683282276414dd4adc8b34b6611d2a39a60e2f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 146,
      "start_column": 2,
      "end_line": 146,
      "end_column": 7
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~(A && B) \u21d4 ~A || ~B)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5a74c7843caca4e3710b76569d4a6909699e80388cb9de80cfcfcca16816e57c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 158,
      "start_column": 2,
      "end_line": 158,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Formula\n\u0393 \u0394 : Set Formula\nh : \u0393 \u22a2 A\nh2 : \u0393 \u2286 \u0394\n\u22a2 \u0394 \u22a2 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L158"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "b14186637c0a77bf03232e739ab08d9546e6f14cf6821b88100b549e24f0f964"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 165,
      "start_column": 2,
      "end_line": 165,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 Insert.insert B \u0393 \u22a2 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L165"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "48ce864a03f707474b99089f447ae45277b3d1dd8cfe7ac37a1b25cfddbbcfee"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 170,
      "start_column": 2,
      "end_line": 170,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 insert (A \u21d2 B) \u0393 \u22a2 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "1231075a51ae17e2266eae7591b69c9175b837c4f912d30cac559f457d1ef444"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 174,
      "start_column": 2,
      "end_line": 174,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B : Formula\n\u0393 : Set Formula\nh1 : Provable (A \u21d2 B)\nh2 : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a2 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L174"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a8bc81a374100a209a5526800daca7238aeb6df805025e7e355f27a2c49d2ebb"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 180,
      "start_column": 2,
      "end_line": 180,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a8 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L180"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a84a62258e746b6f066cf1329098fc2cc38a8612df923293bd5261ac0d55df49"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Formula\nh : Provable A\n\u22a2 Valid A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c2205d9f50f1f04d953c9fe79ca96ff9ee75e18ac8c40d93769670a385ebea12"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\n\u22a2 eval v top = \u22a4",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "99efeed5557f8dafaff773b546ba0b450091c2c6482b62b2adaa841095010519"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 73,
      "start_column": 2,
      "end_line": 73,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 eval v (A \u21d4 B) = (eval v A \u21e8 eval v B) \u2293 (eval v B \u21e8 eval v A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ea4e3f0cd850382fdb7a240f0e210c67568cb8318e0d71351296d192993865d1"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 79,
      "start_column": 2,
      "end_line": 79,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type ?u.16048\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 Valid ~(A && ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e4ee464fba46aaa64d553d6212f4664b0995dc9db1a3ccbcd2f62457b6d273a4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 126,
      "start_column": 2,
      "end_line": 126,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type ?u.21261\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A || ~B \u21d2 ~(A && B))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "366b639d760eaf79eb4c11e0a411b22f1169ba867b78da31f145f95f3e94372b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 131,
      "start_column": 2,
      "end_line": 131,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type ?u.21285\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable ~(A && ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "7893b4193d726e8de8ff7cfb2c03d8ec9a6c05446f9ce9725ace15890f040de2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 136,
      "start_column": 2,
      "end_line": 136,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type ?u.21309\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A && ~B \u21d2 ~(A || B))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "73addb2e899f0e32fd7ab1d3f3523c9008a2c9166ee317c5415b1377acc0f744"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean",
      "start_line": 59,
      "start_column": 2,
      "end_line": 59,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_10\nM : Type u_11\nM' : Type u_12\ninst\u271d\u2076 : Ring R\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : AddCommGroup M'\ninst\u271d\u00b9 : Module R M\ninst\u271d : Module R M'\np : Submodule R M\nq : Submodule R M'\nhp : p.ClosedComplemented\nhq : q.ClosedComplemented\n\u22a2 (p.prod q).ClosedComplemented",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:14:52+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "2c7c42314aaa33cac1eb9386f14d9e2d51eb53117ebb0f8804f9899c5b9df2fa"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean",
      "start_line": 196,
      "start_column": 8,
      "end_line": 196,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_7\ninst\u271d\u2079 : RCLike \ud835\udd5c\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst\u271d\u2078 : NormedAddCommGroup E\ninst\u271d\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u2076 : NormedAddCommGroup F\ninst\u271d\u2075 : NormedSpace \ud835\udd5c F\ninst\u271d\u2074 : NormedAddCommGroup G\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c G\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace G\nf : E \u2192L[\ud835\udd5c] F\ng : F \u2192L[\ud835\udd5c] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (\u21d1g \u2218 \u21d1f))\nF' : Submodule \ud835\udd5c F := hf.complement\nthis\u271d : IsClosed \u2191(Submodule.map g F')\nthis : IsClosed \u2191hg.complement\nu : \u2115 \u2192 G\nu\u2080 : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u\u2080)\nhu : \u2200 (n : \u2115), \u2203 y \u2208 Submodule.map g F', \u2203 z \u2208 hg.complement, y + z = u n\nx : \u2115 \u2192 \u21a5(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => \u27e8y, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\ny : \u2115 \u2192 \u21a5hg.complement := fun n => (fun y x => (fun z x => \u27e8z, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\nn : \u2115\n\u22a2 u n = Classical.choose \u22ef + Classical.choose \u22ef",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L196"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T18:37:52+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "94086d77a447c82ac1c72c8862c2d9c06b8fa7d90e38614339bd0c6f3a611ada"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean",
      "start_line": 205,
      "start_column": 6,
      "end_line": 205,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_1\n\ud835\udd5c : Type u_7\ninst\u271d\u2079 : RCLike \ud835\udd5c\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst\u271d\u2078 : NormedAddCommGroup E\ninst\u271d\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u2076 : NormedAddCommGroup F\ninst\u271d\u2075 : NormedSpace \ud835\udd5c F\ninst\u271d\u2074 : NormedAddCommGroup G\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c G\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace G\nf : E \u2192L[\ud835\udd5c] F\ng : F \u2192L[\ud835\udd5c] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (\u21d1g \u2218 \u21d1f))\nF' : Submodule \ud835\udd5c F := hf.complement\nthis\u271d\u00b9 : IsClosed \u2191(Submodule.map g F')\nthis\u271d : IsClosed \u2191hg.complement\nu : \u2115 \u2192 G\nu\u2080 : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u\u2080)\nhu : \u2200 (n : \u2115), \u2203 y \u2208 Submodule.map g F', \u2203 z \u2208 hg.complement, y + z = u n\nx : \u2115 \u2192 \u21a5(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => \u27e8y, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\ny : \u2115 \u2192 \u21a5hg.complement := fun n => (fun y x => (fun z x => \u27e8z, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\nthis : \u2200 (n : \u2115), u n = \u2191(x n) + \u2191(y n)\n\u22a2 u\u2080 \u2208 \u2191(Submodule.map g F' + hg.complement)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-21T15:28:47+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "b4b145c4f61564d4e14aaf0e17474a39da2b65f38b3d78596ea67913616f83db"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
      "start_line": 394,
      "start_column": 4,
      "end_line": 394,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hinv\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\nhg'' : MDifferentiableAt J I (\u2191hf.localInverse.toPartialEquiv) (f x)\n\u22a2 mfderiv I I (\u2191hf.localInverse.toPartialEquiv \u2218 f) x =\n    (mfderiv J I (\u2191hf.localInverse.toPartialEquiv) (f x)).comp (mfderiv I J f x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L394"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "d72fdfb8292fb9a86900616f5f2998f98f61b09fe1e8e93a26678c5b798a7aa8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
      "start_line": 404,
      "start_column": 4,
      "end_line": 404,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hinv\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\nhf''' : MDifferentiableAt I J f (\u2191hf.localInverse.toPartialEquiv (f x))\nhg'' : MDifferentiableAt J I (\u2191hf.localInverse.toPartialEquiv) (f x)\n\u22a2 mfderiv J J (f \u2218 \u2191hf.localInverse.toPartialEquiv) (f x) =\n    (mfderiv I J f x).comp (mfderiv J I (\u2191hf.localInverse.toPartialEquiv) (f x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L404"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "62d6e76d5eadf086504c3e196da94004f95a22d1701dacbcaff12faf7208f89c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
      "start_line": 399,
      "start_column": 68,
      "end_line": 399,
      "end_column": 73
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\n\u22a2 MDifferentiableAt I J f (\u2191hf.localInverse.toPartialEquiv (f x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "d5cbfe136c1a55f26027cd9a745345bbfa82f275718db64c2458e0f634e1df08"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/MSplits.lean",
      "start_line": 90,
      "start_column": 2,
      "end_line": 90,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nG' : Type u_10\ninst\u271d\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_11\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace G N\nN' : Type u_14\ninst\u271d\u00b9 : TopologicalSpace N'\ninst\u271d : ChartedSpace G' N'\nf : M \u2192 M'\nx : M\ny : N\nhf : (mfderiv I I' f x).Splits\ng : N \u2192 N'\nhg : (mfderiv J J' g y).Splits\n\u22a2 (mfderiv (I.prod J) (I'.prod J') (Prod.map f g) (x, y)).Splits",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L90"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T21:07:14+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "c5033ce7ff464139bcf39200dbe0088781a3e32a21f4f58f3dfca1a6c0e18564"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/MSplits.lean",
      "start_line": 107,
      "start_column": 2,
      "end_line": 107,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : NormedSpace \ud835\udd5c E\nH : Type u_7\ninst\u271d\u00b3 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : ChartedSpace H M\nn : WithTop \u2115\u221e\ninst\u271d : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e \u2208 IsManifold.maximalAtlas I n M\nhx : x \u2208 (chartAt H x).source\n\u22a2 \u2191(extend_mfderiv_toContinousLinearEquiv he hx) = mfderiv I (modelWithCornersSelf \ud835\udd5c E) (\u2191(e.extend I)) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L107"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T11:03:10+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "7db8197ee2c0ae45ea50b8e6d02d6709b22197c18629d45cb2a94ea8a7b38736"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/MSplits.lean",
      "start_line": 117,
      "start_column": 79,
      "end_line": 117,
      "end_column": 84
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : NormedSpace \ud835\udd5c E\nH : Type u_7\ninst\u271d\u00b3 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : ChartedSpace H M\nn : WithTop \u2115\u221e\ninst\u271d : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e \u2208 IsManifold.maximalAtlas I n M\nhx : x \u2208 (chartAt H x).source\n\u22a2 \u2191(extend_symm_mfderiv_toContinousLinearEquiv he hx) =\n    mfderiv (modelWithCornersSelf \ud835\udd5c E) I (\u2191(e.extend I).symm) (\u2191(e.extend I) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L117"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T11:03:10+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "c67bc8601452e8f3de4bc913957bdaa6eb1c67611d8faf7949fd4da14881955c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/MSplits.lean",
      "start_line": 200,
      "start_column": 4,
      "end_line": 200,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_11\ninst\u271d\u2078 : TopologicalSpace M\ninst\u271d\u2077 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2076 : TopologicalSpace M'\ninst\u271d\u2075 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u2074 : TopologicalSpace N\ninst\u271d\u00b3 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace E'\ng : M' \u2192 N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 \u2264 n\nh : MSplitsAt I J (g \u2218 f) x\nhg' : IsLocalDiffeomorphAt J I' n (\u2191hg.localInverse.toPartialEquiv) (g (f x))\nthis : \u2191hg.localInverse.toPartialEquiv \u2218 g =\u1da0[nhds (f x)] id\n\u22a2 ContinuousAt (\u2191hg.localInverse.toPartialEquiv) ((g \u2218 f) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L200"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:02:21+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "b0859a83d4cc1553a7ae66b0c60158776191f41a78cdb675a6d5cb7ca676a354"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/MSplits.lean",
      "start_line": 204,
      "start_column": 4,
      "end_line": 204,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_11\ninst\u271d\u2078 : TopologicalSpace M\ninst\u271d\u2077 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2076 : TopologicalSpace M'\ninst\u271d\u2075 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u2074 : TopologicalSpace N\ninst\u271d\u00b3 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace E'\ng : M' \u2192 N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 \u2264 n\nh : MSplitsAt I J (g \u2218 f) x\nhg' : IsLocalDiffeomorphAt J I' n (\u2191hg.localInverse.toPartialEquiv) (g (f x))\nthis : \u2191hg.localInverse.toPartialEquiv \u2218 g =\u1da0[nhds (f x)] id\naux : ContinuousAt (\u2191hg.localInverse.toPartialEquiv \u2218 g \u2218 f) x\n\u22a2 ContinuousAt f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L204"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:02:21+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "972f91ca99322b411e3808955a677a9c828d82b52cd9a61b537b9e03ba2cc17f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 120,
      "start_column": 6,
      "end_line": 120,
      "end_column": 11
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2075 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf g : M \u2192 M'\nx : M\nh : IsImmersionAt F I I' n f x\nh' : f =\u1da0[\ud835\udcdd x] g\ns : Set M\nhxs : s \u2208 \ud835\udcdd x\nhfg : EqOn f g s\n\u22a2 EqOn (\u2191(h.codChart.extend I') \u2218 g \u2218 \u2191(h.domChart.extend I).symm)\n    (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L120"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T17:10:59+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "ba961a7a2e1f494673b051066af405a069dfac693fa20110aa7f2353d7c0e917"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 131,
      "start_column": 2,
      "end_line": 131,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b2\u2070 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2079 : NormedAddCommGroup E\ninst\u271d\u00b9\u2078 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E'\nF : Type u_4\nF' : Type u_5\ninst\u271d\u00b9\u2075 : NormedAddCommGroup F\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c F\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F'\nH : Type u_6\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_8\ninst\u271d\u2079 : TopologicalSpace G\nG' : Type u_9\ninst\u271d\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_10\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nN : Type u_12\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace G N\nN' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace N'\ninst\u271d : ChartedSpace G' N'\nn : WithTop \u2115\u221e\nx : M\nf : M \u2192 N\ng : M' \u2192 N'\nx' : M'\nh : IsImmersionAt F I J n f x\nh' : IsImmersionAt F' I' J' n g x'\n\u22a2 IsImmersionAt (F \u00d7 F') (I.prod I') (J.prod J') n (Prod.map f g) (x, x')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "b7345ca931ac6fa8305cc9be135c9ae36c98efede92d5387a3761cb2f153fa46"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 136,
      "start_column": 2,
      "end_line": 136,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2075 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\nh : IsImmersionAt F I I' n f x\n\u22a2 ContinuousWithinAt f h.domChart.source x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-21T23:44:53+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "9478dd660824743cf15c31d6a0a9c4f1ca790ecefc57db493c76d59438bbf368"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 156,
      "start_column": 6,
      "end_line": 156,
      "end_column": 11
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b9 : IsManifold I n M\ninst\u271d : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u21d1h.equiv \u2218 fun x => (x, 0))\n    (h.domChart.extend I).target\n\u22a2 ContDiffWithinAt \ud835\udd5c n (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (\u2191(h.domChart.extend I) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "79ba46067f3b2475163163133b64cc0beb679d85631bc48b63076837c5e07a8b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 163,
      "start_column": 4,
      "end_line": 163,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case H\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b9 : IsManifold I n M\ninst\u271d : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u21d1h.equiv \u2218 fun x => (x, 0))\n    (h.domChart.extend I).target\nthis :\n  ContDiffWithinAt \ud835\udd5c n (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (\u2191(h.domChart.extend I) x)\n\u22a2 \u2191h.domChart.symm \u2218 \u2191I.symm \u207b\u00b9' h.domChart.source \u2286 \u2191I.symm \u207b\u00b9' h.domChart.target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L163"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "0dcd3a311d360be3daf0f26af23a541a917d3a2066628c022557dd49013993ef"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 185,
      "start_column": 8,
      "end_line": 185,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\n\u22a2 range \u21d1((ContinuousLinearMap.id \ud835\udd5c E).prod 0) = univ.prod {0}",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L185"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:13:02+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "9687799f54dfe3d0835ba761536be9a6547ee01f0a2606269b1027e469f9c69e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 209,
      "start_column": 20,
      "end_line": 209,
      "end_column": 25
    },
    "debug_info": {
      "goal": "case left\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d : rhs.Splits\nthis : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\n\u22a2 range \u2191I \u2208 \ud835\udcdd (\u2191I (\u2191h.domChart x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T00:32:59+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "096e6150e527d883b8fb2a90e2c0988a3d508cda84e78d005721c7c490daa5cb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 209,
      "start_column": 20,
      "end_line": 209,
      "end_column": 25
    },
    "debug_info": {
      "goal": "case right\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d : rhs.Splits\nthis : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\n\u22a2 \u2191I.symm \u207b\u00b9' h.domChart.target \u2208 \ud835\udcdd (\u2191I (\u2191h.domChart x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T00:32:59+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "85f3a21ce68bd1036a4fd476a82e5460d9b4eeb229f3cecc5ffebf258f735186"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 217,
      "start_column": 4,
      "end_line": 217,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d\u00b2 : rhs.Splits\nthis\u271d\u00b9 : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\nthis\u271d :\n  MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u2191(h.domChart.extend I) x)\nthis : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)) x\n\u22a2 \u2191(h.codChart.extend I') \u2218 f =\u1da0[\ud835\udcdd x] \u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L217"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:20:40+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "961b3e77a7aa338f0e991572e05e09d21fef07eba7cdbf1d34dc48d0a3ace21d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 222,
      "start_column": 2,
      "end_line": 222,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d\u2074 : rhs.Splits\nthis\u271d\u00b3 : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\nthis\u271d\u00b2 :\n  MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u2191(h.domChart.extend I) x)\nthis\u271d\u00b9 : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)) x\nthis\u271d : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f) x\nthis : MSplitsAt I I' (\u2191(h.codChart.extend I').symm \u2218 \u2191(h.codChart.extend I') \u2218 f) x\n\u22a2 f =\u1da0[\ud835\udcdd x] \u2191(h.codChart.extend I').symm \u2218 \u2191(h.codChart.extend I') \u2218 f",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L222"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:20:40+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "bdc729babb4df6531a9ccb2ee11c3a971a1a6ebb4f0c8e0f4edb86295a30d24e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 229,
      "start_column": 2,
      "end_line": 229,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : MSplitsAt I I' f x\n\u22a2 IsImmersionAt F I I' n f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-17T22:40:42+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "3ed9e6f40fa6067752db434725cb0589a978fc546c48079a2b9fadaaa77bdb96"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 291,
      "start_column": 2,
      "end_line": 291,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b3 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2070 : NormedAddCommGroup E'\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2078 : NormedAddCommGroup F\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2076 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2075 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2074 : TopologicalSpace M\ninst\u271d\u00b3 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d : Nonempty M\nh : IsImmersion F I I' n f\ninhabited_h : Inhabited M\n\u22a2 \u2203 domCharts codCharts,\n    \u2200 (x : M),\n      x \u2208 (domCharts x).source \u2227\n        \u2200 (x : M),\n          f x \u2208 (codCharts x).source \u2227\n            \u2200 (x : M),\n              domCharts x \u2208 IsManifold.maximalAtlas I n M \u2227\n                \u2200 (x : M),\n                  codCharts x \u2208 IsManifold.maximalAtlas I' n M' \u2227\n                    \u2200 (x : M),\n                      EqOn (\u2191((codCharts x).extend I') \u2218 f \u2218 \u2191((domCharts x).extend I).symm)\n                        (\u21d1\u22ef.equiv \u2218 fun x => (x, 0)) ((domCharts x).extend I).target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L291"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T16:47:11+01:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "60b935ede5d9d2f87cf2401f9455a18eb15ed593b3c8fd86f1fa7433987a4303"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
      "start_line": 327,
      "start_column": 29,
      "end_line": 327,
      "end_column": 34
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b2\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b2\u2075 : NormedAddCommGroup E\ninst\u271d\u00b2\u2074 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b2\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b2\u00b2 : NormedSpace \ud835\udd5c E'\nF : Type u_4\nF' : Type u_5\ninst\u271d\u00b2\u00b9 : NormedAddCommGroup F\ninst\u271d\u00b2\u2070 : NormedSpace \ud835\udd5c F\ninst\u271d\u00b9\u2079 : NormedAddCommGroup F'\ninst\u271d\u00b9\u2078 : NormedSpace \ud835\udd5c F'\nH : Type u_6\ninst\u271d\u00b9\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u2076 : TopologicalSpace H'\nG : Type u_8\ninst\u271d\u00b9\u2075 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_10\ninst\u271d\u00b9\u2074 : TopologicalSpace M\ninst\u271d\u00b9\u00b3 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9\u00b9 : ChartedSpace H' M'\nN : Type u_12\ninst\u271d\u00b9\u2070 : TopologicalSpace N\ninst\u271d\u2079 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2078 : IsManifold I n M\ninst\u271d\u2077 : IsManifold I' n M'\ninst\u271d\u2076 : CompleteSpace E\ninst\u271d\u2075 : CompleteSpace E'\ninst\u271d\u2074 : CompleteSpace F\ninst\u271d\u00b3 : CompleteSpace F'\ninst\u271d\u00b2 : IsManifold I 1 M\ninst\u271d\u00b9 : IsManifold I' 1 M'\ninst\u271d : IsManifold J n N\ng : M' \u2192 N\nhg : IsImmersion F' I' J n g\nhf : IsImmersion F I I' n f\n\u22a2 IsManifold J 1 N",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L327"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:15:03+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "986cce4125b5e98ed02fa8900581dd248e58e5481b1f13a25374b2e39b8ff414"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-hidden-openClassical",
      "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "MathlibTest/LintStyle.lean",
      "start_line": 258,
      "start_column": 80,
      "end_line": 258,
      "end_column": 85
    },
    "debug_info": {
      "goal": "this : \u2115 \u2192 True\n\u22a2 Set.univ = \u22c3 i, \u22c3 j, {0, j}",
      "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L258"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2024-11-27T12:13:29+00:00",
      "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
    },
    "id": "f351a6e824f8f3ee292b3381888a5cab3079e131d00897202025514e936b6992"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-hidden-openClassical",
      "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "MathlibTest/LintStyle.lean",
      "start_line": 259,
      "start_column": 53,
      "end_line": 259,
      "end_column": 58
    },
    "debug_info": {
      "goal": "this\u271d : \u2115 \u2192 True\nthis : Set.univ = \u22c3 i, \u22c3 j, {0, j}\n\u22a2 \u2203 m, \u22c3 i, Set.univ = \u2205",
      "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2024-11-27T12:13:29+00:00",
      "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
    },
    "id": "aaf32d27c1a0b931e36df890748a6031a30000c084331b157cd3e31f53d6d539"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 365,
      "start_column": 22,
      "end_line": 365,
      "end_column": 27
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d \u00ab$a\u2082\u00bb \u00ab$a\u2081\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u2081\u00bb + Nat.rawCast 0 = \u00ab$a\u2081\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L365"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "1ef5aef31b60b2bd2ea607397c7bb58be8b365d4b99166c2781f8827aa6fdb9a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 368,
      "start_column": 22,
      "end_line": 368,
      "end_column": 27
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb $a\u2082\u271d \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 Nat.rawCast 0 + \u00ab$a\u2082\u00bb = \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "94f99dc277db30fabcf3fc1e314d2d1d5233ba6411cdb446c46a3eab97e15849"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 331,
      "start_column": 38,
      "end_line": 331,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n$v\u271d : Level\n$R\u271d : Type v\u271d\n$sR\u271d : CommSemiring $R\u271d\n$r\u271d : $R\u271d\n$a\u271d $b\u271d : \u00ab$A\u00bb\n\u00ab$sAlg\u00bb : Algebra $R\u271d \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : $b\u271d + 1 = $expr\u271d\n\u22a2 $r\u271d \u2022 $a\u271d + $b\u271d + 1 = $r\u271d \u2022 $a\u271d + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L331"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "21ced7a698401c53c9861c41dc979685ad7927114503f9c805b152b4f48b6045"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 334,
      "start_column": 38,
      "end_line": 334,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n$v\u271d : Level\n$R\u271d : Type v\u271d\n$sR\u271d : CommSemiring $R\u271d\n$r\u271d : $R\u271d\n$a\u271d $b\u271d : \u00ab$A\u00bb\n\u00ab$sAlg\u00bb : Algebra $R\u271d \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : $b\u271d + 1 = $expr\u271d\n\u22a2 1 + ($r\u271d \u2022 $a\u271d + $b\u271d) = $r\u271d \u2022 $a\u271d + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "17f3befda0ab50e10b0c8bb77a822491d988d08cb6498ceebc3c2b56c8ab6ac2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 343,
      "start_column": 41,
      "end_line": 343,
      "end_column": 46
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = $expr\u271d\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L343"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e95546baf981dcb75849351adfcf6f79821665c157737f4473060816812c1db2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 347,
      "start_column": 41,
      "end_line": 347,
      "end_column": 46
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2082\u00bb + (\u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb) = $expr\u271d\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L347"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "304482c04da44010c20c8cb18abdd332adf8a5a1e3d0aff8123b14420f21a555"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 352,
      "start_column": 38,
      "end_line": 352,
      "end_column": 43
    },
    "debug_info": {
      "goal": "$u\u271d : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2081\u00bb + \u00ab$t\u2082\u00bb = $expr\u271d\n\u00ab$u\u00bb : Level\n\u00ab$R\u00bb : Type u\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$par\u00bb : \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L352"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f101b598c58371579d75e4dc168fa778d80b824c40f25c57b6bfc08dd2b2cc8b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 416,
      "start_column": 24,
      "end_line": 416,
      "end_column": 29
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 Nat.rawCast 0 * \u00ab$a\u2082\u00bb = Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L416"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "0575aaa2b15dd73ae7ba285d4245c4a2e5d20eca43d2ca6984cac44df8dafb38"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 365,
      "start_column": 32,
      "end_line": 365,
      "end_column": 37
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 1 * \u00ab$a\u2082\u00bb = 1 \u2022 \u00ab$a\u2082\u00bb + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L365"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e30559227cd5b7eebc23360e2b21ac4b561459d7f7b98949f5fcdc617be2b148"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 424,
      "start_column": 38,
      "end_line": 424,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u00bb : Type v\u271d\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb \u00ab$t\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb \u00ab$a'\u00bb : \u00ab$A\u00bb\n\u00ab$pa'\u00bb : \u00ab$a\u00bb * \u00ab$a\u2082\u00bb = \u00ab$a'\u00bb\n\u00ab$t'\u00bb : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : \u00ab$t\u00bb * \u00ab$a\u2082\u00bb = \u00ab$t'\u00bb\n\u22a2 (\u00ab$r\u00bb \u2022 \u00ab$a\u00bb + \u00ab$t\u00bb) * \u00ab$a\u2082\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a'\u00bb + \u00ab$t'\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L424"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "f6c4834f885c7e7fca5de16dd9672ca8bc0802def0f32c1f6d9bad5e4b8e06be"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 432,
      "start_column": 24,
      "end_line": 432,
      "end_column": 29
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2082\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u2081\u00bb * Nat.rawCast 0 = Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L432"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "2080ab0026588630603ca85fd29eecd73d56ec12c94c71c041576b3092175bcf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 451,
      "start_column": 37,
      "end_line": 451,
      "end_column": 42
    },
    "debug_info": {
      "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb \u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$R\u2081\u00bb : Type u\u2082 := \u00ab$R\u2082\u00bb\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2081'\u00bb : \u00ab$R\u2082\u00bb := \u00ab$r\u2081\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb * \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L451"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-08T17:33:25+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f52ad47f2959f73e0d6f68ba4b35c0cb5f83f9d58adc26eeb5ff41983dd03253"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 552,
      "start_column": 45,
      "end_line": 552,
      "end_column": 50
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$R\u00bb : Type u\n\u00ab$A\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$S\u00bb : Type v\u271d\n\u00ab$sS\u00bb : CommSemiring \u00ab$S\u00bb\n\u00ab$s\u00bb : \u00ab$S\u00bb\n\u00ab$a\u00bb $b\u271d : \u00ab$A\u00bb\n\u00ab$sSA\u00bb : Algebra \u00ab$S\u00bb \u00ab$A\u00bb\n\u00ab$et\u00bb : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$r\u00bb \u2022 $b\u271d = \u00ab$et\u00bb\n\u00ab$u\u2081\u00bb : Level\n\u00ab$R\u2081\u00bb : Type u\u2081\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sR\u2081A\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u2081\u00bb : \u00ab$s\u00bb \u2022 \u00ab$r\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u00bb\n\u22a2 \u00ab$r\u00bb \u2022 (\u00ab$s\u00bb \u2022 \u00ab$a\u00bb + $b\u271d) = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u00bb + \u00ab$et\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L552"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "afd5daa4c3ca42aa080901cd9553277d665a3136aa7551403719c13a7882bf00"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Polynomial.lean",
      "start_line": 530,
      "start_column": 9,
      "end_line": 530,
      "end_column": 14
    },
    "debug_info": {
      "goal": "a : \u211a\n\u22a2 a + a = 2 * a",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Polynomial.lean#L530"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-02-25T18:05:11+01:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "ddf72bb6ac2cf2c05db381d9ca1375187d640bb059f5c12d727fdcf11446862c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Polynomial.lean",
      "start_line": 530,
      "start_column": 9,
      "end_line": 530,
      "end_column": 14
    },
    "debug_info": {
      "goal": "a : \u211a\n\u22a2 a * a = a ^ 2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Polynomial.lean#L530"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-02-25T18:05:11+01:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "54c8904e9c3eec29624b69fcded63c952e134526ae499f399817b4a9c96766c0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25006 \u2208 \u2191ys then ?m.25035 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
    },
    "id": "4c5cb6906595728836d3da67298bfe26022968ff57cd1e368ad752e9058524b0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25006 \u2208 \u2191ys then ?m.25035 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
    },
    "id": "368788f8c327f5d1b524634ac8b5dd12311f38881459b2fb944f94afd96dd0a0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 68,
      "start_column": 14,
      "end_line": 68,
      "end_column": 19
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 \u2200 (x y : E \u00d7 G),\n    (Equiv.prodUnique E G).toFun (x + y) = (Equiv.prodUnique E G).toFun x + (Equiv.prodUnique E G).toFun y",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T22:02:51+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "ba7962a1180548d3c6b1b39f21295df2c71c15e0647ff09c2b2f2124a8d3769f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 69,
      "start_column": 15,
      "end_line": 69,
      "end_column": 20
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 \u2200 (m : \ud835\udd5c) (x : E \u00d7 G), (Equiv.prodUnique E G).toFun (m \u2022 x) = (RingHom.id \ud835\udd5c) m \u2022 (Equiv.prodUnique E G).toFun x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T22:02:51+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "173f5069843545787c030fbdd899c20d1030d0ad4dc2e6e3b7831f7e3637a1a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 83,
      "start_column": 4,
      "end_line": 83,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 Continuous \u21d1(Equiv.prodUnique E G).symm",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "f09d7dfb579135ab11ab68696e9b902e9e4fb39a5fd53da61b3cd8ab89a74b21"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 95,
      "start_column": 81,
      "end_line": 95,
      "end_column": 86
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2075 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup E\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c E\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nx : E\n\u22a2 (prodUnique \ud835\udd5c E).symm x = (x, sorry)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "1ea2b10ac8676611e0c87cdfa6390c7385e0d5f578263b28d28fc186f6588511"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 119,
      "start_column": 16,
      "end_line": 119,
      "end_column": 21
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nh : SliceModel F I I'\n\u22a2 \u2191(J.prod I') \u2218 Prod.map id (SliceModel.map F I I') =\n    \u21d1(let sdf := SliceModel.equiv I I';\n        sorry) \u2218\n      (fun x => (x, 0)) \u2218 \u2191(J.prod I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L119"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "6a5133f0e83a8402fa65a0cb23bbd2f869f4fab26b37890f8d5ae9c3a659a00d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 126,
      "start_column": 16,
      "end_line": 126,
      "end_column": 21
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nh : SliceModel F I I'\n\u22a2 \u2191(I'.prod J) \u2218 Prod.map (SliceModel.map F I I') id = \u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(I.prod J)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "eb41f86ab8afe3880384c1a6fd5a01be4a3381f23e5d03297468f6b7b291a149"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 164,
      "start_column": 6,
      "end_line": 164,
      "end_column": 11
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : Nonempty H\n\u03c6 : PartialHomeomorph M' H'\nf : M \u2192 M'\ninst\u271d : Nonempty M\nh : SliceModel F I I'\nhf : IsEmbedding f\nhyp : \u03c6.source \u2286 range f\n\u22a2 ContinuousOn (Function.extend f id fun x => Classical.arbitrary M) (range f)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T16:41:06+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "0dac06d436277c25a07b756e98a9e44909ec08a760917518f6ef101230ba39c4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 337,
      "start_column": 4,
      "end_line": 337,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case left\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : IsManifold I' n M'\nh : SliceModel F I I'\ninst\u271d\u00b9 : Nonempty H\ninst\u271d : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\n\u22a2 ContDiffOn \ud835\udd5c n\n    (\u2191I \u2218\n      ((h.inverse \u2218 \u2191(chartAt H' (emb n h x')) \u2218 emb n h) \u2218\n          (extend (emb n h) id fun x => Classical.arbitrary M) \u2218\n            \u2191(chartAt H' (emb n h x)).symm \u2218 SliceModel.map F I I') \u2218\n        \u2191I.symm)\n    (\u2191I.symm \u207b\u00b9' (SliceModel.map F I I' \u207b\u00b9' (chartAt H' (emb n h x)).target) \u2229\n        \u2191I.symm \u207b\u00b9'\n          ((extend (emb n h) id fun x => Classical.arbitrary M) \u2218\n              \u2191(chartAt H' (emb n h x)).symm \u2218 SliceModel.map F I I' \u207b\u00b9'\n            (emb n h \u207b\u00b9' (chartAt H' (emb n h x')).source)) \u2229\n      range \u2191I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L337"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T19:38:29+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "c579f4b72707f4af460ad7abbda22e76ac31a89f741f5ff826c6563d1456d754"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
      "start_line": 340,
      "start_column": 2,
      "end_line": 340,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case right\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : IsManifold I' n M'\nh : SliceModel F I I'\ninst\u271d\u00b9 : Nonempty H\ninst\u271d : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\nX : M' := emb n h x\nX' : M' := emb n h x'\n\u22a2 { property := fun f s => ContDiffOn \ud835\udd5c n (\u2191I \u2218 f \u2218 \u2191I.symm) (\u2191I.symm \u207b\u00b9' s \u2229 range \u2191I), comp := \u22ef, id_mem := \u22ef,\n        locality := \u22ef, congr := \u22ef }.property\n    (\u2191((inst.myChart x).symm \u226b\u2095 inst.myChart x').symm) ((inst.myChart x).symm \u226b\u2095 inst.myChart x').target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L340"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T19:38:29+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "139bfe861986eda0e69845d32f898eab3561fc586db237733b0e182f035803d9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
      "start_line": 30,
      "start_column": 60,
      "end_line": 30,
      "end_column": 65
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsNonloop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y (insert e s) = summand (M \uff0f {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "71f9f703d175987ac21dc8a115393be772a88d9a1277b970c7830b27bbf3846e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
      "start_line": 33,
      "start_column": 70,
      "end_line": 33,
      "end_column": 75
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsLoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y (insert e s) = (y - 1) * summand (M \uff0f {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "41324751a40fb3c4711ef762eb0172c2f64dbb5622d30b0d1c8f73e4a686ab86"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
      "start_line": 36,
      "start_column": 49,
      "end_line": 36,
      "end_column": 54
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : \u00acM.IsColoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y s = summand (M \uff3c {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "596d86d173f26419af96e80de1885015a4554748e982fdb2f71c491862b7ec80"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
      "start_line": 39,
      "start_column": 59,
      "end_line": 39,
      "end_column": 64
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsColoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y s = (x - 1) * summand (M \uff3c {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "2b7d561b710a2fb41774deb686cac812c13cf12b63d9352492101a8956477e3b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f16d734974ce142a2d4897988e257460e0156c9b509fbcb490aa29a0d631f0c7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70ed2e7ecfab37f75b3ee0cceece0f0e3479bc791f74a440216a35de4ae16fe7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/Regular/Category.lean",
      "start_line": 67,
      "start_column": 14,
      "end_line": 67,
      "end_column": 19
    },
    "debug_info": {
      "goal": "R : Type u\ninst\u271d\u00b3 : CommRing R\nM : ModuleCat R\nC : Type u\ninst\u271d\u00b2 : Category.{v, u} C\ninst\u271d\u00b9 : Abelian C\ninst\u271d : HasExt C\nX Y : C\n\u22a2 \u2200 (x y : Ext X Y 0), homEquiv\u2080.toFun (x + y) = homEquiv\u2080.toFun x + homEquiv\u2080.toFun y",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "7e20ae9362953f1e16980a52fbc2d71c5708a4552d45d3e3eded8ef89b61558a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/Regular/Category.lean",
      "start_line": 81,
      "start_column": 15,
      "end_line": 81,
      "end_column": 20
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : Ring R\ninst\u271d : Linear R C\nX Y : C\n\u22a2 \u2200 (m : R) (x : Ext X Y 0), (homEquiv\u2080_hom X Y).toFun (m \u2022 x) = (RingHom.id R) m \u2022 (homEquiv\u2080_hom X Y).toFun x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "c670d4377e4555381062f401ea5906c424124b8d9c0204fc874af4dd5c882220"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/Regular/Category.lean",
      "start_line": 93,
      "start_column": 18,
      "end_line": 93,
      "end_column": 23
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u03b1 : Ext X Y a\n\u22a2 \u2200 (x y : Ext Y Z b), \u03b1.comp (x + y) h = \u03b1.comp x h + \u03b1.comp y h",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L93"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "b882c720e1280aa726cbe584960e70b808fc81e072f98e9065f6c2008456f6d4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/Regular/Category.lean",
      "start_line": 94,
      "start_column": 19,
      "end_line": 94,
      "end_column": 24
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u03b1 : Ext X Y a\n\u22a2 \u2200 (m : R) (x : Ext Y Z b), \u03b1.comp (m \u2022 x) h = (RingHom.id R) m \u2022 \u03b1.comp x h",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L94"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "fafecbde3bb919f22939a4a03c47b33ef695ad647b16ae555f0aed1a6a1fc8f9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/Regular/Category.lean",
      "start_line": 95,
      "start_column": 14,
      "end_line": 95,
      "end_column": 19
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u22a2 \u2200 (x y : Ext X Y a),\n    { toFun := fun \u03b2 => (x + y).comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } =\n      { toFun := fun \u03b2 => x.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } +\n        { toFun := fun \u03b2 => y.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef }",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "49ad769ac8de9aca932340b8c946afa02391e2571a0fdd21a4c4b0460ac23105"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/Regular/Category.lean",
      "start_line": 96,
      "start_column": 15,
      "end_line": 96,
      "end_column": 20
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u22a2 \u2200 (m : R) (x : Ext X Y a),\n    { toFun := fun \u03b2 => (m \u2022 x).comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } =\n      (RingHom.id R) m \u2022 { toFun := fun \u03b2 => x.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef }",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L96"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "efca452d6c486187ba3cd0cb05ea127d1a804352a47fd8c4b4e3f95067d88a28"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
      "start_line": 277,
      "start_column": 38,
      "end_line": 277,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\nx : M\nhdiff : Function.Bijective \u21d1(mfderiv I J f x)\n\u22a2 IsLocalDiffeomorphAt I J n f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "ee81358057c935f84a117a2766d854070f08222af30bb7922d37f7af6477a491"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
      "start_line": 322,
      "start_column": 4,
      "end_line": 322,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\ud835\udd5c\u271d : Type u_1\ninst\u271d\u00b3\u2079 : NontriviallyNormedField \ud835\udd5c\u271d\nE\u271d : Type u_2\ninst\u271d\u00b3\u2078 : NormedAddCommGroup E\u271d\ninst\u271d\u00b3\u2077 : NormedSpace \ud835\udd5c\u271d E\u271d\nF\u271d : Type u_3\ninst\u271d\u00b3\u2076 : NormedAddCommGroup F\u271d\ninst\u271d\u00b3\u2075 : NormedSpace \ud835\udd5c\u271d F\u271d\nH\u271d : Type u_4\ninst\u271d\u00b3\u2074 : TopologicalSpace H\u271d\nG\u271d : Type u_5\ninst\u271d\u00b3\u00b3 : TopologicalSpace G\u271d\nI\u271d : ModelWithCorners \ud835\udd5c\u271d E\u271d H\u271d\nJ\u271d\u00b9 : ModelWithCorners \ud835\udd5c\u271d F\u271d G\u271d\nM\u271d : Type u_6\ninst\u271d\u00b3\u00b2 : TopologicalSpace M\u271d\ninst\u271d\u00b3\u00b9 : ChartedSpace H\u271d M\u271d\nN\u271d\u00b9 : Type u_7\ninst\u271d\u00b3\u2070 : TopologicalSpace N\u271d\u00b9\ninst\u271d\u00b2\u2079 : ChartedSpace G\u271d N\u271d\u00b9\nn\u271d : WithTop \u2115\u221e\nf\u271d : M\u271d \u2192 N\u271d\u00b9\ns : Set M\u271d\nx\u271d : M\u271d\n\ud835\udd5c : Type u_8\ninst\u271d\u00b2\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_9\ninst\u271d\u00b2\u2077 : NormedAddCommGroup E\ninst\u271d\u00b2\u2076 : NormedSpace \ud835\udd5c E\nE' : Type u_10\ninst\u271d\u00b2\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b2\u2074 : NormedSpace \ud835\udd5c E'\nF : Type u_11\ninst\u271d\u00b2\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b2\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_12\ninst\u271d\u00b2\u00b9 : TopologicalSpace H\nH' : Type u_13\ninst\u271d\u00b2\u2070 : TopologicalSpace H'\nG : Type u_14\ninst\u271d\u00b9\u2079 : TopologicalSpace G\nG' : Type u_15\ninst\u271d\u00b9\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ\u271d : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_16\ninst\u271d\u00b9\u2077 : TopologicalSpace M\ninst\u271d\u00b9\u2076 : ChartedSpace H M\nM'\u271d : Type u_17\ninst\u271d\u00b9\u2075 : TopologicalSpace M'\u271d\ninst\u271d\u00b9\u2074 : ChartedSpace H' M'\u271d\nN\u271d : Type u_18\ninst\u271d\u00b9\u00b3 : TopologicalSpace N\u271d\ninst\u271d\u00b9\u00b2 : ChartedSpace G N\u271d\nN'\u271d : Type u_19\ninst\u271d\u00b9\u00b9 : TopologicalSpace N'\u271d\ninst\u271d\u00b9\u2070 : ChartedSpace G' N'\u271d\nn : WithTop \u2115\u221e\nJ : ModelWithCorners \ud835\udd5c E' H\nM' : Type u_20\nM'' : Type u_21\nN : Type u_22\ninst\u271d\u2079 : TopologicalSpace M'\ninst\u271d\u2078 : ChartedSpace H M'\ninst\u271d\u2077 : TopologicalSpace M''\ninst\u271d\u2076 : ChartedSpace H M''\ninst\u271d\u2075 : TopologicalSpace N\ninst\u271d\u2074 : ChartedSpace H N\nN' : Type u_23\ninst\u271d\u00b3 : TopologicalSpace N'\ninst\u271d\u00b2 : ChartedSpace H N'\ninst\u271d\u00b9 : FiniteDimensional \ud835\udd5c E\ninst\u271d : FiniteDimensional \ud835\udd5c E'\nx : M \u00d7 N \u2295 M' \u00d7 N\nf : M \u00d7 N \u2295 M' \u00d7 N \u2243 (M \u2295 M') \u00d7 N := (Equiv.sumProdDistrib M M' N).symm\nthis : ContMDiff (I.prod J) (I.prod J) n \u21d1f\n\u22a2 Function.Injective \u21d1(mfderiv (I.prod J) (I.prod J) (\u21d1f) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L322"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "b50ebc5f597441fd27a957da6dbd55b366fc9713892894016f10afef2b6f0dbe"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
      "start_line": 337,
      "start_column": 2,
      "end_line": 337,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_8\ninst\u271d\u00b9\u00b3 : NontriviallyNormedField \ud835\udd5c\nE : Type u_9\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E\nE' : Type u_10\ninst\u271d\u00b9\u2070 : NormedAddCommGroup E'\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\nH : Type u_12\ninst\u271d\u2078 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_16\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nn : WithTop \u2115\u221e\nJ : ModelWithCorners \ud835\udd5c E' H\nM' : Type u_20\nN : Type u_22\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H M'\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace H N\ninst\u271d\u00b9 : FiniteDimensional \ud835\udd5c E\ninst\u271d : FiniteDimensional \ud835\udd5c E'\n\u22a2 (prodSumDistrib I M n J M' N).toEquiv = (Equiv.sumProdDistrib M M' N).symm",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L337"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "c3dc5a834847802c55b02a9c6c41232567b2ca0f3f7b782fcf69d834f92e5962"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 477,
      "start_column": 8,
      "end_line": 477,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house\n      ((\u2191(\u2191(finProdFinEquiv.symm.toFun t).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t).2 + 1) \u2022 \u03b2') ^\n        \u2191(finProdFinEquiv.symm.toFun u).2) \u2264\n    house (\u2191a + b \u2022 \u03b2') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L477"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16a01d2ef544bcced8e74aa1e11b21ec9cd5a0ac2ac7b19135ba48b2a5c2a0d3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 478,
      "start_column": 8,
      "end_line": 478,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case h\u2081.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264\n    house\n      ((\u2191(\u2191(finProdFinEquiv.symm.toFun t).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t).2 + 1) \u2022 \u03b2') ^\n        \u2191(finProdFinEquiv.symm.toFun u).2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L478"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1d037d346aad685ecccac686a49d8e649b474ee34a31e31984ca0ca8c5ee000c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 480,
      "start_column": 8,
      "end_line": 480,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264 house \u03b1' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8deeda4718e47dcea20ca9e27cd10aa48493d4a54d80239404b8799d85327e71"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 482,
      "start_column": 8,
      "end_line": 482,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * house (\u2191a + b \u2022 \u03b2') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L482"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ae583f0a7a5865be87c4d93b94aa69f1d9f66c6082e7fd3aae895ecec05bad26"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 483,
      "start_column": 8,
      "end_line": 483,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264 house \u03b3' ^ (b * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L483"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3995eee619bc2234d3dd3d834cc74d35203f9e2b132588a21547c7184b4b9580"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 485,
      "start_column": 8,
      "end_line": 485,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * house (\u2191a + b \u2022 \u03b2') ^ k * house \u03b1' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L485"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e46d0b8e9e9b6a97b489edba77bb97e4a3f8fd62a0e26faa519aab3ac865ca3f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 499,
      "start_column": 10,
      "end_line": 499,
      "end_column": 15
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 |c\u2081 K \u03b1' \u03b2' \u03b3'| = c\u2081 K \u03b1' \u03b2' \u03b3'",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L499"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b0061f685d3e8c6ef4bdf8cd3614c27509ee268f60e868d3b1a3e6d3b35c9444"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 505,
      "start_column": 8,
      "end_line": 505,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\nthis : |c\u2081 K \u03b1' \u03b2' \u03b3'| = c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 |\u2191(c\u2081 K \u03b1' \u03b2' \u03b3')| ^ (n K q - 1 + m K * q + m K * q) \u2264 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (1 + 2 * m K * (2 * m K).sqrt)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L505"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "21ed3fe5836d13e50f057c1bed597016de0a5b7c36eb2a9d55075d37aa93057b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 510,
      "start_column": 8,
      "end_line": 510,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191a + \u2191b * \u03b2') ^ k \u2264 \u2191(2 * m K).sqrt * (1 + house \u03b2')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L510"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e391fa3300cede2a3384840e62cd5b94f545fc1e34f27787d8e4a9c3d9557821"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 511,
      "start_column": 8,
      "end_line": 511,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house (\u2191a + \u2191b * \u03b2') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "259517c756b76a44bc6e3a170c57caf84ae2ff43820f0dc426e62a372569a9b5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 513,
      "start_column": 8,
      "end_line": 513,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3'",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L513"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8cf32ffb033df5e7b710c52a244a2598a3ae13a452667893cf8f905ac69b533b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 514,
      "start_column": 8,
      "end_line": 514,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b1' ^ (a * l) \u2264 house \u03b1' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "22f1c2df0142c6bae2959cd6f1d03d18515317fd6424ee42b0eb3f633fc60566"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 516,
      "start_column": 8,
      "end_line": 516,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u03b1' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L516"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3535841b7ef1c21dc8602efc55f6891a94e16f0ab7161087192a93cae16846d8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 517,
      "start_column": 8,
      "end_line": 517,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3' * \u2191(2 * m K).sqrt * (1 + house \u03b2')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L517"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b2cea7a75aed12c104bce5e71575d86ec567dbb91a7fdf45b866bd64e16f0d9d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 518,
      "start_column": 8,
      "end_line": 518,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b3' ^ (b * l) \u2264 house \u03b3' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L518"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a78e8756dd923bdc8379f9b6664b2abdca57089ab92adebaf0f932934122f795"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 519,
      "start_column": 8,
      "end_line": 519,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u03b3' ^ (b * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L519"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "59ea0d34dafdb3d44b26f96fa64c95d42cd221a1bbb389058c2ae8ae73e176a1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 520,
      "start_column": 8,
      "end_line": 520,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3' * \u2191(2 * m K).sqrt * (1 + house \u03b2') * house \u03b1' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L520"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d9625605bdc86c35f4bec818bc261b0ffaa6dc7ec5a3af20390eb2381b0bac46"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 670,
      "start_column": 8,
      "end_line": 670,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nH :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) +\n        -\u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) +\n      \u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\n\u22a2 -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191\u2191j % \u2191q) - 1) * \u03b2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L670"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8b742443c017c3579a11bb0415e9dc31e0bf24c1f2b50d2cb3bbedd3291db9f3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 681,
      "start_column": 10,
      "end_line": 681,
      "end_column": 15
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nH :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) +\n        -\u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) +\n      \u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\nthis : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\n\u22a2 (\u2191(\u2191i % q) + 1) * \u03b2 + (-\u2191(\u2191j % q) - 1) * \u03b2 = (\u2191(\u2191\u2191i % \u2191q) + 1 + -(\u2191(\u2191\u2191j % \u2191q) + 1)) * \u03b2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L681"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "4b354e3e595d9ac9d669c19708cbb4105bde1efdb138410ba3f65692a8193a73"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 691,
      "start_column": 10,
      "end_line": 691,
      "end_column": 15
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nthis\u271d : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\nthis :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) =\n    \u2191(\u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) + -(\u2191\u2191(finProdFinEquiv.symm.toFun j).2 + 1)) * \u03b2\nH : (\u2191(\u2191\u2191i % \u2191q) + 1 + (-1 + -\u2191(\u2191\u2191j % \u2191q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1))\n\u22a2 (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) \u2194\n    \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) / (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q)))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L691"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d0c476a6a8f14102657bcfcf6d2bc6edc8174eaf178b9c9f89ac11f24711fc06"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 693,
      "start_column": 6,
      "end_line": 693,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case neg\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nthis\u271d\u00b9 : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\nthis\u271d :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) =\n    \u2191(\u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) + -(\u2191\u2191(finProdFinEquiv.symm.toFun j).2 + 1)) * \u03b2\nH : (\u2191(\u2191\u2191i % \u2191q) + 1 + (-1 + -\u2191(\u2191\u2191j % \u2191q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1))\nthis :\n  (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) \u2194\n    \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) / (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q)))\n\u22a2 \u03b2 = \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L693"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2a6dc748e02d7a5c038cb659dffeda600ea04ba1f07c7508f6b6f8e14286dc6b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 795,
      "start_column": 2,
      "end_line": 795,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d\u00b9 : Fin (q * q)\nhq0 : 0 < q\nk : \u2115\nhR : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d\u00b9 = 0\nt\u271d : Fin (q * q)\nthis : \u2200 (x : \u2102), iteratedDeriv k (fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) x = 0\nderiv_eq :\n  (iteratedDeriv k fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) = fun x =>\n    \u2211 t, \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) * \u03c1 \u03b1 \u03b2 q t ^ k\nderiv_eq_0 : iteratedDeriv k (fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) 0 = 0\nt : Fin (q * q)\nht : t \u2208 Finset.univ\n\u22a2 \u03c1 \u03b1 \u03b2 q t ^ \u2191t\u271d = \u03c1 \u03b1 \u03b2 q t ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L795"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T00:24:25+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a7b4c434a5065ae1c080e92645409077dfb7d51f28bf4bdf9e36f0a118f9e3c5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 926,
      "start_column": 2,
      "end_line": 926,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case hR\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk : \u2115\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nhl : l < n K q\n\u22a2 R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L926"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:10:19+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "0961b94062999728c10a4c5d873627eac2b7df239f59bab7617e1d0500e6d0a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 957,
      "start_column": 2,
      "end_line": 957,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv this : iteratedDeriv k R \u2191l = 0\n\u22a2 n K q \u2264 (Exists.choose \u22ef).order",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L957"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "23592e4d9edd52e29530f4a60d8fd67eb571ddda6a9264b24df3c27753922555"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 956,
      "start_column": 78,
      "end_line": 956,
      "end_column": 83
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv : iteratedDeriv k R \u2191l = 0\n\u22a2 \u2191(finProdFinEquiv.symm.toFun u).1 + 1 < n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L956"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "23756589725c27826520e9640a1ff8edaa833abdcb6e234fc17a76157908b5b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 964,
      "start_column": 6,
      "end_line": 964,
      "end_column": 11
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk l : \u2115\nhkn : k < n K q\n\u22a2 (Exists.choose \u22ef).order \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L964"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f5704d4507aceae0f2aa51b9306d57707035c4017bee32354b5edc99dacda2d0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 979,
      "start_column": 50,
      "end_line": 979,
      "end_column": 55
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  \u2203 l\u2080, iteratedDeriv r R \u2191\u2191l\u2080 \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L979"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ba8bc9c0b5c0a658690d2033337d422cc1b3284ab99cf62d3b51b53a835b1916"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1000,
      "start_column": 2,
      "end_line": 1000,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nH : \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1000"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-01T02:10:10+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "bd432ec37c5700b0d9776c266d43a497644476096dbf8586a50f0d8f2eff38fb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1030,
      "start_column": 4,
      "end_line": 1030,
      "end_column": 9
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 IsIntegral (\ud835\udcde K)\n    (c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022 rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1030"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2d93563d376b94707e4ab26b556bfc9e67c937097baf27c33e767d5b016b441b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1071,
      "start_column": 6,
      "end_line": 1071,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1071"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "853e0d77e539b251804a5bc56196240c2bc19604aeeac24f19a17767394273cb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1072,
      "start_column": 6,
      "end_line": 1072,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_1.ha\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 0 < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1072"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "606669bfd01ece1705b29ec23db54c1a0b7ddc15416015f690d8263681d91849"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1073,
      "start_column": 6,
      "end_line": 1073,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_1.hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1073"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "7cea1217f82b127803488c4b8ba1d091a3a619666b1f3ca89924d3aaf8be7c4f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1089,
      "start_column": 6,
      "end_line": 1089,
      "end_column": 11
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\n\u22a2 |LinearMap.det\n        ((LinearMap.mul \u2124 (\ud835\udcde K))\n          (RingOfIntegers.restrict\n            (fun x =>\n              _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022\n                rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n            \u22ef \u2124))| =\n    |c\u03c1 * LinearMap.det ((LinearMap.mul \u2124 K) \u03c1)|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1089"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "638a919557faf4cbf8f84703429c4a960e5a7e370f228aef27a9943ec4c1b64e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1093,
      "start_column": 4,
      "end_line": 1093,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis\u271d : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\nthis : |(Algebra.norm \u2124) c1\u03c1| = |(Algebra.norm \u2124) c\u03c1| * |(Algebra.norm \u2124) \u03c1|\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2191|(Algebra.norm \u2124) \u03c1|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1093"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "c08e7d9c7f53f303d7280eb4f2e560248bda1e229a19ae50c891eebfa9cefc5e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1094,
      "start_column": 2,
      "end_line": 1094,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case calc.step\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191|(Algebra.norm \u2124) \u03c1| < \u2016(Algebra.norm \u211a) \u03c1\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1094"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1bb77735175bf54bf573205ae22d01467a990025fa90ebbab20286eb21617eb3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1061,
      "start_column": 16,
      "end_line": 1061,
      "end_column": 21
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 (c\u2085 ^ r)\u207b\u00b9 = c\u2085 ^ (-\u2191r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1061"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "571ebd41b3d4ff4cc0ca7d6f6cf32c8eecb1662c6ccaa31685ff90c470dd74c7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1139,
      "start_column": 6,
      "end_line": 1139,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_2.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\nthis : c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) = c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * 1\n\u22a2 1 \u2264 \u2191\u2191t * (c\u2086 * \u2191q) ^ r * c\u2087 ^ q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1139"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16affe970001c9ef33437483cc7b586d1d945d16becdff3b2b2d8275af774a4c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1145,
      "start_column": 4,
      "end_line": 1145,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (\u2191\u2191t * (c\u2086 * \u2191q) ^ r * c\u2087 ^ \u2191q) \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1145"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d79d37f1406e19fa4f7de61e8bd4ce0d4507dd387fe4c34421079b5ffdab98c0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1159,
      "start_column": 4,
      "end_line": 1159,
      "end_column": 9
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  DifferentiableAt \u2102 S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1159"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16ca67005d892418cf9e51eb2268b7eaf1e2a89123d29d2dd78fb4552eb1c4a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1220,
      "start_column": 8,
      "end_line": 1220,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 0 < \u2191r / \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1220"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "38f238d23ae462d5bedba7a0e04635706562cebe03d13d7cb75d120eea34383a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1225,
      "start_column": 4,
      "end_line": 1225,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hc\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191r / \u2191q)\n\u22a2 ContinuousWithinAt S (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191r / \u2191q))) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1225"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "4319f3a02364602af95ffbddb11f5b1b496919e4c113a33559356eafa9c63e5a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1250,
      "start_column": 4,
      "end_line": 1250,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u03c3 \u03c1 = Complex.log \u03b1 ^ (-\u2191r) * S \u2191l\u2080",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1250"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f4f9d52575496e3211263f295d7690860fa69887d035e4ca1fd56c2b940af777"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1273,
      "start_column": 4,
      "end_line": 1273,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2016R z\u2016 \u2264 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1273"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2ceccf12ec59752e19baada91beef6f6d3e7cc08dd75b203d429f108a3143526"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1274,
      "start_column": 4,
      "end_line": 1274,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q)) \u2264\n    \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1274"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e6a9621a9e15c2cc273d2f35221d6681b44e345db0eb3c47076749fbc88b3cb4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1275,
      "start_column": 4,
      "end_line": 1275,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1275"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "564c08711ec656026c89959340379b48c141322b3422836a881faef18ca334fc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1361,
      "start_column": 2,
      "end_line": 1361,
      "end_column": 7
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016S z\u2016 \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1361"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1acfb2b51abbcf5547166be07993300737d958780f8475cb8e72db076adb2bd2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1448,
      "start_column": 4,
      "end_line": 1448,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1448"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e0374ba3e3de222b7291fba300e7eccaf078f60df672a882a2f17519c294ae1d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1449,
      "start_column": 4,
      "end_line": 1449,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c\u2081\u2084 ^ r * \u2191r ^ (-\u2191r / 2 + 3 * \u2191(h K) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1449"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "410ab0ee4709d8167a99827aa77ffcfc22ebd4330c8c4c5334f8b2634d12b198"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1444,
      "start_column": 32,
      "end_line": 1444,
      "end_column": 37
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1444"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ea9f2aeca05e5a24af299aa20dce0f4f7748493debe635788c023dff26d8ca6a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1458,
      "start_column": 2,
      "end_line": 1458,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h.left\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1458"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "5ee0c3be5ed07e970fff36cc10e69d9e226a0786f6ea117a2184349673515b6d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1473,
      "start_column": 4,
      "end_line": 1473,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191r ^ (r / 2 - 3 * h K / 2) < c\u2081\u2084 ^ r * c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1473"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f441878653743527aeca292226c3d46c74ca56d5bc7217f75ba749c7a7383a15"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 359,
      "start_column": 2,
      "end_line": 359,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 \u2264\n    \u2191(C_6_1_5 a) * (1 + \u2191(nndist_{\ud835\udd20 p' ,\u2191D ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p))) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) / volume \u2191(\ud835\udcd8 p) *\n      \u222b\u207b (y : X) in E p', \u2016g y\u2016\u2091 * \u222b\u207b (y : X) in E p, \u2016g y\u2016\u2091",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L359"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6befc5da4481a4528f3242732f32719a5691e6c6c927ed944708da65178560d8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d424334e3a1ad3994ff5c918fd6646ef8d8aaa501b080bd8d088d93b8c202c91"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 368,
      "start_column": 84,
      "end_line": 368,
      "end_column": 89
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9c3d5b5761f571a87d4227105f50b7bccfd865b24a56a0fdbf266e2458bae263"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 61,
      "start_column": 2,
      "end_line": 61,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nO : Set X\nhO : IsOpen O \u2227 O \u2260 univ\n\u22a2 \u2203 c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) \u2227\n      \u22c3 i, ball (c i) (3 * r i) = O \u2227\n        (\u2200 (i : \u2115), \u00acDisjoint (ball (c i) (7 * r i)) O\u1d9c) \u2227\n          \u2200 x \u2208 O, Cardinal.mk \u2191{i | x \u2208 ball (c i) (3 * r i)} \u2264 \u2191(2 ^ (6 * a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "f0d8000ebe604db11cdfeda9b734f2d6cf39aa3e7a66f55ee23d5bdd3efbf377"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 czBall3 ha hf hX i}.Finite",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5ce4e2732fc83213332e0e708c567e326999e9aad40d5d7f6553df8e91abec9f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ni : \u2115\n\u22a2 czBall ha hf hX i \u2286 czPartition ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "81b3c040dbd6d31256a2a93dbfef7ad20659e0772933eeb0fa79119594b01266"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => czPartition ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a27202be503557b59aefe1efd5e8920c45bbb73361eb79f474f48a440b4c5828"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 czPartition ha hf hX i\nhj : x \u2208 czPartition ha hf hX j\n\u22a2 i = j",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "ec528e4cc6b300527ebf683dbe6c018fc21a012a828028bcd2f14f1fc52d97b3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 \u22c3 i, czPartition ha hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "50cf553cb3438b8baea185bc4a42b2914c3ad299f3406aacb83f9c063d788543"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), czRemainder' ha hf hX i x = czRemainder ha hf \u03b1 x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T17:21:05+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "dac93e4181a286b4ce040895c2ce36af15538c31d1a044a3259a4c6cebd93459"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 202,
      "start_column": 2,
      "end_line": 202,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (czApproximation ha hf \u03b1)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "731bba3c4cf19d17a5fa46050be1fc540bd2072f3ecf7a1243bf0bbf30fa4fee"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "e324ec1bf49367ba48bbb2830a2a53df6ff962571e5bbbaee4ab460901378bd1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0079b7190025f8a6a492a167ea4e5a90850fcbbc2965c9fc42d53cf9f88e2f9f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czApproximation ha hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "41a517539345169a0cdd71e514728b588ec4f467863df7d09644e2613674c6a6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 230,
      "start_column": 2,
      "end_line": 230,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (czRemainder' ha hf hX i) \u2286 czBall3 ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "075f798ec0455a651505323aaa2afb6faee16f0ac64b468f6e7f942ab26dc259"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 236,
      "start_column": 2,
      "end_line": 236,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), czRemainder' ha hf hX i x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5c9d65b231d65742a9b722218a34a348d6b46cbe6a4928cb2910796502da34bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 241,
      "start_column": 2,
      "end_line": 241,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), czRemainder ha hf \u03b1 x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "127ee0ff2f31946c6700db45e7a2180f60ac1dafb91b1d7778728513dc5cc388"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (czRemainder' ha hf hX i) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume (czBall3 ha hf hX i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0562fd5a2d18ac401d0c2d2af9a2e4d77f87ce92be4c959975c958b53a4a5334"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 253,
      "start_column": 2,
      "end_line": 253,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder ha hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "01f57c78818ef6e984d2ed7b5adfeeca57221442f50f663b6242b760e537ad62"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (czBall3 ha hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "b6fb3ac078fb792023e20451ec18349137d8f4ab5e6f55a4dd70a36e4c60387b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9840b78a053f26a2f377c3402ab45b7918ca6c06a9a62b2cf91114e61b4daec7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 271,
      "start_column": 2,
      "end_line": 271,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (czRemainder' ha hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L271"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "4a18b036baa81ec20121dc0b8f8b12f48277ef1c0f73bbbbf6e6e3e171627a92"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 277,
      "start_column": 2,
      "end_line": 277,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder ha hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3a9b84009df5a5f861881b640665003321af7fc3cbc7118bdb54cc4234089f10"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 295,
      "start_column": 2,
      "end_line": 295,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (czApproximation ha hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L295"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7720b5df73764559acd731ce3b79b35e9145ddb61c6da38f138811e50a2b5b4b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 311,
      "start_column": 2,
      "end_line": 311,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (\u03a9 ha hf \u03b1)\u1d9c\nhX : GeneralCase f \u03b1\n\u22a2 \u2016czOperator K r (czRemainder ha hf \u03b1) x\u2016\u2091 \u2264 3 * czOperatorBound ha hf hX x + \u03b1 / 8",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L311"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f3475267796ca2060b57dbda940d978c859d3228c9637c5c170bf14201e88e98"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 321,
      "start_column": 2,
      "end_line": 321,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 volume ((\u03a9 ha hf \u03b1)\u1d9c \u2229 czOperatorBound ha hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264 \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L321"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "dd7931a06397f2150ac2fcb0a6bd01a37f7768400617535a976ede5cfedcc452"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 332,
      "start_column": 2,
      "end_line": 332,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 distribution (czOperator K r (czRemainder ha hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L332"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "63e23a1eba6e3cc213c6e85182744813d12002c7f91639ab567ea589d346b364"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "YK-poincare1",
      "commit": "63a19cb3ae132c07251ab30ed60965c3841540ab",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Analysis/Calculus/Poincare/OneForm.lean",
      "start_line": 387,
      "start_column": 35,
      "end_line": 387,
      "end_column": 40
    },
    "debug_info": {
      "goal": "E : Type u_1\nF : Type u_2\ninst\u271d\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b2 : NormedSpace \u211d E\ninst\u271d\u00b9 : NormedAddCommGroup F\ninst\u271d : NormedSpace \u211d F\na\u271d b c d : E\n\u03c9 : E \u2192 E \u2192L[\u211d] F\nd\u03c9 : E \u2192 E \u2192L[\u211d] E \u2192L[\u211d] F\n\u03b3\u2081 : Path a\u271d b\n\u03b3\u2082 : Path c d\ns : Set E\n\u03c6 : \u03b3\u2081.Homotopy \u2191\u03b3\u2082\nh\u03c9 : \u2200 x \u2208 s, HasFDerivWithinAt \u03c9 (d\u03c9 x) s x\nhd\u03c9 : \u2200 x \u2208 s, \u2200 a \u2208 tangentConeAt \u211d s x, \u2200 b \u2208 tangentConeAt \u211d s x, ((d\u03c9 x) a) b = ((d\u03c9 x) b) a\nh\u03c6s : \u2200 (a : \u2191I \u00d7 \u2191I), \u03c6 a \u2208 s\nhF : ContDiffOn \u211d 2 (fun xy => (IccExtend \u22ef (\u03c6.extend xy.1)) xy.2) (Icc (0, 0) (1, 1))\n\u03c8 : \u211d \u00d7 \u211d \u2192 E := fun xy => Set.IccExtend \u22ef (\u21d1(\u03c6.extend xy.1)) xy.2\nh\u03c8s : \u2200 (a : \u211d \u00d7 \u211d), \u03c8 a \u2208 s\nU : Set (\u211d \u00d7 \u211d) := Ioo 0 1 \u00d7\u02e2 Ioo 0 1\nhU : U = Ioo 0 1 \u00d7\u02e2 Ioo 0 1\nhUI' : interior (Icc 0 1) = U\nhUI : U \u2286 Icc 0 1\nhId : UniqueDiffOn \u211d (Icc 0 1)\nh\u03c8' : ContDiffOn \u211d 2 \u03c8 U\nhUo : IsOpen U\nd\u03c8 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] E := fderivWithin \u211d \u03c8 (Icc 0 1)\nd2\u03c8 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] \u211d \u00d7 \u211d \u2192L[\u211d] E := fderivWithin \u211d d\u03c8 (Icc 0 1)\nh\u03c8 : \u2200 a \u2208 U, HasFDerivAt \u03c8 (d\u03c8 a) a\nh\u03c8c : Continuous \u03c8\nhd\u03c8 : DifferentiableOn \u211d d\u03c8 (Icc 0 1)\nhd\u03c8Ioo : \u2200 a \u2208 Ioo 0 1 \u00d7\u02e2 Ioo 0 1, HasFDerivAt d\u03c8 (d2\u03c8 a) a\n\u03b7 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => (\u03c9 (\u03c8 a)).comp (d\u03c8 a)\nd\u03b7 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] \u211d \u00d7 \u211d \u2192L[\u211d] F :=\n  fun a => ((ContinuousLinearMap.compL \u211d (\u211d \u00d7 \u211d) E F) (\u03c9 (\u03c8 a))).comp (d2\u03c8 a) + (d\u03c9 (\u03c8 a)).bilinearComp (d\u03c8 a) (d\u03c8 a)\nh\u03b7c : ContinuousOn \u03b7 (Icc 0 1)\nh\u03b7 : \u2200 a \u2208 U, HasFDerivAt \u03b7 (d\u03b7 a) a\nf : \u211d \u00d7 \u211d \u2192 F := fun a => (\u03b7 a) (0, 1)\ng : \u211d \u00d7 \u211d \u2192 F := fun a => -(\u03b7 a) (1, 0)\nf' : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => ((ContinuousLinearMap.apply \u211d F) (0, 1)).comp (d\u03b7 a)\ng' : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => -((ContinuousLinearMap.apply \u211d F) (1, 0)).comp (d\u03b7 a)\nhd2\u03c8_symm : \u2200 a \u2208 Icc 0 1, \u2200 (x y : \u211d \u00d7 \u211d), ((d2\u03c8 a) x) y = ((d2\u03c8 a) y) x\na : \u211d \u00d7 \u211d\nha : a \u2208 Icc 0 1\nS : Submodule \u211d E := Submodule.span \u211d (tangentConeAt \u211d s (\u03c8 a))\nH\u2081 : \u2200 x \u2208 S, \u2200 y \u2208 S, ((d\u03c9 (\u03c8 a)) x) y = ((d\u03c9 (\u03c8 a)) y) x\nz : \u211d \u00d7 \u211d\n\u22a2 (d\u03c8 a) z \u2208 S",
      "url": "https://github.com/leanprover-community/mathlib4/blob/63a19cb3ae132c07251ab30ed60965c3841540ab/Mathlib/Analysis/Calculus/Poincare/OneForm.lean#L387"
    },
    "metadata": {
      "blame_email_hash": "9771bac611b3",
      "blame_date": "2025-04-13T14:35:21-05:00",
      "inclusion_date": "2025-04-13T23:08:58.715701+00:00"
    },
    "id": "f82e691bf9289aaaa1b0b45548c37d10fc0a3516cb5cd131fca26884a0fd55aa"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 257,
      "start_column": 36,
      "end_line": 257,
      "end_column": 41
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u271d : \u00ab$A\u00bb\n$hyp\u271d : Option Expr\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb := \u2191\u00ab$n\u00bb * 1\n\u22a2 \u00ab$a\u00bb = \u2191\u00ab$n\u00bb * 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "3e22c038a8638536ea261624648d8ffa0b9cfee6e8b4ca0491f72044fddec3e2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 260,
      "start_column": 36,
      "end_line": 260,
      "end_column": 41
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u00bb $x\u271d : \u00ab$A\u00bb\n$e\u271d : \u2115\n$b\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$b'\u00bb : \u00ab$A\u00bb\n\u00ab$pb'\u00bb : $b\u271d = \u2191\u00ab$n\u00bb * \u00ab$b'\u00bb\n\u22a2 $x\u271d ^ $e\u271d * $b\u271d = \u2191\u00ab$n\u00bb * ($x\u271d ^ $e\u271d * \u00ab$b'\u00bb)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L260"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "bb729561dfb5dc36a85d7f562ad085ea19bcc50f58ea59974a0a03ba8cb85a43"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 282,
      "start_column": 28,
      "end_line": 282,
      "end_column": 33
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n\u22a2 \u00ab$r\u00bb \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L282"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "810bcb3f4e7138f9ea91eb72c1fa602f5d2e6f10405d12f76fc16c93d470b024"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 243,
      "start_column": 26,
      "end_line": 243,
      "end_column": 31
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n$r\u271d : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$pr\u00bb : $r\u271d * \u2191\u00ab$n\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u271d \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L243"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "4f84bcffb9d9d42623d57a5933ca36efa39a5635f48f0a98ed661b89e780e9f7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 255,
      "start_column": 47,
      "end_line": 255,
      "end_column": 52
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$r\u2081'\u00bb \u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "45b808cfdbe493d69630ad9704b5af20853226ab3a366877653d9690c423a2b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 266,
      "start_column": 46,
      "end_line": 266,
      "end_column": 51
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d : \u00ab$R\u2081\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L266"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "2b14e9407c4b7a62038201579d07559cf91174139183b7dca4a434363695e10f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 276,
      "start_column": 46,
      "end_line": 276,
      "end_column": 51
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d : \u00ab$R\u2081\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2081\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "4f0911cbd09a936bcc1d04c49aa20387d34c8cf5e42d5aae7ceeec97802df23c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 325,
      "start_column": 92,
      "end_line": 325,
      "end_column": 97
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 1 + 1 = 1 \u2022 2 + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L325"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3b0d83f38e94f7f47e5935914872743487236d2d494c8416d2476c71f3297add"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 442,
      "start_column": 20,
      "end_line": 442,
      "end_column": 25
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2082\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u00bb : Type v\u271d\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb \u00ab$t\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a'\u00bb : \u00ab$A\u00bb\n\u00ab$pa'\u00bb : \u00ab$a\u2081\u00bb * \u00ab$a\u00bb = \u00ab$a'\u00bb\n\u00ab$ra'\u00bb : \u00ab$A\u00bb\n\u00ab$pra'\u00bb : \u00ab$r\u00bb \u2022 \u00ab$a'\u00bb = \u00ab$ra'\u00bb\n\u00ab$t'\u00bb : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : \u00ab$a\u2081\u00bb * \u00ab$t\u00bb = \u00ab$t'\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$p\u00bb : \u00ab$ra'\u00bb + \u00ab$t'\u00bb = $expr\u271d\n\u22a2 \u00ab$a\u2081\u00bb * (\u00ab$r\u00bb \u2022 \u00ab$a\u00bb + \u00ab$t\u00bb) = $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L442"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "3f097a67c22927235d073e4a7885b39506d8af44631d24be9330eed46efa347d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 600,
      "start_column": 24,
      "end_line": 600,
      "end_column": 29
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$n\u00bb : Name\n$us\u271d : List Level\n$x\u271d : Expr \u00d7 Expr \u00d7 Bool\n\u00ab$a\u00bb \u00ab$b\u00bb : \u00ab$A\u00bb\n\u00ab$e\u00bb : \u00ab$A\u00bb := \u00ab$a\u00bb + \u00ab$b\u00bb\n$expr\u271d\u00b2 : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u00bb = $expr\u271d\u00b2\n$expr\u271d\u00b9 : \u00ab$A\u00bb\n\u00ab$pb\u00bb : \u00ab$b\u00bb = $expr\u271d\u00b9\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pab\u00bb : $expr\u271d\u00b2 + $expr\u271d\u00b9 = $expr\u271d\n\u22a2 \u00ab$e\u00bb = $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L600"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "e6fcf08d10360d883313e545cc1b93d6bcc0f7431ac667cae3a1fe43bfc5d508"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 609,
      "start_column": 24,
      "end_line": 609,
      "end_column": 29
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$n\u00bb : Name\n$us\u271d : List Level\n$x\u271d : Expr \u00d7 Expr \u00d7 Bool\n\u00ab$a\u00bb \u00ab$b\u00bb : \u00ab$A\u00bb\n\u00ab$e\u00bb : \u00ab$A\u00bb := \u00ab$a\u00bb * \u00ab$b\u00bb\n$expr\u271d\u00b2 : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u00bb = $expr\u271d\u00b2\n$expr\u271d\u00b9 : \u00ab$A\u00bb\n\u00ab$pb\u00bb : \u00ab$b\u00bb = $expr\u271d\u00b9\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pab\u00bb : $expr\u271d\u00b2 * $expr\u271d\u00b9 = $expr\u271d\n\u22a2 \u00ab$e\u00bb = $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L609"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "9356c2954c552e9818e1035a084eec05c0b00a4387b0ad36167ae1903d2ff4d0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 618,
      "start_column": 2,
      "end_line": 618,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 1 \u2022 (x ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0 = 1 \u2022 (1 ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L618"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f40b2d6e4a90d2f98d59096845fbd5d8e666f1054030dc5bbe21a1ba7eb762c2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 595,
      "start_column": 2,
      "end_line": 595,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 (1 \u2022 2 + 1) \u2022 (x ^ Nat.rawCast 1 * 1) + Nat.rawCast 0 =\n    1 \u2022 (x ^ Nat.rawCast 1 * (3 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L595"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "cba525f732b0879b2fe747b8f81b3e9c7a7f7de0bbbcca4313ce6bf980b0cdc4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 639,
      "start_column": 2,
      "end_line": 639,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : \u211a\n\u22a2 x * y + (x ^ 2 + (x * y + y ^ 2)) = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L639"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "43c003466af897771993222a0f28e9a56af8dd20abaad469d42a65e8393a97d7"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
      "start_line": 24,
      "start_column": 63,
      "end_line": 24,
      "end_column": 68
    },
    "debug_info": {
      "goal": "\u03b1 : Type ?u.2318\ninst\u271d : DecidableEq \u03b1\nl : List \u03b1\nx y : \u03b1\nn : \u2115\n\u22a2 Chain (fun x1 x2 => x1 < x2) 0 (range n)",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L24"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "650ac9f6087ca15b30b5b57ba9fe78e3a6c2e98a039aacf7b7d25d28e31b8a9d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\n\u03b1 : Type u_1\ninst\u271d\u00b2 : DecidableEq \u03b1\nR : \u03b1 \u2192 \u03b1 \u2192 Prop\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : IsTrans \u03b1 R\nl : List \u03b1\ni j : Fin l.length\nh : Chain' R l\neij : i \u2260 j\nnRij : \u00acR (l.get i) (l.get j)\nnRji : \u00acR (l.get j) (l.get i)\n\u22a2 False",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "13f7907fcb967107aee729b6da7cf90baf7fbdc05eb71d1afb5150d435ec800b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
      "start_line": 110,
      "start_column": 4,
      "end_line": 110,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case p\nF : Frame\nr : F.World\ninst\u271d : F.IsRooted r\nn : \u2115+\n\u22a2 List.Chain' (fun a b => a < b) do\n    let a \u2190 List.range \u2191n\n    pure \u2191a",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L110"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "7e5768b4d669745331e05caaaf79d9696e81c2e9a8db94176ec685729336e0e0"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
      "start_line": 251,
      "start_column": 2,
      "end_line": 251,
      "end_column": 7
    },
    "debug_info": {
      "goal": "M : Model\ninst\u271d\u00b9 : IsTrans M.World M.Rel\ninst\u271d : IsIrrefl M.World M.Rel\nl : List M.World\nn : \u2115+\nl_length : l.length = \u2191n + 1\nl_chain : List.Chain' (fun x1 x2 => x1 \u227a x2) l\n\u0393 : Finset (Formula \u2115)\n\u0393_length : \u0393.card = \u2191n\n\u22a2 \u2203 x \u2208 l, x \u22a7 (Finset.image (fun \u03b3 => \u25a1\u03b3 \u279d \u03b3) \u0393).conj",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L251"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "7f5dce4b990d4048d1d39c649b212d3d27864fbed8fcab8fd277eeb38c28a088"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Tests.lean",
      "start_line": 102,
      "start_column": 2,
      "end_line": 102,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n m : Nat\n\u22a2 List.replicate (2 * n) () = List.replicate n () ++ List.replicate n ()",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "568abb06ec8e089d6c8f26eee9d0f75ef985ded6e40ac5c66ad644307715bf6d"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Tests.lean",
      "start_line": 108,
      "start_column": 2,
      "end_line": 108,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n m : Nat\n\u22a2 List.replicate n () ++ List.replicate m () = List.replicate (n + m) ()",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L108"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "10527d7f182ae93d223919a1aae377f5dbbc2cc4afe42783e7b9c55e20d27741"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Tests.lean",
      "start_line": 169,
      "start_column": 82,
      "end_line": 169,
      "end_column": 87
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : Star R\nx : R\n\u22a2 star x * x = x * star x",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "b8e6a617e0cd645aeb14c4d11910d7b306f6b4356a8ac700d9b76dcbed5d1792"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Tests.lean",
      "start_line": 227,
      "start_column": 78,
      "end_line": 227,
      "end_column": 83
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : Zero \u03b1\ninst\u271d\u00b9 : HMul \u03b1 \u03b1 \u03b1\ninst\u271d : LE \u03b1\na : \u03b1\n\u22a2 0 \u2264 a * a",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L227"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "22068073ae32646f2534f7f35f61036cb591dbebdc590fc9800937fe1d753b29"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 309,
      "start_column": 73,
      "end_line": 309,
      "end_column": 78
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pf_isNat_zero\u00bb : NormNum.IsNat (\u00ab$a\u2081\u00bb + \u00ab$a\u2082\u00bb) 0\n\u22a2 1 \u2022 \u00ab$a\u2081\u00bb + 1 \u2022 \u00ab$a\u2082\u00bb = 1 \u2022 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L309"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "96b68d4fb4e2fb05e809ec7917b749c91882484fe8b5e4a4b83e611917d8651c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 311,
      "start_column": 52,
      "end_line": 311,
      "end_column": 57
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb $expr\u271d : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u2081\u00bb + \u00ab$a\u2082\u00bb = $expr\u271d\n\u22a2 1 \u2022 \u00ab$a\u2081\u00bb + 1 \u2022 \u00ab$a\u2082\u00bb = 1 \u2022 $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L311"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "6196316dfb8c51a29432d750d1019641dda3bd0266d6d066625f61fecd0e0251"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 283,
      "start_column": 49,
      "end_line": 283,
      "end_column": 54
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d \u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 $r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$r\u2081'\u00bb \u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L283"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "21dc9ddd09c87661527cd840e63c9f6182a37c62ea72180992fb21cb2c390416"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 294,
      "start_column": 48,
      "end_line": 294,
      "end_column": 53
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L294"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "1234d8b57ec5afcc2ad682a4a316769f9438e7c94608d26f8bee4166502a9573"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 304,
      "start_column": 48,
      "end_line": 304,
      "end_column": 53
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2081\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L304"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "ba0ef1d502fe07082fa9b6489fda91b0d81c1e35e1cbbcae48ae84306b3f5038"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 623,
      "start_column": 2,
      "end_line": 623,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 x + x + x = 3 * x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L623"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "ef0d20c676f00a4a6c9a5591cdf2e55d2feaad0147ed9bedcd787d8658a24105"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 629,
      "start_column": 2,
      "end_line": 629,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 1 \u2022 (x ^ Nat.rawCast 1 * Nat.rawCast 4) + Nat.rawCast 0 =\n    1 \u2022 (x ^ Nat.rawCast 1 * (4 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L629"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3c27d965f07ffc4df06e3de3533159998d5d61d6ff731d1d9777386b0d7eeae8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 649,
      "start_column": 2,
      "end_line": 649,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : \u211a\n\u22a2 x ^ 2 + x * y = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L649"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "23843aaf991ffc6ecb13c778b8376f79f6c0b05f7aeb64daf34429d0f22028db"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 657,
      "start_column": 2,
      "end_line": 657,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : \u211a\n\u22a2 x * y + (x ^ 2 + y ^ 2) = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L657"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "0ed1c576f3aea7b05b34a6afe1a181b3cbbd98d2ac182f0a96bf5809a810abcd"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-distribHaarChar-harder-results",
      "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean",
      "start_line": 25,
      "start_column": 2,
      "end_line": 25,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : LocallyCompactSpace R\ninst\u271d\u00b3 : CommRing R\ninst\u271d\u00b2 : IsTopologicalRing R\ninst\u271d\u00b9 : MeasurableSpace R\ninst\u271d : BorelSpace R\n\u22a2 Continuous \u21d1(distribHaarChar R)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-14T15:27:33+01:00",
      "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
    },
    "id": "2d9a654995dde411660797fa06220ff10e86cae6be456c754a9d914c9ddc3ee3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-distribHaarChar-harder-results",
      "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean",
      "start_line": 48,
      "start_column": 2,
      "end_line": 48,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9\u00b2 : TopologicalSpace R\ninst\u271d\u00b9\u00b9 : LocallyCompactSpace R\ninst\u271d\u00b9\u2070 : CommRing R\ninst\u271d\u2079 : IsTopologicalRing R\ninst\u271d\u2078 : MeasurableSpace R\ninst\u271d\u2077 : BorelSpace R\nS : Type u_2\ninst\u271d\u2076 : TopologicalSpace S\ninst\u271d\u2075 : LocallyCompactSpace S\ninst\u271d\u2074 : CommRing S\ninst\u271d\u00b3 : IsTopologicalRing S\ninst\u271d\u00b2 : MeasurableSpace S\ninst\u271d\u00b9 : BorelSpace S\ninst\u271d : SecondCountableTopologyEither R S\nr : R\u02e3\ns : S\u02e3\n\u22a2 (distribHaarChar (R \u00d7 S)) (MulEquiv.prodUnits.symm (r, s)) = (distribHaarChar R) r * (distribHaarChar S) s",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L48"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-14T15:27:33+01:00",
      "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
    },
    "id": "009491d4d2ba3d50fda0bed62f549b9a80519cc7f21744b5aedfa1c50be971fc"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "FLT/QuaternionAlgebra/NumberField.lean",
      "start_line": 148,
      "start_column": 2,
      "end_line": 148,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : Type u_3\n\u03b1 : Type u_4\n\u03b2 : Type u_5\ninst\u271d\u2075 : Fintype m\ninst\u271d\u2074 : DecidableEq m\ninst\u271d\u00b3 : NonAssocSemiring \u03b1\ninst\u271d\u00b2 : NonAssocSemiring \u03b2\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : TopologicalSpace \u03b2\nf : \u03b1 \u2192+* \u03b2\nhf : Topology.IsOpenEmbedding \u21d1f\n\u22a2 IsOpenMap \u21d1f.mapMatrix",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L148"
    },
    "metadata": {
      "blame_email_hash": "6a0fe98fa9e8",
      "blame_date": "2025-04-14T10:40:13-04:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "47e1be26d6aab916d27553170f755f5e0fea0491529dcb4535fcfdb07b6e776b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 60,
      "start_column": 9,
      "end_line": 60,
      "end_column": 14
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "25895a31ba729853cdd0b06dc65d1d9cb9b20ae34221911ffabeb809a69eb81d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 78,
      "start_column": 2,
      "end_line": 78,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "0e31c28fda296f71d4420901a1c00b407598c841efa347f6efafc122faf01680"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 138,
      "start_column": 9,
      "end_line": 138,
      "end_column": 14
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "1f7a6f60c830235ee58cb1f665b0ce1567b9f2aa9610bc36ec8bd5e1c52603f3"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "b6bf82cb9566a0c8cb4646b0a0bd687262ef9f5e9c0c2837a266a4198bd028a2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Components.lean",
      "start_line": 255,
      "start_column": 2,
      "end_line": 255,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "306ee4b8c52e9202adf94a3dc2c2328608002709a8fb9d82e606a7860daa6251"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/OracleReduction/Execution.lean",
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "5064ee3a205fa75c674388ea0c2c85cfc30703d50cf7e54f4f8bf35d47024be1"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/OracleReduction/Execution.lean",
      "start_line": 277,
      "start_column": 2,
      "end_line": 277,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "f762c3fb7d26710a7394ac55fd4a5715dc1c5b169dfd2e9c0204ac206536ff08"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 66,
      "start_column": 2,
      "end_line": 66,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Equiv.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "1d773ef17b0eb927eb08c3b1c5e9c456f92730df1912afe3900b8c4eeb0b2956"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 80,
      "start_column": 4,
      "end_line": 80,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Equiv.lean#L80"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "21b8b64fb6568ca720998646f0636ac37e9b1605663bce4ca451ae92168642ba"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 85,
      "start_column": 4,
      "end_line": 85,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Equiv.lean#L85"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "4fab173a2d595d5c51fce2a57e3250de30843e6a6568b2512d10e0c0a2c30a40"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Equiv.lean",
      "start_line": 102,
      "start_column": 2,
      "end_line": 102,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Equiv.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "0c9801bc5b586dae9a1f07a1113f0e04f70f0b00bb2b8942b65c41f38ad8f8bc"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/ToOracle.lean",
      "start_line": 299,
      "start_column": 2,
      "end_line": 299,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/ToOracle.lean#L299"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "b9a5e52907c6b23f5d4aad8ea1f81aae2be88b326773bfc7dc5c6def888c17e5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/ToOracle.lean",
      "start_line": 338,
      "start_column": 2,
      "end_line": 338,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/ToOracle.lean#L338"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "a02886668b05f0f13ecf496187ff15ec8595d136cd1cdae2d9938ab4a993531a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 100,
      "start_column": 2,
      "end_line": 100,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/CommitmentScheme/Fold.lean#L100"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "0e0f26d2b6f2cfb6f04f0671fa407c7d48e3f7f3f87f5e909e2ff8a8f8e69b3a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 104,
      "start_column": 2,
      "end_line": 104,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/CommitmentScheme/Fold.lean#L104"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "cf584bf85c1f15edb71376370bbb55e2f0f6745b5039ae6b5aba63dd2c720906"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 116,
      "start_column": 11,
      "end_line": 116,
      "end_column": 16
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "bd4b99a514df60decee8f78dbff78ff73b916d3542726e38ce1da0eda071d581"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/Fold.lean",
      "start_line": 116,
      "start_column": 26,
      "end_line": 116,
      "end_column": 31
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "5df992a2a88b17356bef0bc1acbddc4f4b7f1d45b9657607e44e48e299091b1d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "d006bfadcfa73fe62c453e059621fb0baf69146f",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/CommitmentScheme/MerkleTree.lean",
      "start_line": 167,
      "start_column": 4,
      "end_line": 167,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (buildMerkleTree \u03b1 n leaves).neverFails \u2227\n      \u2200 x \u2208 (buildMerkleTree \u03b1 n leaves).support,\n        verifyProof \u03b1 i (leaves.get i) (x 0).head\n            (List.Vector.ofFn fun layer => (x \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer)) =\n          pure ()\n\u22a2 (do\n        let a \u2190 buildLayer \u03b1 n leaves\n        (fun a =>\n              (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n            buildMerkleTree \u03b1 n a).neverFails \u2227\n    \u2200 (a a_1 : \u03b1) (b : List.Vector \u03b1 (n + 1)),\n      \u2200 x \u2208 (buildLayer \u03b1 n leaves).finSupport,\n        (a, a_1, b) \u2208\n            ((fun a =>\n                  (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                    List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n                buildMerkleTree \u03b1 n x).finSupport \u2192\n          verifyProof \u03b1 i a a_1 b = pure ()",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/d006bfadcfa73fe62c453e059621fb0baf69146f/ZKLib/CommitmentScheme/MerkleTree.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-17T23:52:18.829560+00:00"
    },
    "id": "e869651a93ee12de3b514f32d3a43f6d80a30e4a6577df77a65d9e7542352036"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 186,
      "start_column": 33,
      "end_line": 186,
      "end_column": 38
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/Basic.lean#L186"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "bb786af412769249740bd3b2628de22c5b37b2884ac866498bcec5afa8628fdc"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 187,
      "start_column": 4,
      "end_line": 187,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/Basic.lean#L187"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "8d6daeb86da91eb6bc4637843e0b9f31b67777470ea928d0013bf17c588d4e98"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 231,
      "start_column": 4,
      "end_line": 231,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/Basic.lean#L231"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "e20006f29f324b2dbbca4e3feee929abe657e7c0d5bb6d25856b012fac7b3c67"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 234,
      "start_column": 4,
      "end_line": 234,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/Basic.lean#L234"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "3f3ee88fe58af2b9d40c4696dda56df465e3a7db05cff0f41eacf12d95e72c62"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 269,
      "start_column": 67,
      "end_line": 269,
      "end_column": 72
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/Basic.lean#L269"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "079fe8b73da7aa8239307d13fae49c8fff871afa791c3efd8815f30514c0be07"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/Basic.lean",
      "start_line": 275,
      "start_column": 65,
      "end_line": 275,
      "end_column": 70
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/Basic.lean#L275"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "e7f5a0390dad6c44dbf5330e9ad3af99f14749da4be4bd1488780e02939fc221"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 34,
      "start_column": 14,
      "end_line": 34,
      "end_column": 19
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Equiv.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "8565c8b1f115cae8a9a62e43e6a7585e2ac8c9bbca4698ab7cfe72a55a334c24"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 35,
      "start_column": 15,
      "end_line": 35,
      "end_column": 20
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Equiv.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "9f558096807c369bd6e722eeb951d975cbc2f096f765783b159d74554902c8ab"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Equiv.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "7ec27efb923bfba46a408463053c87e2fbd46a336fc6a3ea01ba04d4315814a5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Equiv.lean",
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Equiv.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "a02c8dd0ec98693dfa9e60702a97747e8caa3fab559a34cd7689dfc4c17d9764"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "a4d54de25af5541d976699788a42328a4c325bee502ee993e7439c370b47020d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "9e560e88bdebab0777d5da9cd42986a946c3f1d3cfffaf2930eb6a916ae369ec"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 138,
      "start_column": 20,
      "end_line": 138,
      "end_column": 25
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "74e8d57a36437f2067305993fded5830884706c9d9135d3670b982a3bc688b47"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 141,
      "start_column": 19,
      "end_line": 141,
      "end_column": 24
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "d8f7711af64c9e16ddd8aaec0d49c1fdaee96389e2fd4dc303bc4939f5e050b0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 142,
      "start_column": 19,
      "end_line": 142,
      "end_column": 24
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L142"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "e91bd36994f27c0642a68995a748ca74566de816dad1e1c0bb9d3beb25f5a306"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 144,
      "start_column": 21,
      "end_line": 144,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "3ad8d904a41d9646265a4c2aea4db42aa4e5dcef71a4ad95737402cdd7b134fe"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 145,
      "start_column": 21,
      "end_line": 145,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L145"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "f6f909cf77f09756ab0cc712fbfa77465b216e0a8a3cf022e2a409b22a17c217"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 139,
      "start_column": 19,
      "end_line": 139,
      "end_column": 24
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "19b49f3f77a92e04c79cee1a759bccb470e10355836bfb679478a1992847b29c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 151,
      "start_column": 17,
      "end_line": 151,
      "end_column": 22
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "2828f8796e968a9d65a89ccbabf764850b4687a569953a40bd8a26497b351249"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MlPoly/Basic.lean",
      "start_line": 156,
      "start_column": 18,
      "end_line": 156,
      "end_column": 23
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MlPoly/Basic.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "abd5040ea5c37a31581841186f634bacc24e06960f736e6f2b5cca9a1c894912"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 374,
      "start_column": 43,
      "end_line": 374,
      "end_column": 48
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Fin.lean#L374"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T14:25:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "9c4bca909722597242e2ef3b2ba8ba9eefdd459521fee2e5a32a58bcbdd3b354"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 402,
      "start_column": 16,
      "end_line": 402,
      "end_column": 21
    },
    "debug_info": {
      "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Fin.lean#L402"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "403e2f25c9a9e2677747df152b005b17208f37d7ee6e2a6e17c98afe00e37ad1"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 497,
      "start_column": 32,
      "end_line": 497,
      "end_column": 37
    },
    "debug_info": {
      "goal": "\u22a2 True",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Fin.lean#L497"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "68893f8a9816428a58b94666a4b07da1379c29131dad9d067fab21c2f07b2735"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 557,
      "start_column": 4,
      "end_line": 557,
      "end_column": 9
    },
    "debug_info": {
      "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Fin.lean#L557"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "6008b0017f423a27a19935cc1f9e6fb36583619fe5706a0a5bef13552cabbfd4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Fin.lean",
      "start_line": 569,
      "start_column": 80,
      "end_line": 569,
      "end_column": 85
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Fin.lean#L569"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "be46944f98b76e1c24aba31131d5f4ae20c029843d349d5317d92a8dde11cb9d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Operations.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "21cc5541a9c51a534efd9f0494e645988bcbb199ea1343132fbec442c40aa8c4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 209,
      "start_column": 5,
      "end_line": 209,
      "end_column": 10
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Operations.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "ecd302602eaf14446b9e4ecfaa46b5226d25f65df69c10f6045e9129d23ccf3d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Operations.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "0758b2c208c360852a68c94954520d7e59064f041f39262c95af8d3495a114be"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/Math/Operations.lean",
      "start_line": 391,
      "start_column": 75,
      "end_line": 391,
      "end_column": 80
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/Math/Operations.lean#L391"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "34b9bf143079e7152d294ec9940aa5864a6428925530f5765610cfa8053eb383"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MvPolynomial/Sumcheck.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-16T12:52:41-06:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "7e1c7654796793b03e1ae68d198a5cb042c5a04b73c7ae4805a93baea9e3b884"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
      "start_line": 112,
      "start_column": 2,
      "end_line": 112,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MvPolynomial/Sumcheck.lean#L112"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-13T15:50:48-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "8bcfc9bb440a9a31d07772ace391ea2a461d8b249532d4c150167ec7c52d4bd0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
      "start_line": 69,
      "start_column": 58,
      "end_line": 69,
      "end_column": 63
    },
    "debug_info": {
      "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MvPolynomial/Interpolation.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "8f82302fd4bced5de174ae88a219728e86bc191606ef6d75a0133fb5dc0de978"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
      "start_line": 171,
      "start_column": 76,
      "end_line": 171,
      "end_column": 81
    },
    "debug_info": {
      "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/MvPolynomial/Interpolation.lean#L171"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "13d4e291a9b8a819d4e111c57bfb5719ffe10559564105d337ac3962b1075e81"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "name-change",
      "commit": "d732f5dc6c14fb841c08ab4e21a099f590b9b994",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/BinaryTowerField/Basic.lean",
      "start_line": 95,
      "start_column": 16,
      "end_line": 95,
      "end_column": 21
    },
    "debug_info": {
      "goal": "case succ\nk : \u2115\na\u271d : k > 0 \u2192 AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n\u22a2 AdjoinRoot (poly (k + 1)) = Field (k + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/d732f5dc6c14fb841c08ab4e21a099f590b9b994/ArkLib/Data/BinaryTowerField/Basic.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-30T10:53:02+05:30",
      "inclusion_date": "2025-04-25T14:18:32.399926+00:00"
    },
    "id": "b57a85aba550532ee84846aac75b3c04febd1b7825b6219f3c6f3d3f4c07661e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "name-change",
      "commit": "d732f5dc6c14fb841c08ab4e21a099f590b9b994",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/BinaryTowerField/Basic.lean",
      "start_line": 115,
      "start_column": 59,
      "end_line": 115,
      "end_column": 64
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 Irreducible (poly n)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/d732f5dc6c14fb841c08ab4e21a099f590b9b994/ArkLib/Data/BinaryTowerField/Basic.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2024-06-18T17:58:42-04:00",
      "inclusion_date": "2025-04-25T14:18:32.399926+00:00"
    },
    "id": "5b01c13bbc3317b449c682a0cdafb13c2f638fc93aa58ea0c49f4a61996ec2f0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic-old.lean",
      "start_line": 197,
      "start_column": 21,
      "end_line": 197,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "8281a4c04760e5653c3c7929d88fe49704fd2b422425125436952fd1b7ada85a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic-old.lean",
      "start_line": 198,
      "start_column": 22,
      "end_line": 198,
      "end_column": 27
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L198"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "8387c38e435842fad009d20d3f51446c3cf874e3b56a6a5428aeb465846c4b85"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic-old.lean",
      "start_line": 199,
      "start_column": 21,
      "end_line": 199,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L199"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "a56d2600205b17d74131b07300a9fd4d07a952d18272943065f506e8b804a9b2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic-old.lean",
      "start_line": 200,
      "start_column": 21,
      "end_line": 200,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L200"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "8f2444bd7f7ae6d1ce12a2ab41605b10ea7c5d5a7ad239ffccb2b486e8b5e82f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 571,
      "start_column": 2,
      "end_line": 571,
      "end_column": 7
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic.lean#L571"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "188aad7d546a43a29eead147cc58b2a80b7bed344fbb4e31cd8801325dbab134"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 899,
      "start_column": 4,
      "end_line": 899,
      "end_column": 9
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic.lean#L899"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "e6c0e084e3bbe0eb19b9d877c05c0fffc91c2eb40cdd7a54006f3929c8e51b91"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 975,
      "start_column": 6,
      "end_line": 975,
      "end_column": 11
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic.lean#L975"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-03-12T19:59:09-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "47959377d84fc9a5566ef2a8ba10d999a629b1db84fda081bdfdfaf8276e94e1"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 1005,
      "start_column": 22,
      "end_line": 1005,
      "end_column": 27
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic.lean#L1005"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "ce6ef0276ce0c6f41aa4cb3b16121bcb0af42fa3b0d5d663b5a20ab12858f794"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 1006,
      "start_column": 21,
      "end_line": 1006,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic.lean#L1006"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "201ba7738195787cbc719f9df0a6fbd45bc4394f3571d5db491eac5c4f9dad6e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/UniPoly/Basic.lean",
      "start_line": 1007,
      "start_column": 21,
      "end_line": 1007,
      "end_column": 26
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic.lean#L1007"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "d7424d0c53905dc7541b65a875dbdac5b32bc8b11e4c14e9dc35770c7042bad9"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 254,
      "start_column": 2,
      "end_line": 254,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L254"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T12:49:22-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "c0dbd2667e23a4cbbd6c6c0f90cdd4bec49ee5773bda430d964cd0dbba45405d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 556,
      "start_column": 55,
      "end_line": 556,
      "end_column": 60
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L556"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T18:57:31+07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "cb8cdb0d851a83dca890d57765e8fd2fceb797005607c39ea8a80155cae9f67a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 572,
      "start_column": 2,
      "end_line": 572,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L572"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "03d548b39b62a9020dd89347fb6073a67e20eeba4ee82005466e4f63780a7910"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 699,
      "start_column": 2,
      "end_line": 699,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L699"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-28T16:03:02+07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "852d097173e79d9a621f32e1764a29c69a9c7a18c9e19e6ece60ba307519c332"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 725,
      "start_column": 89,
      "end_line": 725,
      "end_column": 94
    },
    "debug_info": {
      "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L725"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-01T17:09:18-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "ffd646d51531d61e7d737ffa66192b23b761dd48fffc28af053f49a7a2f61c3a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
      "start_line": 752,
      "start_column": 38,
      "end_line": 752,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L752"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "d5301b00dd2ce4b5c5ab4b30e2a83ddc631da0dcda1dc0e643007893dea339c5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "486d0cde64cff684f11bc036ea330a677b0a33f67129dfce973eaa92f802e767"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "f117539370c663f89bb2c6e5ee5d8b02cb5415a56f68f18d612f59a9368b6501"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "e6993baaef7b48017a56c965b8963617232c26e0e7bedcd3362ea406b9b7b97f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 214,
      "start_column": 2,
      "end_line": 214,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "c5557703762cd135dd88cbe5c9a853b803f67584cd3c1966a9ba805feb6dc922"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 228,
      "start_column": 2,
      "end_line": 233,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "ebc773e42b65bd7706fdb24a0a02c9ecb4b97136316d93369d6b417d22b68611"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 278,
      "start_column": 4,
      "end_line": 278,
      "end_column": 9
    },
    "debug_info": {
      "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L278"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "a28a30157c2011078f4aecc7c77aa0e2a6c1ffe69ef6a1e34ca5f512e3d62b5a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/OracleReduction/Security/Basic.lean",
      "start_line": 357,
      "start_column": 2,
      "end_line": 357,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Security/Basic.lean#L357"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "b7b72cfb30a1824947373d60cc66dae89dd21023523edd55a1fb0d191e4a3117"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 382,
      "start_column": 75,
      "end_line": 382,
      "end_column": 80
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L382"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "0c5ead4245a46307e1a2ca1627432a96c785afdf12729dec96b42890a2932ce7"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 393,
      "start_column": 2,
      "end_line": 393,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "a8e21ee131a48968140ab7500913d3ccf40196f1ccfa7f3733df037936afa7d4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 403,
      "start_column": 82,
      "end_line": 403,
      "end_column": 87
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L403"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "d4f60714e052d8df32470451c21e2fc5fd8a811a1cef2868612d5d665f5da92c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 267,
      "start_column": 6,
      "end_line": 267,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "b938b3e1056500192ff45b5c7ac46bae00ebe6d3fd2e0aa9c6f8cc8ffd257a66"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 276,
      "start_column": 27,
      "end_line": 276,
      "end_column": 32
    },
    "debug_info": {
      "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "a9accd2716149ecd2b347d52a05707f3ebe4cfda83f6f7b7932328406841b619"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 496,
      "start_column": 2,
      "end_line": 496,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Sumcheck/Basic.lean#L496"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "88fc2ed57d742cd39faa229908302abb0bb60f306c7a02fbc20aed1d1ba9bdb4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 505,
      "start_column": 57,
      "end_line": 505,
      "end_column": 62
    },
    "debug_info": {
      "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "f24a85d7adc8111b49dc589d9e8cbcbf06c2c9eeccc5ac357df8f53ba7981c3a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 514,
      "start_column": 2,
      "end_line": 514,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "20f4800a1927dfb4c37b9d9561f23730e7c711ac5563e31bd6829f43cba9de7e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 572,
      "start_column": 4,
      "end_line": 572,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Sumcheck/Basic.lean#L572"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "e6fc85bb71e21a211b07af8f21cf3ae0a0e3c92a0e441a8d69f3c3928df6645e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 647,
      "start_column": 42,
      "end_line": 647,
      "end_column": 47
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Sumcheck/Basic.lean#L647"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "d2e7fd734f627b81a3c25be2a0c50da53ebc06e1200149f6818367c7c6db01b0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ZKLib/CommitmentScheme/MerkleTree.lean",
      "start_line": 219,
      "start_column": 6,
      "end_line": 219,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n                (OptionT.run \u2218 fun cache =>\n                  verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n            fun {\u03b1_1} q =>\n            match \u03b1_1, q with\n            | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n          fun __do_lift => __do_lift.getM)\n        ()).neverFailsWhen\n    fun {\u03b1} x => Set.univ",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/MerkleTree.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-04-16T13:24:09-07:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "4771b3d3db601fc7c1651f675a3985efdfcc4664a281f4879d70f344ab1c9872"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mariainesdff/isup_lemmas",
      "commit": "9171df48f3adfe318101adbbbae9771dff90a0e2",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean",
      "start_line": 455,
      "start_column": 33,
      "end_line": 455,
      "end_column": 38
    },
    "debug_info": {
      "goal": "\u03b9 : Sort u_1\ninst\u271d : Nonempty \u03b9\nf : \u03b9 \u2192 \u211d\nhf : \u2200 (i : \u03b9), 0 \u2264 f i\nn : \u2115\nhn : n \u2260 0\nhf_bdd : \u2200 (x : \u211d), \u2203 y \u2208 Set.range f, x < y\nx : \u211d\na : \u03b9\nhax : x ^ (1 / \u2191n) < f a\n\u22a2 0 < \u2191n",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9171df48f3adfe318101adbbbae9771dff90a0e2/Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean#L455"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2025-04-22T17:56:46+02:00",
      "inclusion_date": "2025-04-22T23:16:22.108310+00:00"
    },
    "id": "be413472e395f4ada0f788c69719eae4047ed10b0ea6fe684e77bd040a5d13ac"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group",
      "commit": "c93714889b11af507b2aba887ed572442c733635",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 43,
      "start_column": 14,
      "end_line": 43,
      "end_column": 19
    },
    "debug_info": {
      "goal": "d : \u2115\na\u271d b\u271d : \u2191(\ud835\udcdb d)\n\u22a2 a\u271d \u2208 Restricted d \u2192 b\u271d \u2208 Restricted d \u2192 a\u271d * b\u271d \u2208 Restricted d",
      "url": "https://github.com/HEPLean/PhysLean/blob/c93714889b11af507b2aba887ed572442c733635/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-04-23T00:56:21+10:00",
      "inclusion_date": "2025-04-22T23:41:43.397834+00:00"
    },
    "id": "99b053006370fffe2a83eff1ec225c70986baa9f32a5f3c272c1edab77433d5a"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group",
      "commit": "c93714889b11af507b2aba887ed572442c733635",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 44,
      "start_column": 14,
      "end_line": 44,
      "end_column": 19
    },
    "debug_info": {
      "goal": "d : \u2115\nx\u271d : \u2191(\ud835\udcdb d)\n\u22a2 x\u271d \u2208 { carrier := Restricted d, mul_mem' := \u22ef, one_mem' := \u22ef }.carrier \u2192\n    x\u271d\u207b\u00b9 \u2208 { carrier := Restricted d, mul_mem' := \u22ef, one_mem' := \u22ef }.carrier",
      "url": "https://github.com/HEPLean/PhysLean/blob/c93714889b11af507b2aba887ed572442c733635/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-04-23T00:56:21+10:00",
      "inclusion_date": "2025-04-22T23:41:43.397834+00:00"
    },
    "id": "fc648fc33a34a12b28465821e7b05c6d6429ebde031a28d251db85c6a318654f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Execution.lean",
      "start_line": 185,
      "start_column": 2,
      "end_line": 185,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Execution.lean#L185"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "896d6432d41c7b0d133c82c603b2722eaf6036fa8bd78c0dd8f4ba7c0182212d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Execution.lean",
      "start_line": 278,
      "start_column": 2,
      "end_line": 278,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Execution.lean#L278"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "9bc294cc0227ea22ac03ad73f27cbaa04bdf291462401faebc10320da08863f3"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
      "start_line": 219,
      "start_column": 6,
      "end_line": 219,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n              (OptionT.run \u2218 fun cache =>\n                verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n          fun {\u03b1_1} q =>\n          match \u03b1_1, q with\n          | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n        fun __do_lift => __do_lift.getM)\n      ()).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/CommitmentScheme/MerkleTree.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-04-16T13:24:09-07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "bf5abd2438f25d6de798d94bf9b495e0e3b8e5cc5ba88af829e65b6c7aa28c01"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "5660ac2e84aa9398c62d43c4ba6c17e5420c27b25ec1c953309e905ef3750f82"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 =>\n          ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1.1), a.2.2.1, a.2.2.2,\n            a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "9dab56482964bc9b5560df7acc804f995ae65e3db75774af904d555155a9a285"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 201,
      "start_column": 2,
      "end_line": 201,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\ncompletenessError : \u211d\u22650\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn \u2192\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run stmtIn witIn R] \u2265\n        1 - \u2191completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run (data.fStmtIn stmtIn) (data.fWitIn witIn) R] \u2265\n    1 - \u2191completenessError\nx\u271d : (StmtOut' \u00d7 WitOut') \u00d7 StmtOut' \u00d7 pSpec.FullTranscript\na\u271d : x\u271d \u2208 (run (data.fStmtIn stmtIn) (data.fWitIn witIn) R).support\nhRelOut' : relOut' x\u271d.2.1 x\u271d.1.2 \u2227 x\u271d.1.1 = x\u271d.2.1\n\u22a2 ((fun x => relOut x.2.1 x.1.2 \u2227 x.1.1 = x.2.1) \u2218 fun a =>\n      ((data.fStmtOut (stmtIn, a.1.1), data.fWitOut (witIn, a.1.2)), data.fStmtOut (stmtIn, a.2.1), a.2.2))\n    x\u271d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L201"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-22T09:32:10-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "5b8e47146a7b0f13ad1679036acae7968c0dbe5279f746b32a8ac533ff165395"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 215,
      "start_column": 2,
      "end_line": 215,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L215"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "468d7cccde62cb6e6a856ebad4f59d7d5b1bc557bc64791b36af256395f682de"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
      "start_line": 229,
      "start_column": 2,
      "end_line": 234,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "5693e308d28f423f8b2d1faae0b1be7a5651230ccdef851961e9cb08b1667aef"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/OracleReduction/Security/Basic.lean",
      "start_line": 361,
      "start_column": 2,
      "end_line": 361,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L361"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "e7e93c3c5808e27103634da4adf56d6d57dbfd825f8112cc0118cfeeb31f6115"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 514,
      "start_column": 57,
      "end_line": 514,
      "end_column": 62
    },
    "debug_info": {
      "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                  \u27e81, \u22ef\u27e9 x.2 a),\n              a_1, Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Sumcheck/Basic.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "311454a9cdd659cce9ba66cee1762811b68392b523f180e30d223f07a878f9c8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
      "start_line": 523,
      "start_column": 2,
      "end_line": 523,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_1 : Unit) (a_1 : Statement R n i.succ)\n    (b_2 : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_3 : (pSpec R deg).FullTranscript),\n    (((a, b), b_1), (a_1, b_2), b_3) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      (match (a_1, b_2) with\n        | ({ target := target, challenges := challenges }, oStmt) =>\n          match oStmt 0 with\n          | \u27e8poly, property\u27e9 =>\n            \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n                (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n              target) \u2227\n        (a, b) = (a_1, b_2)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Sumcheck/Basic.lean#L523"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "679f5fc184b231978d837863741f8eaa985e71dd96ce4b97caefe9e461e6711d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 106,
      "start_column": 2,
      "end_line": 106,
      "end_column": 7
    },
    "debug_info": {
      "goal": "k : \u2115\n\u22a2 \u2200 (n : \u2115) (f : \u2102 \u2192 \u2102) (z : \u2102) (hf : \u2200 (z : \u2102), AnalyticAt \u2102 f z),\n    \u22ef.order \u2260 \u22a4 \u2192 ((\u2200 k < n, iteratedDeriv k f z = 0) \u2227 iteratedDeriv k f z \u2260 0 \u2194 \u22ef.order = \u2191n)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L106"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-23T18:11:52+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "a98b1ead9fa56944dfb177a7485fd70651cdfdcaf74dd4cebd9ba7a7fc8c1b90"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 125,
      "start_column": 74,
      "end_line": 125,
      "end_column": 79
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 \u2200 (f : \u2102 \u2192 \u2102) (z\u2080 : \u2102) (hf : \u2200 (z : \u2102), AnalyticAt \u2102 f z), (\u2200 k < n, iteratedDeriv k f z\u2080 = 0) \u2192 \u2191n \u2264 \u22ef.order",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L125"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-23T18:11:52+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "a59249705b34abc51e860efed72dea467fd81a4e049eab04b73a2cd7dee46b4f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 112,
      "start_column": 50,
      "end_line": 112,
      "end_column": 55
    },
    "debug_info": {
      "goal": "k : \u2115\nf : \u2102 \u2192 \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\n\u22a2 \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L112"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-23T18:11:52+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "665e5cf6f92e441232d11640cc0bf1433a8af5c3ddf959689f62bd831eeb4015"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 116,
      "start_column": 71,
      "end_line": 116,
      "end_column": 76
    },
    "debug_info": {
      "goal": "k : \u2115\nf : \u2102 \u2192 \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhfdev : \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z\n\u22a2 \u2200 (z : \u2102), \u22ef.order = \u22ef.order - 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-23T18:11:52+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "7960b68b88dc3342e2bc31527ed7108b0d9741fcd22995835e4622cb22d98a67"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 201,
      "start_column": 53,
      "end_line": 205,
      "end_column": 9
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' \u2022 \u03b1')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L201"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "09cc12df4d13e1a6384b15128e6ac1ff2e9f7ff63d48eeadbc4d60a6b544849d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 207,
      "start_column": 53,
      "end_line": 209,
      "end_column": 33
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' \u2022 \u03b2')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L207"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "1b4338af4cd61c689baa91592e7b68b018533c4a593f6564e60ea1ad0a0dba3b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 211,
      "start_column": 53,
      "end_line": 212,
      "end_column": 90
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' \u2022 \u03b3')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L211"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "366c72122992ef7b7c258f5f206745bb38e23eaad348c08eee3950d3e5b704c0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 215,
      "start_column": 66,
      "end_line": 233,
      "end_column": 24
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nk a b n : \u2115\n\u22a2 1 \u2264 n \u2192 k \u2264 n - 1 \u2192 1 \u2264 a \u2192 1 \u2264 b \u2192 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (n - 1) \u2022 (\u2191a + b \u2022 \u03b2') ^ k)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L215"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "35e3fe64bdcd4e6fbb752d80cfc172e70dad199f9b5bc2bfe5fab82b9200b27e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 236,
      "start_column": 57,
      "end_line": 242,
      "end_column": 42
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nu : K\nn k a l : \u2115\nhnk : a * l \u2264 n * k\nH : IsIntegral \u2124 (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') * u)\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (n * k) \u2022 u ^ (a * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "93f29c361b9b73dd0d783c3328ac218b9e7a9432fa122b8f722dd62ff33785ef"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 254,
      "start_column": 68,
      "end_line": 262,
      "end_column": 46
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n  let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n  IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (m K * q) \u2022 \u03b1' ^ (a * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L254"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "d1363095a50f95b2cc7b6a1b6a9d3f4de949bbbc075450317d1157f668fc344f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 268,
      "start_column": 69,
      "end_line": 276,
      "end_column": 46
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n  let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n  IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (m K * q) \u2022 \u03b3' ^ (b * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L268"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "c011666d8e666abda88d275f2b81a85a6f6c83521f23ae4d6e23996abf13e3b5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 300,
      "start_column": 79,
      "end_line": 319,
      "end_column": 78
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 IsIntegral \u2124 (c_coeffs K \u03b1' \u03b2' \u03b3' q \u2022 sys_coeffs K \u03b1' \u03b2' \u03b3' q t u)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L300"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "d5c8bc5585a23a6471f75969b5daea48d42a5d7458bc49a1ea15ec1cbff0b585"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 321,
      "start_column": 39,
      "end_line": 328,
      "end_column": 70
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 c\u2081 K \u03b1' \u03b2' \u03b3' \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L321"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "d832f45faf8f50eec176d9e16c18ac027b7f9cc1f4f913784e54b4d7e04c3f32"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 401,
      "start_column": 50,
      "end_line": 431,
      "end_column": 62
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 A K \u03b1' \u03b2' \u03b3' q hq0 h2mq \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L401"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "d01e6e6dfb0f065ca7bf952f556d29cea0a552fdef3c984f5d3feeb4f07971c1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 479,
      "start_column": 75,
      "end_line": 615,
      "end_column": 87
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 \u2200 (k : Fin (m K * n K q)) (l : Fin (q * q)),\n    house ((algebraMap (\ud835\udcde K) K) (A K \u03b1' \u03b2' \u03b3' q hq0 h2mq k l)) \u2264\n      c\u2083 K \u03b1' \u03b2' \u03b3' ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L479"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "ae737324da9d0f55492252deb14bd683500fa3078f27b22e557a7d3483d7cf44"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 946,
      "start_column": 2,
      "end_line": 946,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt\u271d\u00b9 : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nk : \u2115\nhR : R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d\u00b9 = 0\nt\u271d : Fin (q * q)\nthis : \u2200 (x : \u2102), iteratedDeriv k (fun x => R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d x) x = 0\nderiv_eq :\n  (iteratedDeriv k fun x => R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d x) = fun x =>\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) * \u03c1 \u03b1 \u03b2 q t ^ k\nderiv_eq_0 : iteratedDeriv k (fun x => R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d x) 0 = 0\nt : Fin (q * q)\nht : t \u2208 Finset.univ\n\u22a2 \u03c1 \u03b1 \u03b2 q t ^ \u2191t\u271d = \u03c1 \u03b1 \u03b2 q t ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L946"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T00:24:25+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "fd79e8138c1ccf7b0cd46ddf2aad4ecad8829f9cfab4082f16664d4becb559b0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1066,
      "start_column": 85,
      "end_line": 1135,
      "end_column": 61
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n  let k := \u2191(finProdFinEquiv.symm.toFun u).2;\n  l < n K q \u2192 iteratedDeriv k (R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) \u2191l = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1066"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "77b03331ed0667a80745bf92eb0c3595fc26b66a001b7b0b1d9a67c59182e47f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1324,
      "start_column": 2,
      "end_line": 1324,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115\u221e := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : k < n K q\nhk : iteratedDeriv k R \u2191l = 0\nhderiv : \u2115\n\u22a2 _root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq = \u2191hderiv \u2192 \u2203 b, \u2191(n K q) = \u2191b \u2227 b \u2264 hderiv",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1324"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "dfea1401180bbd6b04f9f896062df57ade88f6e5615da66a279e63b1d483187d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1328,
      "start_column": 15,
      "end_line": 1328,
      "end_column": 20
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  r \u2265 \u2191(n K q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1328"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T00:20:02+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "ec1ef39785ae00bc49cfe473f7af1f01e97d1f5f7b223ddb2989a80c2b32ad12"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1335,
      "start_column": 56,
      "end_line": 1335,
      "end_column": 61
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let R := R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t;\n  \u2203 l\u2080, iteratedDeriv r.toNat R \u2191\u2191l\u2080 \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1335"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
    },
    "id": "a67eb09dfbfdc759f080f0854a6ede2056b67ba2d20e00e725966f4a534e50ba"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_Brooks",
      "commit": "fa6694e531e2ec92868126c9489503a913613caa",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean",
      "start_line": 364,
      "start_column": 4,
      "end_line": 364,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nG : SimpleGraph \u03b1\ninst\u271d : G.LocallyFinite\nhodd : \u2200 (u : \u03b1) (w : G.Walk u u), \u00acOdd w.length\nhbd : \u2200 (v : \u03b1), G.degree v \u2264 2\nn : \u2115\nih : \u2200 m < n, \u2200 (s : Finset \u03b1), #s = m \u2192 G.PartColorable 2 \u2191s\ns : Finset \u03b1\nhn : #s = n\nhd : \u2200 v \u2208 s, G.degreeIn (\u2191s) v = 2\nhbd' : \u2200 v \u2208 s, G.degree v = 2\nhin : \u2200 {v : \u03b1}, v \u2208 s \u2192 \u2200 {w : \u03b1}, G.Adj v w \u2192 w \u2208 s\nhem : \u00ac\u00acs.Nonempty\nv : \u03b1\nhv : v \u2208 s\nC : G.PartColoring 2 \u2191(s.erase v)\nh : 1 < G.degree v\nx y : \u03b1\nhvx : G.Adj v x\nhvy : G.Adj v y\nhxy : x \u2260 y\nhxs : x \u2208 s\nhys : y \u2208 s\n\u22a2 Nonempty ((\u22a4.induce \u2191(s.erase v)).spanningCoe.Walk x y)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/fa6694e531e2ec92868126c9489503a913613caa/Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean#L364"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-23T22:36:17+01:00",
      "inclusion_date": "2025-04-24T13:26:10.715315+00:00"
    },
    "id": "3ab8bf47158fbfc8f8b17f8efd720653ea33144f48b971027da26d3b3fdff3b1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_Brooks",
      "commit": "fa6694e531e2ec92868126c9489503a913613caa",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean",
      "start_line": 367,
      "start_column": 4,
      "end_line": 367,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nG : SimpleGraph \u03b1\ninst\u271d : G.LocallyFinite\nhodd : \u2200 (u : \u03b1) (w : G.Walk u u), \u00acOdd w.length\nhbd : \u2200 (v : \u03b1), G.degree v \u2264 2\nn : \u2115\nih : \u2200 m < n, \u2200 (s : Finset \u03b1), #s = m \u2192 G.PartColorable 2 \u2191s\ns : Finset \u03b1\nhn : #s = n\nhd : \u2200 v \u2208 s, G.degreeIn (\u2191s) v = 2\nhbd' : \u2200 v \u2208 s, G.degree v = 2\nhin : \u2200 {v : \u03b1}, v \u2208 s \u2192 \u2200 {w : \u03b1}, G.Adj v w \u2192 w \u2208 s\nhem : \u00ac\u00acs.Nonempty\nv : \u03b1\nhv : v \u2208 s\nC : G.PartColoring 2 \u2191(s.erase v)\nh : 1 < G.degree v\nx y : \u03b1\nhvx : G.Adj v x\nhvy : G.Adj v y\nhxy : x \u2260 y\nhxs : x \u2208 s\nhys : y \u2208 s\nhw : Nonempty ((\u22a4.induce \u2191(s.erase v)).spanningCoe.Walk x y)\nw : (\u22a4.induce \u2191(s.erase v)).spanningCoe.Walk x y\n\u22a2 C x = C y",
      "url": "https://github.com/leanprover-community/mathlib4/blob/fa6694e531e2ec92868126c9489503a913613caa/Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean#L367"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-23T22:36:17+01:00",
      "inclusion_date": "2025-04-24T13:26:10.715315+00:00"
    },
    "id": "ecd9f5524f3852bb39247b81a47f86f60eb6effdce5a2e6186ba1f1cb02db6b7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "Amice_TransForm",
      "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
      "start_line": 58,
      "start_column": 51,
      "end_line": 58,
      "end_column": 56
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u2074 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u00b3 : CommRing S\ninst\u271d\u00b2 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b9 : AddCommGroup M\ninst\u271d : Module R M\nf : S \u2192\u2097[R] M\nn : \u2115\n\u22a2 (J ^ n \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I ^ n \u2022 \u22a4)).toAddSubmonoid",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "c738381ff48f",
      "blame_date": "2025-04-25T12:37:49+08:00",
      "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
    },
    "id": "5ebd3caf93db2da7520a546132bc405cc889f1163d9a9e130bd4e651b6971b2e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "Amice_TransForm",
      "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
      "start_line": 73,
      "start_column": 5,
      "end_line": 73,
      "end_column": 10
    },
    "debug_info": {
      "goal": "case mk\nR : Type u_1\ninst\u271d\u2076 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u2075 : CommRing S\ninst\u271d\u2074 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\nN : Submodule R M\nP : Type u_4\ninst\u271d\u00b9 : AddCommGroup P\ninst\u271d : Module R P\nf : S \u2192\u2097[R] M\nhp : (J \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I \u2022 \u22a4)).toAddSubmonoid\nm n : \u2115\nhmn : m \u2264 n\na1 : \u2115 \u2192 S\na2 : \u2200 {m n : \u2115}, m \u2264 n \u2192 a1 m \u2261 a1 n [SMOD J ^ m \u2022 \u22a4]\n\u22a2 f (a1 m) \u2261 f (a1 n) [SMOD I ^ m \u2022 \u22a4]",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "c738381ff48f",
      "blame_date": "2025-04-25T12:37:49+08:00",
      "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
    },
    "id": "35830cb4f81c62f28435a1ce92bb52181f57955ae5bfc0cacd424470ed3f1d51"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "Amice_TransForm",
      "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
      "start_line": 79,
      "start_column": 4,
      "end_line": 79,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u2076 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u2075 : CommRing S\ninst\u271d\u2074 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\nN : Submodule R M\nP : Type u_4\ninst\u271d\u00b9 : AddCommGroup P\ninst\u271d : Module R P\nf : S \u2192\u2097[R] M\nhp : (J \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I \u2022 \u22a4)).toAddSubmonoid\nr : R\na : AdicCauchySequence J S\n\u22a2 \u27e8fun n => f (\u2191(r \u2022 a) n), \u22ef\u27e9 = (RingHom.id R) r \u2022 \u27e8fun n => f (\u2191a n), \u22ef\u27e9",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "c738381ff48f",
      "blame_date": "2025-04-25T12:37:49+08:00",
      "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
    },
    "id": "688d771fcc8e0c2799acd6adafa4a5d81e5a84baee582d3404ca2cd0ae999495"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "Amice_TransForm",
      "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
      "start_line": 92,
      "start_column": 5,
      "end_line": 92,
      "end_column": 10
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u2076 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u2075 : CommRing S\ninst\u271d\u2074 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\nN : Submodule R M\nP : Type u_4\ninst\u271d\u00b9 : AddCommGroup P\ninst\u271d : Module R P\nf : S \u2192\u2097[R] M\nhp : (J \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I \u2022 \u22a4)).toAddSubmonoid\nm n : \u2115\nhmn : m \u2264 n\n\u22a2 transitionMap I M hmn \u2218\u2097 (fun n => AdicCompletion.ReduceModIdeal I J f n \u2218\u2097 \u2191R (eval J S n)) n =\n    (fun n => AdicCompletion.ReduceModIdeal I J f n \u2218\u2097 \u2191R (eval J S n)) m",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L92"
    },
    "metadata": {
      "blame_email_hash": "c738381ff48f",
      "blame_date": "2025-04-25T12:37:49+08:00",
      "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
    },
    "id": "067cc77c6f4186563fc6e9508d0dbf4cf1b02a40a238ac95ab5c31fc19a712ae"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 121,
      "start_column": 4,
      "end_line": 121,
      "end_column": 9
    },
    "debug_info": {
      "goal": "k : \u2115\nf : \u2102 \u2192 \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhfdev : \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z\nz : \u2102\nthis : AnalyticAt \u2102 (deriv^[k] f) z\n\u22a2 \u22ef.order = \u22ef.order - 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "fe963aa7a7239e3a4f7c9dc2ba383864807a6de67b78c4a3790f8fc2dfd77691"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 137,
      "start_column": 4,
      "end_line": 137,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mp.intro\nk n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nH1 : \u2200 k < n, iteratedDeriv k f z = 0\nH2 : iteratedDeriv k f z \u2260 0\n\u22a2 \u2203 g, AnalyticAt \u2102 g z \u2227 g z \u2260 0 \u2227 \u2200\u1da0 (z_1 : \u2102) in nhds z, f z_1 = (z_1 - z) ^ n \u2022 g z_1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L137"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "4425cb118900847ed8d098e9b1106a5f368a7748c4d8138e4962557917b50916"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 121,
      "start_column": 4,
      "end_line": 121,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nk n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\n\u22a2 \u22ef.order = \u2191n \u2192 (\u2200 k < n, iteratedDeriv k f z = 0) \u2227 iteratedDeriv k f z \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "39dac7c29ccf55e27f827bb987fad16f0d0558896b879c6b83575c54dc7beec8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 601,
      "start_column": 8,
      "end_line": 601,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081.h\u2080.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1 + m K * q + m K * q) \u2264 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (1 + 2 * m K * (2 * m K).sqrt)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L601"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T16:41:00+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "a2010e55f0fc9d95f3369bfe1bb23f25e052fa9e8f83f7616f040f264e670fd5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 643,
      "start_column": 8,
      "end_line": 643,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191a + \u2191b * \u03b2') ^ k \u2264 \u2191(2 * m K).sqrt * (1 + house \u03b2')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L643"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "3d823244f7e034e1e18c1434feaee90c5dfa31650d4a04c5308dde6d58241713"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 618,
      "start_column": 8,
      "end_line": 618,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b1' ^ (a * l) \u2264 house \u03b1' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L618"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "67965c499b4b59373330846a16df20d64195480f8c26c80ce608472b105e6ebd"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 666,
      "start_column": 8,
      "end_line": 666,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b3' ^ (b * l) \u2264 house \u03b3' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L666"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "3a3dd409c967c7a419e73c529c42ae07166f4ab40e85a02387aa8f6f633dd949"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1170,
      "start_column": 2,
      "end_line": 1170,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nhl : l < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\nh0 :\n  \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0\nh1 :\n  \u2191(\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) =\n    \u2211 x, \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u * \u2191(\u22ef.choose x)\n\u22a2 \u2211 i,\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq i) * sys_coeffs K \u03b1' \u03b2' \u03b3' q i u) =\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1170"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "f3d59fe1e180fbf3ecbada3f4f95b59b9ce4ac8e6331f86db48a4321df777b20"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1153,
      "start_column": 92,
      "end_line": 1153,
      "end_column": 97
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nhl : l < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\n\u22a2 \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1153"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "01cc0c6bbc8f49cfe6b66f37e8ddc4d7d729091767059d7be353e0e1e1a06720"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1335,
      "start_column": 2,
      "end_line": 1335,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 \u22ef.order \u2260 \u22a4",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1335"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "36b362a3935c50c79feb58fcdb833b6933ce146939318ca90d093102b329cc7d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1369,
      "start_column": 4,
      "end_line": 1369,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hf\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nhk : \u2115\n\u22a2 \u2200 (z : \u2102), AnalyticAt \u2102 (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1369"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "a850bbc0594a29c42e906cba30fe52e887b03ade002e9a245010b41445768dee"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1370,
      "start_column": 4,
      "end_line": 1370,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nhk : \u2115\n\u22a2 \u2200 k < n K q, iteratedDeriv k (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) \u2191\u2191u = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1370"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "80061ab3443b23a955ba8080eaa322ff82a5fa9cf487c43ffe4ba57900933782"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1411,
      "start_column": 15,
      "end_line": 1411,
      "end_column": 20
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  r \u2264 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1411"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T17:54:44+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "4a4aaec7bf9148a6eb2a49a561a5e4ea6bf76f2e2a9a4c16ec54c34f9a4d5e44"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1388,
      "start_column": 4,
      "end_line": 1388,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case refine_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nthis : (\u2200 k < n K q, iteratedDeriv k R \u2191l = 0) \u2227 iteratedDeriv k R \u2191l \u2260 0 \u2194 AnalyticAt.order \u22ef = \u2191(n K q)\n\u22a2 \u2203 l\u2080, iteratedDeriv r R \u2191\u2191l\u2080 \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1388"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "1ffb1ffb9ac2903622ea8d22ee7e1f9063946ff833700204bb3713cd1cadfe45"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1390,
      "start_column": 4,
      "end_line": 1390,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case refine_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\n\u22a2 \u22ef.order \u2260 \u22a4",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1390"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "263103f521125b2e0ef2ecc7803e249d917fd903671940c60318d02afa208679"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1492,
      "start_column": 2,
      "end_line": 1492,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nH :\n  \u2211 t,\n      \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n        sys_coeffs' \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t u =\n    0\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1492"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-01T02:10:10+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "4b399c931f21d0a20523a3dc88c8007ff14c04104c44e37bb68688efc6d02247"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1443,
      "start_column": 2,
      "end_line": 1443,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 IsIntegral \u2124\n    (|c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| \u2022\n      \u2211 t,\n        \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n          let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n          let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n          let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n          let l\u2080 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n          (\u2191a + b \u2022 \u03b2') ^ r * \u03b1' ^ (a * l\u2080) * \u03b3' ^ (b * l\u2080))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1443"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-21T01:11:30+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "b593100b9e1851c41ccce07880a962877d494eab0cd1eb195a619a00e9b5fe13"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1478,
      "start_column": 2,
      "end_line": 1478,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nH : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\n\u22a2 \u2016(Algebra.norm \u2124)\n        (RingOfIntegers.restrict\n          (fun x =>\n            \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) *\n              rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\n          \u22ef \u2124)\u2016 =\n    \u2191((Algebra.norm \u2124) \u2191c\u03c1) * \u2191((Algebra.norm \u2124) \u03c1)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1478"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-23T18:11:52+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "dd8dc1ff1d36b4941a3d43a9265b21107dc4225282f33092e2d26b45abf113b3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1520,
      "start_column": 6,
      "end_line": 1520,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 _root_.c\u2081 K \u03b1' \u03b2' \u03b3' ^ (h K * r + h K * 2 * m K * q) < (_root_.c\u2081 K \u03b1' \u03b2' \u03b3' ^ (h K * (2 * m K * q))) ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1520"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "54a1faac48316eeb1f48cb12ed2339a0cb892de7648fdcd223c353e21810738a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1526,
      "start_column": 8,
      "end_line": 1526,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 1 < (\u2191|c' K \u03b1' * c' K \u03b2' * c' K \u03b3'| ^ (\u2191(h K) * (2 * \u2191(m K) * \u2191q))) ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1526"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-23T18:11:52+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "9f9de7c5b728f5e01c3ed3050559aada062f4292bcbd41098141a52c2e1ea933"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1565,
      "start_column": 6,
      "end_line": 1565,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_2.hb\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1565"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "30c19372c58642202832eb9f851a602ad699d59dd14a467887b50f1d6688f258"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1586,
      "start_column": 4,
      "end_line": 1586,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2191|(Algebra.norm \u2124) \u03c1|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1586"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "59e661125fb0db0e8b74d286843806bf14469775c5e5236ecfda3bb70855b7f0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1588,
      "start_column": 2,
      "end_line": 1588,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case calc.step\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 |\u2191((Algebra.norm \u2124) \u03c1)| < \u2016(Algebra.norm \u211a) \u03c1\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1588"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "54f92dafbc5b02600153c3bb9c244c4a8eb0d4f684ecde1ae00cbe9e5190f669"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1656,
      "start_column": 8,
      "end_line": 1656,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 house\n        ((\u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun i).2 + 1) \u2022 \u03b2') ^\n            _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq *\n          \u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun i).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264\n    house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1656"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T03:28:14+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "f45a3036ef640fad5c0ec782304aa831f484e829e975941153dc319742582043"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1662,
      "start_column": 4,
      "end_line": 1662,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_5\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 \u2211 t,\n      c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) *\n        (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) \u2264\n    (\u2211 t, house (sys_coeffs' \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t u)) * \u2191\u2191t *\n          (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))) *\n        (c\u2086 * \u2191q) ^ r *\n      c\u2087 ^ \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1662"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T17:54:44+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "f76553ac20bef15a4846ed3825e07faaa91bd26d424f08f2caa8fe7e6b651dfb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1663,
      "start_column": 4,
      "end_line": 1663,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_6\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 (\u2211 t, house (sys_coeffs' \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t u)) * \u2191\u2191t *\n          (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))) *\n        (c\u2086 * \u2191q) ^ r *\n      c\u2087 ^ \u2191q \u2264\n    c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1663"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T17:54:44+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "a0b788c999a838a3b26ff55400dd939b24436f89a6e873377ffb7564471b20a9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1946,
      "start_column": 8,
      "end_line": 1946,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case hb.ha.h.h\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nz : \u2102\nhz : \u2016z\u2016 < \u2191(m K) * (1 + \u2191r / \u2191q) \u2227 \u00acz = \u2191\u2191l\u2080\nx : \u2102\nHX : x = \u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1946"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "76cf45a1f6f301a7653eb1a7699b71e597bcb007cd849e00cd4243fab6ec2349"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1947,
      "start_column": 6,
      "end_line": 1947,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case hb.hb\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nz : \u2102\nhz : z \u2208 Metric.ball 0 (\u2191(m K) * (1 + \u2191r / \u2191q)) \\ {\u2191\u2191l\u2080}\n\u22a2 Differentiable \u2102 fun y =>\n    \u220f k \u2208 Finset.range (m K) \\ {\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)},\n      ((\u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) - \u2191k) / (y - \u2191k)) ^\n        _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1947"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T21:06:47+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "65e63b4dbd4c0f6660be999ea636607621d0e84c064da87af1d30fa3a481acbc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1976,
      "start_column": 10,
      "end_line": 1976,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case hb.ha\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : \u2191\u2191l\u2080 < \u2191(m K)\n\u22a2 0 < \u2191r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1976"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T00:20:02+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "c58f60a3ba79a05a3e96e3a6c32577db017cfd49896855b1d0219bd9e2eff35d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1739,
      "start_column": 4,
      "end_line": 1739,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hc.h.a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191r / \u2191q)\n\u22a2 \u2016x\u2016 < \u2191(m K) * (1 + \u2191(_root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) / \u2191q) \u2227\n    \u00acx = \u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1739"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "f629bd0c5117a0168b69f7b19787c0b8d52b1ed0dc67580b5c9bce5d843f5e9c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2004,
      "start_column": 4,
      "end_line": 2004,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u22a2 \u03c3 \u03c1 = Complex.log \u03b1 ^ (-\u2191r) * S \u2191\u2191l\u2080",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2004"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "85d8f98868ccd7ef65c5b525785f641c229ecaf39cc56c7b42ea628cfd0ab5d8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1792,
      "start_column": 6,
      "end_line": 1792,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house ((algebraMap (\ud835\udcde K) K) (_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t)) \u2264\n    _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))\n\u22a2 \u2016\u03c3 \u2191(_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq i)\u2016 \u2264\n    _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1792"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T15:36:55+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "b7202115fc58575cc8505cea5217696688c051733c76e2f860028c9dbc16f533"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2060,
      "start_column": 8,
      "end_line": 2060,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_3.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * \u2191(m K) * (1 + \u2191r / \u2191q)) * \u2016\u03b1\u2016 \u2264 c\u2089 ^ (r + q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2060"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T17:31:30+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "c1df69e388ced8220b09df3b9c0261bfc73c04a18270e70ec1a236f202fd3c0f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2079,
      "start_column": 16,
      "end_line": 2079,
      "end_column": 21
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 0 \u2264 \u2191r / \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2079"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-16T17:08:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "cd071bca61efffbc0bee7430b72fde9978b346cf085b966fa34261cefb99b49b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1860,
      "start_column": 4,
      "end_line": 1860,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1860"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "a411c3a1fec72bb567c11a1524eb69cbe558f9eade42e99aaf0bb6b2f5e15e98"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2046,
      "start_column": 63,
      "end_line": 2046,
      "end_column": 68
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 \u2200 (i : Fin (q * q)), \u2016cexp (_root_.\u03c1 \u03b1 \u03b2 q i * z)\u2016 \u2264 Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * \u2191(m K) * (1 + \u2191r / \u2191q)) * \u2016\u03b1\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2046"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T16:59:45+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "d7215766580b4c68359c57835efe455570ccb41ae628bc00d2d61d781233cff0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1969,
      "start_column": 6,
      "end_line": 1969,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_3.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2016R z\u2016 * \u20161 / (z - \u2191l\u2080) ^ r\u2016 * \u2016\u220f k \u2208 Finset.range (m K) \\ {l\u2080}, ((\u2191l\u2080 - \u2191k) / (z - \u2191k)) ^ r\u2016 \u2264\n    c\u2081\u2080 ^ r * \u2191r ^ ((r + 3) / 2) * c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1969"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-16T17:08:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "2481f13071e73b61168db2adfa2acfc10ccfca0e48ebbf49c1accb6733b2654b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1976,
      "start_column": 4,
      "end_line": 1976,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r.factorial * (c\u2081\u2080 ^ r * \u2191r ^ ((r + 3) / 2) * c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)) \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1976"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T00:20:02+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "bbca8b0b7f95e832e93e677c6565ce6720b9d096f59525d3e71ed1f817291425"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2269,
      "start_column": 52,
      "end_line": 2269,
      "end_column": 57
    },
    "debug_info": {
      "goal": "\u03b3 \u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nh\u03b3 : \u03b3 = \u03b1 ^ \u03b2\n\u22a2 let R := R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t;\n  let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let l\u2080 := l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let S := S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let \u03c1 := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq;\n  let \u03b7 := \u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  \u03c3 \u03c1 = \u2191(2 * Real.pi)\u207b\u00b9 * \u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191\u2191l\u2080)\u207b\u00b9 * S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2269"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "ca0458bd526c49dc52a426f7b039c56b7cbd56617ae2a32444ccc764a7a25128"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2296,
      "start_column": 4,
      "end_line": 2296,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2016(2 * Real.pi)\u207b\u00b9\u2016 * \u2016\u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191\u2191l\u2080)\u207b\u00b9 * S z\u2016 \u2264\n    \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2296"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "d18f95b5d9494ebc2619da9c42f4627290f2024e849bf56ea021600989e6e34e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2297,
      "start_column": 4,
      "end_line": 2297,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r) \u2264\n    c\u2081\u2083 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2297"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "ba08b77c71fefe1e42064d5ec0cf0e022062fa8e8cb3434b2abcc06fdac58168"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2312,
      "start_column": 6,
      "end_line": 2312,
      "end_column": 11
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2312"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T15:36:55+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "ebb3a9a182c52220c6b1acde44f51fdea6ac39211ad2b4392336873bd1d74397"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2036,
      "start_column": 4,
      "end_line": 2036,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2036"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "885b3b7e6246c31c2d3b48ff7559ca8893f3eb38303373b0b04733167307eed0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2038,
      "start_column": 4,
      "end_line": 2038,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) =\n    c\u2081\u2084 ^ r * \u2191r ^ ((\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2038"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-23T18:11:52+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "df6868359a5e390049436aa0c0e0cc2191a8161356534e10e0da7193aace38ac"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2047,
      "start_column": 2,
      "end_line": 2047,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h.left\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2047"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "136683fe6640e0431e0e6d7ee16913a93593e676af553f8c7cf06f354df25545"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2049,
      "start_column": 2,
      "end_line": 2049,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h.right\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 \u2191(r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) ^\n      ((r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq - 3 * h K) / 2) \u2265\n    c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2049"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "79f5fc4859edfd3e96dcb24a0859844733ce4323c76f61facda4d02bb9f6655c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2062,
      "start_column": 4,
      "end_line": 2062,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r ^ (r / 2 - 3 * h K / 2) < c\u2081\u2084 ^ r * c\u2085 K \u03b1' \u03b2' \u03b3' q ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2062"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "4bb5e9e9d181535b0b3f59de7f571517026ac5c88fec800c6398994a027c53bf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2077,
      "start_column": 2,
      "end_line": 2077,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.intro.intro.intro.intro\n\u03b1 \u03b2 : \u2102\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nh\u03b3 : IsAlgebraic \u211a (\u03b1 ^ \u03b2)\nK : Type\nhK : Field K\nhNK : NumberField K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\nmain :\n  \u2200 (q : \u2115),\n    Fin (m K * n K q) \u2192\n      Fin (q * q) \u2192 0 < q \u2192 2 * m K \u2223 q ^ 2 \u2192 \u2203 r \u2265 n K q, \u2191r ^ ((r - 3 * h K) / 2) \u2265 c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r\nuse5 :\n  \u2200 (q : \u2115) (u : Fin (m K * n K q)) (t : Fin (q * q)) (hq0 : 0 < q) (h2mq : 2 * m K \u2223 q ^ 2),\n    let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n    let l\u2080 := l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n    let S := S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n    \u2191r ^ (r / 2 - 3 * h K / 2) < c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2077"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
    },
    "id": "9b03a2bd21fccca8c157ae1bf1f4e126ab60462d675743af7183b4bbdefb7395"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "128256283ac4ab7a1202fc068a51966182aac91a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Modal/Kripke/Balloon.lean",
      "start_line": 63,
      "start_column": 2,
      "end_line": 63,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03c6 : Formula \u2115\nM : Model\ninst\u271d : IsStrictOrder M.World M.Rel\nx : M.World\nh : \u00acx \u22a7 \u25a1\u03c6\n\u22a2 \u2203 y, x \u227a y \u2227 \u00acy \u22a7 \u03c6 \u2227 y \u22a7 \u25a1\u03c6",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/128256283ac4ab7a1202fc068a51966182aac91a/Foundation/Modal/Kripke/Balloon.lean#L63"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-26T09:19:50+09:00",
      "inclusion_date": "2025-05-04T23:12:16.117129+00:00"
    },
    "id": "822282cef6b5a9a87e68676e178aadb893b72f3ce8589fa54692a6d4f74dec12"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-normal-subgroup",
      "commit": "7efc0494a3f9ffa13d2d91a1a08147e152e16198",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Orthochronous.lean",
      "start_line": 206,
      "start_column": 4,
      "end_line": 206,
      "end_column": 9
    },
    "debug_info": {
      "goal": "d : \u2115\n\u039b : \u2191(\ud835\udcdb d)\nh_inv : orthchroRep \u039b\u207b\u00b9 = (orthchroRep \u039b)\u207b\u00b9\nh_orth : \u00acIsOrthochronous \u039b\nh\u039b_neg_1 : orthchroRep \u039b = Additive.toMul 1\n\u22a2 Additive.toMul 1 ^ (-1) = Additive.toMul 1",
      "url": "https://github.com/HEPLean/PhysLean/blob/7efc0494a3f9ffa13d2d91a1a08147e152e16198/PhysLean/Relativity/Lorentz/Group/Orthochronous.lean#L206"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-04-25T22:31:36+10:00",
      "inclusion_date": "2025-04-25T13:23:47.451861+00:00"
    },
    "id": "82cab58c5640390839077e906aeb2d41195fb2dc376f64deee531c795a3a7a3b"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-normal-subgroup",
      "commit": "7efc0494a3f9ffa13d2d91a1a08147e152e16198",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 58,
      "start_column": 14,
      "end_line": 58,
      "end_column": 19
    },
    "debug_info": {
      "goal": "d : \u2115\n\u039b O : \u2191(\ud835\udcdb d)\nhO : IsOrthochronous O\nh\u039b : IsOrthochronous \u039b\n\u22a2 IsOrthochronous (\u039b * O * \u039b\u207b\u00b9)",
      "url": "https://github.com/HEPLean/PhysLean/blob/7efc0494a3f9ffa13d2d91a1a08147e152e16198/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-04-25T23:07:18+10:00",
      "inclusion_date": "2025-04-25T13:23:47.451861+00:00"
    },
    "id": "54857a656da9dc2637c63410a22a059314f33cdc1634c493940940cd45ec81ff"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-normal-subgroup",
      "commit": "7efc0494a3f9ffa13d2d91a1a08147e152e16198",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 59,
      "start_column": 14,
      "end_line": 59,
      "end_column": 19
    },
    "debug_info": {
      "goal": "d : \u2115\n\u039b O : \u2191(\ud835\udcdb d)\nhO : IsOrthochronous O\nh\u039b : \u00acIsOrthochronous \u039b\n\u22a2 IsOrthochronous (\u039b * O * \u039b\u207b\u00b9)",
      "url": "https://github.com/HEPLean/PhysLean/blob/7efc0494a3f9ffa13d2d91a1a08147e152e16198/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-04-25T22:31:36+10:00",
      "inclusion_date": "2025-04-25T13:23:47.451861+00:00"
    },
    "id": "07360f171b5f050ee560707a280cd644dd538f50cbf288a838b33a200e9aed60"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 162,
      "start_column": 60,
      "end_line": 162,
      "end_column": 65
    },
    "debug_info": {
      "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u00bb = 1 \u2022 1 + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L162"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "3e73ea66dc72bdb85506f47a4a61f55d8f848317d1ad0f0b59db9e1e294be3eb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 163,
      "start_column": 25,
      "end_line": 163,
      "end_column": 30
    },
    "debug_info": {
      "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u00bb $a\u271d : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u00bb = $a\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L163"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "79fd4a7061657af5982a0065d004d1068dc38de3e72637483590fc5463b805bc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 285,
      "start_column": 31,
      "end_line": 285,
      "end_column": 36
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n$r\u271d : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n$expr\u271d : \u00ab$R\u00bb\n\u00ab$pr'\u00bb : $r\u271d = $expr\u271d\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$pr\u00bb : $expr\u271d * \u2191\u00ab$n\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u271d \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L285"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "9cb0a255d75f77b1ed12710e068bfdd121bb69ac79c8e5645ddabe273810c759"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 327,
      "start_column": 54,
      "end_line": 327,
      "end_column": 59
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d \u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 $r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n$r\u2081'\u271d \u00ab$r\u2081'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2081'\u00bb : $r\u2081'\u271d = \u00ab$r\u2081'\u00bb\n\u00ab$r\u2082'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082'\u00bb : \u00ab$r\u2082\u00bb = \u00ab$r\u2082'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082'\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L327"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "c41558a93128b8d42d5ec663bb1321f82091cd9b9f748a971fd3d8c91149677a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 339,
      "start_column": 53,
      "end_line": 339,
      "end_column": 58
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082\u00bb : \u00ab$r\u2082\u00bb = $expr\u271d\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + $expr\u271d = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L339"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "38d93f8c987b0bd1ca9604ac5477590e4ef15aaf46ac5353baed1d6b225e6d6a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 350,
      "start_column": 53,
      "end_line": 350,
      "end_column": 58
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$R\u2081\u00bb\n\u00ab$pr\u2081\u00bb : \u00ab$r\u2081\u00bb = $expr\u271d\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + $expr\u271d = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L350"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "615b85ce20348b7db69790997369ea18935333141092218ce11b3c694d0af33f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 507,
      "start_column": 37,
      "end_line": 507,
      "end_column": 42
    },
    "debug_info": {
      "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb \u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$R\u2081\u00bb : Type u\u2082 := \u00ab$R\u2082\u00bb\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n$r\u2081'\u271d \u00ab$r\u2082'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082'\u00bb : \u00ab$r\u2082\u00bb = \u00ab$r\u2082'\u00bb\n\u00ab$r\u2081'\u00bb : \u00ab$R\u2082\u00bb := \u00ab$r\u2081\u00bb\n\u00ab$pr\u2081'\u00bb : $r\u2081'\u271d = \u00ab$r\u2081'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb * \u00ab$r\u2082'\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L507"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-08T17:33:25+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "3ac5707ea2567ae38fa216b3247478e017c5c611efcf6858b24c57082e48a466"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 519,
      "start_column": 38,
      "end_line": 519,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb : Level\n\u00ab$R\u2081\u00bb : Type u\u2081\n\u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$_i\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb := \u00ab$_i\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2082'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082'\u00bb : \u00ab$r\u2082\u00bb = \u00ab$r\u2082'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082'\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L519"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "9ac0a2c4ba67793806bd3a51e572c62f30ec0221a884accb1d73b35dbaf6308c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/algebra",
      "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "Mathlib/Tactic/Algebra.lean",
      "start_line": 530,
      "start_column": 38,
      "end_line": 530,
      "end_column": 43
    },
    "debug_info": {
      "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb : Level\n\u00ab$R\u2081\u00bb : Type u\u2081\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$_i\u2081\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb := \u00ab$_i\u2081\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081'\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u2081'\u00bb : \u00ab$r\u2081\u00bb = \u00ab$r\u2081'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 \u00ab$r\u2081'\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L530"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-25T17:49:22+02:00",
      "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
    },
    "id": "eddefc05c612826bd4abb6b6c341a52be7f105fa2cf77b54664a3024abecc6a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 141,
      "start_column": 6,
      "end_line": 141,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case mpr.left\nk\u271d n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nH : \u22ef.order = \u2191n\nk : \u2115\nhk : k < n\n\u22a2 iteratedDeriv k f z = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T21:06:47+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "e45cd28f3bcfedff528ea31218709916462d675d1269b031c9658e10bdedcf7c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 143,
      "start_column": 6,
      "end_line": 143,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case mpr.right\nk n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nH\u271d : \u22ef.order = \u2191n\nH : iteratedDeriv k f z = 0\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T21:36:24+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "93cf291f39e46a57599a00ad75c106c27478b8f8a58a33632a9cf6e8ae42a50f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 159,
      "start_column": 2,
      "end_line": 159,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case h.h.right\nn : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nho : \u2200 (z : \u2102), \u22ef.order \u2260 \u22a4\nhd : \u2200 k < n, iteratedDeriv k f z = 0\n\u22a2 iteratedDeriv ?m.28578 f z \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L159"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T21:36:24+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "965659ffc9e085c9dfc82da0992ca30bb06fe8171d22f266420dbc8da9d25edf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 631,
      "start_column": 10,
      "end_line": 631,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081.h\u2080.h.h.left\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 1 \u2264 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L631"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-25T13:29:53+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "d11465fc93f1faaac83ef4b3cf07a45aadb58add8662b2c0d2a8f63b8ca2d83a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 632,
      "start_column": 10,
      "end_line": 632,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081.h\u2080.h.h.right\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 n K q - 1 + m K * q + m K * q \u2264 1 + 2 * m K * (2 * m K).sqrt",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L632"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-25T13:29:53+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "912241faeb859650cf38e8727de59167f7f9513dc89bd69cd73347e440edd005"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 653,
      "start_column": 8,
      "end_line": 653,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\nthis : house \u03b1' ^ (\u2191a * \u2191l) \u2264 house \u03b1' ^ (2 * \u2191(m K) ^ 2) \u2192 house \u03b1' ^ (a * l) \u2264 house \u03b1' ^ (2 * m K ^ 2)\n\u22a2 house \u03b1' ^ (\u2191a * \u2191l) \u2264 house \u03b1' ^ (2 * \u2191(m K) ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L653"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "1ca0cca5d24a81642d8e73d7082b60b76f4ff8cf3a2c2af1916a4c6f839c3460"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1203,
      "start_column": 2,
      "end_line": 1203,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115\nhl : k < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\nh0 :\n  \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0\nh1 :\n  \u2191(\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) =\n    \u2211 x, \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u * \u2191(\u22ef.choose x)\n\u22a2 \u2211 x,\n      \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) *\n        (cexp (\u03c1 \u03b1 \u03b2 q x * \u2191l) * \u03c1 \u03b1 \u03b2 q x ^ k * Complex.log \u03b1 ^ (-\u2191k)) =\n    0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1203"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "8fd4d83115d3f82e094f59f32efc863b1b5438f80e93207082af0db577011b49"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1186,
      "start_column": 92,
      "end_line": 1186,
      "end_column": 97
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115\nhl : k < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\n\u22a2 \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1186"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "00d6e73dff8efb605ce8f5f3aab517bb0f2b723b784fb235b2b4e7ff2cef8b53"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1367,
      "start_column": 2,
      "end_line": 1367,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 _root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq \u2260 \u22a4",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1367"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "5eecba4d3b8f1233416dc355693faa20a05991ef4d1583406f077432070e9390"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1400,
      "start_column": 4,
      "end_line": 1400,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case ho\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk\u271d : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nk : \u2115\nz : \u2102\n\u22a2 AnalyticAt.order \u22ef \u2260 \u22a4",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1400"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T16:31:01+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "362f6fa6774d6dcc1184b12a3c82ff2f54add915912bf3d039b361ff28ba433a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1405,
      "start_column": 4,
      "end_line": 1405,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk\u271d\u00b9 : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nk\u271d k : \u2115\nhk : k < n K q\nthis :\n  iteratedDeriv k (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t)\n      \u2191(\u2191(finProdFinEquiv.symm.toFun u).1 + 1) =\n    0\n\u22a2 iteratedDeriv k (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) \u2191\u2191u = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1405"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "9f0d312513719aeeb31b95c4f2370f9b7a801573b0a1e526a96d5e3b1e012cc8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1424,
      "start_column": 4,
      "end_line": 1424,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case refine_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (_root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nthis : (\u2200 k < n K q, iteratedDeriv k R \u2191l = 0) \u2227 iteratedDeriv k R \u2191l \u2260 0 \u2194 AnalyticAt.order \u22ef = \u2191(n K q)\n\u22a2 \u2203 l\u2080, iteratedDeriv r R \u2191\u2191l\u2080 \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1424"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "af9fffb1c7df94cee0f6fad3631b2e6dda2f46684cff39bf53272cb6c1c417d2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1426,
      "start_column": 4,
      "end_line": 1426,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case refine_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (_root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\n\u22a2 \u22ef.order \u2260 \u22a4",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1426"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T01:59:03+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "f3446567521e77e32d28cd347c2b13536d48fef042f06fb8ad5297f07cc441d8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1515,
      "start_column": 4,
      "end_line": 1515,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case inl\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nH1 :\n  |c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| =\n    c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)\n\u22a2 IsIntegral \u2124\n    ((c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)) \u2022\n      \u2211 t,\n        \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n          let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n          let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n          let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n          let l\u2080 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n          (\u2191a + b \u2022 \u03b2') ^ r * \u03b1' ^ (a * l\u2080) * \u03b3' ^ (b * l\u2080))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1515"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "387c861b4a323ed5ec4d0f87093c17f1d3ae81325b66eaf041f8376f11c512ad"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1516,
      "start_column": 4,
      "end_line": 1516,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case inr\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nH2 :\n  |c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| =\n    -(c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q))\n\u22a2 IsIntegral \u2124\n    (|c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| \u2022\n      \u2211 t,\n        \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n          let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n          let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n          let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n          let l\u2080 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n          (\u2191a + b \u2022 \u03b2') ^ r * \u03b1' ^ (a * l\u2080) * \u03b3' ^ (b * l\u2080))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1516"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "7c0476b1857231e6180ea3360aa618a2935d60d694fcf7b874bd6b6c89e1229c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1558,
      "start_column": 8,
      "end_line": 1558,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis\u271d :\n  (Algebra.norm \u211a) \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) =\n    \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) ^ Module.finrank \u211a K\nthis : \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016 \u2260 0\nh0 : 0 < |\u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)|\n\u22a2 1 \u2264 |\u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1558"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T16:31:01+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "f5ca54c086537440cf65a573b3a3e478e9b7731ee3b65543aca39a801daa4de6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1577,
      "start_column": 6,
      "end_line": 1577,
      "end_column": 11
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis\u271d :\n  (Algebra.norm \u211a) \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) =\n    \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) ^ Module.finrank \u211a K\nthis : \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016 \u2260 0\nh0 : 0 < \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\u2016\nh1 : 1 \u2264 \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\u2016 ^ Module.finrank \u211a K\nh2 : 0 < \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\n\u22a2 1 \u2264 \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1577"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T16:31:01+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "10c22bf89eec0965e390c9c55cf7db31502d9f7ac35d68be8c4f43798c2ac7b3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1674,
      "start_column": 6,
      "end_line": 1674,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case calc_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1674"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "2952e94f5dc08fd178f5a70803856099307c9a353e1f7588794473376e04a3f0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1683,
      "start_column": 8,
      "end_line": 1683,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 r \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1683"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T16:31:01+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "f3a45bc050078cb825cc3d86ba665864b907ebe349060489924014d4911659ba"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1688,
      "start_column": 10,
      "end_line": 1688,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case ha\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 1 < \u2191c\u2081",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1688"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T16:31:01+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "5db81fa3df50fd76074c9697bdfb860b321abfbf6b26d3387a4b430e68f9e4e8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1689,
      "start_column": 10,
      "end_line": 1689,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 h K * (r + 2 * m K * q) \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1689"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T16:31:01+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "d94763810eb1e27d449a2e82504459cdcdd33c1edfdaf899767a9c62df46ccdc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1696,
      "start_column": 4,
      "end_line": 1696,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 (\u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)))\u207b\u00b9 <\n    (|\u2191(_root_.c\u2081 K \u03b1' \u03b2' \u03b3')| ^\n        ((_root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq + 2 * m K * q) * Module.finrank \u211a K))\u207b\u00b9",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1696"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "72b79b72f34a2c5a90cde45e737eff333c0b2209907ec414ddf980b1f8cbf0c5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1798,
      "start_column": 12,
      "end_line": 1798,
      "end_column": 17
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house (\u2191a + b \u2022 \u03b2') ^ r * (house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) =\n    house \u03b3' ^ (b * l\u2080) * (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080))\n\u22a2 house \u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1)) \u2264 house \u03b3' ^ (b * l\u2080)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1798"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "92be71279ce13ef97b7aeeffb346d15bd2b535ac233431e9b5307cb3f75353f0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1804,
      "start_column": 16,
      "end_line": 1804,
      "end_column": 21
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house (\u2191a + b \u2022 \u03b2') ^ r * (house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) =\n    house \u03b3' ^ (b * l\u2080) * (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080))\n\u22a2 house (\u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun i).2 + 1) \u2022 \u03b2') ^\n      _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq \u2264\n    house (\u2191a + b \u2022 \u03b2') ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1804"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "8a9ddf30ff6fb651fc93c854d9ba22c9663755f3c998e8ce3ba894cae8da68a1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1807,
      "start_column": 16,
      "end_line": 1807,
      "end_column": 21
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house (\u2191a + b \u2022 \u03b2') ^ r * (house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) =\n    house \u03b3' ^ (b * l\u2080) * (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080))\n\u22a2 house \u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun i).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1)) \u2264 house \u03b1' ^ (a * l\u2080)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1807"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "653e6768c071883ced4377e03422c59c0fae05de5c06976ab307ed6a522567e4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1825,
      "start_column": 8,
      "end_line": 1825,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_5.h.h\u2082.h\u2081\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 house (\u2191a + \u2191b * \u03b2') ^ r * house \u03b1' ^ (a * l\u2080) \u2264 \u2191(2 * m K).sqrt * (1 + house \u03b2') * house \u03b1' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1825"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "bb3b7f41083aa526413ee0247368b2ba4a42802db2c126fe47353fe16913c207"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1826,
      "start_column": 8,
      "end_line": 1826,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_5.h.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 house \u03b3' ^ (b * l\u2080) \u2264 house \u03b3' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1826"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "d50e73568c4304ac6402ce4fa4b12b61b42cef1ad2d91defddae4d800de2c9e8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1855,
      "start_column": 8,
      "end_line": 1855,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_6.h\u2082.h\u2081\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 c\u2084 ^ n K q \u2264 c\u2084 ^ n K q * (c\u2086 * \u2191q) ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1855"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "36dfb904ff48b5f1a008632257302949bd212b3d85b7797598b31ee715352d68"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1856,
      "start_column": 8,
      "end_line": 1856,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case calc_6.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 \u2191(2 * m K).sqrt * (1 + house \u03b2') * house \u03b1' ^ (2 * m K ^ 2) * house \u03b3' ^ (2 * m K ^ 2) \u2264 c\u2087 ^ q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1856"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "8ab44d6f7fdebc0ceedadb0e188a4bd9255dbc13c7de4aab25126da23c9a4f1c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1874,
      "start_column": 10,
      "end_line": 1874,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case calc_6.h\u2082.b0.hb.ha\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 0 \u2264 c\u2086 * \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1874"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T18:53:41+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "773be5fbc2eb5ced646182764b23d6d84dde5da855c2991cf8fa1a255cea98fc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1892,
      "start_column": 4,
      "end_line": 1892,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_7\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 \u2191q * \u2191q * (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ r * c\u2087 ^ \u2191q) \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1892"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-24T17:54:44+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "dcd336ae2565f5fadae0c70c96c6dce85072946327c7473eb8be33c5ec145a52"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1912,
      "start_column": 82,
      "end_line": 1912,
      "end_column": 87
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115\nhl : l \u2208 Finset.range (m K)\n\u22a2 let R := R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t;\n  let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  \u2203 R', (\u2200 (z : \u2102), AnalyticAt \u2102 R' z) \u2227 \u2200 (x : \u2102), R x = (x - \u2191l) ^ r * R' x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1912"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T19:46:37+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "768d8881dfc81fc8e4da414667e578228d3f600701cc618b77ad6b80dcbe3878"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 1987,
      "start_column": 4,
      "end_line": 1987,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case hc.h.a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nx : \u2102\nhx : \u2016x\u2016 = \u2191(m K) * (1 + \u2191r / \u2191q) \u2228 \u2016x\u2016 < \u2191(m K) * (1 + \u2191r / \u2191q)\n\u22a2 \u2016x\u2016 < \u2191(m K) * (1 + \u2191(_root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) / \u2191q) \u2227\n    \u00acx = \u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1987"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "c678ab4c8b708f1d8ace827ff2b5ec4a75862b093fb152d3d8972966eb48791d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2111,
      "start_column": 4,
      "end_line": 2111,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q * \u2191q * (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2111"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "86c251742e89541f2ed16946dfd31dcc95abdca16016941aa4b2f2af5da52113"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2042,
      "start_column": 80,
      "end_line": 2042,
      "end_column": 85
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nlemma82 :\n  house ((algebraMap (\ud835\udcde K) K) (_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t)) \u2264\n    _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))\n\u22a2 house ((algebraMap (\ud835\udcde K) K) (_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t)) =\n    \u2016\u03c3 \u2191(_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq i)\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2042"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T21:06:47+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "468554d30e57c541edb1515ff0fc5776972c507c833f84e0d078a8f4e483d06a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2226,
      "start_column": 10,
      "end_line": 2226,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case calc_3.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u20161 / (z - \u2191l\u2080) ^ r\u2016 * \u2016\u220f k \u2208 Finset.range (m K) \\ {l\u2080}, ((\u2191l\u2080 - \u2191k) / (z - \u2191k)) ^ r\u2016 \u2264 c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2226"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T21:06:47+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "b079bc6b9d4f2fc3da2889e8eee6afb3091c0ec70936e36e0d5d8c5af4a21ae8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2230,
      "start_column": 10,
      "end_line": 2230,
      "end_column": 15
    },
    "debug_info": {
      "goal": "case calc_3.h\u2082.b0\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 0 \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2230"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-26T21:06:47+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "ea0c60b213be592dcfbaeea62f360c9fd8c7135bf588e5a00dc0a9b40c831725"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2237,
      "start_column": 4,
      "end_line": 2237,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r.factorial * (c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3)) * c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)) \u2264\n    c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2237"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-14T00:20:02+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "8429cf48b94145888f2ca08bf486ccf0dcb200601d816b7977335251cb4e78d8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2317,
      "start_column": 4,
      "end_line": 2317,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2317"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "dccc45aa76a70b0852f23eeb6a271f521a3e1b1d9e7c23360226af25ab4f60b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2328,
      "start_column": 2,
      "end_line": 2328,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nthis :\n  let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  r \u2264 n K q\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  \u2191r ^ ((r - 3 * h K) / 2) \u2265 c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2328"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "68757e366f0e63d62f6041bf5f063121483908b561ca92fc4e7741372f9e204a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2342,
      "start_column": 4,
      "end_line": 2342,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r ^ ((r - 3 * h K) / 2) < c\u2081\u2084 ^ r * c\u2085 K \u03b1' \u03b2' \u03b3' q ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2342"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "7509bd2e5ea7fb732cfbe2d354b72c36fc73fc484677c9c253f7058ab8f8fa7b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Mathlib/NumberTheory/h7.lean",
      "start_line": 2365,
      "start_column": 6,
      "end_line": 2365,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_1\n\u03b1 \u03b2 : \u2102\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nh\u03b3 : IsAlgebraic \u211a (\u03b1 ^ \u03b2)\nK : Type\nhK : Field K\nhNK : NumberField K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\nq : \u2115 := 5\nt : Fin (q * q) := sorry\nhq0 : 0 < q\nm : \u2115 := _root_.m K\nu : Fin (m * n K q) := sorry\n\u22a2 2 * m \u2223 q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2365"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-27T19:46:37+02:00",
      "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
    },
    "id": "9c8bdd09ff8f835fdc657dfa353e74bfaf6afebda20bdc0ecd071c890abfbb1e"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 104,
      "start_column": 2,
      "end_line": 104,
      "end_column": 7
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 \u2191(restricted d) = connectedComponent 1",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L104"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "d423a3a69947e84ef4b30c8cce205a385382b038d2985eddc62508a96c43620b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "master",
      "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "AesopTest/205.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : R x a\nh\u2083 : R y b\nfwd : R b y\nfwd_1 : R a x\nfwd_2 : R b b\nfwd_3 : R y y\nfwd_4 : R a a\nfwd_5 : R x x\n\u22a2 False",
      "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/205.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2025-04-29T23:07:06+02:00",
      "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
    },
    "id": "2ed3ed49a5906744d12cce67d1175d136b7f420f696980938c3b66e07db8e8de"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 33,
      "start_column": 4,
      "end_line": 33,
      "end_column": 9
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nn : \u2115\n\u22a2 ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "7da343b445893602116f449dd1d1af77d133c81a1e4cf12b9b8b74b89d1109fc"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nn : \u2115\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "ce8605e3cb983a7f69a9b55d6723560a27d5b860e3b5833f2e992c34e9a0ae1a"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 37,
      "start_column": 4,
      "end_line": 37,
      "end_column": 9
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nn : \u2115\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "0e63b9ab803add7e7d4b53400e9d2450a816d83a111ba47daa1142381a18d921"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 44,
      "start_column": 2,
      "end_line": 44,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro\nSmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), X * (1 + c\u2082 * \u03b5) \u2264 \u2191n \u2192 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\n\u22a2 \u2016\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X) -\n        (Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "b1daebe8b1954227504e642e5b783e31b8ac0d4c7f15af8b0bf5f4cdbd813fba"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 19,
      "start_column": 79,
      "end_line": 19,
      "end_column": 84
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u22a2 \u2203 c, 0 < c \u2227 \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L19"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "317c691ee911bd2cb36cfafc661d7d5b88c3b6c297f1eb33d49965bf28b13e24"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 23,
      "start_column": 77,
      "end_line": 23,
      "end_column": 82
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\n\u22a2 \u2203 c, 0 < c \u2227 \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "32aa01f6b3082216062f7845fff057c7bdfe869879bcc5bef771e6b41d3d2d2c"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 27,
      "start_column": 23,
      "end_line": 27,
      "end_column": 28
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\n\u22a2 3 < C",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "d6aadcf2215fb0f8555ec7fddee139b93c7a480aec6092fbfeec20789230c704"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
      "start_line": 39,
      "start_column": 41,
      "end_line": 39,
      "end_column": 46
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nn : \u2115\nn_le : \u2191n \u2264 X * (1 - c\u2081 * \u03b5)\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/AlphaProofTest.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "a9a8ca489aae85cadd564fd53292b75af188db7b06ea7d097597e922b353eaa2"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 375,
      "start_column": 6,
      "end_line": 375,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case pos\nSmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nn : \u2115\nn_eq_zero : n = 0\n\u22a2 MellinConvolution (fun x => if 0 < x \u2227 x \u2264 1 then 1 else 0) (DeltaSpike SmoothingF \u03b5) 0 \u2264 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L375"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "59b93f9c8b285d516300f9de8c1eca5400edfb5e8fb048949dbcfac4d0e73b5f"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 384,
      "start_column": 4,
      "end_line": 384,
      "end_column": 9
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nn : \u2115\n\u22a2 0 < \u2191n / X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L384"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "80c21e5189d2656cedc678502a479a68e690ec751569b87cc824bbf76681bcb6"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 388,
      "start_column": 4,
      "end_line": 388,
      "end_column": 9
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nn : \u2115\nn_le : \u2191n \u2264 X * (1 - c\u2081 * \u03b5)\nthis : 0 < \u2191n / X \u2192 \u2191n / X \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L388"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-04-30T17:09:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "d0e2307b143a14a564d71f68a634c071e051164957f205b4c2786be3bd339b4c"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 395,
      "start_column": 2,
      "end_line": 395,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro\nSmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), X * (1 + c\u2082 * \u03b5) \u2264 \u2191n \u2192 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L395"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
    },
    "id": "730c0bd201cf36d97991b55dd8e2794c3e455ea3796cdd60a8cb8b7cbd4fb4e2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Canada1998P5.lean",
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : \u2115\nhm : 0 < m\na b : \u2115\nhab : a \u2264 b\n\u22a2 a ^ 2 + b ^ 2 = m ^ 2 * (a * b + 1) \u2194 \u2203 n, \u2191a = Canada1998P5.A m hm n \u2227 \u2191b = Canada1998P5.A m hm (n + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Canada1998P5.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-16T22:18:26-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "62239788952adcb79ba570f27343552d8b045f99c302abe08c70693cd087595b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2004P6.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 n \u2208 Imo2004P6.SolutionSet \u2194 0 < n \u2227 \u2203 k, Imo2004P6.Alternating (n * k)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2004P6.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-30T13:21:06-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0d37a6e0abbd4257ed354cb0884c8d49150b82de67a073d1f22fd19fc890c330"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1972P4.lean",
      "start_line": 37,
      "start_column": 43,
      "end_line": 37,
      "end_column": 48
    },
    "debug_info": {
      "goal": "a b c d e : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2227 0 < e\n\u22a2 (a ^ 2 - c * e) * (b ^ 2 - c * e) \u2264 0 \u2227\n      (b ^ 2 - d * a) * (c ^ 2 - d * a) \u2264 0 \u2227\n        (c ^ 2 - e * b) * (d ^ 2 - e * b) \u2264 0 \u2227\n          (d ^ 2 - a * c) * (e ^ 2 - a * c) \u2264 0 \u2227 (e ^ 2 - b * d) * (a ^ 2 - b * d) \u2264 0 \u2194\n    (a, b, c, d, e) \u2208 Imo1972P4.solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1972P4.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "06d7320773ba8f6ef7a6782d69ea04acd90f9d9a7eeefe043e6912c5e8a70769"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa1993P3.lean",
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 IsLeast {c | \u2200 (f : \u2191(Set.Icc 0 1) \u2192 \u211d), Usa1993P3.valid f \u2227 \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 c * \u2191\u2191x} Usa1993P3.min_c",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1993P3.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-17T17:28:05-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "28d760fa62555434491d075d5aa4a8a81be808e4f7714beb97b452b62886e851"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1988P3.lean",
      "start_line": 37,
      "start_column": 28,
      "end_line": 37,
      "end_column": 33
    },
    "debug_info": {
      "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : f 1 = 1\nh\u2081 : f 3 = 3\nh\u2082 : \u2200 (n : \u2115), f (2 * n) = f n\nh\u2083 : \u2200 (n : \u2115), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh\u2084 : \u2200 (n : \u2115), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset \u2191{n | 0 < n \u2227 n \u2264 1988 \u2227 f n = n}\n\u22a2 A.card = Imo1988P3.solution",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1988P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "c922387043817c95c505704c1b52596dd60566c149ef567f05c02de89b1cab43"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1994P4.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m n : \u2124\n\u22a2 (m, n) \u2208 Imo1994P4.SolutionSet \u2194 0 < m \u2227 0 < n \u2227 m * n - 1 \u2223 n ^ 3 + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1994P4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-23T19:59:15-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "2d80a8ce00d2f6defbe0c92adc7c5223c87e194b77b3820fc639be7ebbc8e221"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1990P3.lean",
      "start_line": 30,
      "start_column": 4,
      "end_line": 30,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\nhn : 1 < n\nhnd : n ^ 2 \u2223 2 ^ n + 1\n\u22a2 n \u2208 Imo1990P3.solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1990P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-01T16:38:24-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "d583d5989070b4993e563f7d353b32dc929bc17e06ebcdd778cac8b967927ab8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1999P4.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x p : \u2115\n\u22a2 (x, p) \u2208 Imo1999P4.SolutionSet \u2194 0 < x \u2227 Nat.Prime p \u2227 x ^ (p - 1) \u2223 (p - 1) ^ x + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1999P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-01T11:05:51-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "bfb9ac1b9509511ca9ee7caeabdfbd5015795e934863698e39cbf8454367f63c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa1999P1.lean",
      "start_line": 46,
      "start_column": 2,
      "end_line": 46,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nc : Finset (Usa1999P1.checkerboard n)\nha : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nhb : \u2200 x \u2208 c, \u2200 y \u2208 c, \u2203 p, List.Chain' (Usa1999P1.adjacent n) p \u2227 p.head? = some x \u2227 p.getLast? = some y\n\u22a2 n ^ 2 \u2264 c.card * 3 + 2",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1999P1.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T15:42:10-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "85b4909a02996bd4bb85848c10febd7adfe12dba9bf00ea1b79860f937c284cd"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1998P6.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u2115+ \u2192 \u2115+\nh : \u2200 (s t : \u2115+), f (t ^ 2 * f s) = s * f t ^ 2\n\u22a2 IsLeast {n | n = \u2191(f 1998)} \u2191Imo1998P6.solution",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1998P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:49:10-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "b265c8d3788e1194e6a9536ffd4015bfb6d42b6c6686619c896e5889b38a9d28"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2014P4.lean",
      "start_line": 48,
      "start_column": 2,
      "end_line": 48,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B C P Q M N : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nacuteA : EuclideanGeometry.angle C A B < Real.pi / 2\nacuteB : EuclideanGeometry.angle A B C < Real.pi / 2\nacuteC : EuclideanGeometry.angle B C A < Real.pi / 2\nhP : Sbtw \u211d P B C\nhQ : Sbtw \u211d Q B C\nhPAB : EuclideanGeometry.angle P A B = EuclideanGeometry.angle B C A\nhCAQ : EuclideanGeometry.angle C A Q = EuclideanGeometry.angle A B C\nhM : M \u2208 affineSpan \u211d {A, M}\nhN : Q \u2208 affineSpan \u211d {A, N}\nhPAM : P = midpoint \u211d A M\nhQAN : Q = midpoint \u211d A N\n\u22a2 let ABC := { points := ![A, B, C], independent := hABC };\n  let D := \u2191(affineSpan \u211d {B, M}) \u2229 \u2191(affineSpan \u211d {C, N});\n  D.Nonempty \u2227 D \u2286 Metric.sphere (Affine.Simplex.circumsphere ABC).center (Affine.Simplex.circumsphere ABC).radius",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2014P4.lean#L48"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-17T13:26:17-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "1dca87dc53dbe7789a871a999935f5923c9abc2b047c636ad86b17aa396f9e04"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1961P1.lean",
      "start_line": 44,
      "start_column": 54,
      "end_line": 44,
      "end_column": 59
    },
    "debug_info": {
      "goal": "a b x y z : \u211d\n\u22a2 (x, y, z) \u2208 Imo1961P1.xyz_of_ab a b \u2194 Imo1961P1.IsSolution a b x y z",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1961P1.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "1cba6f5cab23298e6fb113dea3597bcdbbe84f22b335a2e401fda57cd6d28109"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1961P1.lean",
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 (a, b) \u2208 Imo1961P1.ab_that_make_xyz_positive_distinct \u2194\n    \u2200 (x y z : \u211d), Imo1961P1.IsSolution a b x y z \u2192 0 < x \u2227 0 < y \u2227 0 < z \u2227 [x, y, z].Nodup",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1961P1.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "fbb923603d7cd7ea703f2f6804fa8f3dc10570ca3d1a02b814cb408dc3541731"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2023P2.lean",
      "start_line": 93,
      "start_column": 28,
      "end_line": 93,
      "end_column": 33
    },
    "debug_info": {
      "goal": "V : Type u_1\nPt : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup V\ninst\u271d\u00b3 : InnerProductSpace \u211d V\ninst\u271d\u00b2 : MetricSpace Pt\ninst\u271d\u00b9 : NormedAddTorsor V Pt\nhd2 : Fact (finrank \u211d V = 2)\ninst\u271d : Oriented \u211d V (Fin 2)\nA B C D E L S P : Pt\n\u03a9 \u03c9 : Sphere Pt\nperp_A_BC prll_D_BC tang_P_\u03c9 : AffineSubspace \u211d Pt\nh_acute_ABC : @acute V Pt inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 A B C\nh_AB_lt_BC : dist A B < dist A C\nh_\u03a9 : {A, B, C} \u2286 Metric.sphere \u03a9.center \u03a9.radius\nh_S_\u03a9 : dist S C = dist S B \u2227 S \u2208 Metric.sphere \u03a9.center \u03a9.radius\nh_S_A : (oangle C B S).sign = (oangle C B A).sign\nh_perp_A_BC : @perp_to V Pt inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 perp_A_BC (affineSpan \u211d {B, C}) \u2227 A \u2208 perp_A_BC\nh_D : D \u2208 \u2191perp_A_BC \u2229 \u2191(affineSpan \u211d {B, S})\nh_E : E \u2208 \u2191perp_A_BC \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_E_ne_A : E \u2260 A\nh_prll_D_BC : D \u2208 prll_D_BC \u2227 prll_D_BC.Parallel (affineSpan \u211d {B, C})\nh_L : L \u2208 \u2191prll_D_BC \u2229 \u2191(affineSpan \u211d {B, E})\nh_\u03c9 : {B, D, L} \u2286 Metric.sphere \u03c9.center \u03c9.radius\nh_P : P \u2208 Metric.sphere \u03c9.center \u03c9.radius \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_P_ne_B : P \u2260 B\nh_tang_P_\u03c9 : @is_tangent V Pt inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 tang_P_\u03c9 \u03c9 \u2227 P \u2208 tang_P_\u03c9\n\u22a2 \u2203 X \u2208 \u2191tang_P_\u03c9 \u2229 \u2191(affineSpan \u211d {B, S}), angle B A X = angle X A C \u2227 angle B A X < Real.pi / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P2.lean#L93"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2024-06-30T13:54:06-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "34df4f8f8aa5f2ddcfd37152c10166b9d2d145594119fd7a377614107b756d84"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2003P1.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : Finset \u2115\nhA : A \u2286 Imo2003P1.S\n\u22a2 \u2203 t, \u2200 (i j : Fin 100), i \u2260 j \u2192 Disjoint {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t i) = x} {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t j) = x}",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2003P1.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T21:07:17-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "5c0eb630f160e8dd535d84ba0fd2c3550d6a332cf9a7d413eb9a9df944fb1ab4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2001P1.lean",
      "start_line": 55,
      "start_column": 6,
      "end_line": 55,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.right\nf : Fin 8 \u2192 Finset (Fin 23) :=\n  fun x =>\n    @Usa2001P1.usa2001_p1.match_1 (fun x => Finset (Fin 23)) x (fun _ => {1, 2, 3, 4, 5, 6})\n      (fun _ => {1, 7, 8, 9, 10, 11}) (fun _ => {1, 12, 13, 14, 15, 16}) (fun _ => {2, 7, 12, 17, 18, 19})\n      (fun _ => {3, 8, 13, 17, 20, 21}) (fun _ => {4, 9, 14, 17, 22, 23}) (fun _ => {5, 10, 15, 18, 20, 22}) fun _ =>\n      {6, 11, 16, 19, 21, 23}\nx y : Fin Usa2001P1.min_colors\ni j : Fin 8\nhij : i \u2260 j\nhx : x \u2208 f i\nhy : y \u2208 f i\n\u22a2 \u00ac(x \u2208 f j \u2227 y \u2208 f j)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2001P1.lean#L55"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-05T14:18:02-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "e00370def1eb4fc72ccb3202b29fdf24dfb3e7f5aa05706b263cac03bf23b14c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2001P1.lean",
      "start_line": 56,
      "start_column": 4,
      "end_line": 56,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case right\n\u22a2 Usa2001P1.min_colors \u2208 lowerBounds Usa2001P1.possible_num_colors",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2001P1.lean#L56"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-20T22:49:53-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "c011faeba3578a6b7e88e78ceb737f6b134f946f3f42ebc487d9fb1290ed3b93"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P2.lean",
      "start_line": 38,
      "start_column": 41,
      "end_line": 38,
      "end_column": 46
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : angle D A B = angle A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := angle D A C\nthis : angle D A C = angle D C A\ny : \u211d := angle C A B\n\u22a2 angle D A B = x + y",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P2.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T20:53:40-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "da2e893bb5d81b5e16b625ad14a665c5e871730695196605e98d0a744545a916"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P2.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : angle D A B = angle A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := angle D A C\nthis\u271d : angle D A C = angle D C A\ny : \u211d := angle C A B\nthis : angle A B C = x + y\n\u22a2 angle B E C = angle D A C",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P2.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-28T19:13:25-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "119629d6955ce8c582bf16782ebb26a613353218691af3cac112bf3ab90c7e07"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1996P3.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u2115 \u2192 \u2115\n\u22a2 f \u2208 Imo1996P3.SolutionSet \u2194 \u2200 (m n : \u2115), f (m + f n) = f (f m) + f n",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1996P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:27:20-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "3686f68a257c6dbb16f13e785874ec08c7038e3f825e693bb40e473e917f7fd7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2009P6.lean",
      "start_line": 205,
      "start_column": 8,
      "end_line": 205,
      "end_column": 13
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := Imo2009P6.extendPerm n' n p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2264 x)\nh35 : n' \u2264 n\n\u22a2 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-27T11:09:42-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "960db7ea904455842b2aded2ace1bec04e3ecac90ebfe6db67f3612259178502"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2009P6.lean",
      "start_line": 229,
      "start_column": 8,
      "end_line": 229,
      "end_column": 13
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := Imo2009P6.extendPerm n' n p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x)\nh35 : n' \u2264 n\nh33 : \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)\n\u22a2 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-25T14:14:36-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "04f41604a60097c7e0c98bb076f08111750a897f1f85c234332f06ecb897ba1c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa1998P4.lean",
      "start_line": 66,
      "start_column": 6,
      "end_line": 66,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h\ns : Usa1998P4.chessboard\n\u22a2 @List.foldl Usa1998P4.coloring Usa1998P4.Rectangle Usa1998P4.recolor_rect Usa1998P4.start_coloring\n      (List.map (fun x => Usa1998P4.Rectangle.mk (2 * x) 0 1 98) (List.range 49) ++\n        List.map (fun y => Usa1998P4.Rectangle.mk 0 (2 * y) 98 1) (List.range 49))\n      s =\n    0",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1998P4.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-14T08:31:05-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "fdddbf2c2209dff5be2e8419b11a85b506f1333b24547d18b9aaa51e1311b01b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa1998P4.lean",
      "start_line": 71,
      "start_column": 4,
      "end_line": 71,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case right.intro.intro\nn : \u2115\nrs : List Usa1998P4.Rectangle\nhrs : Usa1998P4.all_same_color (List.foldl Usa1998P4.recolor_rect Usa1998P4.start_coloring rs)\nhrsl : rs.length = n\n\u22a2 Usa1998P4.min_clicks \u2264 n",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1998P4.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T20:46:44-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "5b0aeb1c99ad0e573f9ce87febb4222250063a3e645661c2bc2364319d4f2baf"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1998P4.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u2115\n\u22a2 0 < a \u2227 0 < b \u2227 a * b ^ 2 + b + 7 \u2223 a ^ 2 * b + a + b \u2194 (a, b) \u2208 Imo1998P4.solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1998P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:45:18-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "c5477ddb59e814506590de180d989dd839a84ce0c0cb7abbf611e853695d1687"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1971P5.lean",
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7
    },
    "debug_info": {
      "goal": "m : \u2115\n\u22a2 \u2203 S, S.Finite \u2227 \u2200 s \u2208 S, Nat.card \u2191(@setOf Imo1971P5.Pt fun t => dist s t = 1) = m",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1971P5.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-22T17:20:29-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "5dcc081a306952e28f929a146119ca29c3a69bc91dc42770d7d08655ac6f51fc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2010P3.lean",
      "start_line": 36,
      "start_column": 38,
      "end_line": 36,
      "end_column": 43
    },
    "debug_info": {
      "goal": "case h\ng : Imo2010P3.PosInt \u2192 Imo2010P3.PosInt\nc : Imo2010P3.PosInt\nhc : \u2200 (x : Imo2010P3.PosInt), g x = x + c\nm n : Imo2010P3.PosInt\n\u22a2 (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2010P3.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-01-21T08:16:08-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a79061c2831b745cd433c8e3d58d7d903e1775531058b3c594fd20b77e49ab4d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2016P4.lean",
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 IsLeast {b | \u2203 a, Imo2016P4.Fragrant {p | \u2203 i < b, \u2191p = Imo2016P4.P (a + 1 + \u2191i)}} Imo2016P4.Solution",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2016P4.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-11T08:43:20-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0969fe155595fd380bde077dcb42469020538524cbe6f2166cce7c6dbde73539"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2018P2.lean",
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\n\u22a2 (3 \u2264 n \u2227 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)) \u2192 n \u2208 Imo2018P2.solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P2.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T08:47:40-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "d9963c9b701ff9c65cd742dbef78e01972681a7c5c790c9a15762ad5d10aabf4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1998P3.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "k : \u2115\n\u22a2 k \u2208 Imo1998P3.solution_set \u2194 \u2203 n, (n ^ 2).divisors.card = k * n.divisors.card",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1998P3.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:57:30-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "93a257de69208582ccd8e599b0c675ca863c3c03369fb42307c749214edcd323"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2003P2.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : \u2124\n\u22a2 (a, b) \u2208 Imo2003P2.solution_set \u2194 0 < a \u2227 a < b \u2227 \u2203 c, 0 < c \u2227 c * (2 * a * b ^ 2 - b ^ 3 + 1) = a ^ 2",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2003P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-09T08:45:13-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "06689949c3c1072e5ecec297fd0f9db995331b106e5674faef46d36b535aa1c2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 121,
      "start_column": 40,
      "end_line": 121,
      "end_column": 45
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\n\u22a2 \u2200 (i : Fin n), 0 < c i",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "2cd0e906beecb131552ab5e41e40aa62405a2a4fcd538f4938566bfc8a9e8d5a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 122,
      "start_column": 39,
      "end_line": 122,
      "end_column": 44
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\n\u22a2 \u2211 i, c i = k",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a7713b6989c1203e6c2b7005c93db7bd7ec5c6633c7da91ae6543fc715cb0ea6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 132,
      "start_column": 40,
      "end_line": 132,
      "end_column": 45
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9\n\u22a2 \u2191y < n",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "000b33c6b202045b15ff7a080b1bd482e8973c6dfa4a4e469454cdfda102e691"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 134,
      "start_column": 21,
      "end_line": 134,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 i \u2208 {j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191y', \u22ef\u27e9}",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "58ed65445c283c2ac86726a2ac1a0d1f2885fb2190749f0a180480f11aef3329"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 134,
      "start_column": 57,
      "end_line": 134,
      "end_column": 62
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 \u2191y + n < 2 * n",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "64c96dbed995571a209ceee3474633c4a88fa86ff0377bf2ee0cc16730e417bf"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\nhg1 : Imo2008P5.NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | Imo2008P5.\u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "765b12bfa4d6cd7cd9d5379a23e5d5153663873fba82d34a32e52cf8d24559e6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 147,
      "start_column": 4,
      "end_line": 147,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.e_a\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | Imo2008P5.\u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := sorry;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\na : Fin n\n\u22a2 (Finset.filter\n        (Membership.mem {j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191a, \u22ef\u27e9})\n        Finset.univ).card =\n    c a",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L147"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-05-02T10:48:28-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "631748d080a14c9c065875f64dddb34c198186dafee26ed41faec42b81c62f11"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 167,
      "start_column": 6,
      "end_line": 167,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case left\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | Imo2008P5.\u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := sorry;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\nx y : S\nhxy : p x = p y\n\u22a2 x = y",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "2c0da09ba8cf90c4b6b11afa6287e02c2bbe032d2c65426fab38300603228c5e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2008P5.lean",
      "start_line": 169,
      "start_column": 6,
      "end_line": 169,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case right.mk\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | Imo2008P5.\u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := sorry;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\ng : { f // Imo2008P5.NSequence n k f }\nhg : g \u2208 {g | Imo2008P5.\u03c8 n k g = f}\n\u22a2 \u2203 a, p a = \u27e8g, hg\u27e9",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "b9db34d9a50da13d6ff56ff981ab94b89e2809984cb437af2365607420083cca"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2017P5.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "c : \u211d\n\u22a2 c \u2208 Usa2017P5.solution_set \u2194\n    0 < c \u2227\n      \u2203 l,\n        (Set.range l).Finite \u2227\n          (\u2200 (p : \u2124 \u00d7 \u2124), 0 < l p) \u2227\n            \u2200 {p1 p2 : \u2124 \u00d7 \u2124}, p1 \u2260 p2 \u2192 l p1 = l p2 \u2192 Usa2017P5.dist \u2191(l p1) \u2191(l p2) \u2264 c ^ l p1",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2017P5.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T15:48:13-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "dd8bf9ae880d1c508bc1be1794bb1230798f3ebe4add4aca5c3923d7a5d896e6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2004P2.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "P : Polynomial \u211d\n\u22a2 P \u2208 Imo2004P2.SolutionSet \u2194\n    \u2200 (a b c : \u211d),\n      a * b + b * c + c * a = 0 \u2192\n        Polynomial.eval (a - b) P + Polynomial.eval (b - c) P + Polynomial.eval (c - a) P =\n          2 * Polynomial.eval (a + b + c) P",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2004P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-06T15:22:50-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "80c640e02f114faed894494f0033e2d3304ae89691540614b1954942fd92ca12"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1976P4.lean",
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 IsGreatest {n | \u2203 s, \u2211 i \u2208 s, i = 1976 \u2227 \u220f i \u2208 s, i = n} Imo1976P4.solution",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1976P4.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-26T10:31:58-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "9e381b03b5f12ef13d3580c4780b829e06de3edf314fbb05c93c4b9074e43666"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1979P5.lean",
      "start_line": 33,
      "start_column": 76,
      "end_line": 33,
      "end_column": 81
    },
    "debug_info": {
      "goal": "a : \u211d\n\u22a2 (\u2203 x1 x2 x3 x4 x5,\n      x1 \u2265 0 \u2227\n        x2 \u2265 0 \u2227\n          x3 \u2265 0 \u2227\n            x4 \u2265 0 \u2227\n              x5 \u2265 0 \u2227\n                x1 + 2 * x2 + 3 * x3 + 4 * x4 + 5 * x5 = a \u2227\n                  x1 + 2 ^ 3 * x2 + 3 ^ 3 * x3 + 4 ^ 3 * x4 + 5 ^ 3 * x5 = a ^ 2 \u2227\n                    x1 + 2 ^ 5 * x2 + 3 ^ 5 * x3 + 4 ^ 5 * x4 + 5 ^ 5 * x5 = a ^ 3) \u2194\n    a \u2208 Imo1979P5.solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1979P5.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "ac4e63ce9fc18cff0f8951a36e815792d72e8a90b25fa3a72dd9f1b0b188d52d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2022P3.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "k : \u2115\nhk : 0 < k\nS : Finset \u2115\nhS : \u2200 p \u2208 S, Odd p \u2227 Nat.Prime p\np\u2081 p\u2082 : Fin S.card \u2243 { x // x \u2208 S }\nhp\u2081 : Imo2022P3.Condition k S p\u2081\nhp\u2082 : Imo2022P3.Condition k S p\u2082\n\u22a2 (\u2203 i, \u2200 (j : Fin S.card), p\u2082 j = p\u2081 (j + i)) \u2228 \u2203 i, \u2200 (j : Fin S.card), p\u2082 j = p\u2081 (j.rev + i)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2022P3.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-04-15T08:25:26-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "58564f03d4b48fdb2e8633ee02aeb13f8e3a7c824899ef60d59d75937fcbde07"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2018P3.lean",
      "start_line": 69,
      "start_column": 2,
      "end_line": 69,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nt : Imo2018P3.antipascal_triangle 2018\nht :\n  \u2200 (n : \u2115),\n    1 \u2264 n \u2192\n      n \u2264 \u2211 i \u2208 Finset.range 2018, (i + 1) \u2192\n        \u2203 r \u2264 2018, \u2203 c < r, Imo2018P3.antipascal_triangle.f 2018 t (Imo2018P3.Coords.mk r c) = n\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P3.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-09-16T20:32:12-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0a642c5bf7192175912fe79083962a301f55ea5f77c25243d03afb48b7cf37c1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1995P4.lean",
      "start_line": 33,
      "start_column": 89,
      "end_line": 33,
      "end_column": 94
    },
    "debug_info": {
      "goal": "x : \u2115 \u2192 \u211d\nh : x 0 = x 1995\nh1 : \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i\n\u22a2 x 0 \u2264 Imo1995P4.solution \u2227\n    \u2203 x,\n      x 0 = Imo1995P4.solution \u2227\n        x 0 = x 1995 \u2227 \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1995P4.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "f07f9af73ff30aa936e22a53a43f0ad6d07bd818151dccd2f470136ce35388c1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2024P2.lean",
      "start_line": 42,
      "start_column": 5,
      "end_line": 42,
      "end_column": 10
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 IsLeast {k | \u2203 S, Usa2024P2.Good S \u2227 k = {z | Usa2024P2.InAtLeastKSubsets S k z}.ncard} Usa2024P2.solution",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2024P2.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-29T08:54:06-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "205cd064853d6ddc55ceae96e63d7165d464d3d4d4c13a69b3050016b7a72a65"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2023P1.lean",
      "start_line": 34,
      "start_column": 4,
      "end_line": 34,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.mp\nx : \u2115\n\u22a2 x \u2208 Imo2023P1.solution_set \u2192 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 Imo2023P1.P n}",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P1.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0c863d81da80821970098bf2284700653ea3c00041830438a5ea9efce69cfa79"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2023P1.lean",
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.mpr\nx : \u2115\n\u22a2 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 Imo2023P1.P n} \u2192 x \u2208 Imo2023P1.solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P1.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "bf3d5520a0b705b6ba8a5a1b10b15e39b64b1ce9aff00c18ee012453cbb7e69b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2023P5.lean",
      "start_line": 52,
      "start_column": 2,
      "end_line": 52,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P5.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T09:39:50-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "da17bb5f8e326e4691ef4141395366a69a7294bd16efb584116cf68d090082fb"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1971P3.lean",
      "start_line": 23,
      "start_column": 63,
      "end_line": 23,
      "end_column": 68
    },
    "debug_info": {
      "goal": "\u22a2 {x | @Imo1971P3.imo1971_p3.match_1 (fun x => Prop) x fun n m => (2 ^ n - 3).Coprime (2 ^ m - 3)}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1971P3.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "686aa0ddb41525961186d888c3a794750d5cc9a06031b74333e6f670b168c772"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2020P3.lean",
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nc : Fin (4 * n) \u2192 Fin n\nh : \u2200 (i : Fin n), {j | c j = i}.card = 4\n\u22a2 \u2203 S, \u2211 i \u2208 S, (\u2191i + 1) = \u2211 i \u2208 S\u1d9c, (\u2191i + 1) \u2227 \u2200 (i : Fin n), {j \u2208 S | c j = i}.card = 2",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2020P3.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-04-08T13:09:24-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "1495e7e9604ab2a6dc2b4220efa14f82b0c7144a51c2d2ebea48920a7cc85189"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2001P1.lean",
      "start_line": 45,
      "start_column": 2,
      "end_line": 45,
      "end_column": 7
    },
    "debug_info": {
      "goal": "t : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\n\u22a2 EuclideanGeometry.oangle (Affine.Simplex.circumcenter t) (t.points 2) (t.points 1) =\n    \u2191Real.pi - EuclideanGeometry.oangle (t.points 1) (t.points 0) (t.points 2)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2001P1.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T20:28:24-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "abf0e9fad9c30853ced1c05c1a8550e1271cc54d2406600ab43e9234581f9865"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2001P1.lean",
      "start_line": 60,
      "start_column": 2,
      "end_line": 60,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A B C : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nhAcuteA : EuclideanGeometry.angle C A B < Real.pi / 2\nhAcuteB : EuclideanGeometry.angle A B C < Real.pi / 2\nhAcuteC : EuclideanGeometry.angle B C A < Real.pi / 2\nhAB : EuclideanGeometry.angle A B C + Real.pi / 6 \u2264 EuclideanGeometry.angle B C A\nABC : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2)) := { points := ![A, B, C], independent := hABC }\nP : \u21a5(affineSpan \u211d {B, C}) := (EuclideanGeometry.orthogonalProjection (affineSpan \u211d {B, C})) A\n\u22a2 EuclideanGeometry.angle C A B + EuclideanGeometry.angle C (Affine.Simplex.circumcenter ABC) \u2191P < Real.pi / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2001P1.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T13:45:33-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "7ebd8c1a310b4b1e5fe9ccb621d0de3de80124b36b92493cfc1f6c519a69feb0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2017P1.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a0 : \u2115\n\u22a2 a0 \u2208 Imo2017P1.solution_set \u2194 \u2203 A, {n | Imo2017P1.a a0 n = A}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2017P1.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-02T09:41:34-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "b538d36813a7723d94874a93530d54ab5dc043d00b5c4eff5e0fcd678ac2d2a4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2020P5.lean",
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 n \u2208 Imo2020P5.SolutionSet \u2194\n    1 < n \u2227\n      \u2200 (\u03b1 : Type) [inst : Fintype \u03b1],\n        Fintype.card \u03b1 = n \u2192\n          \u2200 (f : \u03b1 \u2192 \u2115+),\n            (Pairwise fun a b => \u2203 s, s.Nonempty \u2227 Imo2020P5.geometric_mean \u03b1 f s = (\u2191\u2191(f a) + \u2191\u2191(f b)) / 2) \u2192\n              \u2203 y, \u2200 (a : \u03b1), f a = y",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2020P5.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-18T17:13:51-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "65524507396cac3a8c9c20b41db808917dd21eef60626d5afaca98aac58520d4"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1963P4.lean",
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x\u2081 x\u2082 x\u2083 x\u2084 x\u2085 y : \u211d\n\u22a2 (x\u2081, x\u2082, x\u2083, x\u2084, x\u2085) \u2208 Imo1963P4.SolutionSet y \u2194\n    x\u2085 + x\u2082 = y * x\u2081 \u2227 x\u2081 + x\u2083 = y * x\u2082 \u2227 x\u2082 + x\u2084 = y * x\u2083 \u2227 x\u2083 + x\u2085 = y * x\u2084 \u2227 x\u2084 + x\u2081 = y * x\u2085",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1963P4.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T08:58:13-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "03eb17f854be2c077cec9b9eb112dbaff77aeb372133f4260d9b0026069a0a2d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "7fa4d04405ae2fa12eb7f42aefb81b46658860cae748956675f0bd13e87f1936"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "eb884893785d00f90b94e22318cb4e18afebf5a9982415b56b4130e13de67cf1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "214d02108b64f6ebeeae39c5db0602bf7ad9fd3afb491d48c8bf1926264217bc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "786f1d5b55132d39c7953c6ab29c051f58f562332bf72babe46b0ea1be74342f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0e8f1c6fdf64c167123d70cd124751719e4438f44c6eea7ddbf8d60cdf2f4927"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "9388c5f03b61b5b1934be60245aedf2f4ce4fab9a15964e64920db069b55ab7c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "3d9332e1bcd05e8639317bc9b471d29a06f168dbc1849695ab66927aafef84c8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 hj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "00d81dd3604412ea9a5198a5a0deaeaf5c60ae242fdde1ae393ce00e8b5d558c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "1f57a661e645574114d484a8053c9c612ac691de4c7d244a6821e71c76d1851a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a27fd7b82911f1a2ff814324902cad528f523e2afe8b2a9742d56768fd45dd8b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "8d246aa53168e2ccac124cca93fc789b7644176953a0e73b4f67209630255d9d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "4285331821303b180870865dd1df6e40d5f210bcfec13118847c09a19d23bab8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "c9f38b6409e57a8c63ef1e7e9492ad533fe01ddcdb30eddcb29b23e0363b8137"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "31456050b3d6174498a4ed90717ffd1a8bd87c4774aa1a8cbe85420fdf230106"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "54a0fda5e3ef596c3871e382db84d12c893a2fdb7bd3c1d9721fe5c50b295098"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "9cd9c7cf7f86a95092ddfa8d96503c62d9048f44daad953f2bc4c119f269ef65"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "dde89fc3a49a78d8f0e98e0f3d58a380823656f46c53b73c75f662a3afb41dbe"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "7ed89cd8723d21bdb5753c314572433f309e75106bba509159c9bfa2f1a19a81"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "9c5422af6fe3a3c5bedde6643bc8b6fb60911e93f70f5197b0d417f560c1d124"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "7432413018a3b81161529fda51ddcc1815a0c2dbab7b483ad28a07df61849f28"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "3fd72f9b68eeedf55f063fbfbcc5a16269cbdb532de7d8d3a4d3393dcf84cadb"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "c35a41f95a4bf65630c5281cfb3a4c388ad9668707be6ca2d493e35565d0b4c7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "3d35a10b9111ec37e6dede994caee4134afc2049b068a7220191400945a14af3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "bb12283c8f211f980b352c8dfa279fd0639033dd728a3a0389274e84e0b13891"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "4676ab1a5f1849c942a21e00a6bae72b615d01d4f2b97fa65c6ac9d804d3e0ce"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "90623d3c010b4b4c9726911f41f2bc8ce300c9b9ecd7727febf8774d5e4003c8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "5099181ffca329a6edff3ac4ab845dcc0607e4ff483bb4f5603af4ed776b06c1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a2c4111a16103d0dc720f042fd3c2c954428ea2e2552fcc3f62c5d59e6102734"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a7b07ee25be433997eb57b2d011ce06e19d91b529909b268d44f80620eadfc10"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "4106b5cb353e76d5ce56b9977a1a6a5034741ae0beda61a467c22126c94f9306"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "bf15f5f22ba8a0c612e916f33a13d231a57e7aab64521a312e52fc7e16392df9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "4328edce4676964f567a93b90780f6d052ccd3197d560138b7785ddb2bae0462"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "539bac83d353b4b7e9d73537cf6e900dd92c229e99c05faa01a2b4a9285e29cd"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "b0623ab6506e7d8f4719cc2611a04135292f3cea09fd46adfdd133f501bbe98f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "52f671a8ed4f5c77712a8c3f71ae283cf16c9b0e1b1beb8bf5691ebe4d95b1d3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "dd2b704fef4e950d4c2729754621310e270e390532e72dbaf37270807ea63ba1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "560f4e149f3400431ea460cc4a3959f43d960ae374239dd38242c59f91da1716"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "dd5ccbd55863eeaf8cb005bd7a1b0cf52f9d8fd9080c0742eb1c03703e645dcd"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "6bc9c3992f635c38622bd0c28cc324d0879f30ae38d5d761bd811c0f593a8fa6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "86b7658b4a55f83849fa0640e5f711400ea76bdada3d3c2374f566e9ec1dd68f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "385007c0195978c43635cba4b5b0bf100779155e5a6ed5a36373abb73279ec35"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "7c4cd985be08903496473638c02dc5ba045d4dbb0506cefec5b104103cc6ab73"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "bb2803f3c22248baadfc99f55c66134d48e7d26770f924e65c5df18d5a1c3e4f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "e60abf3d87713cac237b40a35eb6c4deeaadb8624aa5ef857cb6d9ce9f429657"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "0a929940ebbd410291eafe9506117f457b9b7eb3c0856715993229e27f54cf27"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "33a5151fd22695127a8c64779d5be7ba86f659415415015941eec1fb036879db"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a029c4a53bfd94af51fcf3d258b474a0729ea02b829e5a860b421b3c9d260fe8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "a8317cc633b564534a7cc20cb810a91ce2a5598376979236d75f3bed7e36874b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "2b7639a93f2a659e2442bb4f300d692ab6b3c77b3e116a80a587e5ea6bfcc799"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "86c885e174a39f29e263108b5ff788b97f71e599efddabb39d7c2322b9719119"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "784caa1b7e1c4920fb8dc88ffbc42f8766a058dd651d518c3b24c67faedd4450"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "1711d69df1b2e585e3081f5d73826b00044d4342cf221c3594844a50da6cdaf3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "be2ead8fd8f9e3117d1443d924bf06683d8fb141d9d4e773d647a7320b078375"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "37772baf505ab3399a2a81339b42bc885e3f37026ad4d2adc80853425ce8bb0e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "662423477a65e6ba4384d2cda0c4d8f4a63d26804a098899664278bf234f9a82"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "aa2a1899d4b888596e87cef69b2b4806f5a1227e22462996e2ba0626f56d838b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "9c6f9202b6327f27282ce2fdf23c3029f19b0e63c0b83ff15937266cb546e56e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "b744236855ecfedfbab92b7b893b7acfdd4265003b4973648ab37a0a6f957c9f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "aebea48fb035d228fe037095b5c8737bc739addb57267ee6bd7244a7fd3df7d6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "1b35f6e80f94895fc20cd665d5540af41bf38c1b060e6b641138b5c8672b67f6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "af31b962d50b62f5f2c039aad80625c58731dde801de7c854b96fabeb2298943"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "1a8e2e72e77b2bafe9432d92134e45674fd0ed90b4ca400b897ee07f7d1a2f3a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "884d701512e3f98be8e7a0f49db07a56259682a698ef0e5a72edcd4b4bdcb754"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Bulgaria1998P1.lean",
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "d8a8178c7b7394f439003151e463b2abc3e4f0f22fb1e4accb948448a04aeda0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1991P6.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a : \u211d\nha : 1 < a\n\u22a2 Imo1991P6.Bounded (Imo1991P6.solution a ha) \u2227\n    \u2200 (i j : \u2115), i \u2260 j \u2192 1 \u2264 |Imo1991P6.solution a ha i - Imo1991P6.solution a ha j| * |\u2191i - \u2191j|",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1991P6.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-20T21:26:57-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "e91770fa90c2cee6e3e004c4fc0fdb1c32491a15daf466e9339c44e6b00ce8f8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2015P2.lean",
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b c : \u2124\n\u22a2 (a, b, c) \u2208 Imo2012P2.SolutionSet \u2194\n    0 < a \u2227\n      0 < b \u2227\n        0 < c \u2227\n          Imo2012P2.is_power_of_two (a * b - c) \u2227\n            Imo2012P2.is_power_of_two (b * c - a) \u2227 Imo2012P2.is_power_of_two (c * a - b)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2015P2.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T18:22:25-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "35eab0f186c17f22e32ad5edbd0e4906ddedc164a1deec4059b29382fe8497a6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1993P5.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 if Imo1993P5.DoesExist = true then \u2203 f, Imo1993P5.Good f else \u00ac\u2203 f, Imo1993P5.Good f",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1993P5.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:48:13-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "9b6783112a6f43ca1e58ef9cd980497326d63d213254ac8afb1b07609ce75fec"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2007P1.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na x : Fin n \u2192 \u211d\nh : Monotone x\n\u22a2 (\u2a06 i, Imo2007P1.d n a i) / 2 \u2264 \u2a06 i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2007P1.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "8a88f093c19caf79e9993bda58e8bf7416810b3a0b84d13e0a389a27db984d7a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2007P1.lean",
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u211d\n\u22a2 \u2203 x, Monotone x \u2227 (\u2a06 i, Imo2007P1.d n a i) / 2 = \u2a06 i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2007P1.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "509c1c599712a5e3f0a75208832ff808ec0529c889484da60c402c38579186d6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo2023P3.lean",
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7
    },
    "debug_info": {
      "goal": "k : \u2115\nhk : 2 \u2264 k\na : \u2115+ \u2192 \u2115+\n\u22a2 a \u2208 Imo2023P3.SolutionSet k hk \u2194\n    \u2203 P,\n      P.Monic \u2227\n        P.degree = \u2191k \u2227\n          (\u2200 n \u2264 k, 0 \u2264 P.coeff n) \u2227\n            \u2200 (n : \u2115+), Polynomial.eval (\u2191\u2191(a n)) P = \u2191\u2191(\u220f i \u2208 Finset.range k, a \u27e8\u2191n + i + 1, \u22ef\u27e9)",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P3.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-24T09:05:23-04:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "ecd1c5490538fcf6aa9a473b1b0ff2a320120f374a44a89168761efe3eada74a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Imo1970P6.lean",
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7
    },
    "debug_info": {
      "goal": "P : Fin 100 \u2192 Imo1970P6.Pt\nhP :\n  \u2200 (a b c : Fin 100),\n    [a, b, c].Nodup \u2192\n      \u00acCollinear \u211d\n          (@insert Imo1970P6.Pt (Set Imo1970P6.Pt) Set.instInsert (P c)\n            (@insert Imo1970P6.Pt (Set Imo1970P6.Pt) Set.instInsert (P b)\n              (@singleton Imo1970P6.Pt (Set Imo1970P6.Pt) Set.instSingletonSet (P c))))\n\u22a2 let cardAll := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points};\n  let cardAcute := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points \u2227 Imo1970P6.AcuteTriangle t};\n  \u2191cardAcute / \u2191cardAll \u2264 7 / 10",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1970P6.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-21T09:27:31-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "af05279998937241ac9c8d7db4395a2887623e68f8a31c2938699cde582fdf4d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/Usa2000P5.lean",
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7
    },
    "debug_info": {
      "goal": "A : ZMod 3 \u2192 EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A 0, A 1, A 2]\n\u03c9 : Fin 7 \u2192 Imo2000P5.Circle\nhTangent : (i : Fin 7) \u2192 i < 6 \u2192 Imo2000P5.ExternallyTangent (\u03c9 i) (\u03c9 (i + 1))\nhA : \u2200 i < 7, A \u2191i \u2208 \u03c9 \u2191i \u2227 A (\u2191i + 1) \u2208 \u03c9 \u2191i\n\u22a2 \u03c9 0 = \u03c9 6",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2000P5.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-16T09:11:27-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "e447cc2a0ee7ea0a7cfb408ed795197a07e730bd683967731ca2a0ac2df99a65"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Compfiles/CIIM2022P6.lean",
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\n\u22a2 CIIM2022P6.d (n + 1).factorial \u2264 2 * CIIM2022P6.d n.factorial",
      "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/CIIM2022P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T20:57:01-05:00",
      "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
    },
    "id": "16502eed517718f7464629202da48b2bc9103106e5c4d717361844dace5b13d0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/LinearizedMetricCarleson.lean",
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "369aabab03e1a9a8c1e75122d5139b44dba5f45106aa438d3574134ab692584b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TileStructure.lean",
      "start_line": 527,
      "start_column": 70,
      "end_line": 527,
      "end_column": 75
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d\u00b2 : PseudoMetricSpace X\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d :\n  @TileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d CompatibleFunctions.toFunctionDistances Q (defaultD a)\n    (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 :\n  Set\n    (@\ud835\udd13 \u211d Real.instRCLike X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n      CompatibleFunctions.toFunctionDistances Q\n      (@TileStructure.toPreTileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d CompatibleFunctions.toFunctionDistances\n        Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X) inst\u271d))\n\u22a2 IsAntichain (fun x1 x2 => x1 \u2264 x2)\n      (@image\n        (@\ud835\udd13 \u211d Real.instRCLike X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d (defaultD a) (default\u03ba a) (defaultS X)\n          (cancelPt X) CompatibleFunctions.toFunctionDistances Q\n          (@TileStructure.toPreTileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d\n            CompatibleFunctions.toFunctionDistances Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X) inst\u271d))\n        (@TileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d) (@toTileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d) \ud835\udd04) \u2194\n    \u2200\n      (p p' :\n        @\ud835\udd13 \u211d Real.instRCLike X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n          CompatibleFunctions.toFunctionDistances Q\n          (@TileStructure.toPreTileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d\n            CompatibleFunctions.toFunctionDistances Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X) inst\u271d)),\n      p \u2208 \ud835\udd04 \u2192\n        p' \u2208 \ud835\udd04 \u2192\n          p \u2260 p' \u2192\n            Disjoint\n              (@TileLike.toTile X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d\n                (@toTileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d p))\n              (@TileLike.toTile X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d\n                (@toTileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d p'))",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TileStructure.lean#L527"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-03T17:09:05+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "efa0498ee24d5d3fba98a6f9b777c58b498fb3e6a4c8646d8b9b99c07cdba3e9"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/MetricCarleson.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "71aac5787f480ef5afbd71af4d5afa7875f7163395ae147942b4cfc5e01e1dbd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 58,
      "start_column": 2,
      "end_line": 58,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nx : \u211d\n\u22a2 partialFourierSum n (partialFourierSum n f) x = partialFourierSum n f x",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "c64218859051246ac717624fd53c0fb5d7eeba8873015ecbbbc6398a2cc7f779"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * Real.pi)\n\u22a2 \u222b (x : \u211d) in 0 ..2 * Real.pi, (starRingEnd \u2102) (partialFourierSum n f x) * g x =\n    \u222b (x : \u211d) in 0 ..2 * Real.pi, (starRingEnd \u2102) (f x) * partialFourierSum n g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "98b885cf68a68e10178d19c576758fb213f6959e110a7e5290fdef40a9c8b5d7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7
    },
    "debug_info": {
      "goal": "g : \u211d \u2192 \u2102\nn : \u2115\nhmg : Measurable g\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * Real.pi)\n\u22a2 (fun p => eLpNorm ((Ioc 0 (2 * Real.pi)).indicator (approxHilbertTransform n g)) p volume) \u2264 fun p =>\n    eLpNorm ((Ioc 0 (2 * Real.pi)).indicator g) p volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "61c3fdfb1ee0d8718dea79e3200dee6f6356d602283e4d77bdd046a5bf856fc1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nhg\u271d : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * Real.pi)\nr : \u211d\nhr : r \u2208 Ioo 0 Real.pi\nhg : \u2200 (x : \u211d), \u2016g x\u2016 \u2264 niceKernel r x\n\u22a2 eLpNorm ((Ioc 0 (2 * Real.pi)).indicator fun x => \u222b (y : \u211d) in 0 ..2 * Real.pi, f y * g (x - y)) 2 volume \u2264\n    2 ^ 5 * eLpNorm ((Ioc 0 (2 * Real.pi)).indicator f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "aadc80554282234398b0dd7a0197f27f69a83b369b65b9f708a86b41742f654a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 172,
      "start_column": 2,
      "end_line": 172,
      "end_column": 7
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 Function.Periodic (dirichletApprox n) (2 * Real.pi)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L172"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "9b5da3cb63b0c687c6b3187698b5a3ef7727351a46be3f4f082b14cf5e01bc0c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 182,
      "start_column": 2,
      "end_line": 182,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nn : \u2115\nx : \u211d\n\u22a2 approxHilbertTransform n f x = \u2191(2 * Real.pi)\u207b\u00b9 * \u222b (y : \u211d) in 0 ..2 * Real.pi, f y * dirichletApprox n (x - y)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L182"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "e02bcf80a2469db617319532692c450d655aa62254d01aff8125a293d6bd6f82"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Classical/HilbertStrongType.lean",
      "start_line": 192,
      "start_column": 2,
      "end_line": 192,
      "end_column": 7
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nr : \u211d\nhr : r \u2208 Ioo 0 1\nn : \u2115\nhn : n = \u2308r\u207b\u00b9\u2309\u208a\nx : \u211d\n\u22a2 dist (dirichletApprox n x) ({y | \u2016y\u2016 \u2208 Ioo r 1}.indicator 1 \u2191x) \u2264 2 ^ 5 * niceKernel r x",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Classical/HilbertStrongType.lean#L192"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "2cf429024cd860b7bb544d24b375d15eddcdb2bbff7c083c7362e4def521b19e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 384,
      "start_column": 33,
      "end_line": 384,
      "end_column": 38
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : NNReal\ninst\u271d\u00b9\u00b9 : MetricSpace X\ninst\u271d\u00b9\u2070 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2079 : \u03bc.IsDoubling A\ninst\u271d\u2078 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2077 : BorelSpace X\ninst\u271d\u2076 : NormedSpace \u211d E\ninst\u271d\u2075 : MeasurableSpace E\ninst\u271d\u2074 : BorelSpace E\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\nh\ud835\udcd1 : \ud835\udcd1.Countable\nR : \u211d\nhR : \u2200 i \u2208 \ud835\udcd1, r i \u2264 R\np : NNReal\nhp : 1 < p\n\u22a2 \u2200 (f : X \u2192 E), MemLp f (\u2191p) \u03bc \u2192 \u2200\u1d50 (x : X) \u2202\u03bc, @MB X E inst\u271d\u00b9\u00b9 inst\u271d\u00b9\u2070 inst\u271d\u2078 \u03b9 \u03bc \ud835\udcd1 c r f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ToMathlib/HardyLittlewood.lean#L384"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-20T18:21:24+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "dee8d417a2d65c43aca0648c9c817d93957df61584b947dd2ecbcec357c8f92a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 415,
      "start_column": 33,
      "end_line": 415,
      "end_column": 38
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : NNReal\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : NNReal\nh\ud835\udcd1 : \ud835\udcd1.Countable\nR : \u211d\nhR : \u2200 i \u2208 \ud835\udcd1, r i \u2264 R\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 \u2200 (f : X \u2192 E), MemLp f (\u2191p\u2082) \u03bc \u2192 \u2200\u1d50 (x : X) \u2202\u03bc, @maximalFunction X E inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2075 \u03b9 \u03bc \ud835\udcd1 c r (\u2191p\u2081) f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ToMathlib/HardyLittlewood.lean#L415"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-04-15T15:45:33+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "54c0941392fae327d9fb3cc997de3354a6c0c30fb8795b52582524819d693913"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 578,
      "start_column": 2,
      "end_line": 578,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (@MB X E inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \u03b9 \u03bc \ud835\udcd1 c r f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ToMathlib/HardyLittlewood.lean#L578"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "d4915ba858e147c2d5fb4b7b904b2a08cdfe127b41c746f11ff09681b7fd6100"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/HardyLittlewood.lean",
      "start_line": 785,
      "start_column": 2,
      "end_line": 785,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : NNReal\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u00b2 : \u03bc.IsDoubling A\ninst\u271d\u00b9 : NormedAddCommGroup E\nf : X \u2192 E\ninst\u271d : ProperSpace X\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (@globalMaximalFunction X E A inst\u271d\u2074 inst\u271d\u00b3 \u03bc inst\u271d\u00b9 inst\u271d inst\u271d\u00b2 1 f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ToMathlib/HardyLittlewood.lean#L785"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-20T19:02:09+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "8aeac8e03d20a8dbea22ac5d691336cdddc8702880cb5b9eaeb8bd07333255f2"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_4_4 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/Forests.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "82ad7dc3d620c8a2e89e235b9bf48905421a1e03237f95bd0d716a71c099d8a0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_4_4 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/Forests.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "39f13c8275971cbf3b36788fa232018bfcc1388c4b127ec55e1b21e6d096841b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn j : \u2115\nt : Forest X n\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhg : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm\n      (\u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j},\n        adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f)\n      2 volume \u2264\n    \u2191(TileStructure.Forest.C7_7_2_1 a n) * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/Forests.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "628a52ddf83bf6aea417fcb84ed9dce949b37145078a18696b3521a36996974a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn j : \u2115\nt : Forest X n\nu : \ud835\udd13 X\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhf : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm\n      ((\u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j}, F.indicator)\n        (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f))\n      2 volume \u2264\n    \u2191(TileStructure.Forest.C7_7_2_2 a n) * dens\u2082 (\u22c3 u \u2208 t, (fun x => t.\ud835\udd17 x) u) ^ 2\u207b\u00b9 * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/Forests.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "e5aa09a5512e3bb5945dad163e83679aa5dbf00c57209a929b5a7bc9d06f0de7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 280,
      "start_column": 2,
      "end_line": 280,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn j j' : \u2115\nt : Forest X n\nf\u2081 f\u2082 : X \u2192 \u2102\nhjj' : j < j'\nhj' : j' < 2 ^ n\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nh3f\u2081 : \u2200 (x : X), \u2016f\u2081 x\u2016 \u2264 G.indicator 1 x\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\nh3f\u2082 : \u2200 (x : X), \u2016f\u2082 x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (x : X),\n          (\u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j},\n              adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2081 x) *\n            \u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j'},\n              adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2082 x\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_7_3 a n) * eLpNorm f\u2081 2 volume * eLpNorm f\u2082 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/Forests.lean#L280"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "bfd5036aca3028ffdd164b1451406945be0d9cf90a62e774c5fe2c8bc1c399c3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/Forests.lean",
      "start_line": 352,
      "start_column": 2,
      "end_line": 352,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\n\ud835\udd09 : Forest X n\nf g : X \u2192 \u2102\nhf : Measurable f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nh2g : Bornology.IsBounded (support g)\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 u \u2208 {p | p \u2208 \ud835\udd09}, carlesonSum ((fun x => \ud835\udd09.\ud835\udd17 x) u) f x\u2016\u208a \u2264\n    \u2191(C2_0_4 (\u2191a) q n) * dens\u2082 (\u22c3 u \u2208 \ud835\udd09, (fun x => \ud835\udd09.\ud835\udd17 x) u) ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume * eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/Forests.lean#L352"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "9ea087c34cda62800413a4fc9fd324d49c44a36ce4c72835fe056e706651bb45"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/RemainingTiles.lean",
      "start_line": 372,
      "start_column": 2,
      "end_line": 372,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf : Bornology.IsBounded (range f)\nh2f : HasCompactSupport f\nh3f : AEStronglyMeasurable f volume\n\u22a2 eLpNorm\n      (approxOnCube (@TileStructure.Forest.\ud835\udcd9\u2086 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081) fun x =>\n        \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016)\n      2 volume \u2264\n    \u2191(TileStructure.Forest.C7_6_2 a n) *\n      eLpNorm ((\u2191(\ud835\udcd8 u\u2081)).indicator fun x => MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/RemainingTiles.lean#L372"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "f181ae8650d5f06e49df7d6147d6cd48d1ade4329e62382b3fa44285aafd7c1a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/RemainingTiles.lean",
      "start_line": 387,
      "start_column": 2,
      "end_line": 387,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_4_6 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/RemainingTiles.lean#L387"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "a550e993091113918d338e67839172904c18e2fc1842ea2585a992d8bd4fe3cb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/AlmostOrthogonality.lean",
      "start_line": 313,
      "start_column": 26,
      "end_line": 313,
      "end_column": 31
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu : \ud835\udd13 X\nf : X \u2192 \u2102\nhu : u \u2208 t\nhf : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2200\u1d50 (x : X), @TileStructure.Forest.adjointBoundaryOperator X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/AlmostOrthogonality.lean#L313"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-04-15T15:45:33+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "fe9343bf03aa7b28dd1dbaaa201490859d7c872dd1240d9cce8a50c083faef2a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/LargeSeparation.lean",
      "start_line": 1480,
      "start_column": 2,
      "end_line": 1480,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 @TileStructure.Forest.\ud835\udcd9\u2085 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081 u\u2082\nhf : BoundedCompactSupport f\n\u22a2 \u2191(\u2a06 x \u2208 ball (c J) (8 * \u2191(defaultD a) ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016\u208a) \u2264\n    \u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191(defaultD a) ^ s J),\n      \u2191\u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f x\u2016\u208a +\n        \u2191(TileStructure.Forest.C7_5_10 a) * \u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/LargeSeparation.lean#L1480"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "1a7acc81f96004edda269050c079b6b7176a9dacd0d4075ad8efee5cd25d7dfb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/LargeSeparation.lean",
      "start_line": 1498,
      "start_column": 2,
      "end_line": 1498,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 @TileStructure.Forest.\ud835\udcd9\u2085 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 HolderOnWith\n    (TileStructure.Forest.C7_5_4 a *\n        ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191(defaultD a) ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) f\u2081 x\u2016\u208a) +\n          (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2081 x\u2016) x).toNNReal) *\n      ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191(defaultD a) ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f\u2082 x\u2016\u208a) +\n        (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2082 x\u2016) x).toNNReal))\n    (nn\u03c4 X) (@TileStructure.Forest.holderFunction X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081 u\u2082 f\u2081 f\u2082 J)\n    (ball (c J) (8 * \u2191(defaultD a) ^ s J))",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/LargeSeparation.lean#L1498"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "902b13d30a19b1a9acc841f2241ed21bdbbc4e67972d6d664dbcb173b19e14b4"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ForestOperator/LargeSeparation.lean",
      "start_line": 1607,
      "start_column": 2,
      "end_line": 1607,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2016\u222b (x : X),\n        adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n          (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u2091 \u2264\n    \u2191(TileStructure.Forest.C7_4_5 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ForestOperator/LargeSeparation.lean#L1607"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "71f9c1161a73ddc41b2826526b1a31a361cd62007924950a3f284f958dafbc3d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainTileCount.lean",
      "start_line": 344,
      "start_column": 83,
      "end_line": 344,
      "end_column": 88
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\n\u22a2 \u2211 p \u2208 @Antichain.\ud835\udd04_aux X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N, volume (E p \u2229 G) \u2264\n    \u2191(Antichain.C_6_3_4 a N) * dens\u2081 \u2191\ud835\udd04 * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p))",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainTileCount.lean#L344"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-11-16T17:32:56+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "5fe82f3ddc073bf1355ff00e3a399202c5991417906b32a38ac2d592841da48f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainTileCount.lean",
      "start_line": 358,
      "start_column": 2,
      "end_line": 358,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 \ud835\udd04' : Finset (\ud835\udd13 X)\nh_le : \ud835\udd04' \u2286 \ud835\udd04\n\u03d1 : \u0398 X\n\u22a2 eLpNorm\n      (\u2211 \ud835\udd2d \u2208 \ud835\udd04',\n        (1 + dist_{\ud835\udd20 \ud835\udd2d ,\u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d / 4} (\ud835\udcac \ud835\udd2d) \u03d1) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) \u2022 (E \ud835\udd2d).indicator 1 *\n          G.indicator 1)\n      (\u2191(Antichain.p a)) volume \u2264\n    \u2191(Antichain.C_6_1_6 a) * dens\u2081 \u2191\ud835\udd04 ^ (1 / \u2191(Antichain.p a)) * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p)) ^ (1 / \u2191(Antichain.p a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainTileCount.lean#L358"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-28T18:13:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "8d5ee7786d14322434154d244f50e1426e74105e2546aac3a8af294f3991502e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 329,
      "start_column": 6,
      "end_line": 329,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x2 =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) f x2).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2 = \u2191(3 * (2 * nnq X / (nnq X + 1)) - 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L329"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "4fb50b4844a79e64318aa366b5aeff09337ea083da6c63bfeb37ce85258884af"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 334,
      "start_column": 6,
      "end_line": 334,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x2 =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) f x2).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq X) / \u2191(nnq X + 1)) - 2) / (2 * (\u2191(2 * nnq X) / \u2191(nnq X + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "bd0a33528c5b8089f11f3a5df814ef0585c2c6286f6fe928e49ab2e324365e44"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 312,
      "start_column": 6,
      "end_line": 312,
      "end_column": 11
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "fdffe94870d263d55c1375ac6afd40041492f96e2d598632bf6efbc2e1cfcefc"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 379,
      "start_column": 86,
      "end_line": 379,
      "end_column": 91
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\n\u22a2 (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L379"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "d58122ab9424e662f519d716d17c1f0599f94ee295844abc0ea38994a7218c68"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 385,
      "start_column": 4,
      "end_line": 385,
      "end_column": 9
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L385"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "fa73298bba93324c1f519894bd9551978b99c9a533dbc469d9486f274e617275"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 420,
      "start_column": 6,
      "end_line": 420,
      "end_column": 11
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 p \u2208 \ud835\udd04, carlesonOn p f x\u2016\u208a \u2264\n    eLpNorm g 2 volume * eLpNorm (\u2211 p \u2208 \ud835\udd04, carlesonOn p f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L420"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "69cba898aaa5b5ca60be6cbddd696c73ad2e996c5346759874686c2fd031f8ec"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 434,
      "start_column": 8,
      "end_line": 434,
      "end_column": 13
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\nh2 : 2 ^ (107 * a ^ 3) = \u2191\u20162 ^ (107 * a ^ 3)\u2016\u208a\nz : X\n\u22a2 MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f z \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L434"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "8b75abcd1cfab07145db1f84623a9ad2fc21aa44db47736d0351de3f472f91d0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 449,
      "start_column": 6,
      "end_line": 449,
      "end_column": 11
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    2 ^ (2 * a + 2) *\n      (\u2191(2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 * (dens\u2082 \u2191\ud835\udd04 ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume))",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L449"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "015755f4811f70a2abca754a49dcd5820f41ef1759b03f3b230e77d4b926b7d8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/AntichainOperator.lean",
      "start_line": 499,
      "start_column": 51,
      "end_line": 499,
      "end_column": 56
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u2091 \u2264\n    \u2191(C_2_0_3 (\u2191a) (nnq X)) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/AntichainOperator.lean#L499"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-01-09T16:08:11+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "af311700872c1ffe37b58cba025d81b4cfaa40096cbba7301ed5eaa599fda775"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 359,
      "start_column": 2,
      "end_line": 359,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 \u2264\n    \u2191(Tile.C_6_1_5 a) * (1 + \u2191(nndist_{\ud835\udd20 p' ,\u2191(defaultD a) ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p))) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) /\n        volume \u2191(\ud835\udcd8 p) *\n      \u222b\u207b (y : X) in E p', \u2016g y\u2016\u2091 * \u222b\u207b (y : X) in E p, \u2016g y\u2016\u2091",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/TileCorrelation.lean#L359"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "a30f7ed5c6fa8e8a6e1e400228888127003652f4bf4f5154196c06e9f0523fb2"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191(defaultD a) ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191(defaultD a) ^ \ud835\udd30 p)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/TileCorrelation.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "911e8045716a74297683bc7dcb1ecdd0615d79109d7f1c738d11222403cb9209"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/Antichain/TileCorrelation.lean",
      "start_line": 368,
      "start_column": 84,
      "end_line": 368,
      "end_column": 89
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191(defaultD a) ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/Antichain/TileCorrelation.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "57b71c694bd419c6657b4444b4d8502b9f82b6f83a502d3c1af0d18c51375c95"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 709,
      "start_column": 2,
      "end_line": 709,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (@simpleNontangentialOperator X a inst\u271d\u2074 inst\u271d\u00b3 K r) 2 2 volume volume \u2191(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L709"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "e671b6609813a319e45d3ec6b99f468bd9469b6ef4c87f73978df6a995f1bb68"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 717,
      "start_column": 2,
      "end_line": 717,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (@simpleNontangentialOperator X a inst\u271d\u2074 inst\u271d\u00b3 K r) 2 2 volume volume \u2191(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L717"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "1481ff29b41de09afa555f98b540cad7613983f0407a04ea8ae164a52c661c28"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
      "start_line": 750,
      "start_column": 2,
      "end_line": 750,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (@simpleNontangentialOperator X a inst\u271d\u2074 inst\u271d\u00b3 K 0) 2 2 volume volume \u2191(C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume \u2191(C10_0_2 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L750"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "a33c0c7e08f4a6add801507a695435085b3994f1b7766d620c55780e9d2d6fe3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "cb6780b3226d263e53f94c7de220e4a457009bfb7ef974f5b786972c34acc214"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 \u2200\u1d50 (x : X),\n    \u2203 c r,\n      Tendsto (fun i => \u2a0d (y : X) in ball (c i) (r i), f y) atTop (nhds (f x)) \u2227\n        Tendsto r atTop (nhdsWithin 0 (Ioi 0)) \u2227 \u2200 (i : \u2115), x \u2208 ball (c i) (r i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "66d91309e501aee864770a88ec75b72518416f96af2204404010061a90804f14"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nh : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 volume univ < \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "c6ac8d816d6612a2e114cb1585e908a5cf84102843470dbfb304030cc2828bad"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 87,
      "start_column": 2,
      "end_line": 87,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 IsOpen (globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1) \u2227 globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1 \u2260 univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L87"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "286680737f428e01a53cb5df8df7f1482f688763b5679a88c2ba7c364bc84a8e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 @czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i}.Finite",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "2278b9afe5738b7142c6ba5af13e45f74afeb225d174587b43f8ec9ccdc420c8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 142,
      "start_column": 2,
      "end_line": 142,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\ni : \u2115\n\u22a2 @czBall X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i \u2286 @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L142"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "1edac86b6b2ae4ed33e296c27019107083e706b0a972d91091305fee2c38a66c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 150,
      "start_column": 2,
      "end_line": 150,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L150"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "0ada3181f9e814f5da4ccd15d768cf7693c0393748810acadd9970e47635ca56"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i\nhj : x \u2208 @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX j\n\u22a2 i = j",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "fa9904a766157420f9d8ce0a4a10e59719a709acaaf57ed6dcc1261a8e9dedd3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 159,
      "start_column": 2,
      "end_line": 159,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 \u22c3 i, @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L159"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "03675668eadc18923d365fdd09751d58a54ebe7a2d51c173091266114d042671"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), @czRemainder' X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i x =\n    @czRemainder X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T17:21:05+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "4783822b8c672b6e4659596a43bd11a4698bcce2a3e51a93b294d46eb51bda38"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 202,
      "start_column": 2,
      "end_line": 202,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "2b94fd5212f83f4abb84c814a46595e06060040d32379bc10ed1750917a78516"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "9b32ec10536b1e06c83099886052c84ac2f32f94f107b4daa9a9c15a13e67c24"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "d12a1ff8c00be968530c0cc2bbbe13c86ae16eb0742aae3c79a82c8700485295"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "f439d3235528eef07e191ce5930f81a3ce44c4483d14ad657f690233eaf1fd61"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 230,
      "start_column": 2,
      "end_line": 230,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (@czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) \u2286\n    @czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "af61a373e76ef1862b63efeedad860cb5d1398152f1f2ebf6ddcc17de1387aa1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 236,
      "start_column": 2,
      "end_line": 236,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), @czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "a3d103d2ecd08542c48de1de2ef575f25376c1f013c400fa618ac9073a70edcd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 241,
      "start_column": 2,
      "end_line": 241,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), @czRemainder X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "0e138c963c0287b08d461547ec37a5ca7987745f6b373d9a5f87dc95d8e25770"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (@czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) 1 volume \u2264\n    2 ^ (2 * a + 1) * \u03b1 * volume (@czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "a0201d7b4e23d1ba27c49b14812bff786d39af4adea4425b8d90cc0c54908046"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 253,
      "start_column": 2,
      "end_line": 253,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (@czRemainder X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "2a677b2c71e0e1396568c14269ce874276bc1ef3c2e7634eeee1396cb78681e4"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (@czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "8ed28c16a8686f9cae31cee50377eb2cf2c104563510b16a7d4e475fb68a282e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "6a9b734838be6d2155aa4a6d27557228b8ace2d5afa78e31168ca3e71c4b3786"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 271,
      "start_column": 2,
      "end_line": 271,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (@czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L271"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "5cd89d2263f63d9da04bc016b17623d4f7489a8fc2c3a052f1792517ae92546e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 277,
      "start_column": 2,
      "end_line": 277,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (@czRemainder X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "85220cde5362eacd02e2cc756f29d7ccb9d8e4dc619df97765173e724957327e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 296,
      "start_column": 2,
      "end_line": 296,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (@czApproximation X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)) (\u03b1 / 2) volume \u2264\n    \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L296"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "b4b3e5a7ec6fdfc548532e098ace09300fd4da16838e154aece1e64841f78137"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 312,
      "start_column": 2,
      "end_line": 312,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (@\u03a9 X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)\u1d9c\nhX : @GeneralCase X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1\n\u22a2 \u2016czOperator K r (@czRemainder X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) x\u2016\u2091 \u2264\n    3 * @czOperatorBound X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX x + \u03b1 / 8",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "7e23c30af7bb2d9aa75cc83b6a40e95cda42cae899af625c5be6f75287755fc4"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 322,
      "start_column": 2,
      "end_line": 322,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 volume\n      ((@\u03a9 X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)\u1d9c \u2229\n        @czOperatorBound X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264\n    \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L322"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "19188053813b39887d74672940139bf14fc3652d134b75bd48e74b63e347d8b1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
      "start_line": 333,
      "start_column": 2,
      "end_line": 333,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : @GeneralCase X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1\n\u22a2 distribution (czOperator K r (@czRemainder X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)) (\u03b1 / 2) volume \u2264\n    \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L333"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "97715dfc562ab6c9f64111c22d609d297bef5d3019c480c7c2242703391bb18d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "e39ecc926ec5159e20af1716d7bcbdda08aa9523",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Carleson/ToMathlib/MeasureTheory/Integral/MeanInequalities.lean",
      "start_line": 253,
      "start_column": 8,
      "end_line": 253,
      "end_column": 13
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u\ud835\udd5c\nG : Type uG\ninst\u271d\u00b9\u2075 : MeasurableSpace G\n\u03bc : Measure G\nE : Type uE\nE' : Type uE'\nF\u271d : Type uF\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup F\u271d\ninst\u271d\u00b9\u00b9 : NontriviallyNormedField \ud835\udd5c\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\u271d\ninst\u271d\u2077 : NormedSpace \u211d F\u271d\nL : E \u2192L[\ud835\udd5c] E' \u2192L[\ud835\udd5c] F\u271d\ninst\u271d\u2076 : AddCommGroup G\ninst\u271d\u2075 : TopologicalSpace G\ninst\u271d\u2074 : IsTopologicalAddGroup G\ninst\u271d\u00b3 : BorelSpace G\ninst\u271d\u00b2 : \u03bc.IsAddHaarMeasure\ninst\u271d\u00b9 : LocallyCompactSpace G\ninst\u271d : SecondCountableTopology G\np q r : \u211d\nhp : 1 \u2264 p\nhq : 1 \u2264 q\nhr : 1 \u2264 r\nhpqr : p\u207b\u00b9 + q\u207b\u00b9 = r\u207b\u00b9 + 1\nf : G \u2192 E\ng : G \u2192 E'\nhf : AEMeasurable (fun x => \u2016f x\u2016\u2091) \u03bc\nhg : \u2200 (x : G), AEMeasurable (fun x_1 => \u2016g (x - x_1)\u2016\u2091) \u03bc\nc : \u211d\nhL : \u2200 (x y : G), \u2016(L (f x)) (g y)\u2016 \u2264 c * \u2016f x\u2016 * \u2016g y\u2016\nx : G\nhc : 0 < c\n\u03bc0 : \u03bc \u2260 0\nF : Fin 3 \u2192 G \u2192 ENNReal :=\n  fun i =>\n    @ENNReal.enorm_convolution_le_eLpNorm_mul_eLpNorm_mul_eLpNorm_aux.match_1 (fun i => G \u2192 ENNReal) i\n      (fun _ y => (\u2016f y\u2016\u2091 ^ p * \u2016g (x - y)\u2016\u2091 ^ q) ^ (1 / r)) (fun _ y => \u2016f y\u2016\u2091 ^ ((r - p) / r)) fun _ y =>\n      \u2016g (x - y)\u2016\u2091 ^ ((r - q) / r)\nP : Fin 3 \u2192 ENNReal :=\n  ![ENNReal.ofReal r, ENNReal.ofReal (p * r) / ENNReal.ofReal (r - p), ENNReal.ofReal (q * r) / ENNReal.ofReal (r - q)]\np0 : 0 < p\nq0 : 0 < q\nr0 : 0 < r\nrp0 : 0 \u2264 r - p\nrq0 : 0 \u2264 r - q\nae_meas_g : AEMeasurable (fun x_1 => \u2016g (x - x_1)\u2016\u2091) \u03bc\nthis\u271d : AEMeasurable (fun a => \u2016f a\u2016\u2091 ^ p * \u2016g (x - a)\u2016\u2091 ^ q) \u03bc\nae_meas : \u2200 i \u2208 univ, AEMeasurable (F i) \u03bc\nthis : AddLECancellable (ENNReal.ofReal r)\u207b\u00b9\n\u22a2 (ENNReal.ofReal r)\u207b\u00b9 +\n        (![ENNReal.ofReal p * ((ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9) * ENNReal.ofReal r) /\n                (ENNReal.ofReal r - ENNReal.ofReal p * (ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9)),\n              ENNReal.ofReal q * ENNReal.ofReal r /\n                ((ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9) * ENNReal.ofReal r -\n                  ENNReal.ofReal q * (ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9))]\n            0)\u207b\u00b9 +\n      (ENNReal.ofReal r / (ENNReal.ofReal q * ENNReal.ofReal r) -\n        ENNReal.ofReal q / (ENNReal.ofReal q * ENNReal.ofReal r)) =\n    ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/e39ecc926ec5159e20af1716d7bcbdda08aa9523/Carleson/ToMathlib/MeasureTheory/Integral/MeanInequalities.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-15T16:19:39+02:00",
      "inclusion_date": "2025-05-03T00:00:36.176552+00:00"
    },
    "id": "e35cc0c62b21fdd8a7e63b242ef8de1f09ff4fe0c05edbcedbd6422b60b63c77"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "stable",
      "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "BatteriesTest/lintsimp.lean",
      "start_line": 37,
      "start_column": 64,
      "end_line": 37,
      "end_column": 69
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : @MulOpposite \u03b1\n\u22a2 @SemiconjBy \u03b1 inst\u271d (@MulOpposite.unop \u03b1 a) (@MulOpposite.unop \u03b1 y) (@MulOpposite.unop \u03b1 x) \u2194\n    @SemiconjBy (@MulOpposite \u03b1) (@MulOpposite.instMul \u03b1 inst\u271d) a x y",
      "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lintsimp.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "8a7dcd08b95f",
      "blame_date": "2022-12-18T15:51:52-05:00",
      "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
    },
    "id": "8c97efe8b6b78a37aeb9648f7cc088e7895a2eb09a177173e82f01c2c8c2a23b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "stable",
      "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "BatteriesTest/conv_equals.lean",
      "start_line": 22,
      "start_column": 2,
      "end_line": 22,
      "end_column": 7
    },
    "debug_info": {
      "goal": "P : (Nat \u2192 Nat) \u2192 Prop\n\u22a2 P fun n => 0",
      "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/conv_equals.lean#L22"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-08-19T05:19:41+02:00",
      "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
    },
    "id": "725c37df7e9430c9b9f5277210ad3611572faf0a460a5ecbc70ef45f0d4d9ce8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.fst \u03b1 \u03b2 p = @MyProd.fst \u03b1 \u03b2 q",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "36b41a76fa6543b00894b7391ee882fd60478180700921bf089cd90b28368f27"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.snd \u03b1 \u03b2 p = @MyProd.snd \u03b1 \u03b2 q",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "9634d5697a64573874bc9eef27765b5d86af89853130cd62d312ae4278547b51"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) p = @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) q",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "77c9139ad8f360fe033b9d21bd20fcf1e8832385d216b76e19a600221b5f99a5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "21d843812d13606346e7f018861a8b5197834bb467f9ed9ac43942ffc6793ed4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "bea1800be121aa6fa28dddd1f1b0c13ed5961fad581be509f955b11689639935"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 p x = @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 q x",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "65a165c020def5e269e3a70736887a6fd94bae2f0be8d7c6ae3238c1f204f386"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/ExtScript.lean",
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17
    },
    "debug_info": {
      "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 p = @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 q",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "d801f6b766eab033a8c3238314ac58e8c4369c0b4225dd54a7fbf6dadca52247"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/205.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : @R \u03b1 x a\nh\u2083 : @R \u03b1 y b\nfwd : @R \u03b1 b y\nfwd_1 : @R \u03b1 a x\nfwd_2 : @R \u03b1 b b\nfwd_3 : @R \u03b1 y y\nfwd_4 : @R \u03b1 a a\nfwd_5 : @R \u03b1 x x\n\u22a2 False",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/205.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2025-04-29T23:07:06+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "6b02fc6ff14bb6448a6bda9647f578eef79725fa77ed21652d354cd2f4f851b2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/SplitScript.lean",
      "start_line": 26,
      "start_column": 12,
      "end_line": 26,
      "end_column": 17
    },
    "debug_info": {
      "goal": "P A B : Prop\nh : P\n\u22a2 A",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/SplitScript.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-05-31T19:36:28+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "5ba1c057099dac08fa4cb887818b840a7ca57bb64e4b28e1b2f5d5a190f273f4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "stable",
      "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "AesopTest/SplitScript.lean",
      "start_line": 26,
      "start_column": 12,
      "end_line": 26,
      "end_column": 17
    },
    "debug_info": {
      "goal": "P A B : Prop\nh : \u00acP\n\u22a2 B",
      "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/SplitScript.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-05-31T19:36:28+02:00",
      "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
    },
    "id": "e5feedc27a584eafef9ed09d3b0b36e41c46c38c800a8c7ea9ef58e610bd38b9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 163,
      "start_column": 16,
      "end_line": 163,
      "end_column": 21
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : SliceModel F I I'\n\u22a2 \u2191(J.prod I') \u2218 Prod.map id (SliceModel.map F I I') =\n    \u21d1(let sdf := SliceModel.equiv I I';\n        sorry) \u2218\n      (fun x => (x, 0)) \u2218 \u2191(J.prod I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L163"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "814d3a8b928dabdf39c01e5c4ec1377cbfe9e710e951667d3e3f1f01eea473ad"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 170,
      "start_column": 16,
      "end_line": 170,
      "end_column": 21
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : SliceModel F I I'\n\u22a2 \u2191(I'.prod J) \u2218 Prod.map (SliceModel.map F I I') id = \u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(I.prod J)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "bf49e3e021d28131568b0aa182195db805c9be942272fb4e55996db41e91c92a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 177,
      "start_column": 6,
      "end_line": 177,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case hg\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : (E \u00d7 F) \u2243L[\ud835\udd5c] E'\n\u22a2 IsEmbedding \u21d1h",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "47f21005d8901dce8d8620173f53b538f2c5c4ddb5362c1203c0af24e235d60e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 182,
      "start_column": 16,
      "end_line": 182,
      "end_column": 21
    },
    "debug_info": {
      "goal": "case h.snd\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : (E \u00d7 F) \u2243L[\ud835\udd5c] E'\nthis : IsEmbedding Prod.swap\nx : E\n\u22a2 (x, 0).2 = ((Prod.swap \u2218 Prod.mk 0) x).2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L182"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "60a357a25e1d59a7f3821b4f8ca522585eb4d2c3398beae4914da7cb8f79ebae"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 178,
      "start_column": 43,
      "end_line": 178,
      "end_column": 48
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : (E \u00d7 F) \u2243L[\ud835\udd5c] E'\n\u22a2 IsEmbedding Prod.swap",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L178"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "53416d5a0e7aab0cf0db5f64d3bf98a0befcf3357b509efbaf1ef9d18f6a5fa8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 220,
      "start_column": 4,
      "end_line": 220,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn m : \u2115\ninst\u271d : NeZero n\nx' : EuclideanSpace \u211d (Fin n)\ni\u271d : Fin (n + m)\n\u22a2 (\u2191(\ud835\udce1 n + m) \u2218 sorry) x' i\u271d = (\u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(\ud835\udce1 n)) x' i\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L220"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "df20fa94d4c4ec740002708f961cc2334be79e7bdb6f76a966630004910acfdc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 217,
      "start_column": 10,
      "end_line": 217,
      "end_column": 15
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn m : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding sorry",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L217"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "78c5218d5fb367b32dd90a108e905f3b9df1395d776407c0be9fb4462822fb6d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 229,
      "start_column": 4,
      "end_line": 229,
      "end_column": 9
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding fun x =>\n    match x with\n    | \u27e8x, hx\u27e9 => \u27e8x, \u22ef\u27e9",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "c8bf09d7458fda1376ab7e89fabb30222c7f108ea38aab7ce8c0a240892a303b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-slicemodels",
      "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
      "start_line": 244,
      "start_column": 4,
      "end_line": 244,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : SliceModel F I I'\nh' : SliceModel F' I' I''\nx : H\n\u22a2 \u2191I'' (SliceModel.map F' I' I'' (SliceModel.map F I I' x)) =\n    (SliceModel.equiv I' I'')\n      ((SliceModel.equiv I I') ((ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F').symm (\u2191I x, 0)).1,\n        ((ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F').symm (\u2191I x, 0)).2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L244"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-05-02T14:30:37+02:00",
      "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
    },
    "id": "dcea907543fd8b6879691087b29b8e358794a81077cb8a9cf8d8f9242fd029e3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mrb/de-simp_insert_eq_of_mem",
      "commit": "c9c09db16e82581f07b2fcc072020f093f0278e6",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "Mathlib/Data/Matroid/Loop.lean",
      "start_line": 729,
      "start_column": 2,
      "end_line": 729,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1\u271d : Type u_1\nM\u271d : Matroid \u03b1\u271d\ne\u271d : \u03b1\u271d\n\u03b1 : Type u_1\nM : Matroid \u03b1\ne : \u03b1\nR : Set \u03b1\nhRE : R \u2286 M.E\nheR : e \u2208 R\n\u22a2 (\u2200 \u2983C : Set \u03b1\u2984, M.IsCircuit C \u2227 C \u2286 R \u2192 e \u2209 C) \u2194 (\u00ac\u2203 C \u2286 insert e R, M.IsCircuit C \u2227 e \u2208 C) \u2227 e \u2208 R",
      "url": "https://github.com/leanprover-community/mathlib4/blob/c9c09db16e82581f07b2fcc072020f093f0278e6/Mathlib/Data/Matroid/Loop.lean#L729"
    },
    "metadata": {
      "blame_email_hash": "31f40fef96e9",
      "blame_date": "2025-05-02T11:58:03-04:00",
      "inclusion_date": "2025-05-02T23:14:21.935003+00:00"
    },
    "id": "69602fd0e6d294def6c9731a40fd7a12cc5b789174226dd6964bee5b5310b2ee"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/ConsistentTableau.lean",
      "start_line": 397,
      "start_column": 6,
      "end_line": 397,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case mp.a\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\n\u03c6 : Formula \u03b1\ninst\u271d\u00b2 : Entailment.Int \ud835\udce2\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Encodable \u03b1\n\u0393 : List (Formula \u03b1)\nh : \u0393 \u22a2[\ud835\udce2]! \u03c6\nt : SaturatedConsistentTableau \ud835\udce2\nht : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191t).1\n\u22a2 \u2191\u0393.toFinset *\u22a2[\ud835\udce2]! \u03c6",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/ConsistentTableau.lean#L397"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "9c092025afa3606c2ecc64a7b8db4c1602feabaf2d6b57315e35e679963853fb"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/ConsistentTableau.lean",
      "start_line": 402,
      "start_column": 4,
      "end_line": 402,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case mpr\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\n\u03c6 : Formula \u03b1\ninst\u271d\u00b2 : Entailment.Int \ud835\udce2\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Encodable \u03b1\n\u0393 : List (Formula \u03b1)\nh : \u2200 (t : SaturatedConsistentTableau \ud835\udce2), (\u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191t).1) \u2192 \u03c6 \u2208 (\u2191t).1\n\u22a2 \u0393 \u22a2[\ud835\udce2]! \u03c6",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/ConsistentTableau.lean#L402"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "44ad3ce1ee23ed23487172dd17814fa2c6b3e343a5c0073d57441c2bc097279a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 109,
      "start_column": 54,
      "end_line": 109,
      "end_column": 59
    },
    "debug_info": {
      "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 : List (Formula \u2115)\nhC : \ud835\udce2 \u22a2! \u22c0\u0393 \u279d \u22c1\u0394\n\u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u22a2 \ud835\udce2 \u22a2! \u22c0\u0393x \u22cf \u223c\u22c0\u0393yz \u279d \u22c1\u0394y \u22ce \u22c1\u0394z",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L109"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "28b4efba1ac1d4fb767266aae64bca65b83047effda7f04fd580074e3301b55a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 114,
      "start_column": 48,
      "end_line": 114,
      "end_column": 53
    },
    "debug_info": {
      "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b3yz : Formula \u2115\ne\u03b3yz : \u22c0\u0393yz = \u03b3yz\n\u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nhC : \ud835\udce2 \u22a2! \u03b3x \u22cf \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z\n\u22a2 \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L114"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "2303383c9bcf589809a17c926a7c6a3db60e74f6a8b9baeb12a8d5c0724f00f8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 120,
      "start_column": 8,
      "end_line": 120,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case left\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393\nhC : \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u22c0List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 \u279d \u03b4y \u22ce \u03b4z\n\u22a2 \u223c\u22c0List.filter (fun x => decide (\u2203 x_1, (\u223cx_1 \u2208 (\u2191y).1 \u2227 \u223cx_1 \u2208 (\u2191z).1) \u2227 \u223cx_1 = x)) \u0393 \u2208 (\u2191y).1",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L120"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "3e285f1d91b03c7850eb9ad5800c4a6b241cb68f1c3a5a136322bdcc0c66fd77"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 121,
      "start_column": 8,
      "end_line": 121,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case right\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393\nhC : \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u22c0List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 \u279d \u03b4y \u22ce \u03b4z\n\u22a2 \u223c\u22c0List.filter (fun x => decide (\u2203 x_1, (\u223cx_1 \u2208 (\u2191y).1 \u2227 \u223cx_1 \u2208 (\u2191z).1) \u2227 \u223cx_1 = x)) \u0393 \u2208 (\u2191z).1",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "5def01e84effe39570ceccd6e89211e950831613966f4cf8f27769571bdff6ba"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 128,
      "start_column": 65,
      "end_line": 128,
      "end_column": 70
    },
    "debug_info": {
      "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b3yz : Formula \u2115\ne\u03b3yz : \u22c0\u0393yz = \u03b3yz\n\u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nhC : \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z\nthis\u271d\u00b2 : \u223c\u03b3yz \u2208 (\u2191y).1 \u2227 \u223c\u03b3yz \u2208 (\u2191z).1\nthis\u271d\u00b9 : \u03b4y \u2208 (\u2191y).2\nthis\u271d : \u03b4z \u2208 (\u2191z).2\nthis : [\u03b3x] \u22a2[\ud835\udce2]! (\u223c\u03b3yz \u279d \u03b4y) \u22ce (\u223c\u03b3yz \u279d \u03b4z)\n\u22a2 \u2200 \u03c6 \u2208 [\u03b3x], \u03c6 \u2208 (\u2191x).1",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "620ddb443a0493cf2382093b51adc37058e566862fd81592b475be370eae5c0d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 156,
      "start_column": 30,
      "end_line": 156,
      "end_column": 35
    },
    "debug_info": {
      "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u0393 \u0394 : List (Formula \u2115)\nh\u2081 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191y).1 \u222a (\u2191v).1\nh\u2082 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u2205\nh\u2083 : \u00ac\ud835\udce2 \u22ac \u22c0\u0393 \u279d \u22c1\u0394\n\u22a2 \u0394 = []",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T12:58:06+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "cdd58161271c1be85cb930ab83e86864d1925c72e8c09672ef277237f22c870b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 166,
      "start_column": 14,
      "end_line": 166,
      "end_column": 19
    },
    "debug_info": {
      "goal": "case inl\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u0393 : List (Formula \u2115)\nh\u2081 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191y).1 \u222a (\u2191v).1\nh\u2082 : \u2200 \u03c6 \u2208 [], \u03c6 \u2208 \u2205\nh\u2083 : insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} *\u22a2[\ud835\udce2]! \u22c0\u0393 \u279d \u22a5\n\u03c6 : Formula \u2115\nh\u03c6 : \u03c6 \u2208 \u0393\nh : \u03c6 \u2208 (\u2191y).1\n\u22a2 { ctx := insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} } \u22a2! \u03c6",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L166"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T14:26:29+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "56031a893fb8342e82d69a6770023bab9b2e3d81c00da78d5aa1493053ca43d8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 167,
      "start_column": 14,
      "end_line": 167,
      "end_column": 19
    },
    "debug_info": {
      "goal": "case inr\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u0393 : List (Formula \u2115)\nh\u2081 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191y).1 \u222a (\u2191v).1\nh\u2082 : \u2200 \u03c6 \u2208 [], \u03c6 \u2208 \u2205\nh\u2083 : insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} *\u22a2[\ud835\udce2]! \u22c0\u0393 \u279d \u22a5\n\u03c6 : Formula \u2115\nh\u03c6 : \u03c6 \u2208 \u0393\nh : \u03c6 \u2208 (\u2191v).1\n\u22a2 { ctx := insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} } \u22a2! \u03c6",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T12:58:06+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "2c83e7a30e9459b1daca8d80de0baf0996082c71f79fad517d28a18c89c663a6"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "Kriesel-Putnam",
      "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
      "start_line": 171,
      "start_column": 62,
      "end_line": 171,
      "end_column": 67
    },
    "debug_info": {
      "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u03b3\u2081 : Formula \u2115\nh\u03b3\u2081\u2081 : \u03b3\u2081 \u2208 (\u2191v).1\nh\u03b3\u2081\u2082 : \u223c\u03b3\u2081 \u2208 (\u2191y).1\n\u22a2 \u2203 \u03b3\u2082 \u2208 (\u2191v).1, \u223c\u03b3\u2082 \u2208 (\u2191z).1",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L171"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-05-02T12:58:06+09:00",
      "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
    },
    "id": "faed874edb2e6a0dc5b5794b048b0ed8c7aaea4b89eb091329590c9fb6bfc6e3"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "b6afdbee9516862a93891034ab6415399391c13b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanByExample/Tactic/Ext.lean",
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u\na b : @Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
      "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Ext.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
    },
    "id": "9ce4208411687707e6675450229e36b225a150d2708f7fc9bfb0688f6e948a7e"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "b6afdbee9516862a93891034ab6415399391c13b",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanByExample/Tactic/Ext.lean",
      "start_line": 95,
      "start_column": 2,
      "end_line": 95,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type\np q : Foo\nhx : Foo.x p = Foo.x q\nhy : Foo.y p = Foo.y q\n\u22a2 p = q",
      "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Ext.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
    },
    "id": "18ec047e1602cf9c1668a447d4b827b2f619b1b2ecda7ee7272cea0e8ae4f0f2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/02Iff.lean",
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7
    },
    "debug_info": {
      "goal": "p q r : Prop\n\u22a2 (p \u2192 q) \u2192 (p \u2192 q \u2192 r) \u2192 p \u2192 r",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/02Iff.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "94b2b1967808da0cd80c61f0006cb9ea53e1a1e5fc49447fb9c9af7f363f9b20"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 46,
      "start_column": 2,
      "end_line": 46,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 : X\nh : @Tutorial.isInf X inst\u271d s x\u2080\n\u22a2 x\u2080 \u2208 lowerBounds s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "16296fe758bccda8131c22be3eb802c56009c772e341930f1cc80de0f5f34215"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 50,
      "start_column": 2,
      "end_line": 50,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 x\u2081 : X\nhx\u2080 : @Tutorial.isInf X inst\u271d s x\u2080\nhx\u2081 : @Tutorial.isInf X inst\u271d s x\u2081\n\u22a2 x\u2080 = x\u2081",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "2b9fe7320091bf1cf21726c31ee6dbb3047a49472fa8a89e0d29c6ae3c49b118"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 157,
      "start_column": 2,
      "end_line": 157,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : Tutorial.CompleteLattice X inst\u271d\u00b9\ns t : Set X\nh : s \u2286 t\n\u22a2 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d t \u2264 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L157"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "7fe661f2ff9b389c75bbb65c76294ae37146b40676d31a9e062800f7adbfa2c4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 163,
      "start_column": 2,
      "end_line": 163,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : Tutorial.CompleteLattice X inst\u271d\u00b9\nx x' : X\n\u22a2 x \u2264 x' \u2194 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d {x, x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L163"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "9cf6ee8ee55509eaec2cdda1205b526157366dac991b12b85f96e5136986ef81"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 170,
      "start_column": 2,
      "end_line": 170,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : Tutorial.CompleteLattice X inst\u271d\u00b9\nx : X\n\u22a2 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d {x' | x \u2264 x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "61da6f8ba4d8d7e063334274f738394dabfaf127d4a5d2a21bc392c85463b5e6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 378,
      "start_column": 2,
      "end_line": 378,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X Y : Type\nf : X \u2192 Y\nt : Set (Tutorial.Topology X)\n\u22a2 Tutorial.push X Y f\n      (Tutorial.CompleteLattice.S (Tutorial.Topology X) (Tutorial.instPartialOrderTopology X)\n        (Tutorial.instCompleteLatticeTopology X) t) =\n    Tutorial.CompleteLattice.S (Tutorial.Topology Y) (Tutorial.instPartialOrderTopology Y)\n      (Tutorial.instCompleteLatticeTopology Y)\n      (@Set.image (Tutorial.Topology X) (Tutorial.Topology Y) (Tutorial.push X Y f) t)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L378"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "ac835ea7a7de4678980f2db2caf8a959cb141dc73c37a5415b6af0663d1d6929"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 390,
      "start_column": 2,
      "end_line": 390,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b9 : Type\nX : \u03b9 \u2192 Type\nT : (i : \u03b9) \u2192 Tutorial.Topology (X i)\nZ : Type\nTZ : Tutorial.Topology Z\nf : Z \u2192 (i : \u03b9) \u2192 X i\n\u22a2 Tutorial.Continuous Z ((i : \u03b9) \u2192 X i) TZ (Tutorial.ProductTopology \u03b9 X T) f \u2194\n    (i : \u03b9) \u2192 Tutorial.Continuous Z (X i) TZ (@T i) fun z => f z i",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L390"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "0df32bbd949ac7cf12d810553e13795dfc6f601ab44f86dd254fd84b9af468f2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 415,
      "start_column": 4,
      "end_line": 415,
      "end_column": 9
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d : Group G\ns : Set (Tutorial.Subgroups.Subgroup G inst\u271d)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L415"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "975a375a86fc56f34bf2b12573e0ae2fafd4e3ac0eb1e4dc174b3cba1803f6b6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 448,
      "start_column": 4,
      "end_line": 448,
      "end_column": 9
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Tutorial.Subgroups.Subgroup G' inst\u271d\n\u22a2 1 \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L448"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "63de93ee0dfc4cc6228588e238c8d94c64a66cacc9d2471547e3bb6c11e5034d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 451,
      "start_column": 4,
      "end_line": 451,
      "end_column": 9
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Tutorial.Subgroups.Subgroup G' inst\u271d\n\u22a2 \u2200 \u2983x y : G\u2984,\n    x \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H' \u2192\n      y \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H' \u2192\n        x * y \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L451"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "25cbd0844747bac4e36e39c2ec736000e7cf40b5fc195d9b270da841a7de76ee"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 454,
      "start_column": 4,
      "end_line": 454,
      "end_column": 9
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Tutorial.Subgroups.Subgroup G' inst\u271d\n\u22a2 \u2200 \u2983x : G\u2984,\n    x \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H' \u2192\n      x\u207b\u00b9 \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L454"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "46e9831c203294e6382fae987c5cf38bc871b5c2c5de28ec0b6f1bf588eba302"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 480,
      "start_column": 2,
      "end_line": 480,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl l' : X \u2192 Y\nr : Y \u2192 X\nh : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l r\nh' : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l' r\n\u22a2 l = l'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L480"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "bbd27af9ec63774788995fb939612a90cc0ee1214b708811311ea7a6e7860cf3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 484,
      "start_column": 2,
      "end_line": 484,
      "end_column": 7
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr r' : Y \u2192 X\nh : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l r\nh' : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l r'\n\u22a2 r = r'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L484"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "d88f18b99452af01799ce6c2203ad6ef2bb9daf55e57a58669646a168d551928"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
      "start_line": 504,
      "start_column": 2,
      "end_line": 504,
      "end_column": 7
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 @Function.comp (Set G) (Tutorial.Subgroups.Subgroup G inst\u271d\u00b9) (Tutorial.Subgroups.Subgroup G' inst\u271d)\n      (Tutorial.Subgroups.push G inst\u271d\u00b9 G' inst\u271d f) (Tutorial.Subgroups.generate G inst\u271d\u00b9) =\n    @Function.comp (Set G) (Set G') (Tutorial.Subgroups.Subgroup G' inst\u271d) (Tutorial.Subgroups.generate G' inst\u271d)\n      (Set.image \u21d1f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L504"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "d105470b55fa078bbcd6e76a2606d4ee908b7f29fe9f62ec62ad1abfbb8f9dec"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 70,
      "start_column": 2,
      "end_line": 70,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet \u03a9 inst\u271d\u00b9 A B\u1d9c \u2194 IndepSet \u03a9 inst\u271d\u00b9 A B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "8d4789c789e6da6cf21a6f303a96c8535058c52dc441f7f4aad9a455203dcf3d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 83,
      "start_column": 2,
      "end_line": 83,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA : Set \u03a9\nh : IndepSet \u03a9 inst\u271d\u00b9 A A\n\u22a2 volume A = 0 \u2228 volume A = 1",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "6110084735844bdcbc1633cf42638db3b0c41fc985d340342b53993104a878e6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 104,
      "start_column": 2,
      "end_line": 104,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhA : volume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L104"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "6dab03d27f322b2e6bd30a3bc7aabc1699d7b95da46a7431af753300332119e2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 108,
      "start_column": 2,
      "end_line": 108,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "5e42a6bc873af61998355c832a046c89f358f53be5edb12eae7de8bb537a25cc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 122,
      "start_column": 4,
      "end_line": 122,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case pos\n\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B \u2260 0\nh : volume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T19:47:14+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "68a171a27f741dff6dc91e16db9e14fe1b75e4776c25e2a1796d7f124b1c870f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 123,
      "start_column": 2,
      "end_line": 123,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case neg\n\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B \u2260 0\nh : \u00acvolume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L123"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "80770cba61eb6427f7a40f89934dec12c0ab59bd4dad184a303e24960cec4cf2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 132,
      "start_column": 2,
      "end_line": 132,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "b159ecb2cf9fad10e84cce3e23680546fcd11ac526ac988d2edc99f5003e6801"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nh : IndepSet \u03a9 inst\u271d\u00b9 B A\nhB : volume B \u2260 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/Probability.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "07cb8e0d0361e9dde492fce82fd8107ef7f56b44517592807e8dab424a95ec2a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 87,
      "start_column": 2,
      "end_line": 87,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : Topics.seq_limit u l\nhl : l > 0\n\u22a2 \u2203 N, \u2200 n \u2265 N, u n \u2265 l / 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L87"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "8fe5828c78ceee3afdfd18898817a81de37d49d7c1029ba55df1c045ae60bf61"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
      "start_line": 210,
      "start_column": 2,
      "end_line": 210,
      "end_column": 7
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl a : \u211d\nhl : Topics.seq_limit u l\nha : Topics.cluster_point u a\n\u22a2 a = l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L210"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "60cf343b7096f5aac89c20735a89623516472df5c930f35274392083dd5f0c81"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
      "start_line": 64,
      "start_column": 2,
      "end_line": 64,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03c6 : ClassicalPropositionalLogic.Variable \u2192 Prop\nA B : ClassicalPropositionalLogic.Formula\n\u22a2 ClassicalPropositionalLogic.IsTrue \u03c6 (ClassicalPropositionalLogic.equiv A B) \u2194\n    (ClassicalPropositionalLogic.IsTrue \u03c6 A \u2194 ClassicalPropositionalLogic.IsTrue \u03c6 B)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "63fd52916a827fb0f3759178605cd47fd2a45a64e3c2c78e6ea1827cca210661"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 68,
      "start_column": 4,
      "end_line": 68,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 g (f 1) = 1",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "977f330ea4abf2d77f1839641a2d9b7e54885671f0b985952d97f42662c63a24"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 70,
      "start_column": 4,
      "end_line": 70,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 \u2200 (x y : R), g (f (x * y)) = g (f x) * g (f y)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "4f017cace74a169c40f4d74eb25393281121288e940ef3917117f05aece42e8e"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 72,
      "start_column": 4,
      "end_line": 72,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 g (f 0) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L72"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "267b55b557ef3189bf6423ee5e5b198817f5ee73335549257b04eabeaa1f6175"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 74,
      "start_column": 4,
      "end_line": 74,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 \u2200 (x y : R), g (f (x + y)) = g (f x) + g (f y)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L74"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "cc97257cf7c456c2218300a2edb3b3270a83e6cb7243f0ddf676be0a73b25e98"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 94,
      "start_column": 4,
      "end_line": 94,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 LeftInverse (fun x => f.symm (g.symm x)) fun x => g (f x)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L94"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "ed0d23cbbfe050831f5fbbda5ca34cea295d47c78e89d2e87c4ee761dddec296"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 96,
      "start_column": 4,
      "end_line": 96,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 RightInverse (fun x => f.symm (g.symm x)) fun x => g (f x)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L96"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "d1413248e25c889c2911a502058c739767b88da06a7acf63f71a8f5bad9516d8"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 100,
      "start_column": 4,
      "end_line": 100,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 \u2200 (x y : R), g (f (x * y)) = g (f x) * g (f y)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L100"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "01e7c42dfca4ec0098f212ed304b28a0a63a97117816cc475cf87143706b15d5"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 98,
      "start_column": 4,
      "end_line": 98,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 \u2200 (x y : R), g (f (x + y)) = g (f x) + g (f y)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L98"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "56fc6bea22d835b3a0711a4980f723a81525da1bf8199c6a9b6ebae63f32f6dc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 138,
      "start_column": 4,
      "end_line": 138,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 {a b : R}, a \u2208 \u2191I \u2229 \u2191J \u2192 b \u2208 \u2191I \u2229 \u2191J \u2192 a + b \u2208 \u2191I \u2229 \u2191J",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "eed30c3ad05ae11b859351ef181c75576efea66f87928dee8c225cd57b201e57"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 140,
      "start_column": 4,
      "end_line": 140,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 0 \u2208 \u2191I \u2229 \u2191J",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L140"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "26298db727d1b9da5480dbd46840616a7b757fc3dfc5698f28bd2708d460ec12"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 142,
      "start_column": 4,
      "end_line": 142,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 (c : R) {x : R}, x \u2208 \u2191I \u2229 \u2191J \u2192 c \u2022 x \u2208 \u2191I \u2229 \u2191J",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L142"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "872110aab36a3860b61d16c5273586a2d5d013bd0d615b0bda204c200460bf10"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 191,
      "start_column": 4,
      "end_line": 191,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type ?u.18803\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.18809\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 x \u2208 ker f \u2192 f x = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L191"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "3b846a734c8bdaa1e709cb68b9f4bed37a3ed8c8f157c2e10c48be16ceebdd84"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) ((Ideal.Quotient.mk (ker f)) x) = f x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "8522639efd210c895b1157677217f93deee1a2f67c8aba095135fbc80af17ac6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 220,
      "start_column": 2,
      "end_line": 220,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case intro\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R \u29f8 ker f\nx' : R\nhx : (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) ((Ideal.Quotient.mk (ker f)) x') = 0\nhx' : (Ideal.Quotient.mk (ker f)) x' = x\n\u22a2 (Ideal.Quotient.mk (ker f)) x' = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L220"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "3dcfe7c39313a4ef82c8ff38967f87128d187b1f3d65246a6a89de733649aefc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 256,
      "start_column": 6,
      "end_line": 256,
      "end_column": 11
    },
    "debug_info": {
      "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 LeftInverse (fun x => (Ideal.Quotient.mk (ker f)) (surjInv hf x)) \u21d1(@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L256"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "6ed08f2744c9c9838b441761d043fdab5ee13d66983cba1cd926373b0b5fa321"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 245,
      "start_column": 6,
      "end_line": 245,
      "end_column": 11
    },
    "debug_info": {
      "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x * y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x * (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L245"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "2f0272e72843ebf5d8a29bd5c2c15b2468ba936ee0aa7ca32096c9261b600557"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 247,
      "start_column": 6,
      "end_line": 247,
      "end_column": 11
    },
    "debug_info": {
      "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x + y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x + (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "430c555cb6e9b79d7f941e0f3b670efe351a12a0bbf338bfa4ae05f7fed3278c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 293,
      "start_column": 8,
      "end_line": 293,
      "end_column": 13
    },
    "debug_info": {
      "goal": "R : Type ?u.27608\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 \u2200 a \u2208 \u2a05 i, I i, (Pi.ringHom fun i => Quotient.mk (I i)) a = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L293"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "d8efa5081532a41ad507b2e970ff4516d8023c7180a0dd09fd02339a41e11ba1"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 308,
      "start_column": 2,
      "end_line": 308,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 Injective \u21d1(@Ideal.chineseMap R inst\u271d \u03b9 I)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L308"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "11947294803194e54facdfad5b858f5535d79d648aa362b21252fd7198cb9184"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 346,
      "start_column": 6,
      "end_line": 346,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case empty\nR : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : Ideal R\nJ : \u03b9 \u2192 Ideal R\n\u22a2 (\u2200 j \u2208 \u2205, I + J j = 1) \u2192 I + \u2a05 j \u2208 \u2205, J j = 1",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L346"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "0ee29a042248b641601430389793c2841f6acc25901cb11ff759eb790ad42cc4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 351,
      "start_column": 6,
      "end_line": 351,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case insert\nR : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : Ideal R\nJ : \u03b9 \u2192 Ideal R\ni : \u03b9\ns : Finset \u03b9\na\u271d : i \u2209 s\nh : \u2200 j \u2208 insert i s, I + J j = 1\nK : Ideal R := \u2a05 j \u2208 s, J j\nhs : (\u2200 j \u2208 s, I + J j = 1) \u2192 I + K = 1\n\u22a2 1 \u2264 I + min K (J i)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L351"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "c216f47956a0d7b602cdcef135486fa6e931b00bd1d8f58e6b7b12746b385a43"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 370,
      "start_column": 6,
      "end_line": 370,
      "end_column": 11
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ni : \u03b9\n\u22a2 \u2200 j \u2208 {i}\u1d9c, I i + I j = 1",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "b45d745a2487da8a53401804b56b3a98104166098e01494588cabd1f51aacfe6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 371,
      "start_column": 4,
      "end_line": 371,
      "end_column": 9
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ni : \u03b9\nhI' : \u2200 j \u2208 {i}\u1d9c, I i + I j = 1\n\u22a2 \u2203 e, (Quotient.mk (I i)) e = 1 \u2227 \u2200 (j : \u03b9), j \u2260 i \u2192 (Quotient.mk (I j)) e = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L371"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "50361702ddd51e53abc06790bfbeb4ddc4f1bf8e27845f4ce81d8b3aefff40a7"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
      "start_line": 373,
      "start_column": 2,
      "end_line": 373,
      "end_column": 7
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ne : \u03b9 \u2192 R\nhe : \u2200 (i : \u03b9), (Quotient.mk (I i)) (e i) = 1 \u2227 \u2200 (j : \u03b9), j \u2260 i \u2192 (Quotient.mk (I j)) (e i) = 0\n\u22a2 \u2203 a, (@Ideal.chineseMap R inst\u271d\u00b9 \u03b9 I) a = g",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L373"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-04-20T11:35:58+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "a3cdd2590ff21f07981b5e21ad4d9b25a607bab6a95266d11627352a4ca45840"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 71,
      "start_column": 2,
      "end_line": 71,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\n\u03c6 : IntuitionisticPropositionalLogic.Variable \u2192 H\n\u22a2 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 IntuitionisticPropositionalLogic.top = \u22a4",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "5f292ac73ee3d8e4b3fc13c6fc5bbd2a373af3391aec7d0f8f419fb5b2ec72f3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "4d486494bcfd3b5f2b00859875019656105ddd34",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\n\u03c6 : IntuitionisticPropositionalLogic.Variable \u2192 H\nA B : IntuitionisticPropositionalLogic.Formula\n\u22a2 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 (IntuitionisticPropositionalLogic.equiv A B) =\n    min (@IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 A \u21e8 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 B)\n      (@IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 B \u21e8 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/4d486494bcfd3b5f2b00859875019656105ddd34/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-05-03T00:45:26.725708+00:00"
    },
    "id": "cc95fd34a0a939efdd6474b57d7134d5dd4c10b37f625231c4d654c95e3e51c0"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 50,
      "start_column": 77,
      "end_line": 50,
      "end_column": 82
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "502242afc958b70262678f33f19567c6094855a4d0735e276186ad799c39bc39"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 52,
      "start_column": 77,
      "end_line": 52,
      "end_column": 82
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "bf791b2eb06dde3a5f7a37409ae9b032cd1fb78813102a5ea9e8350cd939a312"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 54,
      "start_column": 77,
      "end_line": 54,
      "end_column": 82
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "beda0b7dfdb7f0128c9df8083b4cf89caf73af4309850769c8abe7876f952b4a"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 58,
      "start_column": 74,
      "end_line": 58,
      "end_column": 79
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "e41392562840c0544794f97c1d3883e29b45a0d28bf7e52107e3bbaa493bcb1c"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 61,
      "start_column": 94,
      "end_line": 61,
      "end_column": 99
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "8bae8622ac3de1d90cf93ac82445eed2395334f922d8ad8e2f904c136e680b61"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 64,
      "start_column": 60,
      "end_line": 64,
      "end_column": 65
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "dd44dbb2865f4f5af3967c444b2042a2425ab762504f8bf6a6e99e1cf3eecf9a"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 67,
      "start_column": 88,
      "end_line": 67,
      "end_column": 93
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "083f94426b161fe93e585de6424f953730b3f32cedd5a92aef71f6e07bc604f4"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/TorsionEndgame.lean",
      "start_line": 89,
      "start_column": 54,
      "end_line": 89,
      "end_column": 59
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U volume \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/TorsionEndgame.lean#L89"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-28T21:28:18-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "a09ebc823bda1311d419fca798d844cd8a65484e7a3d99d93d68a8313563ad2d"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/BoundingMutual.lean",
      "start_line": 36,
      "start_column": 79,
      "end_line": 36,
      "end_column": 84
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' volume\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) volume volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/BoundingMutual.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "fad5eb6dc492d16047f1d8e2333129ae8d51902ef259a911bb820127770236c3"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/ApproxHomPFR.lean",
      "start_line": 181,
      "start_column": 65,
      "end_line": 181,
      "end_column": 70
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\n\u22a2 Nat.card (G \u2192+ ZMod 2) = Nat.card G",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/ApproxHomPFR.lean#L181"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2025-05-01T23:21:54-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "b076c3ad24532ffc0d8a7a3b7fc0e5a15ee579e465d4a82a95387dd0f497f17c"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/ApproxHomPFR.lean",
      "start_line": 183,
      "start_column": 114,
      "end_line": 183,
      "end_column": 119
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nx : G\nhx : x \u2260 0\n\u22a2 Nat.card \u2191{\u03c6 | \u03c6 x = 1} = Nat.card G / 2",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/ApproxHomPFR.lean#L183"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2025-05-01T23:21:54-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "5a9afe1d0680dc3d7fd0de275da56b2db386a31511d1f31748bf1e0dee2eb573"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/ApproxHomPFR.lean",
      "start_line": 185,
      "start_column": 114,
      "end_line": 185,
      "end_column": 119
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nA : Set G\n\u22a2 \u2203 \u03c6, Nat.card \u2191{x | x \u2208 A \u2227 \u03c6 x = 1} \u2265 (Nat.card \u2191A - 1) / 2",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/ApproxHomPFR.lean#L185"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2025-05-01T23:21:54-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "22e530e0155492c26dbda6c1b38960dec4b6b8cf1c6cac236c844bd59ffe87fd"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/ApproxHomPFR.lean",
      "start_line": 189,
      "start_column": 99,
      "end_line": 189,
      "end_column": 104
    },
    "debug_info": {
      "goal": "G : Type u_1\nG' : Type u_2\ninst\u271d\u2075 : AddCommGroup G\ninst\u271d\u2074 : Fintype G\ninst\u271d\u00b3 : AddCommGroup G'\ninst\u271d\u00b2 : Fintype G'\ninst\u271d\u00b9 : Module (ZMod 2) G\ninst\u271d : Module (ZMod 2) G'\nf : G \u2192 G'\nK : \u211d\nhK : K > 0\nhf : \u2191(Nat.card G) ^ 2 / K \u2264 \u2191(Nat.card \u2191{x | f (x.1 + x.2) = f x.1 + f x.2})\n\u22a2 \u2203 \u03c6'', \u2191(Nat.card \u2191{x | f x = \u03c6'' x}) \u2265 (\u2191(Nat.card G) / (2 ^ 144 * K ^ 122) - 1) / 2",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/ApproxHomPFR.lean#L189"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2025-05-01T23:21:54-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "e75cf8f1d4e12c80fbaa0f62b3c2501181485604dbf64651a84e14271216fe43"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 760,
      "start_column": 62,
      "end_line": 760,
      "end_column": 67
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L760"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-22T09:31:46-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "4c87c7733adfe2709e05941a0dd4c8ba80fce4dc6b22be819c19584f3b15a732"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 857,
      "start_column": 106,
      "end_line": 857,
      "end_column": 111
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 (\u2211 j, \u2211 k, if j = k then 0 else d[X j # -X k]) \u2264 \u2191m * (\u2191m - 1) * @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L857"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2025-05-02T00:15:47-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "2be0150aa78fedfb57d79b8a6097182c5778adf8bbc131f71c5c788fcd941297"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 862,
      "start_column": 69,
      "end_line": 862,
      "end_column": 74
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 \u2211 j, d[X j # X j] \u2264 2 * \u2191m * @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L862"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "c83fb055cd784ff0218908ad23362ac82e97ab295d73eaa278d25927a75b71c9"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 868,
      "start_column": 108,
      "end_line": 868,
      "end_column": 113
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhidenT : \u2200 (j k : Fin m), IdentDistrib (X j) (X k) volume volume\n\u22a2 \u2200 (i : Fin m), @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X \u2264 \u2191m * d[X i # X i]",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L868"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "a7dac7b0c268c1a2f14d80c960c52a573b4e9f39625cf0c8165c868777b00bff"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 873,
      "start_column": 82,
      "end_line": 873,
      "end_column": 87
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L873"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "161c7247dbb378f79609f1babe8c535e3f9086e61a4e2ad06c9e3fe7e1025888"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MoreRuzsaDist.lean",
      "start_line": 1540,
      "start_column": 54,
      "end_line": 1540,
      "end_column": 59
    },
    "debug_info": {
      "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    (\u2211 j,\n          ((@multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, j)) -\n            @condMultiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) G inst\u271d (fun i => X (i, j)) fun i =>\n              \u2211 k \u2208 Finset.Ici j, X (i, k)) +\n        @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, \u2191m)) -\n      @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => \u2211 j, X (i, j)",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L1540"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "bc74683ff30b4312280d3dc1f6425501361270ae8dc229cdba22174ceaa45803"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MultiTauFunctional.lean",
      "start_line": 54,
      "start_column": 111,
      "end_line": 54,
      "end_column": 116
    },
    "debug_info": {
      "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : @MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u2074 inst\u271d\n\u22a2 Continuous fun \u03bc =>\n    @multiTau G \u03a9\u2080 inst\u271d\u2074 inst\u271d p (fun x => G)\n      (fun i =>\n        { toMeasurableSpace := @MeasureableFinGroup.toMeasurableSpace ((fun x => G) i) inst\u271d\u2074, volume := \u2191(\u03bc i) })\n      fun x => id",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MultiTauFunctional.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T09:57:28-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "1a8a9e84e9ff788b7f6d37a733c9d4e6b4ffc4652acab6d53a8679e27c16cc96"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PFR/MultiTauFunctional.lean",
      "start_line": 57,
      "start_column": 222,
      "end_line": 57,
      "end_column": 227
    },
    "debug_info": {
      "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : @MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u00b9 inst\u271d\n\u22a2 \u2203 \u03a9 h\u03a9 X, @multiTauMinimizes G \u03a9\u2080 inst\u271d\u00b9 inst\u271d p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MultiTauFunctional.lean#L57"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-08-18T19:14:43-07:00",
      "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
    },
    "id": "82cd92cee86c8ee2bd9a303126a99e605113a07700e7037aca335957bd59255e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
      "start_line": 193,
      "start_column": 4,
      "end_line": 193,
      "end_column": 9
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\n\u22a2 R \u2260 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L193"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-05-02T15:31:06-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "92a89578ba62daebb8f59b14a7114e2d70fd31c48488c31eceb352bbb22686d4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
      "start_line": 206,
      "start_column": 4,
      "end_line": 206,
      "end_column": 9
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\n\u22a2 (eval (\u2191f) (((MvPolynomial.finSuccEquiv F 1).trans (mapAlgEquiv MvPolynomial.finOneEquiv)) Q)).comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L206"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-05-02T15:31:06-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "6660ac7c6b48ea61b4c1c71c2304529ce6a910bc5fa9583c0c0d6e44bb3be33d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
      "start_line": 210,
      "start_column": 66,
      "end_line": 210,
      "end_column": 71
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\nhRComp :\n  R.comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\nnext :\n  MvPolynomial.X 0 ^ r \u2223\n    MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q\n\u22a2 X ^ r \u2223\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L210"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-05-02T15:31:06-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "c3e8884a66f204529f7c258f9aad99cd24d31c28ad730c13c6a7de238982fce0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
      "start_line": 213,
      "start_column": 67,
      "end_line": 213,
      "end_column": 72
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\nhRComp :\n  R.comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\nnext' :\n  r \u2264\n    MvPolynomial.degreeOf 0\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\n\u22a2 MvPolynomial.X 0 ^ r \u2223\n    MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-05-02T15:31:06-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "3bfc360cb284651e5fb0c9daf77e125d4c915d3ef2c118bdcc4865e8f449a165"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "list-decoding",
      "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
      "start_line": 217,
      "start_column": 2,
      "end_line": 217,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case mk.intro\nF : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\nhRComp :\n  R.comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\n\u22a2 r \u2264\n    MvPolynomial.degreeOf 0\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L217"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-05-02T15:31:06-04:00",
      "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
    },
    "id": "288d8c60ada288d87f7bb5634c7d44c2e11a4acdc3aaf7f08b833498fd7b65f4"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 101,
      "start_column": 2,
      "end_line": 101,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, @GraphTheory.ES1.degreeSequence \u03b1 inst\u271d G x = s",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "773bfe75ea4ebaa1c7db39f49c61b97bfac5033baa3ae89e038324592c090d4b"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 128,
      "start_column": 2,
      "end_line": 128,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), @GraphTheory.ES1.averageDegree \u03b1 inst\u271d\u00b9 G inst\u271d / 2 \u2264 \u2191(H.degree a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "1f53139f70a8c9eb5c1a110c7856de76b35483a639c6d3e2a5d29a24a3ba39b1"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 181,
      "start_column": 2,
      "end_line": 181,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227\n        (\u2200 a \u2208 u, Even (Cardinal.mk { x // x \u2208 {b \u2208 u | G.Adj a b} })) \u2227\n          \u2200 a \u2208 v, Even (Cardinal.mk { x // x \u2208 {b \u2208 v | G.Adj a b} })",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "d07ac9e2d487028361fb512693da01d66fe24c1a3601085dcf4d7ea43f2fb9e2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : @GraphTheory.ES1.IsLatin \u03b2 \u03b1 \u03b1 f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 @GraphTheory.ES1.IsLatin \u03b2 \u03b1 \u03b1 f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "75dd0f53536fd214567670dd32665c495e9d7468d069a5a97ab2f0c327bbdbef"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 214,
      "start_column": 2,
      "end_line": 214,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 Cardinal.mk \u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "85eb6df5be9336683335e47a382d40651da56dda7a8838d196dfb48f0427b04e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 \u03b5,\n    0 < \u03b5 \u2227\n      \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1],\n        \u2203 x,\n          \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d),\n            \u03b5 * \u221a\u2191(card \u03b1) \u2264\n              @GraphTheory.ES1.distortion \u03b1 (\u211d \u00d7 \u211d) MetricSpace.toPseudoMetricSpace Prod.pseudoMetricSpaceMax f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "ea266cfd4589d381caafdb0e1689939afbc9544ac4ca21d7995152aaedadb6b2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
      "start_line": 252,
      "start_column": 2,
      "end_line": 252,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 \u03b5,\n    0 < \u03b5 \u2227\n      \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1],\n        \u2203 x,\n          \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d),\n            \u03b5 * \u2191(card \u03b1) \u2264\n              @GraphTheory.ES1.distortion \u03b1 (\u211d \u00d7 \u211d) MetricSpace.toPseudoMetricSpace Prod.pseudoMetricSpaceMax f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "52ea077843b02736953a7a9226253d9c781b2323f944dddcc682f6a418ff235b"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
      "start_line": 46,
      "start_column": 75,
      "end_line": 46,
      "end_column": 80
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : NNReal\n\u03bc : Measure \u03a9\nhG : @IsBinomialRandomGraph \u03b1 \u03a9 inst\u271d G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-06T17:45:28+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "2382a1c673ef57523f9d84ca5fe1eacbbeec7feea69d3c36cff3299c65902332"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 117,
      "start_column": 8,
      "end_line": 117,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "9f84c030c5ed4b3bc17c5be7f141730a397a3d41b0729d5a3207c1060999785e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 118,
      "start_column": 8,
      "end_line": 118,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "8f77b0dc5b6b682bd558cb282a467f0d17d4919a0c79197577d6ef815f63f21b"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 126,
      "start_column": 8,
      "end_line": 126,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "4de90409ccd6c97c111093d95f46ae51e45ee43d79031552f8e095010a99c1e9"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 127,
      "start_column": 8,
      "end_line": 127,
      "end_column": 13
    },
    "debug_info": {
      "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "32acd3ef4e072e96f075eaf9d7c28db58f4279d702f3339d807d9c7cd1510b66"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 128,
      "start_column": 6,
      "end_line": 128,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | Y \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "d7977f9cd25cdd5cbeeff217972506946e96b87da8ad3a7d80816cc2dce0b2e2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 129,
      "start_column": 6,
      "end_line": 129,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | X \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L129"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "6e0036d42d7e282f80b05dd02a1aea8f2ea12ea7458cb0d905897e72aa2e6cc1"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 130,
      "start_column": 6,
      "end_line": 130,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "bddfb485dbdc14453e6dc1fd17677cb9155386920b568505c91dfa622bb8b676"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 131,
      "start_column": 6,
      "end_line": 131,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "55bea96dd46e0aad8fde61776a4c1dff00d5c09020c25c2c463f35a43629607b"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
      "start_line": 132,
      "start_column": 11,
      "end_line": 132,
      "end_column": 16
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "08e7aabe53f0f4a6fd17d36278cde6d2c9e766f1cfcd7e320786797358d1861f"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 NNReal\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H.IsContained (G n \u03c9)}) atTop (nhds 0)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "b664d7f10e7f913ef07bc493e880412c8c007ea8a4d09a96f235041ef8329ff1"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 NNReal\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H.IsContained (G n \u03c9)}) atTop (nhds 1)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "ec0911bc19004c778c9b1f2f9a08675446ca7f04cb4928852cfeb2ce7723c839"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean",
      "start_line": 97,
      "start_column": 72,
      "end_line": 97,
      "end_column": 77
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * card (@Finset.certificator (Finset \u03b1) booleanAlgebra \ud835\udc9c \u212c) \u2264 \ud835\udc9c.card * \u212c.card",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-21T08:29:20+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "969ebf676d633a993ac8d68d81eadec3fcadee27c718e2e85e5169bcb81c7ddb"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean",
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7
    },
    "debug_info": {
      "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : P.parts.card = s.card.choose (s.card / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    P.parts.card = (insert i s).card.choose ((insert i s).card / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "4500202979049bb5fd3639c41e44a2cae928a4ae026025b28f7b2c11810e5b87"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
      "start_line": 25,
      "start_column": 60,
      "end_line": 25,
      "end_column": 65
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191A.card \u2264 \u2191{x \u2208 A ^ 4 | Commute \u03b3 x}.card",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "278e2b75e714598dd7a1e35761c2fa540b256a2b76721a0690bdd635827801af"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
      "start_line": 30,
      "start_column": 30,
      "end_line": 30,
      "end_column": 35
    },
    "debug_info": {
      "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set (Matrix.SpecialLinearGroup (Fin 2) \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, F.card \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "1ae325fc686decd8244353239286efae7060d11e1a787fd5f2dd536431e621a2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
      "start_line": 41,
      "start_column": 69,
      "end_line": 41,
      "end_column": 74
    },
    "debug_info": {
      "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(S ^ n).card \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "33853d42ff5c22695b4ae2a63aba907c8866ac0d13d30336c643da8ae50ba83c"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 24,
      "start_column": 6,
      "end_line": 24,
      "end_column": 11
    },
    "debug_info": {
      "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(F i).card \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "fd9f3ea475f380a8ca5fc33c7832c9655dd2fa83971b90c81aeeaaa4410174e9"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 42,
      "start_column": 64,
      "end_line": 42,
      "end_column": 69
    },
    "debug_info": {
      "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192\n    (\u2191A.card / (2 * K) \u2264 \u2191((MulOpposite.op a\u271d)\u207b\u00b9 \u2022 A \u2229 A).card \u2194 \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op a\u271d \u2022 A \u2229 A).card)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "ed5374a72538be657bdb30f9aee9c12c1c6b0e7ae358e55ae5e8ea9831d63896"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 59,
      "start_column": 4,
      "end_line": 59,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(S ^ 2).card \u2264 16 * K ^ 12 * \u2191A.card",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "6403ae5cb8f7824ca49c665eb38faea9a0f7b059f3983f6373010bf4a9e882e8"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 60,
      "start_column": 4,
      "end_line": 60,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191A.card / (2 * K) \u2264 \u2191(A \u2229 MulOpposite.op a \u2022 S ^ 2).card",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "d1b421071a637b90046f7acbb4c2c790a3c5fff888f6c2f8ec176b8c6f29d196"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 45,
      "start_column": 22,
      "end_line": 45,
      "end_column": 27
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(A\u207b\u00b9 * A).card \u2264 K ^ 2 * \u2191A.card",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "2f7f57ff99126e525da5c1e5a07d092accb3f949a1798b89f48c26c07f0dec00"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 46,
      "start_column": 69,
      "end_line": 46,
      "end_column": 74
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\n\u22a2 \u2203 F \u2286 A, \u2191F.card \u2264 2 * K \u2227 A \u2286 S * F",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "30d80db1a716dd37c945c885dcdfeff73d4cf547579ee4e16a07fd2e790c4a82"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
      "start_line": 54,
      "start_column": 29,
      "end_line": 54,
      "end_column": 34
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(A * S ^ 3 * A\u207b\u00b9).card \u2264 8 * K ^ 11 * \u2191A.card",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
    },
    "id": "21d5316672e78c734a2c6441eb233604ee9c4bed7322e55e0172056c4573353a"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "7682e673cea51b17d6e9e759a2a21b2acf3a290a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 80,
      "start_column": 4,
      "end_line": 80,
      "end_column": 9
    },
    "debug_info": {
      "goal": "case h.mp.intro\nd : \u2115\nx : \u2191(\ud835\udcdb d)\n\u039b_proper : IsProper x\n\u039b_ortho : IsOrthochronous x\n\u22a2 x \u2208 connectedComponent 1",
      "url": "https://github.com/HEPLean/PhysLean/blob/7682e673cea51b17d6e9e759a2a21b2acf3a290a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L80"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-04T19:41:34+10:00",
      "inclusion_date": "2025-05-04T23:30:06.471767+00:00"
    },
    "id": "24c4109385c5ed54c959387014aeca592beaae77b81d7a8a239ae47095d0cd66"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Smt/Reconstruct/BitVec/Bitblast.lean",
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7
    },
    "debug_info": {
      "goal": "w : Nat\nx y : BitVec w\n\u22a2 (x = y) = (x.beq y = true)",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/BitVec/Bitblast.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2024-05-08T17:36:04-07:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "cfc2f7d302066277789101ac2eb4bc9259ae9d1c8f7c9be7cc6cff8844d0e1fb"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Smt/Reconstruct/Rat/Core.lean",
      "start_line": 626,
      "start_column": 2,
      "end_line": 626,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Rat\n\u22a2 0 \u2264 a \u2192 0 \u2264 b \u2192 0 \u2264 a * b",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L626"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2025-05-03T21:48:26-07:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "a9b895e369e7d35f6fc14cac0d071cf8fec58988fd8e694faf7ebffe81035ae4"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Smt/Reconstruct/Rat/Core.lean",
      "start_line": 629,
      "start_column": 2,
      "end_line": 629,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Rat\nhb : 0 \u2264 b\n\u22a2 a.abs = b \u2194 a = b \u2228 a = -b",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L629"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2025-05-03T21:48:26-07:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "53d7e28ad1b040684d8c870889a949396e63ce04cc8bca6fa9340fe20f17e60d"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Smt/Reconstruct/Rat/Core.lean",
      "start_line": 632,
      "start_column": 2,
      "end_line": 632,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x : Rat\n\u22a2 0 \u2264 x.abs",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L632"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2025-05-03T21:48:26-07:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "b38f5b0dafcde2cac1b1d9d70f0102f7aac726d9b58a4b1855b5051060d9298c"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Smt/Reconstruct/Rat/Core.lean",
      "start_line": 635,
      "start_column": 2,
      "end_line": 635,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a : Rat\nh : a \u2264 0\n\u22a2 a.abs = -a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L635"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2025-05-03T21:48:26-07:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "7a709f0c9989019b9a5de1dda3304164c454fa35d3661d334da648f0a996c47e"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Smt/Reconstruct/Rat/Core.lean",
      "start_line": 638,
      "start_column": 2,
      "end_line": 638,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a : Rat\nh : 0 \u2264 a\n\u22a2 a.abs = a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L638"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2025-05-03T21:48:26-07:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "91357f31ec4ecdaef28d166db2e123b2398377f8b29fb39f3341ab6f8cb72287"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/BitVec/Shift.lean",
      "start_line": 8,
      "start_column": 2,
      "end_line": 8,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec 2\n\u22a2 x ++ y = zeroExtend 4 x <<< 2#2 ||| zeroExtend 4 y",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/BitVec/Shift.lean#L8"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-08-05T17:11:15+02:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "1e44a617b6bbeb67e15b2b8dd058ccc7b397fa4ab636de4cd3a5406c0cf07edb"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/BitVec/Shift.lean",
      "start_line": 13,
      "start_column": 2,
      "end_line": 13,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec 3\n\u22a2 x ++ y = zeroExtend 6 x <<< 3#2 ||| zeroExtend 6 y",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/BitVec/Shift.lean#L13"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-08-05T17:11:15+02:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "d06ec3f084cddf83a6f7b6fb5d22aa3a82829f29a5100ef6aa9baeaaae6610f5"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/BitVec/XorComm.lean",
      "start_line": 5,
      "start_column": 2,
      "end_line": 5,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec 2\n\u22a2 x ^^^ y = y ^^^ x",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/BitVec/XorComm.lean#L5"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "a213950d0c9b55087717bcf68d827abde0386e0bde567c3f8900615d1b3f8d7f"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/BitVec/XorComm.lean",
      "start_line": 9,
      "start_column": 2,
      "end_line": 9,
      "end_column": 7
    },
    "debug_info": {
      "goal": "x y : BitVec (4 + 4)\n\u22a2 x ^^^ y = y ^^^ x",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/BitVec/XorComm.lean#L9"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "2b027d99666f71a1b813ca570458e5c1e693c12b31fd66882c28aba58c883e4c"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/String/Contains.lean",
      "start_line": 5,
      "start_column": 2,
      "end_line": 5,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 \"a\".contains 'a' = true",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/String/Contains.lean#L5"
    },
    "metadata": {
      "blame_email_hash": "a29bc6f92c6c",
      "blame_date": "2022-11-12T16:45:23-08:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "198ba1e82709eb971f5db535915fc235b390cd16c2d5af2e3f55245d21dfb6cf"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/Int/DefineSort.lean",
      "start_line": 8,
      "start_column": 2,
      "end_line": 8,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : MyInt\n\u22a2 a.add b = b.add a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/Int/DefineSort.lean#L8"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "837172c0dbad240be37a140a62c5eee2ae3add33ee3c1e399925678acec471aa"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 7,
      "start_column": 2,
      "end_line": 7,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\n\u22a2 curryAdd a b = curryAdd b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/Int/Binders.lean#L7"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "c12e8f59bf70d9f9bae14cf33fcb7c3685fd66abc2f972aa31c0434ffac7fd49"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 13,
      "start_column": 2,
      "end_line": 13,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\n\u22a2 partCurryAdd a b = partCurryAdd b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/Int/Binders.lean#L13"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "5c9eeee1536354d2d62e17b6d2442299374d049ebb077712ddb273def6ee6151"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 20,
      "start_column": 2,
      "end_line": 20,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\npartCurryAdd' : Int \u2192 Int \u2192 Int := fun a => HAdd.hAdd a\n\u22a2 partCurryAdd' a b = partCurryAdd' b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/Int/Binders.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "19905fb2c2de73df0f8f48b415311c460704d619ef302f2588e005f38b4a61da"
  },
  {
    "repo": {
      "remote": "https://github.com/ufmg-smite/lean-smt",
      "branch": "main",
      "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
      "lean_version": "v4.16.0"
    },
    "location": {
      "path": "Test/Int/Binders.lean",
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7
    },
    "debug_info": {
      "goal": "a b : Int\n\u22a2 mismatchNamesAdd a b = mismatchNamesAdd b a",
      "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Test/Int/Binders.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "2d71a621927f",
      "blame_date": "2022-07-14T12:41:05-04:00",
      "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
    },
    "id": "40a0beea27fecf905a87f84ae4f5555e81d93d78a06d2c1a274ee586ecf9fd5c"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Wiener.lean",
      "start_line": 2281,
      "start_column": 61,
      "end_line": 2281,
      "end_column": 66
    },
    "debug_info": {
      "goal": "A x : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (fourierIntegral \u03c8.toFun y).re \u2227 (fourierIntegral \u03c8.toFun y).im = 0\nhx : 1 \u2264 x\n\u22a2 \u2211' (n : \u2115), \u2191(f n) / \u2191n * fourierIntegral \u03c8.toFun (1 / (2 * Real.pi) * Real.log (\u2191n / x)) -\n      \u2191A * \u222b (u : \u211d) in Ici (-Real.log x), fourierIntegral \u03c8.toFun (u / (2 * Real.pi)) =\n    \u222b (t : \u211d), G (1 + \u2191t * I) * \u03c8.toFun t * \u2191x ^ (\u2191t * I)",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/Wiener.lean#L2281"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-04-04T12:17:01-07:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "a7999f10c8089fd896f645831925f8b6c18c95f6f4cd8b2dc24dcc568908033b"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Wiener.lean",
      "start_line": 2303,
      "start_column": 90,
      "end_line": 2303,
      "end_column": 95
    },
    "debug_info": {
      "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (fourierIntegral \u03c8.toFun y).re \u2227 (fourierIntegral \u03c8.toFun y).im = 0\n\u22a2 \u2203 B,\n    \u2200 (x : \u211d), 0 < x \u2192 \u2016\u2211' (n : \u2115), \u2191(f n) / \u2191n * fourierIntegral \u03c8.toFun (1 / (2 * Real.pi) * Real.log (\u2191n / x))\u2016 \u2264 B",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/Wiener.lean#L2303"
    },
    "metadata": {
      "blame_email_hash": "4d01d7c10d46",
      "blame_date": "2024-04-16T02:15:35+02:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "725d4d5e769203d0e841b2ef79d6b2c893fd9a0d8b27af54fc7cdd2349debd20"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 328,
      "start_column": 2,
      "end_line": 328,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nCpos : 0 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L328"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "547cb82f89dc9254fd2b1a7d6f0897441e7a47917bd52aa4a2089f406b8210d5"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 399,
      "start_column": 2,
      "end_line": 399,
      "end_column": 7
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191Real.pi * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) 2 (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) =\n    MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X +\n      1 / (2 * \u2191Real.pi * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I))",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-10T12:59:29-05:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "2bcc3e23d1c11b18982ebf327c089aecd404207bd9d06e89303db303882ff3d1"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
      "start_line": 511,
      "start_column": 2,
      "end_line": 511,
      "end_column": 7
    },
    "debug_info": {
      "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\n\u22a2 \u2016(ChebyshevPsi - id) X\u2016 \u2264 C * \u2016X * Real.exp (-c * Real.log X ^ (1 / 10))\u2016",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "f2cc650eec8ce53a9ea0b36667f870aea44aca959e259fb22b02a144a0a5fbd3"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 2575,
      "start_column": 81,
      "end_line": 2575,
      "end_column": 86
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, moebius n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/Consequences.lean#L2575"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "45e9ce0d5bccac4a9071249c8adf5fab28d117d79d8ec518d06a5ac5a4f66ad2"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 2611,
      "start_column": 2,
      "end_line": 2611,
      "end_column": 7
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, (-1) ^ cardFactors n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/Consequences.lean#L2611"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "2c29a056b0c216ab9e96d99f8be6e5e3177411d4aa273c4819d0801f4039bbcd"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
      "lean_version": "v4.19.0"
    },
    "location": {
      "path": "PrimeNumberTheoremAnd/Consequences.lean",
      "start_line": 2635,
      "start_column": 98,
      "end_line": 2635,
      "end_column": 103
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u2191(moebius n) / \u2191n) =o[atTop] fun x => 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/Consequences.lean#L2635"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
    },
    "id": "10245a44c54162c5874ef5165830b3c20a1bba529068597f2194029942cf3f27"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 80,
      "start_column": 17,
      "end_line": 80,
      "end_column": 22
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 (fun \u039b => (detRep \u039b, orthchroRep \u039b)) 1 = 1",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L80"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "622a35bbe28efe1b1d55716683c88c412ca916937c42cab76e8bc8594c9ee095"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 81,
      "start_column": 17,
      "end_line": 81,
      "end_column": 22
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 \u2200 (x y : \u2191(\ud835\udcdb d)),\n    { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun (x * y) =\n      { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun x *\n        { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun y",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "01dfa20a44983e446e567b552c5902bde0f41ceed73ee2977ac8e90152906386"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 82,
      "start_column": 25,
      "end_line": 82,
      "end_column": 30
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 Continuous (\u2191{ toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef, map_mul' := \u22ef }).toFun",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "dd29bc5275e1c239585e009a1c89c197e7fc1eb552e1b9fa7ed4dafa4e6784ad"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 84,
      "start_column": 71,
      "end_line": 84,
      "end_column": 76
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 Continuous \u21d1lorentzMap",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L84"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "7bac48ad0cc60d5a3626c6ded637e57b5306bff0da2c9e15393a23c0a5cdec2a"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 85,
      "start_column": 66,
      "end_line": 85,
      "end_column": 71
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 IsOpenMap \u21d1lorentzMap",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L85"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "edc10793c2824136194cca0c601895c52bbb37612be3bf32f55d6ac2bec3cd96"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 86,
      "start_column": 80,
      "end_line": 86,
      "end_column": 85
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 Function.Injective \u21d1lorentzMap",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L86"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "1147c370e3a3edb2018f73da5ba3ee26636136cffeec6f3895ee3daf8d02264f"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 87,
      "start_column": 75,
      "end_line": 87,
      "end_column": 80
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 lorentzMap.ker = restricted d",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L87"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "c2aca9d30a697135005fb1d319cb5dfb73196522bcd178d5af0bb40d5cfd7dab"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 88,
      "start_column": 91,
      "end_line": 88,
      "end_column": 96
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 IsConnected {(1, 1)}",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "793de9dfe6f4764bed7f577302f7185d6004716a8dcbb05ff3c55486bb65d470"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
      "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
      "lean_version": "v4.18.0"
    },
    "location": {
      "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
      "start_line": 89,
      "start_column": 95,
      "end_line": 89,
      "end_column": 100
    },
    "debug_info": {
      "goal": "d : \u2115\n\u22a2 {(1, 1)} \u2286 Set.range \u21d1lorentzMap",
      "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L89"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-05-05T23:32:38+10:00",
      "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
    },
    "id": "6d24278805338dc10f06d9d8311808f5298db3d960c94abda7bbcd4743bd3d7d"
  }
]