[
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 73,
      "start_column": 6,
      "end_line": 73,
      "end_column": 11,
      "file": "Compfiles/Imo2016P5.lean"
    },
    "debug_info": {
      "goal": "case h.refine_4\nhp : \u2200 (n : \u2115), (n % 4 = 2 \u2228 n % 4 = 3) = \u00ac(n % 4 = 0 \u2228 n % 4 = 1)\nx : \u211d\n\u22a2 \u220f i \u2208 Finset.Icc 1 2016 \\ {n \u2208 Finset.Icc 1 2016 | n % 4 = 2 \u2228 n % 4 = 3}, (x - \u2191i) \u2260\n    \u220f i \u2208 Finset.Icc 1 2016 \\ {n \u2208 Finset.Icc 1 2016 | n % 4 = 0 \u2228 n % 4 = 1}, (x - \u2191i)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2016P5.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T10:28:23-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "84bcea7f0ca35dc32900513de6c78d94d4fcdad22bbeb1fddee00d5661e996a6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Usa1983P5.lean"
    },
    "debug_info": {
      "goal": "x : \u211d\nn : \u2115\nhn : 0 < n\n\u22a2 let fracs := {q | q.den \u2264 n \u2227 \u2191q \u2208 Set.Ioo x (x + 1 / \u2191n)};\n  fracs.Finite \u2227 fracs.ncard \u2264 (n + 1) / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1983P5.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T10:41:38-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70a1fadae39feaa3d8ce9b646979787a76bafdc03944e9d10fe318ab2b6675fe"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7,
      "file": "Compfiles/Canada1998P5.lean"
    },
    "debug_info": {
      "goal": "m : \u2115\nhm : 0 < m\na b : \u2115\nhab : a \u2264 b\n\u22a2 a ^ 2 + b ^ 2 = m ^ 2 * (a * b + 1) \u2194 \u2203 n, \u2191a = A m hm n \u2227 \u2191b = A m hm (n + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Canada1998P5.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-16T22:18:26-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "22a90092699eaa13360ddaaec1446beb4a40cccd71a83e62cdf0d519f6abf8c9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2004P6.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 n \u2208 SolutionSet \u2194 0 < n \u2227 \u2203 k, Alternating (n * k)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P6.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-30T13:21:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "38aa16505c3cd807c8542c1b64c5019cedb95e504aa2034046bf7b02c3aa45d9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 48,
      "end_line": 28,
      "end_column": 53,
      "file": "Compfiles/Imo1977P4.lean"
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u211d\na b A B : \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 1 - a * Real.cos x - b * Real.sin x - A * Real.cos (2 * x) - B * Real.sin (2 * x)\nh\u2081 : \u2200 (x : \u211d), f x \u2265 0\n\u22a2 a ^ 2 + b ^ 2 \u2264 2 \u2227 A ^ 2 + B ^ 2 \u2264 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1977P4.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7eb3e4760b723be54d07da3e9c717a2fce8b7af9770b04ec8d9b84f811088b91"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 43,
      "end_line": 37,
      "end_column": 48,
      "file": "Compfiles/Imo1972P4.lean"
    },
    "debug_info": {
      "goal": "a b c d e : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2227 0 < e\n\u22a2 (a ^ 2 - c * e) * (b ^ 2 - c * e) \u2264 0 \u2227\n      (b ^ 2 - d * a) * (c ^ 2 - d * a) \u2264 0 \u2227\n        (c ^ 2 - e * b) * (d ^ 2 - e * b) \u2264 0 \u2227\n          (d ^ 2 - a * c) * (e ^ 2 - a * c) \u2264 0 \u2227 (e ^ 2 - b * d) * (a ^ 2 - b * d) \u2264 0 \u2194\n    (a, b, c, d, e) \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1972P4.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ff938d32047a58dfb1bf3488eb08cd6ecd1a61b810b115938beb88eef1ab358e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Usa1980P5.lean"
    },
    "debug_info": {
      "goal": "x y z : \u211d\nhx : x \u2208 Set.Icc 0 1\nhy : y \u2208 Set.Icc 0 1\nhz : z \u2208 Set.Icc 0 1\n\u22a2 x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2264 1 + (1 - x) * (1 - y) * (1 - z)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1980P5.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-27T11:18:26-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1e4fd3f45cfefb76ca1f1463488867c50bf82fa1323f4c1b3958b0a0f029f5d0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Compfiles/Usa2022P1.lean"
    },
    "debug_info": {
      "goal": "a b : \u2115\nha : 0 < a\nhb : 0 < b\ncolor : Fin (a + b + 1) \u00d7 Fin (a + b + 1) \u2192 Fin 2\nc0 : a ^ 2 + a * b - b \u2264 Fintype.card { s // color s = 0 }\nc1 : b ^ 2 + a * b - a \u2264 Fintype.card { s // color s = 1 }\n\u22a2 \u2203 A B,\n    A.card = a \u2227\n      B.card = b \u2227\n        (\u2200 x \u2208 A, color x = 0) \u2227 (\u2200 y \u2208 B, color y = 1) \u2227 \u2200 x \u2208 A \u222a B, \u2200 y \u2208 A \u222a B, x \u2260 y \u2192 x.1 \u2260 y.1 \u2227 x.2 \u2260 y.2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2022P1.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-04-16T11:18:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4a096ad1ad14b4122abc40067ae64088caeb3169c51e3251f31e280913f8ef83"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "Compfiles/Imo2021P6.lean"
    },
    "debug_info": {
      "goal": "m : \u2115\nhm : 2 \u2264 m\nA : Finset \u2124\nB : Fin m \u2192 Finset \u2124\nhB : \u2200 (k : Fin m), B k \u2286 A\nhs : \u2200 (k : Fin m), \u2211 b \u2208 B k, b = \u2191m ^ (\u2191k + 1)\n\u22a2 m \u2264 2 * A.card",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2021P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T14:13:49-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "390f6cc22c9c6ea1d9605d905936613c35d4b79a343e7bce7566508786e16488"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo2018P5.lean"
    },
    "debug_info": {
      "goal": "a : \u2115 \u2192 \u2124\napos : \u2200 (n : \u2115), 0 < a n\nN : \u2115\nhN : 0 < N\nh : \u2200 (n : \u2115), N \u2264 n \u2192 \u2203 z, \u2191z = \u2211 i \u2208 Finset.range n, \u2191(a i) / \u2191(a ((i + 1) % n))\n\u22a2 \u2203 M, \u2200 (m : \u2115), M \u2264 m \u2192 a m = a (m + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P5.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-20T08:39:26-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e15099a9fdcbc01d7a88ce0137d6816274d90edc358c72372e671bb4846b49cc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "Compfiles/Usa1993P3.lean"
    },
    "debug_info": {
      "goal": "\u22a2 IsLeast {c | \u2200 (f : \u2191(Set.Icc 0 1) \u2192 \u211d), valid f \u2227 \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 c * \u2191\u2191x} min_c",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1993P3.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-17T17:28:05-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "693fe0a4b901598111f70d4be3658dc97da9b8be3c7a4b1a8f9a50a8920e8763"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 28,
      "end_line": 37,
      "end_column": 33,
      "file": "Compfiles/Imo1988P3.lean"
    },
    "debug_info": {
      "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : f 1 = 1\nh\u2081 : f 3 = 3\nh\u2082 : \u2200 (n : \u2115), f (2 * n) = f n\nh\u2083 : \u2200 (n : \u2115), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh\u2084 : \u2200 (n : \u2115), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset \u2191{n | 0 < n \u2227 n \u2264 1988 \u2227 f n = n}\n\u22a2 A.card = solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1988P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59de92e21cfae296e4b66f7deb395a01acb55a9e06e67321002dc3e973a525a7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Compfiles/Imo1994P4.lean"
    },
    "debug_info": {
      "goal": "m n : \u2124\n\u22a2 (m, n) \u2208 SolutionSet \u2194 0 < m \u2227 0 < n \u2227 m * n - 1 \u2223 n ^ 3 + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1994P4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-23T19:59:15-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d99ee4237a684cd6a37cbaf1951f988026cafa15f338b5b9899e0fc680aa0d47"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 4,
      "end_line": 30,
      "end_column": 9,
      "file": "Compfiles/Imo1990P3.lean"
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\nhn : 1 < n\nhnd : n ^ 2 \u2223 2 ^ n + 1\n\u22a2 n \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1990P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-01T16:38:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "758fafad7560a57d684d9f7eebf31a504afb36adce932b3367972349cd3d8da2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Imo1999P4.lean"
    },
    "debug_info": {
      "goal": "x p : \u2115\n\u22a2 (x, p) \u2208 SolutionSet \u2194 0 < x \u2227 Nat.Prime p \u2227 x ^ (p - 1) \u2223 (p - 1) ^ x + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1999P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-01T11:05:51-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bd063222b756ce52d4cd10c835265a7e46200225e627904c70e079aa0a2222e6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 46,
      "start_column": 2,
      "end_line": 46,
      "end_column": 7,
      "file": "Compfiles/Usa1999P1.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nc : Finset (checkerboard n)\nha : \u2200 (x : checkerboard n), x \u2208 c \u2228 \u2203 y \u2208 c, adjacent x y\nhb : \u2200 x \u2208 c, \u2200 y \u2208 c, \u2203 p, List.Chain' adjacent p \u2227 p.head? = some x \u2227 p.getLast? = some y\n\u22a2 n ^ 2 \u2264 c.card * 3 + 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1999P1.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T15:42:10-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "18e66c7ee601f4c46a6619e6f90e818ee8eecf1194ffebf3f0c6876fe79c32dc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Imo1998P6.lean"
    },
    "debug_info": {
      "goal": "f : \u2115+ \u2192 \u2115+\nh : \u2200 (s t : \u2115+), f (t ^ 2 * f s) = s * f t ^ 2\n\u22a2 IsLeast {n | n = \u2191(f 1998)} \u2191solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:49:10-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "485a0138d3e94f7ce0c4314dd39028fef5d95c7679266a155c5b6aae27df3c3c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 48,
      "start_column": 2,
      "end_line": 48,
      "end_column": 7,
      "file": "Compfiles/Imo2014P4.lean"
    },
    "debug_info": {
      "goal": "A B C P Q M N : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nacuteA : \u2220 C A B < Real.pi / 2\nacuteB : \u2220 A B C < Real.pi / 2\nacuteC : \u2220 B C A < Real.pi / 2\nhP : Sbtw \u211d P B C\nhQ : Sbtw \u211d Q B C\nhPAB : \u2220 P A B = \u2220 B C A\nhCAQ : \u2220 C A Q = \u2220 A B C\nhM : M \u2208 affineSpan \u211d {A, M}\nhN : Q \u2208 affineSpan \u211d {A, N}\nhPAM : P = midpoint \u211d A M\nhQAN : Q = midpoint \u211d A N\n\u22a2 let ABC := { points := ![A, B, C], independent := hABC };\n  let D := \u2191(affineSpan \u211d {B, M}) \u2229 \u2191(affineSpan \u211d {C, N});\n  D.Nonempty \u2227 D \u2286 Metric.sphere (Affine.Simplex.circumsphere ABC).center (Affine.Simplex.circumsphere ABC).radius",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2014P4.lean#L48"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-17T13:26:17-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f7f04887d23d2c0bcd401dc258c7ff1432af00c33eb6d07e81b0f57c3d93a90c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 44,
      "start_column": 54,
      "end_line": 44,
      "end_column": 59,
      "file": "Compfiles/Imo1961P1.lean"
    },
    "debug_info": {
      "goal": "a b x y z : \u211d\n\u22a2 (x, y, z) \u2208 xyz_of_ab a b \u2194 IsSolution a b x y z",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "977b18b828ee3c1ced5fc0ba497b0b928f57a2d4b9075fcc3661232d2920245e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7,
      "file": "Compfiles/Imo1961P1.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 (a, b) \u2208 ab_that_make_xyz_positive_distinct \u2194\n    \u2200 (x y z : \u211d), IsSolution a b x y z \u2192 0 < x \u2227 0 < y \u2227 0 < z \u2227 [x, y, z].Nodup",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f19746420ee4822c533114713613a83278b1298849e43bb4bb8df8f246a45f06"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 93,
      "start_column": 28,
      "end_line": 93,
      "end_column": 33,
      "file": "Compfiles/Imo2023P2.lean"
    },
    "debug_info": {
      "goal": "V : Type u_1\nPt : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup V\ninst\u271d\u00b3 : InnerProductSpace \u211d V\ninst\u271d\u00b2 : MetricSpace Pt\ninst\u271d\u00b9 : NormedAddTorsor V Pt\nhd2 : Fact (finrank \u211d V = 2)\ninst\u271d : Oriented \u211d V (Fin 2)\nA B C D E L S P : Pt\n\u03a9 \u03c9 : Sphere Pt\nperp_A_BC prll_D_BC tang_P_\u03c9 : AffineSubspace \u211d Pt\nh_acute_ABC : acute V Pt A B C\nh_AB_lt_BC : dist A B < dist A C\nh_\u03a9 : {A, B, C} \u2286 Metric.sphere \u03a9.center \u03a9.radius\nh_S_\u03a9 : dist S C = dist S B \u2227 S \u2208 Metric.sphere \u03a9.center \u03a9.radius\nh_S_A : (\u2221 C B S).sign = (\u2221 C B A).sign\nh_perp_A_BC : perp_to V Pt perp_A_BC (affineSpan \u211d {B, C}) \u2227 A \u2208 perp_A_BC\nh_D : D \u2208 \u2191perp_A_BC \u2229 \u2191(affineSpan \u211d {B, S})\nh_E : E \u2208 \u2191perp_A_BC \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_E_ne_A : E \u2260 A\nh_prll_D_BC : D \u2208 prll_D_BC \u2227 prll_D_BC \u2225 affineSpan \u211d {B, C}\nh_L : L \u2208 \u2191prll_D_BC \u2229 \u2191(affineSpan \u211d {B, E})\nh_\u03c9 : {B, D, L} \u2286 Metric.sphere \u03c9.center \u03c9.radius\nh_P : P \u2208 Metric.sphere \u03c9.center \u03c9.radius \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_P_ne_B : P \u2260 B\nh_tang_P_\u03c9 : is_tangent V Pt tang_P_\u03c9 \u03c9 \u2227 P \u2208 tang_P_\u03c9\n\u22a2 \u2203 X \u2208 \u2191tang_P_\u03c9 \u2229 \u2191(affineSpan \u211d {B, S}), \u2220 B A X = \u2220 X A C \u2227 \u2220 B A X < \u03c0 / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P2.lean#L93"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2024-06-30T13:54:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7b3956fa65105267c283b43238e7aba1b2149d9c7538c3268f378ae7adfa2c20"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 26,
      "start_column": 2,
      "end_line": 26,
      "end_column": 7,
      "file": "Compfiles/Imo1985P4.lean"
    },
    "debug_info": {
      "goal": "M : Finset \u2115\nMpos : \u2200 m \u2208 M, 0 < m\nMdivisors : \u2200 m \u2208 M, \u2200 (n : \u2115), Nat.Prime m \u2227 n \u2223 m \u2192 m \u2264 23\n\u22a2 \u2203 M' \u2286 M, \u2203 k, M'.prod id = k ^ 4",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1985P4.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T14:04:16-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ddaadab80fbd37ea7ecafef90b8ca11a9234181b1211cb0ffc42a0ce6fd3e9f8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2003P1.lean"
    },
    "debug_info": {
      "goal": "A : Finset \u2115\nhA : A \u2286 S\n\u22a2 \u2203 t, \u2200 (i j : Fin 100), i \u2260 j \u2192 Disjoint {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t i) = x} {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t j) = x}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P1.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T21:07:17-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "657cd833a974ab73627c17d6691be96ce65ce940112ce4eda2d8fe1858c42ad9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 55,
      "start_column": 6,
      "end_line": 55,
      "end_column": 11,
      "file": "Compfiles/Usa2001P1.lean"
    },
    "debug_info": {
      "goal": "case h.right\nf : Fin 8 \u2192 Finset (Fin 23) :=\n  fun x =>\n    match x with\n    | 0 => {1, 2, 3, 4, 5, 6}\n    | 1 => {1, 7, 8, 9, 10, 11}\n    | 2 => {1, 12, 13, 14, 15, 16}\n    | 3 => {2, 7, 12, 17, 18, 19}\n    | 4 => {3, 8, 13, 17, 20, 21}\n    | 5 => {4, 9, 14, 17, 22, 23}\n    | 6 => {5, 10, 15, 18, 20, 22}\n    | 7 => {6, 11, 16, 19, 21, 23}\nx y : Fin min_colors\ni j : Fin 8\nhij : i \u2260 j\nhx : x \u2208 f i\nhy : y \u2208 f i\n\u22a2 \u00ac(x \u2208 f j \u2227 y \u2208 f j)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L55"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-05T14:18:02-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "52e3c5c580809d36090d9e8f44aef9fc4a04ff6f204aafc4fc9cd640ee363c8d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 56,
      "start_column": 4,
      "end_line": 56,
      "end_column": 9,
      "file": "Compfiles/Usa2001P1.lean"
    },
    "debug_info": {
      "goal": "case right\n\u22a2 min_colors \u2208 lowerBounds possible_num_colors",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L56"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-20T22:49:53-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "10222a5dcca446acc32bcfe899926803a340d05b0ce2f7372eaa12ef21e4af55"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 41,
      "end_line": 38,
      "end_column": 46,
      "file": "Compfiles/Bulgaria1998P2.lean"
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : \u2220 D A B = \u2220 A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := \u2220 D A C\nthis : \u2220 D A C = \u2220 D C A\ny : \u211d := \u2220 C A B\n\u22a2 \u2220 D A B = x + y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T20:53:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "abee20d38c65c1d71797ca10be74434c936d00a85117508010ce88ea8991e006"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "Compfiles/Bulgaria1998P2.lean"
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : \u2220 D A B = \u2220 A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := \u2220 D A C\nthis\u271d : \u2220 D A C = \u2220 D C A\ny : \u211d := \u2220 C A B\nthis : \u2220 A B C = x + y\n\u22a2 \u2220 B E C = \u2220 D A C",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-28T19:13:25-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6461b41ab5e7770c2ed81776e8e350a5355af09005bfebc66e6f647615574984"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Compfiles/Imo1996P3.lean"
    },
    "debug_info": {
      "goal": "f : \u2115 \u2192 \u2115\n\u22a2 f \u2208 SolutionSet \u2194 \u2200 (m n : \u2115), f (m + f n) = f (f m) + f n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1996P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:27:20-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4b3f1401c0e8ce853e000609b98f22842c3d0077977d1d935d95b761b26a194d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 94,
      "start_column": 4,
      "end_line": 94,
      "end_column": 9,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inl.inl\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2208 M\nh2 : \u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L94"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dc9a55001c2ba4425e6d715a6fbacc1c81011b4a3c2a7989191d478cf45df528"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 4,
      "end_line": 95,
      "end_column": 9,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inl.inr\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2208 M\nh2 : \u00ac\u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6909dde353f67211a38189935267ceaf80fdb371a40c56e75291455d7f241d4f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 8,
      "end_line": 205,
      "end_column": 13,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := extendPerm p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2264 x)\nh35 : n' \u2264 n\n\u22a2 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-27T11:09:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9166e5fdd3c527a41fb88d6b8da5ca6cebe2d8a26d68ab9baaf6d507f1235e6f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 229,
      "start_column": 8,
      "end_line": 229,
      "end_column": 13,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := extendPerm p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x)\nh35 : n' \u2264 n\nh33 : \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)\n\u22a2 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-25T14:14:36-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "511c2d114eb89f65073e96eabcc3d71f98579702dd28c81bf5a23962d0a8a2db"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 248,
      "start_column": 4,
      "end_line": 248,
      "end_column": 9,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inr.inr\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\nh2 : \u00ac\u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L248"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "22383062318de48d44b3ed916cd7e8aa0f82c0a61a0b60abfcc633ebc6148c22"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 66,
      "start_column": 6,
      "end_line": 66,
      "end_column": 11,
      "file": "Compfiles/Usa1998P4.lean"
    },
    "debug_info": {
      "goal": "case h\ns : chessboard\n\u22a2 List.foldl recolor_rect start_coloring\n      (List.map (fun x => { x := 2 * x, y := 0, width := 1, height := 98 }) (List.range 49) ++\n        List.map (fun y => { x := 0, y := 2 * y, width := 98, height := 1 }) (List.range 49))\n      s =\n    0",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-14T08:31:05-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9ea8c2f130bba433b8a37b17018ff76e4fc61894dd2c1de84dcf5a50d8d06cca"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 71,
      "start_column": 4,
      "end_line": 71,
      "end_column": 9,
      "file": "Compfiles/Usa1998P4.lean"
    },
    "debug_info": {
      "goal": "case right.intro.intro\nn : \u2115\nrs : List Rectangle\nhrs : all_same_color (List.foldl recolor_rect start_coloring rs)\nhrsl : rs.length = n\n\u22a2 min_clicks \u2264 n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T20:46:44-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d1ba93a4731fbc74da9899276cada366ce2dc3a3b2d23e12a9e31354762b7b53"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Imo1998P4.lean"
    },
    "debug_info": {
      "goal": "a b : \u2115\n\u22a2 0 < a \u2227 0 < b \u2227 a * b ^ 2 + b + 7 \u2223 a ^ 2 * b + a + b \u2194 (a, b) \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:45:18-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fc70b6c2b5fc0eb454b9dd3b62f2514672e8bdca0803d4e335cd505dae7ed741"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Imo2011P5.lean"
    },
    "debug_info": {
      "goal": "f : \u2124 \u2192 \u2124\nfpos\u271d : \u2200 (n : \u2124), 0 < f n\nfpos : \u2200 (m n : \u2124), f (m - n) \u2223 f m - f n\n\u22a2 \u2200 (m n : \u2124), f m \u2264 f n \u2192 f m \u2223 f n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2011P5.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-03T09:55:58-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "50b1281e2f646430ce0f9e5ea999f1c4147a0c038bd67910c7606ed09580f437"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 44,
      "end_line": 28,
      "end_column": 49,
      "file": "Compfiles/Imo1978P6.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : n = 1978\nC : Fin n \u2192 Fin 6\n\u22a2 \u2203 j i k, C i = C j \u2227 C j = C k \u2227 \u2191i + 1 + \u2191k + 1 = \u2191j + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1978P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f8f3712c528b4d17d5628a952c37a68e116ac06f2f630787c920974aa4f4d0dc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo1971P5.lean"
    },
    "debug_info": {
      "goal": "m : \u2115\n\u22a2 \u2203 S, S.Finite \u2227 \u2200 s \u2208 S, Nat.card \u2191{t | dist s t = 1} = m",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P5.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-22T17:20:29-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e8b8b50bcfe121c3fe635582a739ee84b52789442cd0762620d5e4817bd9294c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 55,
      "end_line": 28,
      "end_column": 60,
      "file": "Compfiles/Imo1976P6.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nh\u2080 : u 0 = 2\nh\u2081 : u 1 = 5 / 2\nh\u2082 : \u2200 (n : \u2115), u (n + 2) = u (n + 1) * (u n ^ 2 - 2) - u 1\n\u22a2 \u2200 (n : \u2115), \u2191\u230au n\u230b = 2 ^ ((2 ^ n - (-1) ^ n) / 3)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1976P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c7ac912b5dab64e31d96d871a476349ee992c77a9758aaf327ed29ca8e5b6207"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 38,
      "end_line": 36,
      "end_column": 43,
      "file": "Compfiles/Imo2010P3.lean"
    },
    "debug_info": {
      "goal": "case h\ng : \u2124>0 \u2192 \u2124>0\nc : \u2124>0\nhc : \u2200 (x : \u2124>0), g x = x + c\nm n : \u2124>0\n\u22a2 (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-01-21T08:16:08-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "94668c81e3549dfecb4822c85b43a18d85126a7d88d79f594fe3876d79f93f9a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 4,
      "end_line": 37,
      "end_column": 9,
      "file": "Compfiles/Imo2010P3.lean"
    },
    "debug_info": {
      "goal": "case mpr\ng : \u2124>0 \u2192 \u2124>0\n\u22a2 (\u2200 (m n : \u2124>0), IsSquare ((g m + n) * (g n + m))) \u2192 g \u2208 SolutionSet",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-23T10:40:22-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c54f7b36c32bfd3312985b07d2f481cb30e8ebd526c7aa3b0b97c9600efd1f21"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo2001P3.lean"
    },
    "debug_info": {
      "goal": "Girl Boy Problem : Type\ninst\u271d\u00b2 : Finite Girl\ninst\u271d\u00b9 : Finite Boy\ninst\u271d : Finite Problem\ngirl_card : Nat.card Girl = 21\nboy_card : Nat.card Boy = 21\ngirl_solved : Girl \u2192 Problem \u2192 Prop\nboy_solved : Boy \u2192 Problem \u2192 Prop\nhG : \u2200 (g : Girl), {p | girl_solved g p}.ncard \u2264 6\nhB : \u2200 (b : Boy), {p | boy_solved b p}.ncard \u2264 6\nhp : \u2200 (g : Girl) (b : Boy), {p | girl_solved g p \u2227 boy_solved b p}.ncard \u2264 1\n\u22a2 \u2203 p, 3 \u2264 {g | girl_solved g p}.ncard \u2227 3 \u2264 {g | boy_solved g p}.ncard",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-27T13:39:48-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0703412ccfffece0f77a04b2211c7c6cf694e1949d9f18c6cc54e76838e4e300"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7,
      "file": "Compfiles/Imo2016P4.lean"
    },
    "debug_info": {
      "goal": "\u22a2 IsLeast {b | \u2203 a, Fragrant {p | \u2203 i < b, \u2191p = P (a + 1 + \u2191i)}} Solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2016P4.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-11T08:43:20-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5ffeaafd6cde0607ff44006b6e318adc71b60ab65625f327fe3ca6855e65387b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9,
      "file": "Compfiles/Imo2018P2.lean"
    },
    "debug_info": {
      "goal": "case mp.intro\nn : \u2115\nhn1 : 3 \u2264 n\nhn2 : 3 \u2223 n\n\u22a2 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T08:47:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "af0d7a722687c06c555b9498c50a7d43b531862294e4c0713eaec5dcc6a310ca"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9,
      "file": "Compfiles/Imo2018P2.lean"
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\n\u22a2 (3 \u2264 n \u2227 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)) \u2192 n \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P2.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T08:47:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "28df25ad37b7fb2f16cd4f8fb7a0dbd384f98eb7b93f0373f54a4a63f0e39075"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Imo1998P3.lean"
    },
    "debug_info": {
      "goal": "k : \u2115\n\u22a2 k \u2208 solution_set \u2194 \u2203 n, (n ^ 2).divisors.card = k * n.divisors.card",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P3.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:57:30-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4174712cf034663847198231d1aa7c3c55804dc7ae278d00dbf8b7d42ab9b70f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "x : \u2115\nhp : 0 < x\nhx : Even x\n\u22a2 x.maxPowDiv / 2 + 1 = x.maxPowDiv",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2b7a59febd73e6a95234d5262f71307061ac70c37b24ad316db2dae8eef958c7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 323,
      "start_column": 6,
      "end_line": 323,
      "end_column": 11,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "case a.intro.intro\na : \u2115+\nN : \u2115\nhN : 1 < N\nms' : \u2115\nih :\n  \u2200 (s0 : State N),\n    (\u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191(s0.board i) < Nat.maxPowDiv 2 \u2191a) \u2192\n      \u2211 i, Nat.maxPowDiv 2 \u2191(s0.board i) = ms' \u2192 EndInevitableIn a N ms' s0\nb0 : Blackboard N\nt0 : Player\nhd : \u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Bob }.board i) < Nat.maxPowDiv 2 \u2191a\nhms : \u2211 i, Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Bob }.board i) = ms' + 1\ns : State N\ni : Fin N\nhie : Even \u2191(b0 i)\nhis : s = { board := Function.update b0 i \u27e8\u2191(b0 i) / 2, \u22ef\u27e9, turn := Player.Alice }\n\u22a2 EndInevitableIn a N ms' s",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L323"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "588abd4ec33720ef7944b078f097d6791dcea8f2d8048b615439550a5e648590"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 344,
      "start_column": 4,
      "end_line": 344,
      "end_column": 9,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "case a.intro.intro.a.intro.intro\na : \u2115+\nN : \u2115\nhN : 1 < N\nms' : \u2115\nb0 : Blackboard N\nt0 : Player\nhd : \u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Alice }.board i) < Nat.maxPowDiv 2 \u2191a\nb1 : Blackboard N\nhms : \u2211 i, Nat.maxPowDiv 2 \u2191(b1 i) = ms' + 1\ni : Fin N\nhi : b1 = Function.update b0 i (b0 i + a)\ns2 : State N\nj : Fin N\nhje : Even \u2191(b1 j)\nhj : s2 = { board := Function.update b1 j \u27e8\u2191(b1 j) / 2, \u22ef\u27e9, turn := Player.Alice }\nih :\n  (\u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191(s2.board i) < Nat.maxPowDiv 2 \u2191a) \u2192\n    \u2211 i, Nat.maxPowDiv 2 \u2191(s2.board i) = ms' \u2192 EndInevitableIn a N ms' s2\n\u22a2 EndInevitableIn a N ms' s2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L344"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "93780d60039058a18ddb1b49b621c73a758165f125b921490dbf849fc282b82f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 366,
      "start_column": 2,
      "end_line": 366,
      "end_column": 7,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "case inr\na : \u2115+\nN : \u2115\nhN\u271d : 0 < N\nb0 : Blackboard N\nhe : BobCanForceEnd a N { board := b0, turn := Player.Alice }\nhN : 1 < N\n\u22a2 EndInevitable a N { board := b0, turn := Player.Alice }",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L366"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-12T16:07:14-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "cab7d541738fcdc4bd3856350d9101fd61352a5b0cc217b486a058b2b98e2e8e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2003P2.lean"
    },
    "debug_info": {
      "goal": "a b : \u2124\n\u22a2 (a, b) \u2208 solution_set \u2194 0 < a \u2227 a < b \u2227 \u2203 c, 0 < c \u2227 c * (2 * a * b ^ 2 - b ^ 3 + 1) = a ^ 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-09T08:45:13-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6531c8f669557a8956b5774d758dad925c00b224eb3f12393efc8ccade689b32"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 115,
      "start_column": 2,
      "end_line": 115,
      "end_column": 7,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type\ninst\u271d : Fintype \u03b1\n\u22a2 Fintype.card { s // Even s.card } = 2 ^ (Fintype.card \u03b1 - 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "25f2f449dcf4b011033f6e1c59d8643a4d940613ae17c82c72d77fababcd49f7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 121,
      "start_column": 40,
      "end_line": 121,
      "end_column": 45,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\n\u22a2 \u2200 (i : Fin n), 0 < c i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5dbbd31b4b8a8c5fb210f8c40db26ab0212d73c391ec4b6dcf100ece3c1bbe71"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 122,
      "start_column": 39,
      "end_line": 122,
      "end_column": 44,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\n\u22a2 \u2211 i, c i = k",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d4a3dc0886c39d91903f92ca1dbef2ea0a977839db922db8970e9a8e93e6014f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 132,
      "start_column": 40,
      "end_line": 132,
      "end_column": 45,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\n\u22a2 \u2191y < n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5a2ed4b14f561e1c81fd5c6d9635d04f7de0c1c6331b720be482057c227d31a3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 134,
      "start_column": 21,
      "end_line": 134,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 i \u2208 {j | \u2191f j = \u27e8\u2191y', \u22ef\u27e9}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dbf7b4453189af85ba47ca280e7dcf649fdfb0c53d3a45d008b444f864219027"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 134,
      "start_column": 57,
      "end_line": 134,
      "end_column": 62,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 \u2191y + n < 2 * n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4b376c21f9ce6fc057fcaafff54432ca6470c8fe26a02ffdb3b93f71c7e7cd6d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.28220 \u2208 \u2191ys then ?m.29219 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
    },
    "id": "f8533dd0a3f55533c2477a49d0a3820d5ce9965da43dcffbe8e76b5b3654e1ce"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.28220 \u2208 \u2191ys then ?m.29219 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
    },
    "id": "2a7d61deffe3d547be4916f255e97bbe931e7434f1991d206a653226c163286d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 147,
      "start_column": 4,
      "end_line": 147,
      "end_column": 9,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "case h.e_a\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\na : Fin n\n\u22a2 (Finset.filter (Membership.mem {j | \u2191f j = \u27e8\u2191a, \u22ef\u27e9}) Finset.univ).card = c a",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L147"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-05-02T10:48:28-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8a987bb8765c2df88e8b6b47d6fb8cefc854d0546fe560237a48614627c2a1ea"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 167,
      "start_column": 6,
      "end_line": 167,
      "end_column": 11,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "case left\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\nx y : S\nhxy : p x = p y\n\u22a2 x = y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "187544c61cc20ac3ab3cadc7ed93b0df5e5c897b9d6d0cc3acd67665cc3a4953"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 169,
      "start_column": 6,
      "end_line": 169,
      "end_column": 11,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "case right.mk\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\ng : { f // NSequence n k f }\nhg : g \u2208 {g | \u03c8 n k g = f}\n\u22a2 \u2203 a, p a = \u27e8g, hg\u27e9",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c1b370ae45f32b205ad252022edbd62aa344cdce9a0ab4ffa024cc3c4cb93f45"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "Compfiles/Usa2017P5.lean"
    },
    "debug_info": {
      "goal": "c : \u211d\n\u22a2 c \u2208 solution_set \u2194\n    0 < c \u2227\n      \u2203 l,\n        (Set.range l).Finite \u2227\n          (\u2200 (p : \u2124 \u00d7 \u2124), 0 < l p) \u2227 \u2200 {p1 p2 : \u2124 \u00d7 \u2124}, p1 \u2260 p2 \u2192 l p1 = l p2 \u2192 dist \u2191(l p1) \u2191(l p2) \u2264 c ^ l p1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2017P5.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T15:48:13-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c3050863d613aad47b9dfd678f561f1cbafeaf06591cd31a80abc13bb8ce12eb"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2004P2.lean"
    },
    "debug_info": {
      "goal": "P : Polynomial \u211d\n\u22a2 P \u2208 SolutionSet \u2194\n    \u2200 (a b c : \u211d),\n      a * b + b * c + c * a = 0 \u2192\n        Polynomial.eval (a - b) P + Polynomial.eval (b - c) P + Polynomial.eval (c - a) P =\n          2 * Polynomial.eval (a + b + c) P",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-06T15:22:50-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9d3b5c062b3acb3eaa91fe7a425835d4cee7d144ccddaef7bfd996a58bdc3fb0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "Compfiles/Imo1976P4.lean"
    },
    "debug_info": {
      "goal": "\u22a2 IsGreatest {n | \u2203 s, \u2211 i \u2208 s, i = 1976 \u2227 \u220f i \u2208 s, i = n} solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1976P4.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-26T10:31:58-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59b56ee6f40ffa4b324b92b4e5e51fef346312664d501e57fbf096b4046ee589"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 76,
      "end_line": 33,
      "end_column": 81,
      "file": "Compfiles/Imo1979P5.lean"
    },
    "debug_info": {
      "goal": "a : \u211d\n\u22a2 (\u2203 x1 x2 x3 x4 x5,\n      x1 \u2265 0 \u2227\n        x2 \u2265 0 \u2227\n          x3 \u2265 0 \u2227\n            x4 \u2265 0 \u2227\n              x5 \u2265 0 \u2227\n                x1 + 2 * x2 + 3 * x3 + 4 * x4 + 5 * x5 = a \u2227\n                  x1 + 2 ^ 3 * x2 + 3 ^ 3 * x3 + 4 ^ 3 * x4 + 5 ^ 3 * x5 = a ^ 2 \u2227\n                    x1 + 2 ^ 5 * x2 + 3 ^ 5 * x3 + 4 ^ 5 * x4 + 5 ^ 5 * x5 = a ^ 3) \u2194\n    a \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1979P5.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "a685641c3d0c1275d5dfd657aa7baf442f8004ced215bf8d31f62da6e68f9cd6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 69,
      "start_column": 2,
      "end_line": 69,
      "end_column": 7,
      "file": "Compfiles/Imo2018P3.lean"
    },
    "debug_info": {
      "goal": "case intro\nt : antipascal_triangle 2018\nht : \u2200 (n : \u2115), 1 \u2264 n \u2192 n \u2264 \u2211 i \u2208 Finset.range 2018, (i + 1) \u2192 \u2203 r \u2264 2018, \u2203 c < r, t.f { row := r, col := c } = n\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P3.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-09-16T20:32:12-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b74da3c35c3c198ee6324b495f922b684119eb02f5199c5f7a3c268ac569586"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 89,
      "end_line": 33,
      "end_column": 94,
      "file": "Compfiles/Imo1995P4.lean"
    },
    "debug_info": {
      "goal": "x : \u2115 \u2192 \u211d\nh : x 0 = x 1995\nh1 : \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i\n\u22a2 x 0 \u2264 solution \u2227\n    \u2203 x, x 0 = solution \u2227 x 0 = x 1995 \u2227 \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1995P4.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8bf203733f0794e1e22f4376adcadd04cad7b415bd6860f73e1236dceb463e5c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 42,
      "start_column": 5,
      "end_line": 42,
      "end_column": 10,
      "file": "Compfiles/Usa2024P2.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 IsLeast {k | \u2203 S, Good S \u2227 k = {z | InAtLeastKSubsets S k z}.ncard} solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2024P2.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-29T08:54:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8c59bcdefbeba56749ef385508b5e62691ef4208163d7e2bbeb2954a29dbe8a2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 21,
      "end_line": 34,
      "end_column": 26,
      "file": "Compfiles/Imo1975P2.lean"
    },
    "debug_info": {
      "goal": "a : \u2115 \u2192 \u2124\napos : \u2200 (i : \u2115), 0 < a i\nha : \u2200 (i : \u2115), a i < a (i + 1)\n\u22a2 \u2200 (i n0 : \u2115), \u2203 n, n0 \u2264 n \u2227 \u2203 r s j, a n = \u2191r * a i + \u2191s * a j \u2227 i < j \u2227 0 < r \u2227 0 < s",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1975P2.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ded0abf7b97be9573a23a6136eb84239d6cc648cd2d8fa92ea313752baabf7a3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 4,
      "end_line": 34,
      "end_column": 9,
      "file": "Compfiles/Imo2023P1.lean"
    },
    "debug_info": {
      "goal": "case h.mp\nx : \u2115\n\u22a2 x \u2208 solution_set \u2192 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 P n}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "15e0848c7784ad9fd15e9f10c392790899bf89491e42fa932bf9c6218e752563"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9,
      "file": "Compfiles/Imo2023P1.lean"
    },
    "debug_info": {
      "goal": "case h.mpr\nx : \u2115\n\u22a2 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 P n} \u2192 x \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b3826aca3d84084fabd8dd55d0a97c4b07cbfb403dbfb879c501370e0fd9de29"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 40,
      "start_column": 4,
      "end_line": 40,
      "end_column": 9,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inl\nb c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\nb_odd : Odd b\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "aed6dfad082bb1ce663caedfa16c651d6eab2f5a047a2d7bbaa0a6cfc48b85dc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 41,
      "start_column": 4,
      "end_line": 41,
      "end_column": 9,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inr\nb c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_odd : Odd c\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "191cdf08156dc398f4e2892cbb4b3cd8c491ff039c41915c75bd9802bb7d31bc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 32,
      "end_line": 36,
      "end_column": 37,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\n\u22a2 a.gcd b = 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3c6556c5f19ca1f0a6ef35290962cea6d99a869185c207fb21f12c8c8178c126"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 26,
      "end_line": 38,
      "end_column": 31,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\n\u22a2 Odd a",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "22aa66b842e36ecafe1cec11b3d1e34ab3d9e293af198e33c21c897cfda16502"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 26,
      "end_line": 39,
      "end_column": 31,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\n\u22a2 Odd b",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59560b104c7c4c5cb16982141452671dd3ad1f3ce493c8111c60d34637729f4a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 4,
      "end_line": 34,
      "end_column": 9,
      "file": "Compfiles/Imo2012P2.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 3 \u2264 n\na : { x // x \u2208 Finset.Icc 2 n } \u2192 \u211d\napos : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), 0 < a i\naprod : \u220f i, a i = 1\n\u22a2 \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), (1 + a i) ^ \u2191i \u2264 \u2191\u2191i ^ \u2191i / (\u2191\u2191i - 1) ^ (\u2191i - 1) * a i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2012P2.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-27T20:50:55-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "14bffe1545d568c60a8bd1e5474cedf36449dcf62cd176dfe6356f09b0b9f556"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7,
      "file": "Compfiles/Imo2012P2.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 3 \u2264 n\na : { x // x \u2208 Finset.Icc 2 n } \u2192 \u211d\napos : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), 0 < a i\naprod : \u220f i, a i = 1\nh1 : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), (1 + a i) ^ \u2191i \u2264 \u2191\u2191i ^ \u2191i / (\u2191\u2191i - 1) ^ (\u2191i - 1) * a i\n\u22a2 \u2191n ^ n < \u220f i, (1 + a i) ^ \u2191i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2012P2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T17:59:59-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d5baea445d201ef1efdbb406cb680700cd2bc41d8a878b078cf84922f6bd9c79"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 65,
      "end_line": 27,
      "end_column": 70,
      "file": "Compfiles/Imo1983P5.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 S, S.card = 1983 \u2227 (\u2200 x \u2208 S, x \u2264 10 ^ 5) \u2227 \u2200 x \u2208 S, \u2200 y \u2208 S, \u2200 z \u2208 S, x < y \u2227 y < z \u2192 x + z \u2260 2 * y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1983P5.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "119f8cd3b9ae6850e75d18ffff7fa50363e47d5b3be618e6d1af3334e4c9c3be"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 52,
      "start_column": 2,
      "end_line": 52,
      "end_column": 7,
      "file": "Compfiles/Imo2023P5.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 IsGreatest {k | \u2200 (j : JapaneseTriangle n), \u2203 p, k \u2264 Fintype.card { i // j.red i = p.steps i }} (solution_value n)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P5.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T09:39:50-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "10ebc2192d3a75b2f963bd3f61b4fdf1e4e2fac123ec0737279c201da26646bc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo1983P6.lean"
    },
    "debug_info": {
      "goal": "T : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\na b c : \u211d\nha : a = dist (T.points 1) (T.points 2)\nhb : b = dist (T.points 2) (T.points 0)\nhc : c = dist (T.points 0) (T.points 1)\n\u22a2 0 \u2264 a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) \u2227\n    (0 = a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) \u2194 EqualityCondition a b c)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1983P6.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-05-24T09:06:54-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3d5a4451c801f87b1e7155be7e2701b268ef4ca0ef4d806d1a3bb331986c8ef2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo2017P6.lean"
    },
    "debug_info": {
      "goal": "S : Finset (\u2124 \u00d7 \u2124)\nhS : \u2200 s \u2208 S, gcd s.1 s.2 = 1\n\u22a2 \u2203 n, 0 < n \u2227 \u2203 a, \u2200 s \u2208 S, \u2211 i \u2208 Finset.range n, a i * s.1 ^ i * s.2 ^ (n - i) = 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2017P6.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-02T08:56:28-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e626a51d37ef57cb9d3967c06b073e61b56fd29b8873090de00761e2a4aeb573"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 23,
      "start_column": 63,
      "end_line": 23,
      "end_column": 68,
      "file": "Compfiles/Imo1971P3.lean"
    },
    "debug_info": {
      "goal": "\u22a2 {(n, m) | (2 ^ n - 3).Coprime (2 ^ m - 3)}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P3.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "18493d62eebe92b1ad1c9b0b55228abc8759946c42a14d9dc2802344cbfee998"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 45,
      "start_column": 2,
      "end_line": 45,
      "end_column": 7,
      "file": "Compfiles/Imo2001P1.lean"
    },
    "debug_info": {
      "goal": "t : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\n\u22a2 \u2221 (Affine.Simplex.circumcenter t) (t.points 2) (t.points 1) = \u2191Real.pi - \u2221 (t.points 1) (t.points 0) (t.points 2)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T20:28:24-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7b4a585c6f9e62a2df1aaa6fa81fe56ae506abc18da534a26d621188e0892c77"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 60,
      "start_column": 2,
      "end_line": 60,
      "end_column": 7,
      "file": "Compfiles/Imo2001P1.lean"
    },
    "debug_info": {
      "goal": "A B C : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nhAcuteA : \u2220 C A B < Real.pi / 2\nhAcuteB : \u2220 A B C < Real.pi / 2\nhAcuteC : \u2220 B C A < Real.pi / 2\nhAB : \u2220 A B C + Real.pi / 6 \u2264 \u2220 B C A\nABC : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2)) := { points := ![A, B, C], independent := hABC }\nP : \u21a5(affineSpan \u211d {B, C}) := (EuclideanGeometry.orthogonalProjection (affineSpan \u211d {B, C})) A\n\u22a2 \u2220 C A B + \u2220 C (Affine.Simplex.circumcenter ABC) \u2191P < Real.pi / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T13:45:33-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ee845fa1f900c8e260a593aed3969dec328d6ffd42cbd9035c04ad975e075edc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo2017P1.lean"
    },
    "debug_info": {
      "goal": "a0 : \u2115\n\u22a2 a0 \u2208 solution_set \u2194 \u2203 A, {n | a a0 n = A}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2017P1.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-02T09:41:34-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1d43200cfbd12ea0c73995ad0a7d4f5ec72ebb2f32f40ac5b062a020740cda6a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 33,
      "end_line": 35,
      "end_column": 38,
      "file": "Compfiles/Imo1982P4.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\nhxy : \u2203 x y, x ^ 3 - 3 * x * y ^ 2 + y ^ 3 = \u2191n\n\u22a2 n \u2260 2891 \u2227\n    \u2203 x1 x2 x3 y1 y2 y3,\n      x1 ^ 3 - 3 * x1 * y1 ^ 2 + y1 ^ 3 = \u2191n \u2227\n        x2 ^ 3 - 3 * x2 * y2 ^ 2 + y2 ^ 3 = \u2191n \u2227\n          x3 ^ 3 - 3 * x3 * y3 ^ 2 + y3 ^ 3 = \u2191n \u2227 (x1 \u2260 x2 \u2228 y1 \u2260 y2) \u2227 (x1 \u2260 x3 \u2228 y1 \u2260 y3) \u2227 (x2 \u2260 x3 \u2228 y2 \u2260 y3)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1982P4.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7179f0d078cbbbc30b96a56279c569d64bf8666c598defa2cb1d48cb379e9bbc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "Compfiles/Usa2008P1.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\n\u22a2 \u2203 k,\n    (\u2200 (i : Fin (n + 1)), 1 < k i) \u2227\n      (\u2200 (i j : Fin (n + 1)), i \u2260 j \u2192 (k i).Coprime (k j)) \u2227 \u2203 m, \u220f i, k i = 1 + m * (m + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2008P1.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-28T09:53:59-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "25f6acbaa7a2ff5be4437089ccb005ff61d3fdc59cab3bb154fdf6f823210a42"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "Compfiles/Imo2020P5.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 n \u2208 SolutionSet \u2194\n    1 < n \u2227\n      \u2200 (\u03b1 : Type) [inst : Fintype \u03b1],\n        Fintype.card \u03b1 = n \u2192\n          \u2200 (f : \u03b1 \u2192 \u2115+),\n            (Pairwise fun a b => \u2203 s, s.Nonempty \u2227 geometric_mean f s = (\u2191\u2191(f a) + \u2191\u2191(f b)) / 2) \u2192\n              \u2203 y, \u2200 (a : \u03b1), f a = y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P5.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-18T17:13:51-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7cda25c5ee26d2e5ce0ba4bbd25626195a3d0276411517f6368e9375af56c748"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "Compfiles/Imo1963P4.lean"
    },
    "debug_info": {
      "goal": "x\u2081 x\u2082 x\u2083 x\u2084 x\u2085 y : \u211d\n\u22a2 (x\u2081, x\u2082, x\u2083, x\u2084, x\u2085) \u2208 SolutionSet y \u2194\n    x\u2085 + x\u2082 = y * x\u2081 \u2227 x\u2081 + x\u2083 = y * x\u2082 \u2227 x\u2082 + x\u2084 = y * x\u2083 \u2227 x\u2083 + x\u2085 = y * x\u2084 \u2227 x\u2084 + x\u2081 = y * x\u2085",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1963P4.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T08:58:13-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dadfe170b5abd88f8d87744633853afcb214ea416c42a1a6972de382d61ac7c6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f5eccdc3c1087ce8e0fa5de98487c4b9f0e17b466a14c6ff17bfd51f7ee844df"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b4549a7f99321c680d5eba196ed48a2f03b1c6e38b415b48bae98b318c4572d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0e47e1dc204fb0cd9d9105a3bd0d11899f287fb03839c8ba1cda4499b53d0920"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2d3c34ee5b51b3c60b46be7841a5183ec00109f623349a618507daf3252ca1db"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4e114f0a36a4c9f3e461bebd312cba323468378cb66eca708aa012370dc94ff2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e5e44cbabf8ccde6e2b17551712341bbbb81bc84f5edcd799c24e3ff11403a2f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1242d7ce42b24197936bf10666d41b7af4016a6c0aa0b232d9283a169fc37599"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 hj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f1f835af412ae1808f2381cfd6f798b1fc0fc43b42152709891c9eeaea4a3a77"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7866919956bea21f27eadf5c1c009558e99ca771dab48b0c9b59630270de39dd"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4c2d40fbe36ea72d6f40744e439689d30e273cc8bb3a2fc9587ebef04f4f0b70"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "71e0d3357fad98db3158a08af93ea86e07bae53f7510a6825744878675a5f186"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "12034a8c19e0cd8a3821ca2b86cace0e9cda9afba573af42a01b58a591902f56"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7fff431ac7296b360b5ddc858760e0033054c8ffec73a8c6163bd5debf63c704"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "af9433f7bed0a9d895eb5bcd10de53d73aad83db0529aa177255dce1f49e2872"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "73e6d2fd67880eb6c7e484c80eaf8611165d09d86dd77e565d8ece38f823b53c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "223af2772f141d557e778e97d00ee9d2f291296553ab3b67d4695be70854888b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "a7d4c52ff46ca1e0237446c281f067aa11eb39b7d9f11c7cfa70ca183621950d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bf0ef1a15996584838fdc2c02c5d2504892791ae3f48bec4fa93b7f1a6acfaff"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "81be109718254013fa033ec3b4239dac571c95f84d92ad6a2e41c74de7d32119"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "41e6f9e1feec43b30dcbf75ff8fc0208a59b548d5300bb847fefbb9fdf1d7ff0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1274e5c83ee1358d23b96e80b4b9d95225b8397cbcb6a3e2714d59f168876957"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "04a2d75f85aa21a71d8fe9852f59d9aef4546ece37bd51fee9c4548247ac81b8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ebd3d7afca130128d0fddf4d2663f299d853fc88b4d45df067f57d3ca59f0cb1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fef2f82eb5bfb140d95bf0ce492965dcdb2bc400b7208f76d41318e7755b790f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "cb663d0e1ce874ba06b40e0121c51d823f1b5e4be93aa4bb37ff426e89243074"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "338df36c8e3359512d558471f6c8ae553079999294470ff526f0d4146a045c6f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3c54d0a3795b90b086596695c5ad6954507deeb3bab878598e4a4a174afcf40b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1121f8e9b163ec41eaa6f3fb5d37d01deb1abde552412d5e54640c8be6897bd6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5d603cce10e4b14df55f1eee78e88d8aeca193063a2a2c6f389265ed4c73953c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c85747599a537c6ffca3bd2bbfd3b443d0b8d68d9cb0ad78f42756c5469c2373"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4c24939fc4bdb84e88077c67f9ad18f0da6ab223108218504392b3050f5be35c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3ba55cfc35d1b19ae77790c8e836b2c20bff6ad49190ba76f56b8d7c1c41f910"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c78f65069c3786a53ce41267a2990b8f5e1c5a5a51e637d6857bb34fdcf08a06"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "732bc3d627983f68e0a0ae3489d7e202b4c8676ff9a5e8e511ae47c49a5fbdc9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9fd9f09a7f5151a28239f6b543542e12b1dea9c71ad71da1258cbdf8cce28951"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3a31f762344cc10a3f4a285b9707d82eec683ef62d3bc53e24878d8351c81e69"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "65579631a3df714f74b29fb7ec81c7d5c51d1f77f089f4bfaa1fe3b58c0447f1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2427a12149ad60f3da8c4a82c3692bddef73e3da3a708d8e2851103641dd9f7a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4529f7c0345c3f1f556463a98a873bc2d898e214f552395d901fe00962abd86c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d7a8990edf1cb34390db765087d674ed6c9169cb0f80c2ae1e56669dd45e7c7f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1a07994d64e82e9137330d5b7a85de2d429bcda8225ba5398c0a8f612125d507"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "01c3062f95ce457ac1390ec28f6ecbfc092c0a8bb90767852c79fb72457f0ad2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5ab24a647c77aa1c7b351b5e62316e68ae5358c3b0806b7297a4d0389b979001"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6bcd360233d42fc12faf3d0c2d8c7c26a61296d0aa6d6d49305c1c01a0898340"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "06d66619040c0abd3e5408da51e157a7bd6e5e11c58c6eb2cffa071630ba544c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4bf8077509e327eb5012ef8948108574f7bbad3b09202cba62caf8881df2eb43"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b4468593cce701f5d63754982acd49cf7f5f1b8b74c3b19873ea73ac6ff2162d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "40b44930609bb1217e1867d4cc6b022ccae06691e77b5eed12bff8771e6babda"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "336042af7186201ff93eb50061a1e0611d5193e6f4262b4461ecd53019934c03"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "813be212b88bae5d76a30f89dfb76bd84955f9c58f8563c93d0e7734a1b24996"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "56a755706dbce627a7857c8f09dbc0d4a458b95b66eb6d5da3730d73bd8e9619"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d63a932f6883a1e474c2e910b1167b70bc081b66b002dccdca31e329cd467b62"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ca9398af4e5e796553454024f23475f0e68bd188481300142556233e2a4e2575"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fa24d207147bc4d1a6f09a98377900cb02f439a637c9c0078827c358c9d835ea"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "942ab9b9b0245cebdf7717ec80e51b172ce497744cb4bd0dc31e7b663699ab1f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5693d8cb01ecf4c7cd0bd1ab8e34f652978f261e1b548c58717719f5d7c421f5"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fd18c3c0e2804a9f9ae657fc90b50e29e49fcf8ca1e977f063896e03f5e461ce"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2cebe444324e0c668b07408c3def882f3093e2e1e1335a5e81edcf7932bc4b43"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "755e8bdf18242b1e67d89c9d674921f6d57ac24edd2008bf67f6162f7a6f0f59"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8d035b859df9280e806942d1d964b5036e63de23f6f509d3f8cd47613f046106"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bf78c7082e72970cbf40371637754b2d24de2ee8f22d7f2c51b4f82abfe36ae0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b9ed15268bff60f67e1559600bcc93b11944f1a84432e4168630d7e48c50ef7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1a87f892ba397cfb3a94a0452a3a0f07f588492603784f88f270aa0583663527"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9863b9380860a92d271ff1c11d72565631020b26d2e9f736feeb9f93f024355d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 87,
      "start_column": 4,
      "end_line": 87,
      "end_column": 9,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case left\ncolor : \u2191(Set.Icc 1 solution_value) \u2192 Fin 2\n\u22a2 coloring_is_good color",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L87"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-17T11:03:23-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4dfcdfe291ff46c6fc82b53f0fca21f1b636bcff633ea8c0f9dc1411d818e8a1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo1991P6.lean"
    },
    "debug_info": {
      "goal": "a : \u211d\nha : 1 < a\n\u22a2 Bounded (solution a ha) \u2227 \u2200 (i j : \u2115), i \u2260 j \u2192 1 \u2264 |solution a ha i - solution a ha j| * |\u2191i - \u2191j|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1991P6.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-20T21:26:57-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9a27ead7e901d4b2a8237c3922016f7362874addcf8d84c29521c4212418e36d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Imo2021P2.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nx : Fin n \u2192 \u211d\n\u22a2 \u2211 i, \u2211 j, \u221a|x i - x j| \u2264 \u2211 i, \u2211 j, \u221a|x i + x j|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2021P2.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-04T09:33:15-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d0aed2d5a7333bb441d28f2f9746bd121d055067b2a1019cf51e0276d964af40"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo2015P2.lean"
    },
    "debug_info": {
      "goal": "a b c : \u2124\n\u22a2 (a, b, c) \u2208 SolutionSet \u2194\n    0 < a \u2227 0 < b \u2227 0 < c \u2227 is_power_of_two (a * b - c) \u2227 is_power_of_two (b * c - a) \u2227 is_power_of_two (c * a - b)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2015P2.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T18:22:25-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3931ff4e24b0e27b3a721bd58c4c0c4fb3d99add222117fbe86db98047cd9fd5"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo1993P5.lean"
    },
    "debug_info": {
      "goal": "\u22a2 if DoesExist = true then \u2203 f, Good f else \u00ac\u2203 f, Good f",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1993P5.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:48:13-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b2eee41030bd1b84e31fcb8e72599d1d3785cce18cd948f2a3584e6da8159c3b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Compfiles/Imo2007P1.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na x : Fin n \u2192 \u211d\nh : Monotone x\n\u22a2 (\u2a06 i, d a i) / 2 \u2264 \u2a06 i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0fa2c4666fb34d33a86e885cd30911f353a5e8db7640b27e303df0eaeebcb5a8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "Compfiles/Imo2007P1.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u211d\n\u22a2 \u2203 x, Monotone x \u2227 (\u2a06 i, d a i) / 2 = \u2a06 i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6ce2f8f3b0847e9ad0becb040b6fde0dbc8f1dcb19adea3c04eb0fb6a31f9102"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "Compfiles/Imo2023P3.lean"
    },
    "debug_info": {
      "goal": "k : \u2115\nhk : 2 \u2264 k\na : \u2115+ \u2192 \u2115+\n\u22a2 a \u2208 SolutionSet hk \u2194\n    \u2203 P,\n      P.Monic \u2227\n        P.degree = \u2191k \u2227\n          (\u2200 n \u2264 k, 0 \u2264 P.coeff n) \u2227\n            \u2200 (n : \u2115+), Polynomial.eval (\u2191\u2191(a n)) P = \u2191\u2191(\u220f i \u2208 Finset.range k, a \u27e8\u2191n + i + 1, \u22ef\u27e9)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P3.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-24T09:05:23-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1117e8a7a517122b73dbcb9fdd47dc1e91fcce2bc71ba0a142cbbb7b7a86c725"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Compfiles/Imo1973P5.lean"
    },
    "debug_info": {
      "goal": "G : Set (\u211d \u2192 \u211d)\nhf : \u2200 f \u2208 G, \u2203 a b, a \u2260 0 \u2227 \u2200 (x : \u211d), f x = a * x + b\nhG : \u2200 f \u2208 G, \u2200 g \u2208 G, g \u2218 f \u2208 G\nhinv : \u2200 f \u2208 G, (\u2200 (x : \u211d), f x \u2260 0) \u2192 f\u207b\u00b9 \u2208 G\nhfix : \u2200 f \u2208 G, \u2203 x, f x = x\n\u22a2 \u2203 k, \u2200 f \u2208 G, f k = k",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1973P5.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T12:13:52-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7303214fd0f64bd5da1847b9323191e73f7c4881eed8d603a53f6907767079f0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Compfiles/Imo1966P4.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nx : \u211d\nhx : \u2200 (t : \u2115) (k : \u2124), x \u2260 \u2191k * Real.pi / 2 ^ t\n\u22a2 \u2211 i \u2208 Finset.range n, 1 / Real.sin (2 ^ (i + 1) * x) = 1 / Real.tan x - 1 / Real.tan (2 ^ n * x)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1966P4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-23T21:57:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1137ba6c9ba47104c1ab8ec7f77faa36f6001add8c9580821296c704de84f0d6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7,
      "file": "Compfiles/Imo1970P6.lean"
    },
    "debug_info": {
      "goal": "P : Fin 100 \u2192 Pt\nhP : \u2200 (a b c : Fin 100), [a, b, c].Nodup \u2192 \u00acCollinear \u211d {P c, P b, P c}\n\u22a2 let cardAll := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points};\n  let cardAcute := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points \u2227 AcuteTriangle t};\n  \u2191cardAcute / \u2191cardAll \u2264 7 / 10",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1970P6.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-21T09:27:31-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fc4853fef38f3fe863cf2d87956e1ee4a2e7ce864d586917dde85c4771408849"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7,
      "file": "Compfiles/Usa2000P5.lean"
    },
    "debug_info": {
      "goal": "A : ZMod 3 \u2192 EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A 0, A 1, A 2]\n\u03c9 : Fin 7 \u2192 Circle\nhTangent : \u2200 i < 6, ExternallyTangent (\u03c9 i) (\u03c9 (i + 1))\nhA : \u2200 i < 7, A \u2191i \u2208 \u03c9 \u2191i \u2227 A (\u2191i + 1) \u2208 \u03c9 \u2191i\n\u22a2 \u03c9 0 = \u03c9 6",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2000P5.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-16T09:11:27-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e97dd05f8b02a88ccec3e6f2bced6a18341024aff9110c24dc12371251e8d418"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/CIIM2022P6.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nhn : 0 < n\n\u22a2 d (n + 1).factorial \u2264 2 * d n.factorial",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/CIIM2022P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T20:57:01-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8594afb538b66f2210ef250234e20ef941d0de3624227a418f60b8acdff8173f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 60,
      "start_column": 4,
      "end_line": 60,
      "end_column": 9,
      "file": "Compfiles/Usa2023P5.lean"
    },
    "debug_info": {
      "goal": "case mp\nn : \u2115\nhn : 2 < n\n\u22a2 n \u2208 solution_set \u2192\n    \u2200 (a : Fin n \u2192 Fin n \u2192 Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid \u22ef a ha \u2192 \u2203 p, \u2203 (hp : \u2200 (r : Fin n), Function.Injective (p r)), col_valid \u22ef (fun r c => a r (p r c)) \u22ef",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-04T12:29:47-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5cf8e96ea39aac4fd4af09646d3eb359d3353f76ab6fa68f329cc347261e5677"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 61,
      "start_column": 4,
      "end_line": 61,
      "end_column": 9,
      "file": "Compfiles/Usa2023P5.lean"
    },
    "debug_info": {
      "goal": "case mpr\nn : \u2115\nhn : 2 < n\n\u22a2 (\u2200 (a : Fin n \u2192 Fin n \u2192 Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid \u22ef a ha \u2192\n        \u2203 p, \u2203 (hp : \u2200 (r : Fin n), Function.Injective (p r)), col_valid \u22ef (fun r c => a r (p r c)) \u22ef) \u2192\n    n \u2208 solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-04T12:29:47-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3e6c2261cccc3c7a82006cbffa972069d8e9f7a3abbc6ffddb14c17dd8fba1a9"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 232,
      "start_column": 8,
      "end_line": 232,
      "end_column": 13,
      "file": "Foundation/Modal/Hilbert/NNFormula.lean"
    },
    "debug_info": {
      "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalCNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Hilbert/NNFormula.lean#L232"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "7530c8f7c290c12dc40826ee316c3d847940e0b593e2b81e18a55e018011b9d3"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 236,
      "start_column": 8,
      "end_line": 236,
      "end_column": 13,
      "file": "Foundation/Modal/Hilbert/NNFormula.lean"
    },
    "debug_info": {
      "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalDNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Hilbert/NNFormula.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "27e08ea6045fc5ba02eaec2aed4b05d410a7c392fcf3ade47db69e15f028317f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 27,
      "start_column": 25,
      "end_line": 27,
      "end_column": 30,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\n\u22a2 \u03b3 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Maximal/Makinson.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "17a21a8b6db5a9310b6d9fc7ca1fc3e827350ec3b0e959882ace87ef188f160c"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 28,
      "start_column": 33,
      "end_line": 28,
      "end_column": 38,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\n\u22a2 \u03b3 \u2209 Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Maximal/Makinson.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "d06f1c3be3e5474e431879e445a173f0997cda1071279ef002fe2b7fb69016ec"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 31,
      "start_column": 4,
      "end_line": 31,
      "end_column": 9,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u22a2 \u2203 \u03b4 \u2208 \u0393, (\u2191\u03b4).toFormula \u2208 L \u2227 (\u2191\u03b4).toFormula \u2209 Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Maximal/Makinson.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "719bb0bc84cee3750d3e4f21cb7c4ec7fb64d3afcd343c8e7b704b431e6a7993"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "case mk.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\n\u03be : NNFormula \u2115\nproperty\u271d : (\u25a1\u03be).isPrebox \u2228 (\u25a1\u03be).isPredia \u2228 (\u25a1\u03be).degree = 0\nh\u03c8\u2081 : \u27e8\u25a1\u03be, property\u271d\u27e9 \u2208 \u0394\nh\u03c8\u2082 : (\u2191\u27e8\u25a1\u03be, property\u271d\u27e9).isPrebox\nthis : \u25a1\u03be.toFormula \u2208 Logic.Ver\n\u22a2 False",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Maximal/Makinson.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "1855cb1bfcbb80661381cd7c826539e70945c4f3b296c33ba73ba8fa8db73ffb"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 38,
      "start_column": 49,
      "end_line": 38,
      "end_column": 54,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Maximal/Makinson.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "2ab4f3224e99edb36b848bb8c4aac0e6c715d328a67fc340281ea95584f4cebe"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.mk.intro.intro.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u00acHilbert.Ver \u22a2! \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\nthis : \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L\n\u22a2 \u2203 \u03c8, \u25c7\u03c8 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Maximal/Makinson.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "06fbb95e60fb3b9e29b637243a8de32625c614f2a5c00ab004a5315ea0153cad"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 42,
      "start_column": 4,
      "end_line": 42,
      "end_column": 9,
      "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 FrameClass.finite_connected_partial_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-14T14:50:18+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "cb11a0bbf26233c3498378d9bdb34cc13027e61d3cf0c0b25c3b432406e41aba"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 33,
      "start_column": 101,
      "end_line": 33,
      "end_column": 106,
      "file": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean"
    },
    "debug_info": {
      "goal": "\u22a2 Complete Hilbert.GLPoint3 FrameClass.finite_strict_linear_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-17T22:57:50+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "f03d48fcb0c3dc71687c931d236b46e5497ad358251d77b3c66327ad60d8c00a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "master",
      "commit": "c31b1b10dd69f83509fcf33f9ef886c078722702",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9,
      "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint2 \u03c6 \u2208 FrameClass.finite_confluent_partial_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c31b1b10dd69f83509fcf33f9ef886c078722702/Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-14T14:50:18+09:00",
      "inclusion_date": "2025-04-14T23:25:56.027784+00:00"
    },
    "id": "b1d7cb8d97fe0027f592e17ffb3dd30fa9f0a21da55ce8cc588520436dfc2e54"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "solovay-sentences",
      "commit": "96ecdcf3310a2fd8245872e8a962c668d61f0ce5",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 111,
      "start_column": 2,
      "end_line": 111,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/GL/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b2 : T.Delta1Definable\nM : Model\nr : M.World\ninst\u271d\u00b9 : M.IsFiniteTree r\ninst\u271d : Fintype M.World\nN N' : \u2115\nw : Fin N \u2192 Semiterm \u2112\u2092\u1d63 Empty N'\nt : M.World \u2192 Semiterm \u2112\u2092\u1d63 Empty N\ni : M.World\n\u22a2 (Rewriting.app (Rew.substs w)) (\u2a56 \u03b5, \u03b8ChainAux T t \u03b5) = \u2a56 \u03b5, \u03b8ChainAux T (fun i => (Rew.substs w) (t i)) \u03b5",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/96ecdcf3310a2fd8245872e8a962c668d61f0ce5/Foundation/ProvabilityLogic/GL/Completeness.lean#L111"
    },
    "metadata": {
      "blame_email_hash": "5a2548ae1d83",
      "blame_date": "2025-03-31T09:39:30+09:00",
      "inclusion_date": "2025-04-01T05:40:23.283040+00:00"
    },
    "id": "53f4f7361843fd4dac777d7c0e837d01743e4e73d6cc9e99fbc8c3bbe2452d92"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Carleson/LinearizedMetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "c310678d6982240739518fff83bb4c7b4b852dffb9d2a6da65f71a00216e5e57"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 526,
      "start_column": 70,
      "end_line": 526,
      "end_column": 75,
      "file": "Carleson/TileStructure.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d\u00b2 : PseudoMetricSpace X\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u22a2 IsAntichain (fun x1 x2 => x1 \u2264 x2) (toTileLike '' \ud835\udd04) \u2194\n    \u2200 (p p' : \ud835\udd13 X), p \u2208 \ud835\udd04 \u2192 p' \u2208 \ud835\udd04 \u2192 p \u2260 p' \u2192 Disjoint (toTileLike p).toTile (toTileLike p').toTile",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TileStructure.lean#L526"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-03T17:09:05+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "b11fec209a8e9e6d28ba0f72be209af353af056d145d5e5bf091a912ceee00b6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 218,
      "start_column": 2,
      "end_line": 218,
      "end_column": 7,
      "file": "Carleson/HolderVanDerCorput.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR t : \u211d\nhR : 0 < R\nC : \u211d\u22650\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z R\nh2\u03d5 : HolderWith C nn\u03c4 \u03d5\nht : t \u2208 Ioc 0 1\n\u22a2 LipschitzWith (C8_0_1 \u2191a \u27e8t, \u22ef\u27e9) (holderApprox R t \u03d5)",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L218"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-19T16:30:05+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "393599577049b16ddc0284d92bb8541569987867e6056aaf90f085f7000f6d65"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 229,
      "start_column": 55,
      "end_line": 229,
      "end_column": 60,
      "file": "Carleson/HolderVanDerCorput.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR : \u211d\u22650\nhR : 0 < R\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z \u2191R\nh2\u03d5 : hnorm \u03d5 z R < \u22a4\nf g : \u0398 X\n\u22a2 \u2191\u2016\u222b (x : X), cexp (I * (\u2191(f x) - \u2191(g x))) * \u03d5 x\u2016\u208a \u2264\n    \u2191(C2_0_5 \u2191a) * volume (ball z \u2191R) * hnorm \u03d5 z R * (1 + \u2191(nndist_{z ,\u2191R} f g)) ^ (2 * \u2191a ^ 2 + \u2191a ^ 3)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "4f0774fdf1b5",
      "blame_date": "2024-07-01T23:56:16+08:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "0a7b83de487e4725261acd6846fed27d95d85448b239aef8106cf387db39e490"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Carleson/MetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "614b0b1fd379e2aab89e519f6043f2cd34f21de790b42d55b8bc704504a1d15e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 58,
      "start_column": 2,
      "end_line": 58,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nx : \u211d\n\u22a2 partialFourierSum n (partialFourierSum n f) x = partialFourierSum n f x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5cf368edd40f6686c7cf712723cd2708e16112dafe65202e7ceff6b93580caae"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\n\u22a2 \u222b (x : \u211d) in 0 ..2 * \u03c0, (starRingEnd \u2102) (partialFourierSum n f x) * g x =\n    \u222b (x : \u211d) in 0 ..2 * \u03c0, (starRingEnd \u2102) (f x) * partialFourierSum n g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "60c0cd3392949ba20afa599ece3f28e3db655d1e45f1b616574451b1fdfb5bdc"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "g : \u211d \u2192 \u2102\nn : \u2115\nhmg : Measurable g\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\n\u22a2 (fun p => eLpNorm ((Ioc 0 (2 * \u03c0)).indicator (approxHilbertTransform n g)) p volume) \u2264 fun p =>\n    eLpNorm ((Ioc 0 (2 * \u03c0)).indicator g) p volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d0452e487bcae6fb1961fd7b6858cc14d0985e42138e76c88d15181c1c255be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nhg\u271d : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\nr : \u211d\nhr : r \u2208 Ioo 0 \u03c0\nhg : \u2200 (x : \u211d), \u2016g x\u2016 \u2264 niceKernel r x\n\u22a2 eLpNorm ((Ioc 0 (2 * \u03c0)).indicator fun x => \u222b (y : \u211d) in 0 ..2 * \u03c0, f y * g (x - y)) 2 volume \u2264\n    2 ^ 5 * eLpNorm ((Ioc 0 (2 * \u03c0)).indicator f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "613e84de0ee275a0f16c37b30e3825a2914e869a1ccd76c1e0fc5873330f9699"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 168,
      "start_column": 2,
      "end_line": 168,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 Continuous (dirichletApprox n)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L168"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0fe2c4cd9f2bbe6355d5ca1c2f261f6900a16b43b8714c5af6dcc49e35a2e6db"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 172,
      "start_column": 2,
      "end_line": 172,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 Function.Periodic (dirichletApprox n) (2 * \u03c0)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L172"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a04d60225babf97b3e178476dea5a97d57d0b2fff018930ec691ca25ebed64c1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 182,
      "start_column": 2,
      "end_line": 182,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nn : \u2115\nx : \u211d\n\u22a2 approxHilbertTransform n f x = \u2191(2 * \u03c0)\u207b\u00b9 * \u222b (y : \u211d) in 0 ..2 * \u03c0, f y * dirichletApprox n (x - y)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L182"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a5c69bea75b27a811d2528bbc7737b8ecd2ca4000425f6fa438dfca2d868ae80"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 192,
      "start_column": 2,
      "end_line": 192,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nr : \u211d\nhr : r \u2208 Ioo 0 1\nn : \u2115\nhn : n = \u2308r\u207b\u00b9\u2309\u208a\nx : \u211d\n\u22a2 dist (dirichletApprox n x) ({y | \u2016y\u2016 \u2208 Ioo r 1}.indicator 1 \u2191x) \u2264 2 ^ 5 * niceKernel r x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L192"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "034e090b3b5d00fd6c5739e217cb6a1b098d003fa4a867f94e567c82879e24e6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "r : \u211d\nhr : 0 < r\n\u22a2 HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts 4)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Classical/HilbertStrongType.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "a1e9bc78fc17042729da155c3a7456a7e1e5986eb838c8a87676ab4cebb90d9d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 50,
      "start_column": 2,
      "end_line": 50,
      "end_column": 7,
      "file": "Carleson/ToMathlib/BoundedFiniteSupport.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u2074 : MeasurableSpace X\nf : X \u2192 E\ninst\u271d\u00b3 : TopologicalSpace E\ninst\u271d\u00b2 : ENorm E\ninst\u271d\u00b9 : Zero E\n\u03bc : Measure X\ninst\u271d : MeasurableSpace E\nbfs : BoundedFiniteSupport f \u03bc\n\u22a2 Measurable f",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/BoundedFiniteSupport.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-03-19T12:39:18+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "460cda378c202c78d0e03cc5cd25dea5a98c833356f0b9cac604cad9b5f2b37a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 78,
      "start_column": 2,
      "end_line": 78,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\nhf : LocallyIntegrable f \u03bc\n\u22a2 ContinuousOn (fun x => \u2a0d\u207b (y : X) in ball x.1 x.2, \u2016f y\u2016\u2091 \u2202\u03bc) (univ \u00d7\u02e2 Ioi 0)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6c8eb556e01381bb08b8af99a245eee870e0f1f66ff8221578ad7a9f1b9668bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 391,
      "start_column": 33,
      "end_line": 391,
      "end_column": 38,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u00b9\u00b9 : MetricSpace X\ninst\u271d\u00b9\u2070 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2079 : \u03bc.IsDoubling A\ninst\u271d\u2078 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2077 : BorelSpace X\ninst\u271d\u2076 : NormedSpace \u211d E\ninst\u271d\u2075 : MeasurableSpace E\ninst\u271d\u2074 : BorelSpace E\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\nh\ud835\udcd1 : \ud835\udcd1.Countable\nR : \u211d\nhR : \u2200 i \u2208 \ud835\udcd1, r i \u2264 R\np : \u211d\u22650\nhp : 1 < p\n\u22a2 \u2200 (f : X \u2192 E), MemLp f (\u2191p) \u03bc \u2192 \u2200\u1d50 (x : X) \u2202\u03bc, MB \u03bc \ud835\udcd1 c r f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L391"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-20T18:21:24+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c7869fae856813b3e3c4345c57328e4428ee5e902a62545df85d66e836284c27"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 451,
      "start_column": 2,
      "end_line": 451,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    eLpNorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191(C2_0_6 A p\u2081 p\u2082) * eLpNorm v (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L451"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "815e25d02c1768da1982f769158ae3560951060b22880e8619f49d3bbe5e85be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 456,
      "start_column": 2,
      "end_line": 456,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (MB \u03bc \ud835\udcd1 c r f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L456"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "05e80ff9860b703391208b2cda69077ae36243fad6875f39785f9e1e1e35295f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 469,
      "start_column": 2,
      "end_line": 469,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    wnorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191(A ^ 2) * eLpNorm v (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L469"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "a65bf16630d6e102b858d7756662a7ae8631d5ae8fbaaddb09e4ca4e92f402cb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 535,
      "start_column": 31,
      "end_line": 535,
      "end_column": 36,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 \u2200 (f : X \u2192 E),\n    MemLp f (\u2191p\u2082) \u03bc \u2192\n      \u2200\u1d50 (x : X) \u2202\u03bc, maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L535"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "36bc1c4731292dca07e7f25f06f9fd49b9ecbd53961545f124f8197f49a5e0bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 546,
      "start_column": 29,
      "end_line": 546,
      "end_column": 34,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\n\u22a2 \u2200 (f : X \u2192 E),\n    MemLp f (\u2191p\u2082) \u03bc \u2192\n      \u2200\u1d50 (x : X) \u2202\u03bc, maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/HardyLittlewood.lean#L546"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
    },
    "id": "cea385dac1d112850bc06971123e5c0fa2db07a903a7bfbc542d04ce324857e5"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 560,
      "start_column": 2,
      "end_line": 560,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u00b2 : \u03bc.IsDoubling A\ninst\u271d\u00b9 : NormedAddCommGroup E\nf : X \u2192 E\ninst\u271d : ProperSpace X\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (globalMaximalFunction \u03bc 1 f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L560"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-20T19:02:09+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a135885236f8f9812986da33746dc9973c1d95f6ba49bded65d807027401a0be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 618,
      "start_column": 2,
      "end_line": 618,
      "end_column": 7,
      "file": "Carleson/ToMathlib/WeakType.lean"
    },
    "debug_info": {
      "goal": "\u03b5 : Type u_3\ninst\u271d\u2075 : TopologicalSpace \u03b5\ninst\u271d\u2074 : ContinuousENorm \u03b5\n\ud835\udd5c : Type u_12\nE' : Type u_13\n\u03b1 : Type u_14\n\u03b1' : Type u_15\ninst\u271d\u00b3 : NormedAddCommGroup E'\n_x : MeasurableSpace \u03b1\n_x' : MeasurableSpace \u03b1'\nT : (\u03b1 \u2192 \u03b5) \u2192 \u03b1' \u2192 E'\np p' : \u211d\u22650\u221e\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\nc : \u211d\u22650\nh : HasWeakType T p p' \u03bc \u03bd c\ninst\u271d\u00b2 : NormedRing \ud835\udd5c\ninst\u271d\u00b9 : MulActionWithZero \ud835\udd5c E'\ninst\u271d : IsBoundedSMul \ud835\udd5c E'\nk : \ud835\udd5c\nf : \u03b1 \u2192 \u03b5\nhf : MemLp f p \u03bc\n\u22a2 wnorm ((k \u2022 T) f) p' \u03bd \u2264 \u2191(\u2016k\u2016\u208a * c) * eLpNorm f p \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/WeakType.lean#L618"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
    },
    "id": "688b3e0133f891911b1757ec0b89288ac24a5d49c47c3a0d8ac4b0762edbf08f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_4 a n) *\n        eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9a8e695223cd668091caf9069e8a3380828a4186c792edfeaa3281246711802a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_4 a n) *\n        eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "21e98d33c842da0b8a9dfa507c8c0a3b218b2a126cc0bd736f0e22d1dc343bac"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 255,
      "start_column": 2,
      "end_line": 255,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j : \u2115\nt : Forest X n\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhg : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm (\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f) 2 volume \u2264\n    \u2191(C7_7_2_1 a n) * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5ec26505c5d27a1809261c859101c4ca93a0703ed52561c1971d211a82b08b23"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 262,
      "start_column": 2,
      "end_line": 262,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j : \u2115\nt : Forest X n\nu : \ud835\udd13 X\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhf : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm ((\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, F.indicator) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f)) 2 volume \u2264\n    \u2191(C7_7_2_2 a n) * dens\u2082 (\u22c3 u \u2208 t, (fun x => t.\ud835\udd17 x) u) ^ 2\u207b\u00b9 * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "189f0b1e011dcc5f7972e95e055f27bd5655a2de5faff1d289fe40c78149ca6d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 276,
      "start_column": 2,
      "end_line": 276,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j j' : \u2115\nt : Forest X n\nf\u2081 f\u2082 : X \u2192 \u2102\nhjj' : j < j'\nhj' : j' < 2 ^ n\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nh3f\u2081 : \u2200 (x : X), \u2016f\u2081 x\u2016 \u2264 G.indicator 1 x\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\nh3f\u2082 : \u2200 (x : X), \u2016f\u2082 x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (x : X),\n          (\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2081 x) *\n            \u2211 u \u2208 {p | p \u2208 t.rowDecomp j'}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2082 x\u2016\u208a \u2264\n    \u2191(C7_7_3 a n) * eLpNorm f\u2081 2 volume * eLpNorm f\u2082 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9b07894f7d8ad30e35e87d859858543d5fc2574fc7497d546e08d9fdc540301f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 346,
      "start_column": 2,
      "end_line": 346,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\n\ud835\udd09 : Forest X n\nf g : X \u2192 \u2102\nhf : Measurable f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nh2g : Bornology.IsBounded (support g)\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 u \u2208 {p | p \u2208 \ud835\udd09}, carlesonSum ((fun x => \ud835\udd09.\ud835\udd17 x) u) f x\u2016\u208a \u2264\n    \u2191(C2_0_4 (\u2191a) q n) * dens\u2082 (\u22c3 u \u2208 \ud835\udd09, (fun x => \ud835\udd09.\ud835\udd17 x) u) ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume * eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L346"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6e86ac46e8b53c6748f5f525b75b04aa05b7d30bb539ceb386b3a703c7fe1d64"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7,
      "file": "Carleson/ForestOperator/RemainingTiles.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf : Bornology.IsBounded (range f)\nh2f : HasCompactSupport f\nh3f : AEStronglyMeasurable f volume\n\u22a2 eLpNorm (approxOnCube (t.\ud835\udcd9\u2086 u\u2081) fun x => \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016) 2 volume \u2264\n    \u2191(C7_6_2 a n) * eLpNorm ((\u2191(\ud835\udcd8 u\u2081)).indicator fun x => (MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "4d015f611f4aaf2a01974bcaff01986b9180ceeac03d5716da495e1d2717d512"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 385,
      "start_column": 2,
      "end_line": 385,
      "end_column": 7,
      "file": "Carleson/ForestOperator/RemainingTiles.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_6 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L385"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "8cb6159b07625d48c00c7d86fc540744d67a6e3e114eed79458f2bbb660a8e3e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1471,
      "start_column": 2,
      "end_line": 1471,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 t.\ud835\udcd9\u2085 u\u2081 u\u2082\nhf : BoundedCompactSupport f\n\u22a2 \u2191(\u2a06 x \u2208 ball (c J) (8 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016\u208a) \u2264\n    \u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J),\n      \u2191\u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f x\u2016\u208a + \u2191(C7_5_10 a) * \u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1471"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3e5af1872ae08407ee90e3eac0d1240ca0de39efcceedca0bf7b85f740c605a8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1489,
      "start_column": 2,
      "end_line": 1489,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 t.\ud835\udcd9\u2085 u\u2081 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 HolderOnWith\n    (C7_5_4 a *\n        ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) f\u2081 x\u2016\u208a) +\n          (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2081 x\u2016) x).toNNReal) *\n      ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f\u2082 x\u2016\u208a) +\n        (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2082 x\u2016) x).toNNReal))\n    nn\u03c4 (t.holderFunction u\u2081 u\u2082 f\u2081 f\u2082 J) (ball (c J) (8 * \u2191D ^ s J))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1489"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f74815f5814774759ce140182d237b651e2816c81d4a7c7717e673e78cd0d9c0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1590,
      "start_column": 2,
      "end_line": 1590,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_5 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/ForestOperator/LargeSeparation.lean#L1590"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "26e629ab562912a8106cd781ac490c4717fde3b0b5d65acc2036af727f39a87c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 343,
      "start_column": 83,
      "end_line": 343,
      "end_column": 88,
      "file": "Carleson/Antichain/AntichainTileCount.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\n\u22a2 \u2211 p \u2208 \ud835\udd04_aux \ud835\udd04 \u03d1 N, volume (E p \u2229 G) \u2264 \u2191(C_6_3_4 a N) * dens\u2081 \u2191\ud835\udd04 * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L343"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-11-16T17:32:56+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "adc132913be3022f3730af799610f485f01120cd7ab74a685fb71670fef79372"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 357,
      "start_column": 2,
      "end_line": 357,
      "end_column": 7,
      "file": "Carleson/Antichain/AntichainTileCount.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 \ud835\udd04' : Finset (\ud835\udd13 X)\nh_le : \ud835\udd04' \u2286 \ud835\udd04\n\u03d1 : \u0398 X\n\u22a2 eLpNorm\n      (\u2211 \ud835\udd2d \u2208 \ud835\udd04',\n        (1 + dist_{\ud835\udd20 \ud835\udd2d ,\u2191D ^ \ud835\udd30 \ud835\udd2d / 4} (\ud835\udcac \ud835\udd2d) \u03d1) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) \u2022 (E \ud835\udd2d).indicator 1 * G.indicator 1)\n      (\u2191(Antichain.p a)) volume \u2264\n    \u2191(C_6_1_6 a) * dens\u2081 \u2191\ud835\udd04 ^ (1 / \u2191(Antichain.p a)) * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p)) ^ (1 / \u2191(Antichain.p a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L357"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-28T18:13:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "06f3fc55faced5482011d84f9d1ae1d8acaf7f54de575585ad39e36918fc8c96"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 329,
      "start_column": 6,
      "end_line": 329,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2 = \u2191(3 * (2 * nnq / (nnq + 1)) - 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L329"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "8c1765e70683251fea028a23ac0b7340c8480c10ec4b5843d5d4d2fd814e4678"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 334,
      "start_column": 6,
      "end_line": 334,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) / (2 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "da54b74fccee08845a7f0951246a3ae63d24ea0c97c518704d24d356956d5b72"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 312,
      "start_column": 6,
      "end_line": 312,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "50248e80408268fca85717aa466c8a09571a3e7de3f6820511951d7dea65568f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 379,
      "start_column": 86,
      "end_line": 379,
      "end_column": 91,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\n\u22a2 (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L379"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a65910d5fb7f63889e11885ed3543e8ccf74f82360ccd62d73d8aac6d7d90403"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 385,
      "start_column": 4,
      "end_line": 385,
      "end_column": 9,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L385"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "e66468d344f740ee9c32dfd9cba7699cb20dedd7ce74cb44e72738ffa76b9016"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 420,
      "start_column": 6,
      "end_line": 420,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 p \u2208 \ud835\udd04, carlesonOn p f x\u2016\u208a \u2264\n    eLpNorm g 2 volume * eLpNorm (\u2211 p \u2208 \ud835\udd04, carlesonOn p f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L420"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "fdaac9a729117fda775fcc30f221a6df6b6bbe2d5ef259c2aafeef241aa53a1b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 434,
      "start_column": 8,
      "end_line": 434,
      "end_column": 13,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\nh2 : 2 ^ (107 * a ^ 3) = \u2191\u20162 ^ (107 * a ^ 3)\u2016\u208a\nz : X\n\u22a2 MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f z \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L434"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d4b881520eea376d1e741f6574d04f2f72ae4a9ea8529be360fb69f16e36b50f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 449,
      "start_column": 6,
      "end_line": 449,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    2 ^ (2 * a + 2) *\n      (\u2191(2 * nnq / (nnq + 1) - 1)\u207b\u00b9 * (dens\u2082 \u2191\ud835\udd04 ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L449"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "da5097657100e02172a7422229c556d28bf7428304eeb7d36a8e9a5fb237db93"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 511,
      "start_column": 51,
      "end_line": 511,
      "end_column": 56,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u208a \u2264\n    \u2191(C_2_0_3 \u2191a nnq) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/Antichain/AntichainOperator.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-01-09T16:08:11+01:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "4d02ec0de229e53442cd8d7d10fef21977c2bbb137a6e7a812b11e2cc537ad2d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 359,
      "start_column": 2,
      "end_line": 359,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a \u2264\n    \u2191(C_6_1_5 a) * (1 + dist_{\ud835\udd20 p' ,\u2191D ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p)) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) /\n        \u2191(volume.nnreal \u2191(\ud835\udcd8 p)) *\n      \u222b (y : X) in E p', \u2016g y\u2016 * \u222b (y : X) in E p, \u2016g y\u2016",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L359"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "edffe990c24946bdfd096d7d425b0c720841deb29ce19499d59cfc36be0645f7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "44ce6540a88da0802e894ee902ce4c82444ab5be883869d39a93054cd1579559"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 368,
      "start_column": 84,
      "end_line": 368,
      "end_column": 89,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0ae5a937f31822b7e0e1866f76c40b62dd3c1e5691225fb8795f24a418d1c197"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 121,
      "start_column": 2,
      "end_line": 121,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\nhx : dist x x' \u2264 r\n\u22a2 \u2191(nndist (czOperator K r g x) (czOperator K r g x')) \u2264 \u2191(C10_1_2 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d24c562a103f9d5c5263b1edb4991cdd2efb5914bdd754323a3ae5da4bb9bf3b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 131,
      "start_column": 2,
      "end_line": 131,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\nhx : dist x x' \u2264 R / 4\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    \u2016czOperator K r ((ball x (R / 2))\u1d9c.indicator g) x'\u2016\u2091 + \u2191(C10_1_3 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0b9032e3a8c6b06e3363eeb38edeeacd8b8b1e21bb113cbef55de9d6e6e08aad"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume {x' | x' \u2208 ball x (R / 4) \u2227 4 * globalMaximalFunction volume 1 (czOperator K r g) x < \u2016czOperator K r g x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "96ed4696e3ff93212edaa6857e86be54312e9e7c762e4b49b6aa69aa1dce032f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 153,
      "start_column": 2,
      "end_line": 153,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume\n      {x' |\n        x' \u2208 ball x (R / 4) \u2227\n          \u2191(C10_1_4 a) * globalMaximalFunction volume 1 g x < \u2016czOperator K r ((ball x (R / 2)).indicator g) x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L153"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "b4b1117d1cddd63c605a19612f286428bcde49fe93b21cdf6c8ef9aa261d48b2"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + \u2191(C10_1_5 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "4f535c614e2276213415136b01e0d556f2972cb9853994652b369b213132f397"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 175,
      "start_column": 2,
      "end_line": 175,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "10a0528a1cd1de6cd54bcfc5f41dc722d76f5229096d9dd69b0b3049dbdddbbb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 183,
      "start_column": 2,
      "end_line": 183,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "f0d5865f4327a57b55c4dd78ad977758ecd22d168459b7f309fbebddd35ff44b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 190,
      "start_column": 2,
      "end_line": 190,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2081 : \u211d\n\u22a2 Continuous fun R\u2082 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L190"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "0cb8ab414f4fae5a46c97491e27da5e532b8557bbcb82d7ecd79398c9517f44b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2082 : \u211d\n\u22a2 Continuous fun R\u2081 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "79798fe1e067378119b2470abc930f8f47c29dc8edf9c8ae2aa186e95802b96c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 nontangentialOperator K f x =\n    \u2a06 R\u2081, \u2a06 R\u2082, \u2a06 (_ : R\u2081 < R\u2082), \u2a06 x', \u2a06 (_ : dist x x' \u2264 R\u2081), \u2016\u222b (y : X) in ball x' R\u2082 \\ ball x' R\u2081, K x' y * f y\u2016\u2091",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f75932ec36b847e24e448f9f58942e52044d986e1e03bf721a6b45525dbcdf33"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 216,
      "start_column": 2,
      "end_line": 216,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume (C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume (C10_0_2 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "b295d887e2ebe1477bd0d8fe9b63eb5d7df204ff8de62209e1d2f1d9c97c01f1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/MainTheorem.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "55316ee7ff6bda7ee05ebd30d9336efbccd10baa858aaaf4189189bade66565c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 31,
      "end_line": 36,
      "end_column": 36,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nthis : C10_2_1 a = \u2191(defaultA a) ^ 4\n\u22a2 \u2200 (f : X \u2192 \u2102), MemLp f 1 volume \u2192 \u2200\u1d50 (x : X), globalMaximalFunction volume 1 f x \u2260 \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6ac2db58396b0d5a22eac364b7897d17af11ae2c24dd334ab114c859afb215d3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 50,
      "start_column": 2,
      "end_line": 50,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 \u2200\u1d50 (x : X),\n    \u2203 c r,\n      Tendsto (fun i => \u2a0d (y : X) in ball (c i) (r i), f y) atTop (\ud835\udcdd (f x)) \u2227\n        Tendsto r atTop (\ud835\udcdd[>] 0) \u2227 \u2200 (i : \u2115), x \u2208 ball (c i) (r i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6ab79ba19ffd9d83a9efd5388b98fc21700dbe0057fb2b8f629355096e42b702"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nO : Set X\nhO : IsOpen O \u2227 O \u2260 univ\n\u22a2 \u2203 c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) \u2227\n      \u22c3 i, ball (c i) (3 * r i) = O \u2227\n        (\u2200 (i : \u2115), \u00acDisjoint (ball (c i) (7 * r i)) O\u1d9c) \u2227\n          \u2200 x \u2208 O, Cardinal.mk \u2191{i | x \u2208 ball (c i) (3 * r i)} \u2264 \u2191(2 ^ (6 * a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "35d3cfe2ed3aedcece1c8d313be0fb81b531c0944b6610729384c0c547c840fc"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 82,
      "start_column": 2,
      "end_line": 82,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nh : \u00acGeneralCase f \u03b1\n\u22a2 volume univ < \u22a4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "76edf11015d2f4e455b520626d92be74d43df7b418716a280bb9c24a6e9b60c6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 IsOpen (globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1) \u2227 globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1 \u2260 univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d7951e9db5640cfd60b6d0161639c6ca82c9aa0645c59afcc612c840e7b8111"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 czBall3 hf hX i}.Finite",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "661be72b888469d048015fea1f8c9d57038fc53605017cf96a5dd937b7bdb83f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ni : \u2115\n\u22a2 czBall hf hX i \u2286 czPartition hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "ea0a98ee2716e72972242a884616109837af0f597078a6106827fd6620b58aef"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => czPartition hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "bc1271ca08a2e565e762e5fdcd27f56d20d2ce16d3fd506a42ff28e2ecff551e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 czPartition hf hX i\nhj : x \u2208 czPartition hf hX j\n\u22a2 i = j",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "bef8fe270fc7854e5072d5f060598b8e16f7ca0ca926c01bb2db901821d1d994"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 \u22c3 i, czPartition hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a4881259c4913b7a297f4e4f189fa8db9be67ed1a9577dadf4d8368a150619bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), czRemainder' hf hX i x = czRemainder hf \u03b1 x",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T17:21:05+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "e9485aa0ceb780aa7fd852f0848204116d95496da780b1c892b80daad0a10300"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 202,
      "start_column": 2,
      "end_line": 202,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (czApproximation hf \u03b1)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "8d0e7125c9131b2e2fd18f757ffeb3b3c78c2cf47e5fe55ade95ac2376652080"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c5fae2a6f3ed0f2133638fb2e7851a7a9d12cfb67471f4ed6314796db5417547"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "f99dc4074ffc88be450cc84023bdb9e6006f7291f13d937c1bd05a08030f7806"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czApproximation hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "92ca7c7a65aee32ce23b03e64882af6a75d379ffc8da735c4f0f852e0c9039d7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 230,
      "start_column": 2,
      "end_line": 230,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (czRemainder' hf hX i) \u2286 czBall3 hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "8cb9b98a34d7e4033311fb7ef06bedd0f504ad8eafd787b6fc9ba27c9ada6204"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 236,
      "start_column": 2,
      "end_line": 236,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), czRemainder' hf hX i x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "57e3d229379484c7daf59b8728f3b24972459d5a69756e708c2eeb1464f44016"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 241,
      "start_column": 2,
      "end_line": 241,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), czRemainder hf \u03b1 x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0859f73bf06334982076ba8ef93b00810fda286cd33540d19e049f703b659f06"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (czRemainder' hf hX i) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume (czBall3 hf hX i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c621919be3af7d0b02fef8b661d98ef314017303af4c879916217944935339bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 252,
      "start_column": 2,
      "end_line": 252,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L252"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "576e1bd794657e644ec7aca795dd3f3a9791a3aa8dd3bbd75d7bd022d8e842c0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (czBall3 hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a367981a94d8d52068531989a85ecbb5fa1d0efb88b129fdb2f928bd47517229"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 262,
      "start_column": 2,
      "end_line": 262,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "f4abb6415f63d2fdcc807fd089730c9aadbf2bc009b5b3a94c36fb1b826e62d3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 268,
      "start_column": 2,
      "end_line": 268,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (czRemainder' hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L268"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "33f6c66298c7e80eca6b4b4dc521d0bbea420eac7d881b7e14238a4e323f5989"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 274,
      "start_column": 2,
      "end_line": 274,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L274"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "98202fd18d17752300cdee85000ef432cbfd9f88595c7e0bb0a7e221625b2a9b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 292,
      "start_column": 2,
      "end_line": 292,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (czApproximation hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L292"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "01b926c6b7a70c907f205655a86e324866173858ca317c72a8647d1f4030b588"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 307,
      "start_column": 2,
      "end_line": 307,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (\u03a9 hf \u03b1)\u1d9c\nhX : GeneralCase f \u03b1\n\u22a2 \u2016czOperator K r (czRemainder hf \u03b1) x\u2016\u2091 \u2264 3 * czOperatorBound hf hX x + \u03b1 / 8",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L307"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a18a6174579adfc88f25bf9de4e93002f771db35b364318b5712401d66586e5e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 317,
      "start_column": 2,
      "end_line": 317,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 volume ((\u03a9 hf \u03b1)\u1d9c \u2229 czOperatorBound hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264 \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L317"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0dba88cfa78cb53fd805d5fa5edce059644a81b5090c9633861f73d9b0c92dfb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 328,
      "start_column": 2,
      "end_line": 328,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 distribution (czOperator K r (czRemainder hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L328"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c3655a201bc62093a5dabb7ad9fd9e981517d16735637f3b9bbf084f6cd3db19"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 344,
      "start_column": 2,
      "end_line": 344,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\n\u22a2 HasBoundedWeakType (czOperator K r) 1 1 volume volume (C10_0_3 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L344"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "84dd636a123b0d04f995de2b8db851c6dacdc0df4e39a318c0e5a5efb899f749"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 84,
      "start_column": 21,
      "end_line": 84,
      "end_column": 26,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\nc : \u2102\nx : GL (Fin 0) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)\n\u22a2 \u22a4.FG",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L84"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-01-18T16:24:18+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "9e387459881cd06e272e824be590ae23b8dbeea7f8a795b138793d41827a9361"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 128,
      "start_column": 19,
      "end_line": 128,
      "end_column": 24,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 IsSmooth fun x => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "82d1219a31ec6248c082e52254b9ea0e5469453722467bd455f48ca7e8bab7e5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 129,
      "start_column": 21,
      "end_line": 129,
      "end_column": 26,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (g : GL (Fin n) \u211a) (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)) (y : GL (Fin n) \u211d),\n    (fun x => z)\n        (((algebraMap \u211a (DedekindDomain.FiniteAdeleRing \u2124 \u211a)).GL (Fin n)) g * x, ((algebraMap \u211a \u211d).GL (Fin n)) g * y) =\n      (fun x => z) (x, y)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L129"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "6ca591f359cc5cfe62ef7ba54fe8a2445a82ffceb099ddc8af7ea10afd209a65"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 130,
      "start_column": 30,
      "end_line": 130,
      "end_column": 35,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)), IsSlowlyIncreasing fun y => (fun x => z) (x, y)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "acb487a3f803ef24437362c40783ccfc64dd3ed0312143596ae842f3acf31bb9"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 132,
      "start_column": 26,
      "end_line": 132,
      "end_column": 31,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2203 U, IsConstantOn U fun x => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:32:34+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "3e33fcaa7e39bed563d6e4aff873004a6260a2d06811154a0d3104466c513cba"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 131,
      "start_column": 23,
      "end_line": 131,
      "end_column": 28,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => (fun x => z) (x, y), \u22ef\u27e9))",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:29:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2d14df01adfe386a57e34463a79d0a34952873d53b218d69ae2cd9df1efbffbe"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 137,
      "start_column": 28,
      "end_line": 137,
      "end_column": 33,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\nz : \u2102\n\u22a2 \u03c1.IsTrivial",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L137"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "7308b79f890354ea9fd42f982e1334101ff8882e1e369f274cf2162ce59e77d1"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 138,
      "start_column": 14,
      "end_line": 138,
      "end_column": 19,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\n\u22a2 Function.LeftInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "acf4aa7f710e488628f0cc7f15a91896a6cbdb0ce427d958d0e340411919c730"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 139,
      "start_column": 15,
      "end_line": 139,
      "end_column": 20,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "\u03c1 : Weight 0\n\u22a2 Function.RightInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "313d43ba40c7115106eb34b2e8729d3f504d3a4cd15597114f845635c8d50803"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 67,
      "start_column": 87,
      "end_line": 67,
      "end_column": 92,
      "file": "FLT/HaarMeasure/MeasurableSpacePadics.lean"
    },
    "debug_info": {
      "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\ns : Set \u2124_[p]\n\u22a2 volume (Subtype.val '' s) = volume s",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/HaarMeasure/MeasurableSpacePadics.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4248b9ccf6199b196ebb612bb6ff5d1e4daf76992d0480cdfe62a068dbe79d3c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 324,
      "start_column": 93,
      "end_line": 324,
      "end_column": 98,
      "file": "FLT/Basic/Reductions.lean"
    },
    "debug_info": {
      "goal": "P : FreyPackage\n\u22a2 IsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L324"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-04-30T10:03:06+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2189ad07df84bb378d050a31805a1b39aa348c4bcc7fd1399b8309cbf8ec24dd"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 334,
      "start_column": 95,
      "end_line": 334,
      "end_column": 100,
      "file": "FLT/Basic/Reductions.lean"
    },
    "debug_info": {
      "goal": "P : FreyPackage\n\u22a2 \u00acIsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-04-30T10:03:06+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "410ec6dd9751afc45db92cf2f11470387a0ed41450c95a0d3be2793f315dda10"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 26,
      "end_line": 35,
      "end_column": 31,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\n\u22a2 \u2200 (x : E.n_torsion n), n \u2022 x = 0",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T22:55:14+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "aad435e98450cc8eda7ac39deb77c6ff11556d4d50eba3ab1e97c6debebb802c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 39,
      "start_column": 91,
      "end_line": 39,
      "end_column": 96,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\nhn : 0 < n\n\u22a2 Finite (E.n_torsion n)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "cb8a28cde12be451040d5770e1012634fd01b89b2ed581e35d36e870d0deca49"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 44,
      "start_column": 38,
      "end_line": 44,
      "end_column": 43,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 Nat.card (E.n_torsion n) = n ^ 2",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-03-23T17:52:39+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "55e067881a3bc4db5dd8fdc930d16748550c26f26f88575d27b1df7d31413933"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 49,
      "start_column": 66,
      "end_line": 49,
      "end_column": 71,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "d : \u2115\nA : Type u_1\ninst\u271d : AddCommGroup A\nn : \u2115\nhn : 0 < n\nr : \u2115\nh : \u2200 (d : \u2115), d \u2223 n \u2192 Nat.card \u21a5(Submodule.torsionBy \u2124 A \u2191d) = d ^ r\n\u22a2 \u2203 \u03c6, True",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-01T22:28:50+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "66701e276775a8dd04353eb1fd9883a918acb022aa8aefedce517788f5ae6950"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 55,
      "start_column": 56,
      "end_line": 55,
      "end_column": 61,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 \u2203 \u03c6, True",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L55"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-03-23T18:21:01+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "c796ca5dc0d4e3f5fe9881a7858514e417553f2de717e7690240cb4dc73fe01d"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 64,
      "start_column": 73,
      "end_line": 64,
      "end_column": 78,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u00b3 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b2 : E.IsElliptic\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : Algebra k K\n\u22a2 map E (AlgHom.id k K) = AddMonoidHom.id E\u27eeK\u27ef",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4fcf2fb55e3a98d5f1d6aa5a573795d7cef32383f7c213f3e1c13947a7ed6977"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 69,
      "start_column": 48,
      "end_line": 69,
      "end_column": 53,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst\u271d\u2077 : Field k\nE : WeierstrassCurve k\ninst\u271d\u2076 : E.IsElliptic\nK L M : Type u\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : Field L\ninst\u271d\u00b3 : Field M\ninst\u271d\u00b2 : Algebra k K\ninst\u271d\u00b9 : Algebra k L\ninst\u271d : Algebra k M\nf : K \u2192\u2090[k] L\ng : L \u2192\u2090[k] M\n\u22a2 (map E g).comp (map E f) = map E (g.comp f)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4f65649d399b1e7211a7f204454bf8b25786f4755c28d5124477820cdbd0fb32"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 307,
      "start_column": 28,
      "end_line": 307,
      "end_column": 33,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "x : QHat\n\u22a2 (\u2203 N z, IsCoprime N z \u2227 x = (1 / \u2191\u2191N) \u2297\u209c[\u2124] z) \u2227\n    \u2200 (N\u2081 N\u2082 : \u2115+) (z\u2081 z\u2082 : ZHat),\n      IsCoprime N\u2081 z\u2081 \u2227 IsCoprime N\u2082 z\u2082 \u2227 (1 / \u2191\u2191N\u2081) \u2297\u209c[\u2124] z\u2081 = (1 / \u2191\u2191N\u2082) \u2297\u209c[\u2124] z\u2082 \u2192 N\u2081 = N\u2082 \u2227 z\u2081 = z\u2082",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L307"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-06T01:01:13+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "575d2cf03b8e1b190f9460c549e6e9d5aebdd328d5045a25c142b9574e245895"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 472,
      "start_column": 66,
      "end_line": 472,
      "end_column": 71,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "\u22a2 unitsratsub \u2294 unitszHatsub = \u22a4",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L472"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-06T01:54:08+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d8ab1086af92400d1e0380d15a45467deea7fec9e374a5c825c96c069c3e31b3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1052,
      "start_column": 29,
      "end_line": 1052,
      "end_column": 34,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "\u22a2 Function.Injective \u21d1j\u2081",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1052"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "33b3f9cd03be709077d97d6ef55afbb006d2898a3b3672787c86ae7d431acfcb"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1059,
      "start_column": 29,
      "end_line": 1059,
      "end_column": 34,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "\u22a2 Function.Injective \u21d1j\u2082",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1059"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "548f6e54bb2a1566d16586c1aa7c3db3e24b4f98b4831cbf2392ed436a0339b1"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1063,
      "start_column": 2,
      "end_line": 1063,
      "end_column": 7,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "z : D^\n\u22a2 \u2203 N z', z = j\u2081 ((\u2191\u2191N)\u207b\u00b9 \u2297\u209c[\u2124] 1) * j\u2082 z'",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1063"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2787052271a8828db0e207fce679f14d06b8a668073ef9e75b1f74a474723eb3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1065,
      "start_column": 82,
      "end_line": 1065,
      "end_column": 87,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "z : D^\u02e3\n\u22a2 \u2203 u v, \u2191z = j\u2081 \u2191u * j\u2082 \u2191v",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1065"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "0189f8fb7c76b0126de4da39ec0923b904fae293f823025aa22d951c879d993b"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 172,
      "start_column": 2,
      "end_line": 172,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localFullLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L172"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "918aec9a99e7efdf6acae4f19f1ff000d0f0099f69f15b8ae1b316e1debcb987"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 176,
      "start_column": 2,
      "end_line": 176,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localFullLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L176"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "8e2146f4a30a231a6ec61953a7bcc51ec68dd4e083a7dd704cce2ca9124ba2d2"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 261,
      "start_column": 2,
      "end_line": 261,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localTameLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L261"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "99a782dc181aa18fb17525521ae429273904e3c9e4fb090c48c5041cc34f6c36"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localTameLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "248b4e4e5486e631159f9cea279a858ad0466f02199900a86296183031358d1f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 313,
      "start_column": 2,
      "end_line": 313,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 IsOpen (TameLevel S).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L313"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "6c7aa55333f8b9c8af3c3aefe47d0554f084198b4f6c91d4445d22955c00e61f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 316,
      "start_column": 2,
      "end_line": 316,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 IsCompact (TameLevel S).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L316"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d83950d603e9af205e68da765af229ff2154e74689a46b81a82e7d4ee37f189e"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 92,
      "start_column": 2,
      "end_line": 92,
      "end_column": 7,
      "file": "FLT/NumberField/Completion.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : Algebra K L\nv : InfinitePlace K\ninst\u271d : NumberField L\n\u22a2 Module.finrank v.Completion ((w : ExtensionPlace L v) \u2192 (\u2191w).Completion) =\n    Module.finrank v.Completion (L \u2297[K] v.Completion)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/Completion.lean#L92"
    },
    "metadata": {
      "blame_email_hash": "82b95686a14c",
      "blame_date": "2025-03-27T09:14:59+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "782b95147e01ec113f6da3ea5d044879f88d4007fb0204c9c9292fb3fce89924"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 26,
      "start_column": 2,
      "end_line": 26,
      "end_column": 7,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\n\u22a2 LocallyCompactSpace (AdeleRing (\ud835\udcde K) K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-12-02T00:05:18+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "b138b46a0b4c5fb6cdcb7311b498a989628285d1f315b824553507dd9747e4cb"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 73,
      "start_column": 2,
      "end_line": 73,
      "end_column": 7,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : NumberField L\ninst\u271d : Algebra K L\nl : L\n\u22a2 (baseChangeEquiv K L) (l \u2297\u209c[K] 1) = (algebraMap L (AdeleRing (\ud835\udcde L) L)) l",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-21T18:04:24+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "ca08523a05645c7a469b0c92a7d78139914b44d6921fc6fed5527c1b6165f122"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 289,
      "start_column": 2,
      "end_line": 289,
      "end_column": 7,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "\u22a2 CompactSpace (AdeleRing (\ud835\udcde \u211a) \u211a \u29f8 AdeleRing.principalSubgroup (\ud835\udcde \u211a) \u211a)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L289"
    },
    "metadata": {
      "blame_email_hash": "82b95686a14c",
      "blame_date": "2025-02-08T15:57:20+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a8e1eca51621562e4746e894e62391e5bcb7122f667f9165071496ee611a6f14"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 39,
      "start_column": 87,
      "end_line": 39,
      "end_column": 92,
      "file": "FLT/DivisionAlgebra/Finiteness.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : NumberField K\nD : Type u_2\ninst\u271d\u00b9 : DivisionRing D\ninst\u271d : Algebra K D\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde K) K) (D \u2297[K] FiniteAdeleRing (\ud835\udcde K) K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-09T16:34:07+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a742558194f888ebbac37922e95767e75bb780311206c816d1622563d7014e02"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 71,
      "start_column": 2,
      "end_line": 71,
      "end_column": 7,
      "file": "FLT/DivisionAlgebra/Finiteness.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : NumberField K\nD : Type u_2\ninst\u271d\u00b3 : DivisionRing D\ninst\u271d\u00b2 : Algebra K D\ninst\u271d\u00b9 : FiniteDimensional K D\ninst\u271d : Algebra.IsCentral K D\nU : Subgroup (Dfx K D)\nhU : IsOpen \u2191U\n\u22a2 Finite (Doset.Quotient (Set.range \u21d1(incl\u2081 K D)) \u2191U)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-10-18T18:57:02+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "1a8380d1447b935db0d1ad4785a60c3805b6767069dc936941198d22530f6cea"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 420,
      "start_column": 2,
      "end_line": 420,
      "end_column": 7,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\n\u22a2 Function.Bijective \u21d1(tensorAdicCompletionComapAlgHom A K L B v)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L420"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d59614c30f225289f5dc68ec7b021ad171d7c0860d47de2f0862a732e62e9e90"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 531,
      "start_column": 77,
      "end_line": 531,
      "end_column": 82,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 \u2203 S,\n    \u2200 v \u2209 S,\n      ((AlgHom.restrictScalars B (tensorAdicCompletionComapAlgHom A K L B v)).comp\n            (tensorAdicCompletionIntegersTo A K L B v)).range =\n        Subalgebra.pi Set.univ fun x => adicCompletionIntegersSubalgebra L \u2191x",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L531"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "285fac86127eaef84d7a8be7da5ff815b52b6acc28cfd9af039a473477dba02c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 684,
      "start_column": 4,
      "end_line": 684,
      "end_column": 9,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Function.Bijective \u21d1(baseChange A K L B).baseChange_of_algebraMap",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L684"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "93ea3a69f3f41ec84425f5c095279a6fb97c151f848b3fcf5161bad08cc0412f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 613,
      "start_column": 84,
      "end_line": 613,
      "end_column": 89,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChange A K L B) x).IsFiniteAdele",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L613"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-11-26T09:29:45+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "8f8520d9be73c10e7f377bd42e354d0a9d34242aa641e396e9e4d07ef2d48f64"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 621,
      "start_column": 2,
      "end_line": 621,
      "end_column": 7,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChangeEquiv A K L B) (1 \u2297\u209c[K] x)).IsFiniteAdele",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L621"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-11-26T09:29:45+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "e6e8ac5c2400d8826cf13ae192c9b32fe2cb894cd7dfe3a0ff81acac99fa7bd7"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 673,
      "start_column": 2,
      "end_line": 673,
      "end_column": 7,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 IsModuleTopology (FiniteAdeleRing A K) (FiniteAdeleRing B L)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L673"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "dab045ce4cb80848b486b7a8626887c53ac68f2f800ffa6f32e8c94a2cf93b46"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 689,
      "start_column": 22,
      "end_line": 689,
      "end_column": 27,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.toFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L689"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "7b1b679e889c62f5a98a5fc2c2e10604fcc43253e250c09a356cb22f6860dbf4"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 690,
      "start_column": 23,
      "end_line": 690,
      "end_column": 28,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.invFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a4a59ea585620cffd1aa9966388bb1b2b8495f30f5af7edd10c89b95c2972fec"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7,
      "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean"
    },
    "debug_info": {
      "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\nx : \u2124_[p]\ns : Submodule \u2124_[p] \u211a_[p]\n\u22a2 \u2191((x \u2022 s.toAddSubgroup).relindex s.toAddSubgroup) = \u2016x\u2016\u208a\u207b\u00b9",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "5dc4f2b0a450cca89e5a7ff72ad3bf79061e16dad7aea67468dad24672a44f43"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 25,
      "start_column": 69,
      "end_line": 25,
      "end_column": 74,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableInv G\n\u22a2 Measurable Inv.inv",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "b98d560670085a3ba260dbe34619c1b043c776f4f0df313a2f7c05b4c9b07660"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 32,
      "start_column": 28,
      "end_line": 32,
      "end_column": 33,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableMul G\nc : \u21a5H\n\u22a2 Measurable fun x => c * x",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2921651c760a6e7e8e29f855c99114c250cc1ac7f8eea546ca1d6f83d63bc615"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 37,
      "start_column": 28,
      "end_line": 37,
      "end_column": 33,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulLeftInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => g * x) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "107a8792b910065b42e216ff8e1445758550991b6dda03f6b33be351f711ae1d"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 42,
      "start_column": 29,
      "end_line": 42,
      "end_column": 34,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulRightInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => x * g) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "5b4b43ac80720372f1359ebd97893520b6afe1c0b62f0a5ed6c5876436a41253"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 169,
      "start_column": 2,
      "end_line": 169,
      "end_column": 7,
      "file": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\nM : Type u_3\ninst\u271d\u00b9\u00b2 : CommRing R\ninst\u271d\u00b9\u00b9 : TopologicalSpace R\ninst\u271d\u00b9\u2070 : IsTopologicalRing R\ninst\u271d\u2079 : CommRing S\ninst\u271d\u2078 : TopologicalSpace S\ninst\u271d\u2077 : IsTopologicalRing S\ninst\u271d\u2076 : Algebra R S\ninst\u271d\u2075 : Module.Finite R S\ninst\u271d\u2074 : IsModuleTopology R S\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\ninst\u271d\u00b9 : Module S M\ninst\u271d : IsScalarTower R S M\n\u22a2 moduleTopology R M = moduleTopology S M",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-30T11:02:34+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "f60d24236ef7b3ebc4273e895f4b413884192e0695143f47ed910a475dabe454"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 204,
      "start_column": 2,
      "end_line": 204,
      "end_column": 7,
      "file": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u2076 : CommRing R\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : IsTopologicalRing R\ninst\u271d\u00b3 : CommRing S\ninst\u271d\u00b2 : TopologicalSpace S\ninst\u271d\u00b9 : IsTopologicalRing S\ninst\u271d : Algebra R S\nhcont : Continuous \u21d1(algebraMap R S)\nhopen : IsOpenMap \u21d1(algebraMap R S)\n\u22a2 IsModuleTopology R S",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L204"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-30T11:02:34+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "54c98af769c9ca6879828e3ad7b55a94e4b5d02db766da1edf5f07c97bdc7b81"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 20,
      "start_column": 2,
      "end_line": 20,
      "end_column": 7,
      "file": "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u2076 : Field F\ninst\u271d\u2075 : NumberField F\ninst\u271d\u2074 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b3 : Ring D\ninst\u271d\u00b2 : Algebra F D\ninst\u271d\u00b9 : IsQuaternionAlgebra F D\nK : Type u_3\ninst\u271d : Field K\nU : Subgroup (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)\u02e3\n\u22a2 FiniteDimensional K (WeightTwoAutomorphicFormOfLevel U K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2f4c6b7472cd6724b1396e8d3fa00a413e50315f0cf763f1fa9a103e24e2af18"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u00b3 : Field F\ninst\u271d\u00b2 : NumberField F\nD : Type u_2\ninst\u271d\u00b9 : Ring D\ninst\u271d : Algebra F D\n\u22a2 (incl\u2082 F D).range \u2264 Subgroup.center (Dfx F D)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "de75557e0fe14dab1d7baca3364d1230e4b0dd856849bde1b66eef6dbb32d84a"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 178,
      "start_column": 2,
      "end_line": 178,
      "end_column": 7,
      "file": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean"
    },
    "debug_info": {
      "goal": "G : Type u_4\ninst\u271d\u00b2 : Group G\ninst\u271d\u00b9 : TopologicalSpace G\ninst\u271d : IsTopologicalGroup G\nU : Subgroup G\nhU : IsOpen \u2191U\ng : ConjAct G\n\u22a2 IsOpen \u2191(g \u2022 U)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L178"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "61effcac3c2120fde9211c249603d077ef88f3854416c72690411f22cadbd327"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/quote4",
      "branch": "stable",
      "commit": "0e05c2f090b7dd7a2f530bdc48a26b546f4837c7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 16,
      "start_column": 18,
      "end_line": 16,
      "end_column": 23,
      "file": "examples/introQ.lean"
    },
    "debug_info": {
      "goal": "\u00ab$P\u00bb : \u2200 {n : Nat}, n = 1\n$fst\u271d : Nat\n\u00ab$m\u00bb : $fst\u271d = 1\n\u22a2 $fst\u271d = 1",
      "url": "https://github.com/leanprover-community/quote4/blob/0e05c2f090b7dd7a2f530bdc48a26b546f4837c7/examples/introQ.lean#L16"
    },
    "metadata": {
      "blame_email_hash": "1c4ac4603b04",
      "blame_date": "2023-07-14T18:25:43-07:00",
      "inclusion_date": "2025-04-01T06:53:57.698796+00:00"
    },
    "id": "4a596dc45a099ab4825721aa3116636a61dedcf62aa39d13f71a9d0257939471"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "main",
      "commit": "be80d315472b4be039074799bb8f8d2267008d59",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 13,
      "end_line": 35,
      "end_column": 18,
      "file": "Duper/Tests/lastAsylum.lean"
    },
    "debug_info": {
      "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 \u2200 (x : Inhab), Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
      "url": "https://github.com/leanprover-community/duper/blob/be80d315472b4be039074799bb8f8d2267008d59/Duper/Tests/lastAsylum.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "d9c480704efb",
      "blame_date": "2022-08-01T22:37:02-04:00",
      "inclusion_date": "2025-04-14T00:03:48.811849+00:00"
    },
    "id": "bee6051abef24bb8379601ac4c14550fd2bfb89220f687fc6639b6a25055a5d6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "main",
      "commit": "be80d315472b4be039074799bb8f8d2267008d59",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 18,
      "start_column": 50,
      "end_line": 18,
      "end_column": 55,
      "file": "Duper/Tests/test_continuity.lean"
    },
    "debug_info": {
      "goal": "a : Real\n\u22a2 dist a a = zero",
      "url": "https://github.com/leanprover-community/duper/blob/be80d315472b4be039074799bb8f8d2267008d59/Duper/Tests/test_continuity.lean#L18"
    },
    "metadata": {
      "blame_email_hash": "4ac7eab8a488",
      "blame_date": "2023-06-05T10:39:00+02:00",
      "inclusion_date": "2025-04-14T00:03:48.811849+00:00"
    },
    "id": "3d8309fdefda8f14832723e5863416e32985777c93d8aaae80a8756078efacc8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "main",
      "commit": "be80d315472b4be039074799bb8f8d2267008d59",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 20,
      "start_column": 48,
      "end_line": 20,
      "end_column": 53,
      "file": "Duper/Tests/test_continuity.lean"
    },
    "debug_info": {
      "goal": "a : Real\n\u22a2 lt zero one",
      "url": "https://github.com/leanprover-community/duper/blob/be80d315472b4be039074799bb8f8d2267008d59/Duper/Tests/test_continuity.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "4ac7eab8a488",
      "blame_date": "2023-06-05T10:39:00+02:00",
      "inclusion_date": "2025-04-14T00:03:48.811849+00:00"
    },
    "id": "2dfaa40eaa5bf6600d4c3086d1926df6b22142e2ae9085ef75ad5246d284a4ee"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "79f6627a673be802093bc62062e992b69ce30481",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 64,
      "end_line": 37,
      "end_column": 69,
      "file": "BatteriesTest/lintsimp.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : \u03b1\u1d50\u1d52\u1d56\n\u22a2 SemiconjBy a.unop y.unop x.unop \u2194 SemiconjBy a x y",
      "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lintsimp.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "8a7dcd08b95f",
      "blame_date": "2022-12-18T15:51:52-05:00",
      "inclusion_date": "2025-04-16T23:19:16.308226+00:00"
    },
    "id": "aeb03ee38c9d3a0921aeb6f182892e12da9ff23301e7bc8bfb93fc2de341ca9c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "79f6627a673be802093bc62062e992b69ce30481",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 7,
      "start_column": 2,
      "end_line": 7,
      "end_column": 7,
      "file": "BatteriesTest/lintunused.lean"
    },
    "debug_info": {
      "goal": "h : 1 = 1\n\u22a2 True",
      "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lintunused.lean#L7"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-08T02:17:31+02:00",
      "inclusion_date": "2025-04-16T23:19:16.308226+00:00"
    },
    "id": "f2fea4f02a5ecc906ea64a11b1f6e47df53580ffdca86ce94e223d01afd9f998"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "79f6627a673be802093bc62062e992b69ce30481",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 23,
      "start_column": 2,
      "end_line": 24,
      "end_column": 5,
      "file": "BatteriesTest/lint_unreachableTactic.lean"
    },
    "debug_info": {
      "goal": "\u22a2 1 = 1",
      "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lint_unreachableTactic.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-26T11:27:15+01:00",
      "inclusion_date": "2025-04-16T23:19:16.308226+00:00"
    },
    "id": "99bfc793feb91446eb0b8a89860b3df11162e1fda75eead1e9c1f7b3425f5a95"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "79f6627a673be802093bc62062e992b69ce30481",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 33,
      "end_line": 31,
      "end_column": 38,
      "file": "BatteriesTest/lint_unreachableTactic.lean"
    },
    "debug_info": {
      "goal": "aa : Nat\n\u22a2 aa = 0 \u2192 t aa = 0",
      "url": "https://github.com/leanprover-community/batteries/blob/79f6627a673be802093bc62062e992b69ce30481/BatteriesTest/lint_unreachableTactic.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-26T11:27:15+01:00",
      "inclusion_date": "2025-04-16T23:19:16.308226+00:00"
    },
    "id": "28220b2fae807006a9e11860b22f99b4444315c6deba67bad714a5a37bbbac61"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.fst = q.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "c3229030ad831325954035a5f33f9029581a2092a6f0bac30408489ea8d45a80"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.snd = q.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "be79c28e3a06d6dd4228684903c0c50e5cd9b53fb4b76b9fdf6dec9370cad4cf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.fst = q.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "b569dd2ed098ab4ff9f2491ffb734b81b26283e69489b058fc4927802aa2ea7e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.fst = q.snd.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "fe29e2a6c3c87ab8d89b7a9b934bfa86db3ec7bb6397076079052344ce6b040e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.snd = q.snd.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "50daf915780aa645c8c851eba9520e52aa0d67bcc42c149286051ec97252df33"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "05ed17f87adcb422dd34101ef4fb78dbff79ffe1869435cd1df9dfa8f9838358"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 p.snd = q.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "a97d0f1ed7d8f285916ccdc7e6e5e33b530a05a54153a5ed2bbf71131f6ccfe5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 78,
      "start_column": 12,
      "end_line": 78,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "97cfb78db7fb078651e7fc5a3ba8030f92fcee370e92075555909c66277c008d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 78,
      "start_column": 12,
      "end_line": 78,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd.h.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b3\nx_1 : \u03b4\n\u22a2 p.snd x x_1 = q.snd x x_1",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "3894cd22be47604e5d2f5e116c6c82de4bae7a502bec2642655afe11325fbf42"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 103,
      "start_column": 12,
      "end_line": 103,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\n\u22a2 u = v",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L103"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-09-10T21:14:20+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "7c57f355a27694db1d671e93d37daeaef694c70087489db22c8e6ee6fdd504fc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 103,
      "start_column": 12,
      "end_line": 103,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\nu v : U\n\u22a2 u = v",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L103"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-09-10T21:14:20+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "f40601536a7fdf2e3b89401ddecea18ce3ed8c7a0b62ac2eafbae48eb95bbc5e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\nG : SimpleGraph \u03b1\na : \u03b1\nw : G.Walk a a\nhw : Odd w.length\n\u22a2 \u2203 b p, Odd (\u2191p).length",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "25fdbf9119c10267a1ced731e50b9ba098d3985ba25b47825bb6f45bb7804d42"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 57,
      "start_column": 2,
      "end_line": 57,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 a b, a \u2260 b \u2227 G.degree a = G.degree b",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "4dcb3979f1d3451795fd03941aab7b08c079e7cf5c6e6158fbfa28361e2399c2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 70,
      "start_column": 2,
      "end_line": 70,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "case intro\n\u03b1 : Type u_2\ninst\u271d\u00b9 : Finite \u03b1\ninst\u271d : Nontrivial \u03b1\nG : SimpleGraph \u03b1\nhG : G.Connected\nval\u271d : Fintype \u03b1\n\u22a2 \u2203 a, (\u22a4.deleteVerts {a}).coe.Connected",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2022-11-20T17:08:07+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "2d922f0301a73b9606a2ad7bc4bf58d62b65efc6f411d9ca4cd07e0d5b7809ea"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 83,
      "start_column": 2,
      "end_line": 83,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "case inr\n\u03b1 : Type u_2\ninst\u271d\u00b2 : Fintype \u03b1\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\nhG : G.IsAcyclic\nh\u271d : Nonempty \u03b1\n\u22a2 G.edgeFinset.card \u2264 card \u03b1 - 1",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2022-11-20T17:08:07+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "05fc14a7107bc2a4dc0b31d1315b4df4a49e29717693c0e64089fa781fb7eb6b"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 101,
      "start_column": 2,
      "end_line": 101,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, degreeSequence G = s",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "680daed1530eb1b28076021970671f7baa5799eb273e489382d72bbb0af00791"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type u_1\n\u03b1 : Type u_2\nG : SimpleGraph \u03b1\nhG : G.IsAcyclic\ns : Finset \u03b9\nf : \u03b9 \u2192 G.Subgraph\nhf : \u2200 i \u2208 s, (f i).coe.IsAcyclic\nh : \u2200 i \u2208 s, \u2200 j \u2208 s, f i \u2293 f j \u2260 \u22a5\n\u22a2 s.inf f \u2260 \u22a5",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "43bff8f6e9a6934bce9e350fd9d183b93afef314dbe594a145aa1c13ce5c752f"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 128,
      "start_column": 2,
      "end_line": 128,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), averageDegree G / 2 \u2264 \u2191(H.degree a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "c10f4e629a7af70458cbc2d600701e3c9d3b5e8e23f3e976577f992507f8fac4"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 145,
      "start_column": 2,
      "end_line": 145,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 (\u2203 \ud835\udc9c,\n      (\u2200 (p q : (a : \u03b1) \u00d7 G.Path a a), (\u2191p.snd).edges.Disjoint (\u2191q.snd).edges) \u2227\n        \u2200 (e : Sym2 \u03b1), \u2203 p \u2208 \ud835\udc9c, e \u2208 (\u2191p.snd).edges) \u2194\n    \u2200 (a : \u03b1), Even (G.degree a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "c1ba01d2950bde60c2ca96084427889ab3e8510830192229ceae8366ea21a1df"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : DecidableEq \u03b1\nn : \u2115\n\u22a2 (\u2203 G x k, G.IsRegularOfDegree k \u2227 G.cliqueNum = n) \u2194 n \u2264 card \u03b1 / 2 \u2228 n = card \u03b1",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "82f0ad876024f3dcea77ec08d5058156929e916e0fadf94f8621b1542423e6a2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 181,
      "start_column": 2,
      "end_line": 181,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227 (\u2200 a \u2208 u, Even #{ x // x \u2208 {b \u2208 u | G.Adj a b} }) \u2227 \u2200 a \u2208 v, Even #{ x // x \u2208 {b \u2208 v | G.Adj a b} }",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "1ce35102666e211a5af587dcd22e066c7b94ed9ab6a7b1ec0bc6aabd63e719fc"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : IsLatin f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 IsLatin f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "31401b062f241410078f84fcf5b8010325e9a20ee38677c6969f18ffa611c44a"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 214,
      "start_column": 2,
      "end_line": 214,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 #\u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "a46246aa76d65e7985648df42d85308873b4622fea0fe073075ac722f33bfed8"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : DecidableEq \u03b2\ninst\u271d\u00b2 : Countable \u03b1\ninst\u271d\u00b9 : Countable \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "440b29545eebc654bb401995f01530a7bfd7bc6585d626292373e7d9fc865762"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b9 : DecidableEq \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "2aa9935d0eaf0d7d88cbd715b6b083ccd3da3200a58fc14e900af0b6dea181a2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u221a\u2191(card \u03b1) \u2264 distortion f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "9c9a52842495ef87ae53652250dbfef836fb84f053c875856772b39da7e8dda8"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 252,
      "start_column": 2,
      "end_line": 252,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u2191(card \u03b1) \u2264 distortion f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "e5f39b1081cb76eb32ad3433bd1e40796b92a0463a64a363b426d09f79c745f8"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 46,
      "start_column": 75,
      "end_line": 46,
      "end_column": 80,
      "file": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : \u211d\u22650\n\u03bc : Measure \u03a9\nhG : IsBinomialRandomGraph G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-06T17:45:28+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "9fcd97f19f0a9e5b04c254d57c40d02f0c6d315abf34ea33fdd26b9130216432"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 117,
      "start_column": 8,
      "end_line": 117,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "f88ce3cee2cf1265c9aebb89976c8ef799adfe828d7e0d404a27c551cba93411"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 118,
      "start_column": 8,
      "end_line": 118,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "7814c50717234d2fc8a1a51ee6ffc2a5c1f68ca3fc3a5414ea0c33dfffd7720d"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 126,
      "start_column": 8,
      "end_line": 126,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "49e0e9ab6cd3040f29945eef674755204389851e27b76f9a4fea734372cf3ef2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 127,
      "start_column": 8,
      "end_line": 127,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "b49fc632ce73e0cbf81765bc232c9ce15ad5701430193ea2b77ff120f68932b2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 130,
      "start_column": 6,
      "end_line": 130,
      "end_column": 11,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "c977f12ab573d2bf4288c0d195d5ef0f00bbb293f361335b12728eb2072f1183"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 131,
      "start_column": 6,
      "end_line": 131,
      "end_column": 11,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "8108b272d7577346643d64f699aeba5c4777341aff081c39fb52f5d7c91e6117"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 132,
      "start_column": 11,
      "end_line": 132,
      "end_column": 16,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "60b20e9b98e51a9ab5eef982c7420f7cf26fae5a86ac29a3311622715727b1f6"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 0)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "84ffa206f442afa0bfe076dc9487193f4c1ce6b3895186ed88bee6b9568722a7"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 1)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "4dcbae0e8c6ed05b894b9d66d20bfd5ee13a0c298053d03c2213a5e81af2665c"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 97,
      "start_column": 72,
      "end_line": 97,
      "end_column": 77,
      "file": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * #(\ud835\udc9c \u25a1 \u212c) \u2264 #\ud835\udc9c * #\u212c",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-21T08:29:20+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "5321738c83049943c00a801468dc4afed74b08f2fb6d3acd6442c03efe7c1e9e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean"
    },
    "debug_info": {
      "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : #P.parts = (#s).choose (#s / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    #P.parts = (#(insert i s)).choose (#(insert i s) / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "6c714e6da4ee910b10e15048a33339057dbf13f1414fd143684a7b240003ec61"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 38,
      "start_column": 42,
      "end_line": 38,
      "end_column": 47,
      "file": "LeanCamCombi/StableCombi/Rel.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsStableRelWith n r\n\u22a2 IsTreeBoundedRelWith (2 ^ n + 1) r",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/StableCombi/Rel.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T20:50:42+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "49c201736af9c7d0691d6dda2d67e8e3f786f8e28bbff7d3b3b0c0ce2dce49fa"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 41,
      "start_column": 33,
      "end_line": 41,
      "end_column": 38,
      "file": "LeanCamCombi/StableCombi/Rel.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsTreeBoundedRelWith n r\n\u22a2 IsStableRelWith (2 ^ n) r",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/StableCombi/Rel.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T20:50:42+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "45a388f8ee855f05fe90ba468e0c0143e25d5b6ee177184fb3ab0d2822a399b3"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 25,
      "start_column": 60,
      "end_line": 25,
      "end_column": 65,
      "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191(#A) \u2264 \u2191(#({x \u2208 A ^ 4 | Commute \u03b3 x}))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "7d54d0294d46df4c8e041722baa7157ed0b628e730e3ef3ca563316001b2def2"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 30,
      "start_column": 30,
      "end_line": 30,
      "end_column": 35,
      "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
    },
    "debug_info": {
      "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set SL(2, \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, #F \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "b898cae49e31abcd478cbe05802f71e8aa1126d30aba6552acbfa7cbb8a0643b"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 41,
      "start_column": 69,
      "end_line": 41,
      "end_column": 74,
      "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
    },
    "debug_info": {
      "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(#(S ^ n)) \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "7fd7db1a407eb3b844fe329cfde9547f688a4879f84458cd175eee2854b11234"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 24,
      "start_column": 6,
      "end_line": 24,
      "end_column": 11,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(#(F i)) \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "95f9d27120a1497551c8e6a3cb3e3079ea29e205e02d4156f23954bc0a1ea82e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 42,
      "start_column": 64,
      "end_line": 42,
      "end_column": 69,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192 (\u2191(#A) / (2 * K) \u2264 \u2191(#((MulOpposite.op a\u271d)\u207b\u00b9 \u2022> A \u2229 A)) \u2194 \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 a\u271d \u2229 A)))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "b5ac6945f860a7d7323c31e8b95b4623d82a0ac9a647cc64710817a4a3aa3eef"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 59,
      "start_column": 4,
      "end_line": 59,
      "end_column": 9,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(S ^ 2)) \u2264 16 * K ^ 12 * \u2191(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "5911959bdce59bdd936164758bc8d549d54869db90e88d40c7635cae4b187ec9"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 60,
      "start_column": 4,
      "end_line": 60,
      "end_column": 9,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191(#A) / (2 * K) \u2264 \u2191(#(A \u2229 S ^ 2 <\u2022 a))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "6569898102cf4f996400e0639c0ed25ac9ef9ef52e6eb8247491d8666a03815c"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 45,
      "start_column": 22,
      "end_line": 45,
      "end_column": 27,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(#(A\u207b\u00b9 * A)) \u2264 K ^ 2 * \u2191(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "838701a55be6443279263c6c2aae6077db42797ba4f07a7e7c8b4c428eb77446"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 46,
      "start_column": 69,
      "end_line": 46,
      "end_column": 74,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\n\u22a2 \u2203 F \u2286 A, \u2191(#F) \u2264 2 * K \u2227 A \u2286 S * F",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "c81ed4b01203f8b0ddbc9fc1b0dfa1b8b30da3ac4f2275dae89bd9b65fde509f"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "build-docs-script",
      "commit": "f34031731e418665f8cccd25b253ef43b5eef1ee",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 29,
      "end_line": 54,
      "end_column": 34,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(A * S ^ 3 * A\u207b\u00b9)) \u2264 8 * K ^ 11 * \u2191(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/f34031731e418665f8cccd25b253ef43b5eef1ee/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-16T23:40:38.137858+00:00"
    },
    "id": "5b35093433f67a61a5a925078a1bc85dc98f18734bc021dd721e3f3b65bb3e32"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2275,
      "start_column": 61,
      "end_line": 2275,
      "end_column": 66,
      "file": "PrimeNumberTheoremAnd/Wiener.lean"
    },
    "debug_info": {
      "goal": "A x : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\nhx : 1 \u2264 x\n\u22a2 \u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x)) -\n      \u2191A * \u222b (u : \u211d) in Ici (-Real.log x), \ud835\udcd5 \u03c8.toFun (u / (2 * \u03c0)) =\n    \u222b (t : \u211d), G (1 + \u2191t * I) * \u03c8.toFun t * \u2191x ^ (\u2191t * I)",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Wiener.lean#L2275"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-04-04T12:17:01-07:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "1c3953b7aaa6343a6e35984faa060a34101027c3c35c4545e44e1886b41536ba"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2297,
      "start_column": 90,
      "end_line": 2297,
      "end_column": 95,
      "file": "PrimeNumberTheoremAnd/Wiener.lean"
    },
    "debug_info": {
      "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\n\u22a2 \u2203 B, \u2200 (x : \u211d), 0 < x \u2192 \u2016\u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x))\u2016 \u2264 B",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Wiener.lean#L2297"
    },
    "metadata": {
      "blame_email_hash": "4d01d7c10d46",
      "blame_date": "2024-04-16T02:15:35+02:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "29f483d9f2b002939cb76fe95536bb178dfdd91c0c6da1e9d8b7fa0158804838"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2315,
      "start_column": 2,
      "end_line": 2315,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Wiener.lean"
    },
    "debug_info": {
      "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\n\u22a2 cheby fun n => \u2191(f n)",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Wiener.lean#L2315"
    },
    "metadata": {
      "blame_email_hash": "4d01d7c10d46",
      "blame_date": "2024-04-16T02:15:35+02:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "3df4e211c50274858e140c0ef0fb9b94bba8230f820d80bbdcf8b75fec28f80a"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "5365476bb7e0988aaeb959174f4a06734f34bb6c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 328,
      "start_column": 2,
      "end_line": 328,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nCpos : 0 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), \u039b n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) - \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1\u039b)\u2016 \u2264 C * \u03b5 * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5365476bb7e0988aaeb959174f4a06734f34bb6c/PrimeNumberTheoremAnd/MediumPNT.lean#L328"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-03T23:00:27.846420+00:00"
    },
    "id": "16180e9bc2ea481f83a9f5e044ced3b87b8278a48af9a6d91569805a61faf6e1"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "5365476bb7e0988aaeb959174f4a06734f34bb6c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 319,
      "start_column": 23,
      "end_line": 319,
      "end_column": 28,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX : \u211d\nC : \u211d := sorry\n\u22a2 0 < C",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5365476bb7e0988aaeb959174f4a06734f34bb6c/PrimeNumberTheoremAnd/MediumPNT.lean#L319"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-14T14:09:55-05:00",
      "inclusion_date": "2025-04-03T23:00:27.846420+00:00"
    },
    "id": "e4cd836f68b87abd12d1bb72274170a0000a0b422f6cca8373d9eefaf090295f"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 399,
      "start_column": 2,
      "end_line": 399,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX \u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) volume",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-28T10:57:09-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "2d00d71173c85f7b81de53e9eff36a9f616d5a4c7589dcaa6dc85c6adb6aa594"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "5365476bb7e0988aaeb959174f4a06734f34bb6c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 399,
      "start_column": 2,
      "end_line": 399,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191\u03c0 * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) 2 (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) =\n    \ud835\udcdc (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X +\n      1 / (2 * \u2191\u03c0 * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I))",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/5365476bb7e0988aaeb959174f4a06734f34bb6c/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-10T12:59:29-05:00",
      "inclusion_date": "2025-04-03T23:00:27.846420+00:00"
    },
    "id": "31c65ced468f10fc3f00f36c27e5cb760072a684862c7c0e417029e696c5ac28"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 549,
      "start_column": 2,
      "end_line": 549,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\n\u22a2 \u2016(ChebyshevPsi - id) X\u2016 \u2264 C * \u2016X * rexp (-c * Real.log X ^ (1 / 10))\u2016",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L549"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "2b6d4c6a50d75be84d0e4ee1648f8371c353d3a201f66a45781773ab9661f7e3"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 539,
      "start_column": 23,
      "end_line": 539,
      "end_column": 28,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "c : \u211d := sorry\n\u22a2 0 < c",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L539"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-14T15:25:09-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "6aaf1d8c94ab08329e25cba63011d7c4917d3a0c372a36204f3a64e0da754651"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1843,
      "start_column": 2,
      "end_line": 1843,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2203 c, (c =o[atTop] fun x => 1) \u2227 \u2200 (n : \u2115), \u2191(nth Nat.Prime n) = (1 + c n) * \u2191n * log \u2191n",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L1843"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "cf0c0572d8a2aa7b023174484ee12482794582af8a15b110ec16638bfe4c8f63"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2060,
      "start_column": 2,
      "end_line": 2060,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u2203 p, Nat.Prime p \u2227 x < \u2191p \u2227 \u2191p < (1 + \u03b5) * x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2060"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "aa68fa3afe499f43fcca9077c9feefa48b31ce57a66a8210b711e39be98cac89"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2161,
      "start_column": 81,
      "end_line": 2161,
      "end_column": 86,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u03bc n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2161"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "8dd91fa2d583f5ec6bef924a5d19b5b9e65c83843475c22de74d78c670a5ae81"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2197,
      "start_column": 2,
      "end_line": 2197,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, (-1) ^ \u03a9 n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2197"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "395c3b448b9d11db6c792b5af772294d66facafcda32f5d8b63950d3e14b3429"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2221,
      "start_column": 98,
      "end_line": 2221,
      "end_column": 103,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u2191(\u03bc n) / \u2191n) =o[atTop] fun x => 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/Consequences.lean#L2221"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "f10366c0e8a38c3384dee42ebe85249a5c0bc39bb10f4c47e58f230a000a0d2b"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 70,
      "start_column": 44,
      "end_line": 70,
      "end_column": 49,
      "file": "InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean"
    },
    "debug_info": {
      "goal": "K : Type u\ninst\u271d\u00b9 : Category.{v, u} K\ninst\u271d : InfinityCosmos K\nX Y X' Y' : K\nf : X \u21a0 Y\ng : X' \u21a0 Y'\n\u22a2 IsIsofibration (prod.map \u2191f \u2191g)",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "eaaeec08515d",
      "blame_date": "2024-12-03T11:33:30-05:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "76c8504fdd8e486111651526b1cea668d0f1e6f547032ca4ea7086750d71f6f2"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 133,
      "start_column": 50,
      "end_line": 133,
      "end_column": 55,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u22a2 SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "cfd3dc29049763dfb7ec03d093b090ff50e67fd456005bc3a48eb351e6a948c3"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 134,
      "start_column": 36,
      "end_line": 134,
      "end_column": 41,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u22a2 SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "c99a8d113bee64a70cf1bcbe629fa772aa7fbb91c729b58868bedda1057ee67d"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 135,
      "start_column": 36,
      "end_line": 135,
      "end_column": 41,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u03c4\u2082 : SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex\n\u22a2 SimplicialObject.\u03b4 A 3 \u03c4 = H\u2081.simplex",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "1528c409e6d9f4b249cb94a57aa78f1be7ddfed06270f1e227b9d44a90aa57c2"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 159,
      "start_column": 39,
      "end_line": 159,
      "end_column": 44,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf g : A _\u298b1\u298c\ninst\u271d : A.Quasicategory\n\u22a2 HomotopicL f g \u2194 HomotopicR f g",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L159"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-05T19:17:58+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "e249ec833ea90c2ddfe12e1930391d2504dbfc2f252d7d4181076bbdae672197"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 144,
      "start_column": 4,
      "end_line": 144,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Logic\ninst\u271d : L.QuasiNormal\n\u0393 : FormulaFinset \u2115\nh : Finset.conj \u0393 \u2208 L\n\u03c6 : Formula \u2115\nh\u03c6 : \u03c6 \u2208 \u0393\n\u22a2 \u03c6 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "c5258f811bdb8990e381525f91fc584e6cb3b4038502d5aeb75ae949e5a660f3"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 146,
      "start_column": 4,
      "end_line": 146,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "case mpr\nL : Logic\ninst\u271d : L.QuasiNormal\n\u0393 : FormulaFinset \u2115\nh : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 L\n\u22a2 Finset.conj \u0393 \u2208 L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "dda53ec29b1103f63934ec7e08f1fc466f776cddfb338f1434e28180443cb4bf"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 209,
      "start_column": 104,
      "end_line": 209,
      "end_column": 109,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2079 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2078 : L.DecidableEq\nT\u2080 T\u271d : Theory L\ninst\u271d\u2077 : T\u2080 \u2aaf T\u271d\ninst\u271d\u2076 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2075 : Nonempty M\ninst\u271d\u2074 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\u271d\ninst\u271d\u00b3 : \ud835\udd05.HBL\ninst\u271d\u00b2 : \ud835\udd05.Justified M\nA B : Modal.Formula \u2115\nT : Theory \u2112\u2092\u1d63\ninst\u271d\u00b9 : \ud835\udc0f\ud835\udc00 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 (\ud835\udc0f\ud835\udc00.standardDP T).Justified \u2115",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "b8820a4c9889e8e022e61aef8ecebe5e16ccf681866bbde93fe2f724ed9e175c"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 219,
      "start_column": 86,
      "end_line": 219,
      "end_column": 91,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "A : Modal.Formula \u2115\nh : \u25a1A \u2208 Logic.S\nf : Realization \u2112\u2092\u1d63\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, \ud835\udc0f\ud835\udc00 \u22a2!. \u03c3 \u2192 \u2115 \u22a7\u2098\u2080 \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-02T11:19:40+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "18f138ae18ab351667f062caf8c16ae0777df0e5485811ea46d9c7283c4d148b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 247,
      "start_column": 6,
      "end_line": 247,
      "end_column": 11,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "case hSound\nL : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\nh : A \u2208 Logic.S\nf : Realization L\n\u22a2 \u2200 {\u03c3 : Sentence L}, T \u22a2!. \u03c3 \u2192 M \u22a7\u2098\u2080 \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "14cb0ffdb4fd72cb29857360d735a756714be047f41508d11574a2f4ff5af3c8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 326,
      "start_column": 27,
      "end_line": 326,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : T\u2080 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret \ud835\udd05 B\n\u22a2 T\u2080.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L326"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "120a42e014cab0523fb7de3073411dd4250d7695a529d99a3f29445438fb4c63"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 339,
      "start_column": 61,
      "end_line": 339,
      "end_column": 66,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis : T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L339"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "9302abeca2fc455412c4e7fd0a618c79821702497ccc1e71686a2b9d83943d7f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 341,
      "start_column": 20,
      "end_line": 341,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis\u271d : T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A\nthis : M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00acM \u22a7\u2098\u2080 \u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L341"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "dff1e90350cbcf3332f10cbce3b9fa17e3f6ad3eb3e449f2fb49a3269c7abe7e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Carleson/LinearizedMetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "3dfb5cb6b310a05e71f8ab04822baf7038e7ca458e900e3ea3a118873ae6f925"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 443,
      "start_column": 55,
      "end_line": 443,
      "end_column": 60,
      "file": "Carleson/HolderVanDerCorput.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR : \u211d\u22650\nhR : 0 < R\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z \u2191R\nh2\u03d5 : iHolENorm \u03d5 z \u2191R < \u22a4\nf g : \u0398 X\n\u22a2 \u2191\u2016\u222b (x : X), cexp (I * (\u2191(f x) - \u2191(g x))) * \u03d5 x\u2016\u208a \u2264\n    \u2191(C2_0_5 \u2191a) * volume (ball z \u2191R) * iHolENorm \u03d5 z \u2191R * (1 + \u2191(nndist_{z ,\u2191R} f g)) ^ (2 * \u2191a ^ 2 + \u2191a ^ 3)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/HolderVanDerCorput.lean#L443"
    },
    "metadata": {
      "blame_email_hash": "4f0774fdf1b5",
      "blame_date": "2024-07-01T23:56:16+08:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1d019c5d4b2138efdb149a15b6c4d49735c43c43addb334f4bce8845432268a8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Carleson/MetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "fa42f2793513a76e639cd89fb0b256f0689665b97fd5d71ea672ea914d79501c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1598,
      "start_column": 2,
      "end_line": 1598,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2016\u222b (x : X),\n        adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n          (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u2091 \u2264\n    \u2191(C7_4_5 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1598"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "680ce4eddb77eea9d9020204336fe3b5341d6a2ff7516f54d1947d6afa1d1e60"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 499,
      "start_column": 51,
      "end_line": 499,
      "end_column": 56,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u2091 \u2264\n    \u2191(C_2_0_3 \u2191a nnq) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L499"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-01-09T16:08:11+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7bfdea9f30e10565b6dc8fc3168ed3461d57aca5edfbfe2b35d98acfb19e2a3c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/MainTheorem.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "f2f88b4c32ecc0ef187ca775dfbff34415214457612d1d89800c0465daf678ea"
  },
  {
    "repo": {
      "remote": "https://github.com/frenzymath/jixia",
      "branch": "main",
      "commit": "e1b95c8346bac7b29f013b69b1c72af5f6af812d",
      "lean_version": "v4.16.0"
    },
    "location": {
      "start_line": 82,
      "start_column": 55,
      "end_line": 82,
      "end_column": 60,
      "file": "Example.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u\n\u22a2 \u00acnone.IsSome",
      "url": "https://github.com/frenzymath/jixia/blob/e1b95c8346bac7b29f013b69b1c72af5f6af812d/Example.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "aa8cba96a488",
      "blame_date": "2024-06-20T19:17:07+08:00",
      "inclusion_date": "2025-04-03T02:33:25.143039+00:00"
    },
    "id": "c77248dcdd9f4fb3687cd11b8ed719222d5dde24011a279bd52e233d948ab4c1"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 60,
      "start_column": 2,
      "end_line": 60,
      "end_column": 7,
      "file": "LeanByExample/Attribute/Aesop.lean"
    },
    "debug_info": {
      "goal": "P : Prop\nhp : P\n\u22a2 MyAnd P P",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "9a3464a8a3704a49b2292a811715e854fc1a1287ea0a702edbd56d942da7a48e"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7,
      "file": "LeanByExample/Attribute/Aesop.lean"
    },
    "debug_info": {
      "goal": "\u22a2 NonEmpty (MyList.cons 1 MyList.nil)",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "1c30fc32ce15f669075451698d47ff13a411eeaeb7c51b6964ed5e274eeafc8f"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 107,
      "start_column": 2,
      "end_line": 107,
      "end_column": 7,
      "file": "LeanByExample/Attribute/Aesop.lean"
    },
    "debug_info": {
      "goal": "a b c d e : Nat\nh1 : a \u2264 b\nh2 : b \u2264 c\nh3 : c \u2264 d\nh4 : d \u2264 e\n\u22a2 a \u2264 e",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L107"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "6d2c3b7d4bcf5ccac594be3ea46f32f7f20d5aef868e6c6eace910f2a0097045"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 16,
      "start_column": 41,
      "end_line": 16,
      "end_column": 46,
      "file": "LeanByExample/Declarative/ProofWanted.lean"
    },
    "debug_info": {
      "goal": "n : Nat\n\u22a2 n + 0 = n",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Declarative/ProofWanted.lean#L16"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-06-19T23:24:32+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "e7484b8b8c96e92b312ed6bfd2f3ae436caea0a3b115e377e501d6e60857cfe7"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 12,
      "start_column": 2,
      "end_line": 12,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Sorry.lean"
    },
    "debug_info": {
      "goal": "\u22a2 FermatLastTheorem",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Sorry.lean#L12"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-01-08T13:38:12+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "c1a5136e850b138a20962c448ffd3c5e1cfdf7d06860186676464fba8bbbf968"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Ext.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u\na b : Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "a79fbc1f99b4e315596137033e19ea503dda427a7c0dce0aaa7b85b74fd76775"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 2,
      "end_line": 95,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Ext.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type\np q : Foo\nhx : p.x = q.x\nhy : p.y = q.y\n\u22a2 p = q",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "5f71aae7fe81842dbdfa9970601f6c62c5de0ff5b96d88d5fb78baef222d3b88"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 115,
      "start_column": 2,
      "end_line": 115,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Ring.lean"
    },
    "debug_info": {
      "goal": "m n : MyNat\n\u22a2 n * (n + m) = n * n + n * m",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ring.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-02-17T22:51:43+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "6ac5c29f24a3d2073f45d3561bcfa69e5449133c0a3b6e198de77518f3f9c971"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 73,
      "start_column": 4,
      "end_line": 73,
      "end_column": 9,
      "file": "LeanByExample/Tactic/Induction.lean"
    },
    "debug_info": {
      "goal": "case succ\nn m : \u2115\nih : m + n = 0 \u2192 m = 0 \u2227 n = 0\nh : m + 1 + n = 0\n\u22a2 False",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Induction.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-11-07T02:25:02+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "4073a2e11f09a3b4f06b8c8084495e26836cbcb4e795233322a7cd2114f983a8"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 133,
      "start_column": 6,
      "end_line": 133,
      "end_column": 11,
      "file": "LeanByExample/Tactic/Induction.lean"
    },
    "debug_info": {
      "goal": "n\u271d n : \u2115\n\u22a2 sum (n + 1) = \u2191(n + 1) * (\u2191(n + 1) + 1) / 2",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Induction.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-04-25T03:36:30+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "5c8c1665c596f5e7ae8f6116e6587169c97fe88c641a02ef6476d7e8223813ea"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 67,
      "start_column": 2,
      "end_line": 67,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Plausible.lean"
    },
    "debug_info": {
      "goal": "\u22a2 \u2200 (a b : MyNat), a = b",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Plausible.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-11-25T09:56:34+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "2923421152e5be64de021405d7350f597dee8d1e824b49847a8ac1aec39e67b6"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 262,
      "start_column": 105,
      "end_line": 262,
      "end_column": 110,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u00b9\u2070 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2079 : L.DecidableEq\nT\u2080 T\u271d : Theory L\ninst\u271d\u2078 : T\u2080 \u2aaf T\u271d\ninst\u271d\u2077 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2076 : Nonempty M\ninst\u271d\u2075 : Structure L M\ninst\u271d\u2074 : M \u22a7\u2098* T\u271d\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\u271d\ninst\u271d\u00b3 : \ud835\udd05.HBL\ninst\u271d\u00b2 : \ud835\udd05.Justified M\nA B : Modal.Formula \u2115\nT : Theory \u2112\u2092\u1d63\ninst\u271d\u00b9 : \ud835\udc0f\ud835\udc00 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, T \u22a2!. \u03c3 \u2194 \u2115 \u22a7\u2098\u2080 \u2191(\ud835\udc0f\ud835\udc00.standardDP T) \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T11:15:03+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "281bc26d3b1b574f84087a8e0af4b52ab8dad41d9e415b472ca5e30288168d47"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 378,
      "start_column": 27,
      "end_line": 378,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2074 : Nonempty M\ninst\u271d\u00b3 : Structure L M\ninst\u271d\u00b2 : M \u22a7\u2098* T\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : T\u2080 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret \ud835\udd05 B\n\u22a2 T\u2080.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L378"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "815da39e1f4ae2018ba3376dbcfc478597f566520ff058234a2607fcb58a784a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 393,
      "start_column": 20,
      "end_line": 393,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2074 : Nonempty M\ninst\u271d\u00b3 : Structure L M\ninst\u271d\u00b2 : M \u22a7\u2098* T\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis\u271d : M \u22a7\u2098* T\u2080\nthis : M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00acM \u22a7\u2098\u2080 \u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "bcba129cb76ab930cd07720444e2484f4cad12efe6794d3da0d66fd69e2c2819"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2452,
      "start_column": 2,
      "end_line": 2452,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/ZetaBounds.lean"
    },
    "debug_info": {
      "goal": "case h\nA : \u211d\nhA : A \u2208 Ioc 0 (1 / 2)\nh\u271d :\n  \u2203 C,\n    \u2203 (_ : 0 < C),\n      \u2200 (\u03c3 t : \u211d),\n        3 < |t| \u2192\n          \u03c3 \u2208 Ico (1 - A / Real.log |t| ^ 9) 1 \u2192 \u2016deriv \u03b6 (\u2191\u03c3 + \u2191t * I) / \u03b6 (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C * Real.log |t| ^ 9\nT : \u211d\nT_gt : 3 < T\n\u22a2 HolomorphicOn (fun s => deriv \u03b6 s / \u03b6 s) (Ioc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/ZetaBounds.lean#L2452"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-07T16:45:37-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "ff893eaaec46b69d8a2462e16a6c7dcd102c794c5b57ed51c4d58eadcac3abae"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 362,
      "start_column": 2,
      "end_line": 362,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L362"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "bd25bc916d585ad5539838dbc6d5171e3e2c975a9ac8bd87c129b78b3d666606"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 353,
      "start_column": 23,
      "end_line": 353,
      "end_column": 28,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX : \u211d\nC : \u211d := sorry\n\u22a2 3 < C",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L353"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-08T10:26:01-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "7cd7f714bb60d5fceb755f385d9fc4575549abc79bdfff0a0cd095a8765828dd"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 431,
      "start_column": 2,
      "end_line": 431,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) volume",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L431"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-07T17:04:05-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "3ec42e380be1018b541105196279d6fa12aca71336e2f1701cda98424bc2d9f9"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 437,
      "start_column": 2,
      "end_line": 437,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191\u03c0 * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (1 + (Real.log X)\u207b\u00b9) (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) =\n    1 / (2 * \u2191\u03c0 * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) +\n      \ud835\udcdc (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L437"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-10T12:59:29-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "ecd44a7a707ebebc71b1e4682d85c9e61e62d794d9e09df4485d21bdfaf279c9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "8dd6f415d456277d098fea761f015a635c09769e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25135 \u2208 \u2191ys then ?m.25164 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
    },
    "id": "f81b74aae3103e71f48752698c13e903a86def12b61579cde195e801f908775f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "8dd6f415d456277d098fea761f015a635c09769e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25135 \u2208 \u2191ys then ?m.25164 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
    },
    "id": "747528909d823ad66c5be55364bd463d8d47429fefedb47c7d201864a676e9d6"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 37,
      "start_column": 50,
      "end_line": 37,
      "end_column": 55,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\n\u03c3 : Sentence L\n\u22a2 (\ud835\udd05^[n + 1])/[\u231c\u03c3\u231d] = \u2191\ud835\udd05 ((\ud835\udd05^[n])/[\u231c\u03c3\u231d])",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T09:21:39+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "6dcb0d6b1dacb386ec78231da3a1460d503041b76010a501338b8e79288c95ba"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 179,
      "start_column": 2,
      "end_line": 179,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T U : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\n\u22a2 WellFounded fun a b => a < b \u2227 a \u2208 provabilityHeightSet U \ud835\udd05 \u2227 b \u2208 provabilityHeightSet U \ud835\udd05",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L179"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "c0a7740449e84840c053ef6013b2f860ab0f97fb569841faf7e442806bc0d69a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 189,
      "start_column": 4,
      "end_line": 189,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T U : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\n\u22a2 (provabilityHeightSet U \ud835\udd05).Nonempty \u2192 provabilityHeight U \ud835\udd05 \u2260 0",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L189"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "f0a04e7a5a29ab70dd975a193b8284e3d114a3284a4fc7bddbf9d0f5b0796fa9"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 217,
      "start_column": 4,
      "end_line": 217,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\nh : Theory.provabilityHeight T \ud835\udd05 = \u2191n\n\u22a2 \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GLBB n",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L217"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "3f93f32d684a3cce34eaa0404e2cedd284f19677a3b468d55a932a5e2fbd01d5"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 219,
      "start_column": 4,
      "end_line": 219,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mpr\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\nh : \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GLBB n\n\u22a2 Theory.provabilityHeight T \ud835\udd05 = \u2191n",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "8d3279d9fe07b8f6f4a9b57cee8a31c02646091d17f284e46d8381157e838840"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 227,
      "start_column": 4,
      "end_line": 227,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nh : Theory.provabilityHeight T \ud835\udd05 = 0\nthis : \u2200 (n : \u2115+), T \u22ac. (\ud835\udd05^[n])/[\u231c\u22a5\u231d]\n\u22a2 \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GL",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L227"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "218f14961eda369ebfcba1337b7a9bfd0e1c3b80692aab999af2fe184089d2ef"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Carleson/LinearizedMetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "46571c141c45661b939dbb755ff9dc42ab02217902ab23e25c5e0dd5ce4c3333"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Carleson/MetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7564bdd3b6d99f989b43bcf6f05d99a593eecc27bf75a45907f2fe2d60b714f4"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "r : \u211d\nhr : 0 < r\n\u22a2 HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts 4)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "8215191805f0a59d6d72345d9a51bf38c624746c20917526d6e49b2e7796071e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 469,
      "start_column": 2,
      "end_line": 469,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    wnorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191A ^ 2 * eLpNorm v (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L469"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "cdca701e71c81765753bb5eca58fe2c8541741e0de1f81e615706d3e2918dad9"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case a\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType\n      (fun u x =>\n        (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n      (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (\u2191A ^ 4) \u2194\n    MemLp ?convert_4 (\u2191p\u2082) \u03bc \u2192\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) \u03bc \u2227\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (\u2191p\u2082) \u03bc \u2264 \u2016A ^ 2\u2016\u2091 * \u2191A ^ 2 * eLpNorm ?convert_4 (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1b8ceb4a3627eb18cd924f0b5c8dac8101b0dc2757319bfd9d2b3f318a9a6769"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType sorry (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (\u2191A ^ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a14850251f9f3be49295603c5034136e361ae1afdf316c66d134e31e74728ccd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 329,
      "start_column": 6,
      "end_line": 329,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2 = \u2191(3 * (2 * nnq / (nnq + 1)) - 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L329"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1f49331d276e06d74ad989aa99269a948b369080bae089d711399bab04b4ea06"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 334,
      "start_column": 6,
      "end_line": 334,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) / (2 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))\u207b\u00b9)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c0532c467566b54cd19f2aa89de565551e24a98abf7879a8690de41dc4fd35d1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 312,
      "start_column": 6,
      "end_line": 312,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d934dafcedfd3ab16de4de2c207aa447b16a86db0d052b61a83f6c369ae37b1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume {x' | x' \u2208 ball x (R / 4) \u2227 4 * globalMaximalFunction volume 1 (czOperator K r g) x < \u2016czOperator K r g x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "aff385a33dcb5171acfabc1e9a315be577e30cf7e8ec55f92801061ec1f8489f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 153,
      "start_column": 2,
      "end_line": 153,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume\n      {x' |\n        x' \u2208 ball x (R / 4) \u2227\n          \u2191(C10_1_4 a) * globalMaximalFunction volume 1 g x < \u2016czOperator K r ((ball x (R / 2)).indicator g) x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L153"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a41be9b67abe3200e531b835f4dabcadd8423f68b675ccce8eb20ac618cd8527"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + \u2191(C10_1_5 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "919e5b39318e059741806ac04c912fb734c86c9a25ecb28d40c5d2fa9002dc94"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 175,
      "start_column": 2,
      "end_line": 175,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume \u2191(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c046998b5798fb0ba303d374d736df52a0c164a8b4a846d1a7eea7b9e9e1c296"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 183,
      "start_column": 2,
      "end_line": 183,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume \u2191(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9235b215f8a0b47574db3fa31bcb41fe27c1d4415b53c9211a3c754a7982b2c6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 190,
      "start_column": 2,
      "end_line": 190,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2081 : \u211d\n\u22a2 Continuous fun R\u2082 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L190"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "68043d4b83c3a985c85b1f715d566ec65d21702238dd0803230118ba162480b0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2082 : \u211d\n\u22a2 Continuous fun R\u2081 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f7669c8b9c084ac9b1e73bec44bb0c9f2d04bb0f516e79de96d0a42db13701bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 216,
      "start_column": 2,
      "end_line": 216,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume \u2191(C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume \u2191(C10_0_2 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9ef4ba451768e4c88e0b3a27fbe99fec4cae64d33e6b0d89a596a18001e4b6aa"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/MainTheorem.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "452ca98a69e0649b0cd0f73b1979bcc99e085da756a52f7b120126a834d248db"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 348,
      "start_column": 2,
      "end_line": 348,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\n\u22a2 HasBoundedWeakType (czOperator K r) 1 1 volume volume \u2191(C10_0_3 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L348"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "28c66ec2bcc65f61d744c44879e6c03962867d579c6338c765c99b572475a8a1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case a\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType\n      (fun u x =>\n        (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n      (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (A ^ 4) \u2194\n    MemLp ?convert_4 (\u2191p\u2082) \u03bc \u2192\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) \u03bc \u2227\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (\u2191p\u2082) \u03bc \u2264\n          \u2191(\u2016A ^ 2\u2016\u208a * A ^ 2) * eLpNorm ?convert_4 (\u2191p\u2082) \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "0d9aee127c8f347b0bb1e30e57bd700904d28c75c0ce542cb6e1e8c93cd8b977"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType sorry (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (A ^ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "ed26d0428aed69bbe7e40b125abb6bb124bc00c6fc837132db120f9d3007342c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-rigidification-refactor",
      "commit": "aa6d8c9e1d5f5b404fac024c800062d156669ef0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 213,
      "start_column": 87,
      "end_line": 213,
      "end_column": 92,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde F) F) (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/aa6d8c9e1d5f5b404fac024c800062d156669ef0/FLT/QuaternionAlgebra/NumberField.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T17:21:54+01:00",
      "inclusion_date": "2025-04-05T01:25:01.623280+00:00"
    },
    "id": "77d883852a3a57f13c9c67e2b2b4a11a04b867d157857bff82e2313ea837a85f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 66,
      "start_column": 2,
      "end_line": 66,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "M : Type u_3\nN : Type u_4\ninst\u271d\u00b3 : Monoid M\ninst\u271d\u00b2 : Monoid N\ninst\u271d\u00b9 : TopologicalSpace M\ninst\u271d : TopologicalSpace N\nf : M \u2192* N\nhf : IsOpenMap \u21d1f\n\u22a2 IsOpenMap fun u => { val := f \u2191u, inv := f \u2191u\u207b\u00b9, val_inv := \u22ef, inv_val := \u22ef }",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T09:45:19+01:00",
      "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
    },
    "id": "afd41ed70417ad4135fcbab1dfec134972d96099d85e20347bbe4ba85e6769d5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 82,
      "start_column": 2,
      "end_line": 82,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpenMap \u21d1(Units.map \u2191(HeightOneSpectrum.adicCompletionIntegers F v).subtype.mapMatrix)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T09:45:19+01:00",
      "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
    },
    "id": "be1cf925cb078da15ecb1bd227b47a63c3b7c6aa5cf8e03a733fc38ffd1e4c47"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 50,
      "start_column": 77,
      "end_line": 50,
      "end_column": 82,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "98735a10acb5a7bc5abf67cfa46478b3c359bf0d874a18624b81e3d09011393c"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 52,
      "start_column": 77,
      "end_line": 52,
      "end_column": 82,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "fee3a567bc7cda147b664bb160c06767e4b1e54d07160e5d1ed6250cf2efe99a"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 77,
      "end_line": 54,
      "end_column": 82,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "451fb0015c6418b9727b1aee983e4d8fbc52cc07f588aac5fd1254c79e4cb470"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 58,
      "start_column": 74,
      "end_line": 58,
      "end_column": 79,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "0381ab7073b4982159ac5623798bea6ea615a71bf007c9a54a9124baf57d9669"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 61,
      "start_column": 94,
      "end_line": 61,
      "end_column": 99,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "a1754d8ebf63b6090e9d889d468987275ebe12e78c5241969d575d4d138b7f52"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 64,
      "start_column": 60,
      "end_line": 64,
      "end_column": 65,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "42173fa706de4b468e991e3c9cc0fb7a25a22e64790e6cc5f3790bc6d33784c2"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 67,
      "start_column": 88,
      "end_line": 67,
      "end_column": 93,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "eed20aa9302fa53c3ee24795645044bcd19beff22e6a6cffb96c8c4289ca24ab"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 79,
      "start_column": 397,
      "end_line": 79,
      "end_column": 402,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b9 : MeasureableFinGroup G\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nT\u2081 T\u2082 T\u2083 : \u03a9 \u2192 G\nhsum : T\u2081 + T\u2082 + T\u2083 = 0\nn : \u2115\n\u03a9' : Fin n \u2192 Type u_3\nh\u03a9' : (i : Fin n) \u2192 MeasureSpace (\u03a9' i)\nY : (i : Fin n) \u2192 \u03a9' i \u2192 G\n\u03b1 : \u211d\nh\u03b1 : \u03b1 > 0\n\u22a2 \u2203 \u03a9'' h\u03a9'' U,\n    d[U # U] + \u03b1 * \u2211 i, d[Y i # U] \u2264 (2 + \u03b1 * \u2191n / 2) * (I[T\u2081 : T\u2082] + I[T\u2081 : T\u2083] + I[T\u2082 : T\u2083]) + \u03b1 * \u2211 i, d[Y i # T\u2082]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T13:32:08-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "589b6eb9ca9c451198965ef7ebbaa2ccd20c0c60114aa013cd464123662c01d0"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 82,
      "start_column": 27,
      "end_line": 82,
      "end_column": 32,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u22a2 multiTau p \u03a9 h\u03a9 X = 0",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-28T21:28:18-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "84f0778f7071126744e5c65437819cb64c2020cfacc9fcc47dd1b9643db7f788"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 89,
      "start_column": 54,
      "end_line": 89,
      "end_column": 59,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U \u2119 \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L89"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-28T21:28:18-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "affce0b8ad784ae4fb1eb28a54faf85650fdcc5be46728fc59806179c398bedc"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 102,
      "start_column": 64,
      "end_line": 102,
      "end_column": 69,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\nA : Set G\ninst\u271d : Finite \u2191A\nK : \u211d\nh\u2080A : A.Nonempty\nhA : \u2191(Nat.card \u2191(A + A)) \u2264 K * \u2191(Nat.card \u2191A)\n\u22a2 \u2203 H c,\n    \u2191(Nat.card \u2191c) \u2264 K ^ (64 * \u2191m ^ 3 + 2) * \u2191(Nat.card \u2191A) ^ (1 / 2) * \u2191(Nat.card \u21a5H) ^ (-1 / 2) \u2227\n      \u2191(Nat.card \u21a5H) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u2191A) \u2227\n        \u2191(Nat.card \u2191A) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u21a5H) \u2227 A \u2286 c + \u2191H",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2024-08-18T18:37:52+02:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "3085fe5ba6be89da3feb7a4eb697270268198ff4fcaccf59d4748e54b4cbdbdc"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 36,
      "start_column": 79,
      "end_line": 36,
      "end_column": 84,
      "file": "PFR/BoundingMutual.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' \u2119\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) \u2119 \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/BoundingMutual.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "1bbff35f827b226473c16ec439932d644591efee74849ae8e1338c81a2fe5eeb"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 527,
      "start_column": 2,
      "end_line": 527,
      "end_column": 7,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type u_1\nG : Type u_5\nm\u03a9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : IsProbabilityMeasure \u03bc\nI : Type u_8\ns t : Finset I\nhdisj : Disjoint s t\nhs : s.Nonempty\nht : t.Nonempty\nX : I \u2192 \u03a9 \u2192 G\nhX : \u2200 (i : I), Measurable (X i)\nhX' : \u2200 (i : I), FiniteRange (X i)\nh_indep : iIndepFun X \u03bc\nf : I \u2192 I\nhf : Finset.image f t \u2286 s\n\u22a2 H[\u2211 i \u2208 t, X i ; \u03bc] \u2264 H[\u2211 i \u2208 s, X i ; \u03bc] + \u2211 i \u2208 t, (H[X i - X (f i) ; \u03bc] - H[X (f i) ; \u03bc])",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L527"
    },
    "metadata": {
      "blame_email_hash": "6e8091041644",
      "blame_date": "2024-05-31T19:35:50+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "5d9c9e71b3d011a58367ab200edbd4389ca7807d30811a3006cf68b2abe21737"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 760,
      "start_column": 62,
      "end_line": 760,
      "end_column": 67,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 D[X ; fun x => h\u03a9] = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L760"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-22T09:31:46-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "53952a34d0aa5bb64a0888247bda3172fe2169cc81bf4d400733ade08457c553"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 857,
      "start_column": 105,
      "end_line": 857,
      "end_column": 110,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 (\u2211 j, \u2211 k, if j = k then 0 else d[X j # X k]) \u2264 \u2191m * (\u2191m - 1) * D[X ; h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L857"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "9de8ea8429dbd769777e03886a061a9d6d1fea2772386257a7abea2d694c9251"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 862,
      "start_column": 69,
      "end_line": 862,
      "end_column": 74,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 \u2211 j, d[X j # X j] \u2264 2 * \u2191m * D[X ; h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L862"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "02a6bfca12778b8d54058abf6a2be8276203ac786965e258b31668ea565b4848"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 868,
      "start_column": 108,
      "end_line": 868,
      "end_column": 113,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhidenT : \u2200 (j k : Fin m), IdentDistrib (X j) (X k) \u2119 \u2119\n\u22a2 \u2200 (i : Fin m), D[X ; h\u03a9] \u2264 \u2191m * d[X i # X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L868"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "48ea0753abd67fbe6fe270d0a60c2749648b01ff3c66fd725d932e1a3aeeeae7"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 873,
      "start_column": 82,
      "end_line": 873,
      "end_column": 87,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * D[X ; fun x => h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L873"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "c2520a606cf7e2d5f451db4e8ba0e272bcf4c9aa6a21d0424c7abe5524c58452"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 877,
      "start_column": 235,
      "end_line": 877,
      "end_column": 240,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhvanish : D[X ; h\u03a9] = 0\n\u22a2 \u2200 (i : Fin m), \u2203 H U, Measurable U \u2227 IsUniform (\u2191H) U \u2119 \u2227 d[X i # U] = 0",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L877"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "c52d6e6eb7a0dded9b209c517f5a02052305d773f48d73baaa445693f6829613"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1504,
      "start_column": 8,
      "end_line": 1504,
      "end_column": 13,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "case bc.h.e_11\nm : \u2115\nhm : m > 0\nG : Fin (m + 1) \u2192 Type u_8\nhG : (i : Fin (m + 1)) \u2192 MeasurableSpace (G i)\nhGs : \u2200 (i : Fin (m + 1)), MeasurableSingletonClass (G i)\nhGa : (i : Fin (m + 1)) \u2192 AddCommGroup (G i)\nhGcount : (i : Fin (m + 1)) \u2192 Fintype (G i)\n\u03c6 : (i : Fin m) \u2192 G i.succ \u2192+ G i.castSucc\n\u03c0 : (d : Fin (m + 1)) \u2192 G \u2191m \u2192+ G d\nh\u03c00 : \u03c0 0 = 0\nhcomp : \u2200 (i : Fin m), \u21d1(\u03c0 i.castSucc) = \u21d1(\u03c6 i) \u2218 \u21d1(\u03c0 i.succ)\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G \u2191m\nhX : \u2200 (i : Fin m), Measurable (X i)\nh_indep : iIndepFun X \u2119\nthis\u271d : IsProbabilityMeasure \u2119\nthis : NeZero m\nf : Fin m \u2192 \u211d :=\n  fun i => I[\u2211 i', X i' : fun \u03c9 i' => (\u03c0 i.succ) (X i' \u03c9)|\u27e8\u21d1(\u03c0 i.succ) \u2218 \u2211 i', X i', fun \u03c9 i' => (\u03c0 \u2191\u2191i) (X i' \u03c9)\u27e9]\nhf : \u2200 (i : Fin m), 0 \u2264 f i\nF : G 1 \u2192 G 1 \u00d7 (Fin m \u2192 G 0) := fun x => (x, fun x => 0)\nhF : Injective F\n\u22a2 HEq (fun x => (\u2211 x_1, (\u03c0 1) (X x_1 x), fun x => 0))\n    (\u27e8fun x => \u2211 x_1, (\u03c0 (Fin.succ 0)) (X x_1 x), fun \u03c9 i' => (\u03c0 \u21910) (X i' \u03c9)\u27e9)",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1504"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-14T04:44:11+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "7249c84cd6c3a75dd2d0ba153f332dc341ed72e13fe5478ca8df0d5bbf887cc9"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1518,
      "start_column": 54,
      "end_line": 1518,
      "end_column": 59,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    \u2211 j,\n          (D[fun i => X (i, j) ; fun x => h\u03a9] -\n            D[fun i => X (i, j) | fun i => \u2211 k \u2208 Finset.Ici j, X (i, k) ; fun x => h\u03a9]) +\n        D[fun i => X (i, \u2191m) ; fun x => h\u03a9] -\n      D[fun i => \u2211 j, X (i, j) ; fun x => h\u03a9]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1518"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "52a1721dbb8c0782862edb4930da8a40c05f7962f40ed2c64d0bf263ae0810ea"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 111,
      "end_line": 54,
      "end_column": 116,
      "file": "PFR/MultiTauFunctional.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 Continuous fun \u03bc => multiTau p (fun x => G) (fun i => MeasureSpace.mk \u2191(\u03bc i)) fun x => id",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T09:57:28-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "0c8f0ab87fd932f370996a1f8af2a028fe9d72d6d44d76818ccf2c803d381e05"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 57,
      "start_column": 222,
      "end_line": 57,
      "end_column": 227,
      "file": "PFR/MultiTauFunctional.lean"
    },
    "debug_info": {
      "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 \u2203 \u03a9 h\u03a9 X, multiTauMinimizes p \u03a9 h\u03a9 X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L57"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-08-18T19:14:43-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "046a4809402ab4f13c0d6b2294f7b92b3ade7aee4fc484f440dc900a17c4a088"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 79,
      "start_column": 43,
      "end_line": 79,
      "end_column": 48,
      "file": "Carleson/ToMathlib/ENorm.lean"
    },
    "debug_info": {
      "goal": "\u03b5 : Type u_9\n\u03b5' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace \u03b5\ninst\u271d\u00b2 : ContinuousENorm \u03b5\ninst\u271d\u00b9 : TopologicalSpace \u03b5'\ninst\u271d : ContinuousENorm \u03b5'\n\u03b1 : Type u_11\nm0 : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 \u03b5\ng : \u03b1 \u2192 \u03b5'\nc : \u211d\u22650\nh : \u2200\u1d50 (x : \u03b1) \u2202\u03bc, \u2016f x\u2016\u2091 \u2264 \u2191c * \u2016g x\u2016\u2091\np : \u211d\nhp : 0 < p\n\u22a2 eLpNorm' f p \u03bc \u2264 c \u2022 eLpNorm' g p \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-05T21:50:03+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "81c61f87d56a75a64a440ada9e33545c4d24b088778c74663b9d71ad5e93debf"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 83,
      "start_column": 90,
      "end_line": 83,
      "end_column": 95,
      "file": "Carleson/ToMathlib/ENorm.lean"
    },
    "debug_info": {
      "goal": "\u03b5 : Type u_9\n\u03b5' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace \u03b5\ninst\u271d\u00b2 : ContinuousENorm \u03b5\ninst\u271d\u00b9 : TopologicalSpace \u03b5'\ninst\u271d : ContinuousENorm \u03b5'\n\u03b1 : Type u_11\nm0 : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 \u03b5\ng : \u03b1 \u2192 \u03b5'\nc : \u211d\u22650\nh : \u2200\u1d50 (x : \u03b1) \u2202\u03bc, \u2016f x\u2016\u2091 \u2264 \u2191c * \u2016g x\u2016\u2091\n\u22a2 eLpNormEssSup f \u03bc \u2264 c \u2022 eLpNormEssSup g \u03bc",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-05T21:50:03+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "b845d5c723853d801ec19af37505f118126947084cb0f03384055585a5e985fe"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 533,
      "start_column": 2,
      "end_line": 533,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 HasStrongType\n    (fun u x =>\n      (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n    (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc \u2191(A ^ 2 * C2_0_6 A p\u2081 p\u2082)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/HardyLittlewood.lean#L533"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T23:13:58+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "61e81a0a60df1dee63473d6d592c13a9baa9ca1ca59d46690dab11a133343760"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 121,
      "start_column": 21,
      "end_line": 121,
      "end_column": 26,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 GL (Fin n) \u211a \u2192 GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 GL (Fin n) \u211d \u2192 z = z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "7104965d4fd8eeff3884bc6da037f0e14cc01966382f94d4298a2896447174ec"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 122,
      "start_column": 30,
      "end_line": 122,
      "end_column": 35,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 IsSlowlyIncreasing fun y => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "56d4a469ae49648e66a7c86fdc91bcd12296e4cf2f0bc90c6e0f56c5a4b0fe09"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 123,
      "start_column": 23,
      "end_line": 123,
      "end_column": 28,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => z, \u22ef\u27e9))",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L123"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:29:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "275a47fb62ec9d1334905a53daf10d5b0b1ad9e08c8373e7b7836effda52de65"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 690,
      "start_column": 22,
      "end_line": 690,
      "end_column": 27,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous (baseChangeAlgEquiv A K L B).toFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "fba969b0c1b7f96394ee4cef57111ab977ab330798b7c4eeed7c7753417432f5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 691,
      "start_column": 23,
      "end_line": 691,
      "end_column": 28,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous (baseChangeAlgEquiv A K L B).invFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L691"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "856bd9a2207cc21cc19cdf70843c95d8df860134913b418a70a3dbbbe24e05c1"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 251,
      "start_column": 57,
      "end_line": 251,
      "end_column": 62,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2076 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2075 : L.DecidableEq\nT\u2080 T : Theory \u2112\u2092\u1d63\ninst\u271d\u2074 : T\u2080 \u2aaf T\ninst\u271d\u00b3 : Diagonalization T\u2080\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b2 : \ud835\udd05.HBL\ninst\u271d\u00b9 : \u2115 \u22a7\u2098* T\ninst\u271d : \ud835\udd05.Justified \u2115\nA B : Modal.Formula \u2115\n\u22a2 Arith.SoundOn \ud835\udc08\ud835\udeba\u2081 (Arith.Hierarchy \ud835\udeb7 2)",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L251"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "561aea2f41ccdded4a549bba38c20c7aff4ca18aed7fa403980d371473caf511"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 253,
      "start_column": 81,
      "end_line": 253,
      "end_column": 86,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory \u2112\u2092\u1d63\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u2074 : \ud835\udd05.HBL\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\ninst\u271d\u00b2 : \ud835\udd05.Justified \u2115\nA B : Modal.Formula \u2115\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, T \u22a2!. \u03c3 \u2194 \u2115 \u22a7\u2098\u2080 \u2191(\ud835\udc08\ud835\udeba\u2081.standardDP T) \u03c3",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "258a7b918aeb06e842e71f2a126f95eb9e77b9b4822bcaaa065e40580452cc13"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 375,
      "start_column": 27,
      "end_line": 375,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\nthis\u271d : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080\u271d :=\n  SolovaySentence.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : \ud835\udc08\ud835\udeba\u2081 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B\n\u22a2 \ud835\udc08\ud835\udeba\u2081.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L375"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
    },
    "id": "d7a66edadb2d3aea140f4728c8b1dd14daaa81c197de56e13742652f79511831"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 393,
      "start_column": 20,
      "end_line": 393,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\nthis\u271d\u00b9 : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080\u271d :=\n  SolovaySentence.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nthis\u271d : \u2115 \u22a7\u2098* \ud835\udc08\ud835\udeba\u2081\nthis : \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00ac\u2115 \u22a7\u2098\u2080 \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\n\u22a2 \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
    },
    "id": "6f057b9e862a642dde34e8e6af4174370ecc50c1eac8f84693a55e360e8f3448"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-adele-refactor",
      "commit": "c5f85a01641c0135f6e95906e74b59461497f5cf",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 170,
      "start_column": 4,
      "end_line": 170,
      "end_column": 9,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "case h.refine_1.ht\nintegralAdeles : Set (FiniteAdeleRing (\ud835\udcde \u211a) \u211a) :=\n  {f |\n    \u2200 (v : IsDedekindDomain.HeightOneSpectrum (\ud835\udcde \u211a)),\n      f v \u2208 IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers \u211a v}\n\u22a2 IsOpen integralAdeles",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/c5f85a01641c0135f6e95906e74b59461497f5cf/FLT/NumberField/AdeleRing.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-06T18:09:43+01:00",
      "inclusion_date": "2025-04-14T23:44:51.413177+00:00"
    },
    "id": "7ff98dbd552c3feaca88b99da397b1db5fd47b3a853e70778b49ce125fcec19d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "RD_erealStieltjes",
      "commit": "d2f1f177e8408f47342c6a02c9fcc745d21dcf3d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1226,
      "start_column": 2,
      "end_line": 1226,
      "end_column": 7,
      "file": "Mathlib/MeasureTheory/Measure/ERealStieltjes.lean"
    },
    "debug_info": {
      "goal": "f : ERealStieltjes\n\u22a2 SFinite f.measure",
      "url": "https://github.com/leanprover-community/mathlib4/blob/d2f1f177e8408f47342c6a02c9fcc745d21dcf3d/Mathlib/MeasureTheory/Measure/ERealStieltjes.lean#L1226"
    },
    "metadata": {
      "blame_email_hash": "d765cd676b3d",
      "blame_date": "2025-04-09T09:41:05+02:00",
      "inclusion_date": "2025-04-09T23:09:10.124596+00:00"
    },
    "id": "1179c281c69582647601ca4de1353620f50570af58f80f961882d8cb1e002d5f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 462,
      "start_column": 6,
      "end_line": 462,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q)) *\n          house\n            ((\u2191\u2191(finProdFinEquiv.symm.toFun t).1 + 1 + (\u2191\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * \u03b2') ^\n              \u2191(finProdFinEquiv.symm.toFun u).2) *\n        house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264\n    house (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q)) *\n          house ((\u2191a + \u2191b * \u03b2') ^ k) *\n        house (\u03b1' ^ (a * l)) *\n      house (\u03b3' ^ (b * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L462"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "c18faff69f09228240341a2dcf4a17551a1c4190ad8e2ea1a2c6292ed81f9c7e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 466,
      "start_column": 6,
      "end_line": 466,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 |\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q)| *\n          house\n            ((\u2191(\u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1) \u2022 \u03b2') ^\n              \u2191(finProdFinEquiv.symm.toFun u\u271d).2) *\n        house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1))) \u2264\n    let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n    let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n    let k := \u2191(finProdFinEquiv.symm.toFun u).2;\n    let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n    1 \u2294 |\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q)| * house ((\u2191a + b \u2022 \u03b2') ^ k) * house (\u03b1' ^ (a * l)) * house (\u03b3' ^ (b * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L466"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "0235c952ffd9324b86bbd044d68259fb50db3f23ebef366b68d89c91f535a097"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 480,
      "start_column": 4,
      "end_line": 480,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc.step\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 c\u2083 K \u03b1' \u03b2' \u03b3' q u t ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2) \u2264\n    c\u2083 K \u03b1' \u03b2' \u03b3' q u\u271d t\u271d ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9ede7cc59c6c010bd09ea5f1342aba8ee0d71f9ac6d21bb13430dff5204b9412"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 594,
      "start_column": 6,
      "end_line": 594,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case neg\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\n\u22a2 \u00ac\u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun i).2 + 1) \u2022 \u03b2 =\n      \u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun j).2 + 1) \u2022 \u03b2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L594"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ac77ca4b7191ceaf64dad19943fbe8a2ac751f23565a0cc09a4b395e5d34ebc3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 674,
      "start_column": 2,
      "end_line": 674,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhR : \u2211 t, \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) = 0\n\u22a2 ((fun t => \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t)) \u1d65* vandermonde fun t => \u03c1 \u03b1 \u03b2 q t) = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L674"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T00:24:25+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "921f85881b2e7bdf297989acac8cfcb3ae979d90b3495745d8e5c3704cda62fd"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 739,
      "start_column": 2,
      "end_line": 739,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case a.h.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nH : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x = 0\nHC\u271d : \u2200 (x : Fin (q * q)), \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u x hq0 x) = 0\nt : Fin (q * q)\nHC : \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0\n\u22a2 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t\u271d ?hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L739"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "722a7424ddc03322cb20178c049ff38d9c8490931c3894ad50038d94ba7d3eea"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 740,
      "start_column": 2,
      "end_line": 740,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hq0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nH : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t x = 0\nHC : \u2200 (x : Fin (q * q)), \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u x hq0 x) = 0\n\u22a2 0 < q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L740"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9c55146b3e4ea72bd5fa5060f7bb6c314730becd0dc8e9a325425c9d12b3983c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 779,
      "start_column": 2,
      "end_line": 779,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hR.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nk : Fin (q * q)\nl : Fin (m K)\nhl : \u2191l < n K q\nx : \u2102\nt : Fin (q * q)\nht : t \u2208 Finset.univ\nH :\n  R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 = 0 \u2192\n    (fun t => \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t)) = 0\nthis : A K \u03b1' \u03b2' \u03b3' q h2mq hq0 *\u1d65 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 = 0\n\u22a2 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L779"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:10:19+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "104be27b1167a4a721504ad8b5dc420ef85d3d106504f8e6906b60683ac99317"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 791,
      "start_column": 92,
      "end_line": 791,
      "end_column": 97,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 (Exists.choose \u22ef).order \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L791"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:29:48+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9e430d82ad2132edeac14be7f8eca6326db9146e44417146098a7e8f74e8e93b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 793,
      "start_column": 80,
      "end_line": 793,
      "end_column": 85,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L793"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "83102d5f7f548c91cc42030de1e8ae208b14107890047209b45754828c087d60"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 797,
      "start_column": 67,
      "end_line": 797,
      "end_column": 72,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nhq0 : 0 < q\nt : Fin (q * q)\n\u22a2 \u2203 l\u2080,\n    iteratedDeriv (r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n        (R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t) \u2191\u2191l\u2080 \u2260\n      0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L797"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "e7e8888fa6f6eb61e9dc68c3f523beb481e8196f4a62124e25d6813a600bfb23"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 822,
      "start_column": 2,
      "end_line": 822,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nthis : \u00ac\u22ef.choose = 0\nH : \u22ef.choose t = 0\n\u22a2 \u22ef.choose = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L822"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-01T02:10:10+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "29c9e004acac74b2369d248130afbbb37a1717d468bf0bae29ef8c77f8028ea9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1026,
      "start_column": 2,
      "end_line": 1026,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 IsIntegral \u2124\n    (c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022\n      (algebraMap (\ud835\udcde K) K) (\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1026"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8b1e888e8279cba1149b83df9362c290242be2102e5d71ae9edef4e505d4ec82"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 867,
      "start_column": 6,
      "end_line": 867,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L867"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "4d52e56c26a7aed30845bcbd3649a164e7d061272c2c607a84b5d381d5737d23"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 868,
      "start_column": 6,
      "end_line": 868,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.ha\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 0 < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L868"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5e8ce56e1c74a450e14dda6ce6f79ea84da7ac5c43e6ea9dbc22749e10e3722b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 869,
      "start_column": 6,
      "end_line": 869,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L869"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "6790cd97a655463d452f9cb9f35222e1d4ef1c416bf856132745c51729fb4058"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 870,
      "start_column": 4,
      "end_line": 870,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2016(Algebra.norm \u211a) \u03c1\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L870"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5b47b9529867a39550c94b62ca8d85854d866a4193ba6552fa50549e9ab10b3a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 897,
      "start_column": 4,
      "end_line": 897,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) \u2264\n    \u2191\u2191t * c\u2084 * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ n K q * c\u2087 ^ \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L897"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "55bf0e831868323ba86ff7bb6a4ed70b5a51a84c454ecc2cc0b059ff122032bf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 898,
      "start_column": 4,
      "end_line": 898,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191\u2191t * c\u2084 * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ n K q * c\u2087 ^ \u2191q \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L898"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "a4c334d81cdd8bea76f85afbbbc5daf9fa792c0a5ab84c0f1dc46926859d3c4e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 912,
      "start_column": 4,
      "end_line": 912,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  DifferentiableAt \u2102 S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L912"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "98d35623a629a18d8978bd9e5129c588e63eb5d552ad952e6655aeb03d2dea12"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 926,
      "start_column": 4,
      "end_line": 926,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hd\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 DifferentiableOn \u2102 (S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191(r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q)))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L926"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "b7dfe85e337c62782d81d9b7ced6d74fefa4787bb56c7aa07982a9b0dd5e99e3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 931,
      "start_column": 6,
      "end_line": 931,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 < m K",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L931"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "867c91750524d482a06f6d4be3135841e60840fa3d48d979a9a5b78a43278edb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1193,
      "start_column": 8,
      "end_line": 1193,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hb.intro.intro.intro\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhirr : \u2200 (i j : \u2124), \u03c3 \u03b2' \u2260 \u2191i / \u2191j\nleft : \u03c3 \u03b1' \u2260 0\nright : \u03c3 \u03b1' \u2260 1\nright_1 : \u03c3 \u03b1' ^ \u03c3 \u03b2' = \u03c3 \u03b3'\nl\u2080 : \u2115 := _root_.l\u2080 K (\u03c3 \u03b1') (\u03c3 \u03b2') hirr \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0\nthis : _root_.l\u2080 K (\u03c3 \u03b1') (\u03c3 \u03b2') \u22ef \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0 < m K\n\u22a2 0 < r K (\u03c3 \u03b1') (\u03c3 \u03b2') \u22ef \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1193"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f4d80544d130781ab4fc62ddcc6abaed3a6f05a29e69b888e1688d260d840353"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 968,
      "start_column": 8,
      "end_line": 968,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 1 < 1 + \u2191r / \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L968"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "0e747424280355a68aac241a6e0c8109ddb5fcea76519a73aa4dd474c77749ce"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 972,
      "start_column": 4,
      "end_line": 972,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hc\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q)\n\u22a2 ContinuousWithinAt (_root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q))) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L972"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "7e62ba673e651ac51de0a7af0fd238c9de1fbcc620eb9edd65276f393ec4e887"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 979,
      "start_column": 4,
      "end_line": 979,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case intro\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nz : \u2102\nhzabs : \u2016z\u2016 < \u2191(m K) * (1 + \u2191r / \u2191q)\nhzneq : \u00acz = \u2191l\u2080\n\u22a2 DifferentiableAt \u2102 S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L979"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "e5a0e4111ac070844d418d361969508675a2e7d7d6df186ceefc6984483df674"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 963,
      "start_column": 29,
      "end_line": 963,
      "end_column": 34,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191l\u2080 < \u2191(m K)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L963"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5faf5f86e1806fdc46a8c70abbd7d33b3334389faa4e231dbd941afce81087a7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1010,
      "start_column": 4,
      "end_line": 1010,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u03c3 (rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) = Complex.log \u03b1 ^ (-\u2191r) * S \u2191l\u2080",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1010"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "2c86848954dd97fb7728c8540e7d30195a1c07a92cdbd4a7a91969fdf2a54b0f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1037,
      "start_column": 4,
      "end_line": 1037,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2016_root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t z\u2016 \u2264\n    \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1037"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "4e8e77040d99c3327083ad6f4a8e175b2ea2f6bedbac4a827587d57a63373a71"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1038,
      "start_column": 4,
      "end_line": 1038,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q)) \u2264\n    \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1038"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ed69a399692192c562277a3c8e38274d418ec21ee3f814ce7a52becf71817ab5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1039,
      "start_column": 4,
      "end_line": 1039,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1039"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1fbb30a28ae522eb300c1a7094d153db0d0af6d1573dbee84056ff458362c1ba"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1064,
      "start_column": 4,
      "end_line": 1064,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 \u2191(m K) * \u2191r / \u2191q = \u2191(m K) * (1 + \u2191r / \u2191q) - \u2191(m K)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1064"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ebcfe16a308e25788cab3c686cae35f7a2187a5c6eed3c1ad3c4106810dd2af1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1068,
      "start_column": 8,
      "end_line": 1068,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 l\u2080 < m K",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1068"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "cf97aa12a87229bcb00b80a9f5741ef6fb0e9820f48ca35fd23324b4ebc8bea3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1070,
      "start_column": 4,
      "end_line": 1070,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 \u2191(m K) * (1 + \u2191r / \u2191q) - \u2191(m K) \u2264 \u2016z\u2016 - \u2191l\u2080",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1070"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ac975c9beae6949194039d9e808495473906ff76589becdf222a5201a65be58e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1329,
      "start_column": 4,
      "end_line": 1329,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.hz\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1329"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "59e05b3dc741450705fba28231a57fd5560cb1c5a4d0eaff1d212abb0860b5cf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1330,
      "start_column": 4,
      "end_line": 1330,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 \u2016z - \u2191l\u2080\u2016 \u2264 \u2016z - k\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1330"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "0bf98d08c0cffde06e93cfd5e7c05c29be843989d7887a4322600e5d9039be36"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1345,
      "start_column": 41,
      "end_line": 1345,
      "end_column": 46,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q)) \u2192\n    \u2016(z - \u2191l\u2080) ^ (-\u2191r) * \u220f k \u2208 Finset.range (m K + 1) \\ {l\u2080}, ((\u2191l\u2080 - \u2191k) / (z - \u2191k)) ^ r\u2016 \u2264\n      c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1345"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a6bce69f636e0bef9ca1d2c3dbeefaa280160f83d07ee0f5049db46d2258955c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1128,
      "start_column": 2,
      "end_line": 1128,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 let R := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  \u2016S z\u2016 \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1128"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1214a1d0d21f20a6cee8d9b8a00f0a743b70a087b96b2224d2105ad2954712e3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1398,
      "start_column": 52,
      "end_line": 1398,
      "end_column": 57,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\n\u22a2 let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  \u03c3 \u03c1 = \u2191(2 * Real.pi)\u207b\u00b9 * \u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191l\u2080)\u207b\u00b9 * S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1398"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "538bc7c81c1f7ef2b9df699872e2a04126f4e0de069ee854f109e1aa508e37bb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1426,
      "start_column": 4,
      "end_line": 1426,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016(2 * Real.pi)\u207b\u00b9\u2016 * \u2016\u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191l\u2080)\u207b\u00b9 * S z\u2016 \u2264\n    \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1426"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b1b42d2a67fc3cef09e65f1400866e41dc1442e39e73d9b906796f554477de24"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1427,
      "start_column": 4,
      "end_line": 1427,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_4\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r) \u2264\n    c\u2081\u2083 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1427"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "49bbbf0cdd89c31d90eba4098e9d4b1588805da406a22b8d7c68f25c9782ac3c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1220,
      "start_column": 4,
      "end_line": 1220,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1220"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1d236988296720703db9e6a8c8ebd0a049f83d6aae0b2eb5062aeada0bf9c59a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1221,
      "start_column": 4,
      "end_line": 1221,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c\u2081\u2084 ^ r * \u2191r ^ (-\u2191r / 2 + 3 * \u2191(h K) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1221"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "dafff168f96d20962236891a8a4cc766e21c33ea6f14594a6388624d6438c85e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1460,
      "start_column": 2,
      "end_line": 1460,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h.right\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 \u2191(r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) ^\n      ((r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 - 3 * h K) / 2) \u2265\n    c\u2081\u2085 ^ r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1460"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3edb81b63e4b2932eb334f938aab8cc72abec5eb559ed8f8bd98041975a6d9f6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1246,
      "start_column": 4,
      "end_line": 1246,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) ^\n      (_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 / 2 - 3 * h K / 2) <\n    c\u2081\u2084 ^ r * c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1246"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "2dfb0de1ca23bd1b9aab32cf53cc50b316611b0ff82798934c9756709dba09c4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1480,
      "start_column": 2,
      "end_line": 1480,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.intro.intro.intro.intro.intro.intro\nK\u271d : Type\ninst\u271d\u00b9 : Field K\u271d\n\u03b1 \u03b2 : \u2102\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\n\u03c3\u271d : K\u271d \u2192+* \u2102\n\u03b1'\u271d \u03b2'\u271d \u03b3'\u271d : K\u271d\ninst\u271d : NumberField K\u271d\nq : \u2115\nu : Fin (m K\u271d * n K\u271d q)\nh\u03b3 : IsAlgebraic \u211a (\u03b1 ^ \u03b2)\nK : Type\nhK : Field K\nhNK : NumberField K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nha : \u03b1 = \u03c3 \u03b1'\nhb : \u03b2 = \u03c3 \u03b2'\nhc : \u03b1 ^ \u03b2 = \u03c3 \u03b3'\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "c26874e43979047d038540167cc6cf0f0808c5d5de18e89a12c26c7514223057"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "a5795764142a42265d7046750165aa183184fc94",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 685,
      "start_column": 2,
      "end_line": 685,
      "end_column": 7,
      "file": "Mathlib/Combinatorics/MyGraph/Basic.lean"
    },
    "debug_info": {
      "goal": "V : Type u\nG H : MyGraph V\nh : H \u2264 G\n\u22a2 G \\ (G \\ H) = H",
      "url": "https://github.com/leanprover-community/mathlib4/blob/a5795764142a42265d7046750165aa183184fc94/Mathlib/Combinatorics/MyGraph/Basic.lean#L685"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-09T23:24:48.994862+00:00"
    },
    "id": "0c1a4056a338c9060ee38e933527c2904aafab92e75d2c2eae5c0fc86ae26560"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1034,
      "start_column": 2,
      "end_line": 1034,
      "end_column": 7,
      "file": "Mathlib/Combinatorics/MyGraph/Basic.lean"
    },
    "debug_info": {
      "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\nh : Disjoint G (fromEdgeSet s)\ne : Sym2 V\nhe : e \u2208 G.edgeSet\nhf : e \u2208 s\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1034"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
    },
    "id": "46471fe2402bf29d56294f82728c19182e92c7d2dd858813536369af1d30af14"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1037,
      "start_column": 2,
      "end_line": 1037,
      "end_column": 7,
      "file": "Mathlib/Combinatorics/MyGraph/Basic.lean"
    },
    "debug_info": {
      "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\n\u22a2 Disjoint (fromEdgeSet s) G \u2194 Disjoint s G.edgeSet",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1037"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
    },
    "id": "45d30a90910e455b19093a1a0d1bc85c86b593011c423ff84b5f65bd0f9ab0cc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mans0954/bipolar-theorem",
      "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 65,
      "start_column": 2,
      "end_line": 65,
      "end_column": 7,
      "file": "Mathlib/Analysis/LocallyConvex/Bipolar.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\nE : Type u_2\nF : Type u_3\ninst\u271d\u2076 : RCLike \ud835\udd5c\ninst\u271d\u2075 : AddCommGroup E\ninst\u271d\u2074 : AddCommGroup F\ninst\u271d\u00b3 : Module \ud835\udd5c E\ninst\u271d\u00b2 : Module \ud835\udd5c F\nB : E \u2192\u2097[\ud835\udd5c] F \u2192\u2097[\ud835\udd5c] \ud835\udd5c\ninst\u271d\u00b9 : Module \u211d E\ninst\u271d : IsScalarTower \u211d \ud835\udd5c E\nf\u2081 : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c\n\u22a2 \u2203 a, (WeakBilin.eval B) a = f\u2081",
      "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L65"
    },
    "metadata": {
      "blame_email_hash": "b075c7797d16",
      "blame_date": "2025-04-09T08:31:51+01:00",
      "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
    },
    "id": "6fb6962af2f299b3e0f28708b03dab08b6d6bfadf361083ee2a93015c9a30da9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mans0954/bipolar-theorem",
      "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 102,
      "start_column": 4,
      "end_line": 102,
      "end_column": 9,
      "file": "Mathlib/Analysis/LocallyConvex/Bipolar.lean"
    },
    "debug_info": {
      "goal": "case a.intro.intro.intro\n\ud835\udd5c : Type u_1\nE : Type u_2\nF : Type u_3\ninst\u271d\u2077 : RCLike \ud835\udd5c\ninst\u271d\u2076 : AddCommGroup E\ninst\u271d\u2075 : AddCommGroup F\ninst\u271d\u2074 : Module \ud835\udd5c E\ninst\u271d\u00b3 : Module \ud835\udd5c F\ninst\u271d\u00b2 : Module \u211d E\ninst\u271d\u00b9 : IsScalarTower \u211d \ud835\udd5c E\nB : E \u2192\u2097[\ud835\udd5c] F \u2192\u2097[\ud835\udd5c] \ud835\udd5c\ns : Set E\ninst\u271d : Nonempty \u2191s\nh : B.Nondegenerate\nx : E\nhx : x \u2209 (closedAbsConvexHull \ud835\udd5c) s\nf : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c\nu : \u211d\nhf\u2081 : \u2200 a \u2208 (closedAbsConvexHull \ud835\udd5c) s, RCLike.re (f a) < u\nhf\u2082 : u < RCLike.re (f x)\ne3 : 0 < u\ng : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c := (1 / u) \u2022 f\nfg : g = (1 / u) \u2022 f\nhg\u2081 : \u2200 a \u2208 (closedAbsConvexHull \ud835\udd5c) s, RCLike.re (g a) < 1\n\u22a2 x \u2208 (B.flip.polar (B.polar s))\u1d9c",
      "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "b075c7797d16",
      "blame_date": "2025-04-09T08:31:51+01:00",
      "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
    },
    "id": "ed306d8ef427052daefa01ae9155736ec4e25bb70fee346f016285c260266d81"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.24977 \u2208 \u2191ys then ?m.25006 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
    },
    "id": "aaa1785e9906507f71d6fda052deb608b0e68f8c29a5702e5c749538052c200d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.24977 \u2208 \u2191ys then ?m.25006 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
    },
    "id": "92c4519c020b562fbd1913f0b0df29cc4ac6f33da9857d9d1bf7729825848dfc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo2020P3.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\nc : Fin (4 * n) \u2192 Fin n\nh : \u2200 (i : Fin n), #{j | c j = i} = 4\n\u22a2 \u2203 S, \u2211 i \u2208 S, (\u2191i + 1) = \u2211 i \u2208 S\u1d9c, (\u2191i + 1) \u2227 \u2200 (i : Fin n), #({j \u2208 S | c j = i}) = 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P3.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-04-08T13:09:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70eb82b882388275af62794a7d8761678aee0776c17f603eefa6183ecd229e75"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 379,
      "start_column": 27,
      "end_line": 379,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080 : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, r\u2081 \u22a7 \u03c6\nhA\u2082 : \u00acr\u2081 \u22a7 A\nthis\u271d\u00b9 : (M\u2081.extendRoot r\u2081).IsFiniteTree r\u2080\nthis\u271d : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080 :=\n  SolovaySentences.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (r\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acr\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : r\u2081 \u22a7 \u25a1B\nthis : \ud835\udc08\ud835\udeba\u2081 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B\n\u22a2 \ud835\udc08\ud835\udeba\u2081.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L379"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "0b6e09e771d72bdfa1de4fc09d3d2a5adacb06abd1b9f5a3905e63f3ca1ba35f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 397,
      "start_column": 20,
      "end_line": 397,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080 : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, r\u2081 \u22a7 \u03c6\nhA\u2082 : \u00acr\u2081 \u22a7 A\nthis\u271d\u00b2 : (M\u2081.extendRoot r\u2081).IsFiniteTree r\u2080\nthis\u271d\u00b9 : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080 :=\n  SolovaySentences.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (r\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acr\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nthis\u271d : \u2115 \u22a7\u2098* \ud835\udc08\ud835\udeba\u2081\nthis : \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00ac\u2115 \u22a7\u2098\u2080 \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\n\u22a2 \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L397"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "6175f8f733d259760ce20c2111278a5626f776ba0f081f606bcca07919386ced"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/04Exists.lean"
    },
    "debug_info": {
      "goal": "p q r : Prop\n\u22a2 p \u2192 q \u2192 r \u2194 p \u2227 q \u2192 r",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "bb36c9f0700cd368a28bc3e7c148ad8af786765657869345caab4c06078e390a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/04Exists.lean"
    },
    "debug_info": {
      "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : b \u2223 c\n\u22a2 a \u2223 c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:40:08+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6e8dfe06b5de9c65fc459c3eedfb7d0895dabb7829c32e99cf9f49f0ecdc77f9"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 99,
      "start_column": 2,
      "end_line": 99,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/04Exists.lean"
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u211d\nh : Surjective (g \u2218 f)\n\u22a2 Surjective g",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L99"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:40:08+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "cca57761aa32a28c1c157c04030d5dde73edea00e8cb654ba2760e7e8fe5890b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 (a + b) * (a - b) = a ^ 2 - b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "31a5c50bc8f96522862b4303c089fc16706625428b5e663bddbb981f9687ae54"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 70,
      "start_column": 2,
      "end_line": 70,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\n\u22a2 f ((a + b) ^ 2 - 2 * a * b) = f (a ^ 2 + b ^ 2)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "56045fc7a2a5f07e56b7af107ee02d0de6c29e0d3e5f026a4473b6ed402952ad"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 141,
      "start_column": 2,
      "end_line": 141,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = -b\nh' : b + c = 0\n\u22a2 b * (a - c) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c3bc2343a7911f11fa21469a80ed666c865ccadc6a53a52b0140a457d159a1a7"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\nh : b \u2264 a\n\u22a2 a + b \u2264 2 * a",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e57a5fef819badaadd91aa164b6b22187e1553dc5b482df2123cd7453bbca2c3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 220,
      "start_column": 2,
      "end_line": 220,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 f (-5) = f 5",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L220"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "2937a41edd3de8c752c6b129e657374667bef5ec7292903ef130c18946c5da79"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 317,
      "start_column": 2,
      "end_line": 317,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 even_fun (g \u2218 f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L317"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5e83520fe483aebbc15c3b371f4cea2e27fa9860485aba462a373e1da7f24b7f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 388,
      "start_column": 2,
      "end_line": 388,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f g : \u211d \u2192 \u211d\nhf : non_decreasing f\nhg : non_increasing g\n\u22a2 non_increasing (g \u2218 f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L388"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f91f8dba73adccc676d4a7383327b45a3aa87eb3990ccbef77c79aa72695de5e"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 422,
      "start_column": 2,
      "end_line": 422,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "x : \u211d\nX Y : Set \u211d\nhx : x \u2208 X\n\u22a2 x \u2208 X \u2229 Y \u222a X \\ Y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L422"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e0836a3038ac3eb1e90b7c1680a0f14eb150703de1c5e0c06c8a6e9604e3bb0f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 433,
      "start_column": 2,
      "end_line": 433,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f : \u211d \u2192 \u211d\nhf : Continuous f\nh2f : HasCompactSupport f\n\u22a2 \u2203 x, \u2200 (y : \u211d), f x \u2264 f y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L433"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "be8f295507469a3db48b45b6d922648ea0e9115a6e6ac5d8e6f5e956b52ed0f2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 475,
      "start_column": 2,
      "end_line": 475,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : a \u2223 c\n\u22a2 a \u2223 b + c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L475"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4d893776777622c144b4bd2d87dbb1eebd4ff1209029061640aa825847f29a90"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 570,
      "start_column": 2,
      "end_line": 570,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nw v : \u2115 \u2192 \u211d\nhu : seq_limit u l\nhw : seq_limit w l\nh : \u2200 (n : \u2115), u n \u2264 v n\nh' : \u2200 (n : \u2115), v n \u2264 w n\n\u22a2 seq_limit v l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L570"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ea2fa22461118eb86a0523e0e7523686172d7457abf6b58eaf01b8a0a9f03b9c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 585,
      "start_column": 2,
      "end_line": 585,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "case h\nu : \u2115 \u2192 \u211d\nl l' : \u211d\nhl : seq_limit u l\nhl' : seq_limit u l'\n\u22a2 \u2200 \u03b5 > 0, |l - l'| \u2264 \u03b5",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L585"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "0ad303d64e58d190162841b6aa8bd82c7ebb230771497f9800f0b4df2bbda801"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 628,
      "start_column": 2,
      "end_line": 628,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "\u03c6 : \u2115 \u2192 \u2115\n\u22a2 extraction \u03c6 \u2192 \u2200 (N N' : \u2115), \u2203 n \u2265 N', \u03c6 n \u2265 N",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L628"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "acc2a016c137284d9ca15d47d4a8a99b51f367fb5c2afa582db2266a934c2ead"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 639,
      "start_column": 2,
      "end_line": 639,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\na : \u211d\n\u22a2 cluster_point u a \u2192 \u2200 \u03b5 > 0, \u2200 (N : \u2115), \u2203 n \u2265 N, |u n - a| \u2264 \u03b5",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L639"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4e017b7c43c78766663bf5dda65f42b58bce962c75c8f9b55dd3c2d16801d84b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 646,
      "start_column": 2,
      "end_line": 646,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\n\u03c6 : \u2115 \u2192 \u2115\nh : seq_limit u l\nh\u03c6 : extraction \u03c6\n\u22a2 seq_limit (u \u2218 \u03c6) l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L646"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "1e49d681ba41e0e4a2ab26478663a210c8933e17f0fceca8fdbc866174cfece4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 651,
      "start_column": 2,
      "end_line": 651,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl a : \u211d\nhl : seq_limit u l\nha : cluster_point u a\n\u22a2 a = l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L651"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "891762023ca5d7a2e0fe80e3ebe9feb6afc28a23a15fb66a8405dcfce8a09110"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 660,
      "start_column": 2,
      "end_line": 660,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\n\u22a2 (\u2203 l, seq_limit u l) \u2192 CauchySequence u",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L660"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "25dff7d0235178f2ab9d996cd0a31220b3057d04bae4e4e39333b0ffe0063196"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\nha : 0 < a\nhb : 0 < b\n\u22a2 0 < a ^ 2 + b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "24474570a46cf4820ca87b3a80fcd08740f51144d4aba7d232428e6195744c0d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\n\u22a2 a + c \u2264 b + c \u2194 a \u2264 b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "02e06b673c1531e0bba24a3274762bf270601aa4bd8d8239502518445aa1c569"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\nhb : 0 \u2264 b\n\u22a2 a \u2264 a + b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e671b92c749db96f2ff31a0c49a1f444f275899fd5307c04ca753d3d754e847a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 a = b \u2194 b - a = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "af74a24efcbfbcc004a32e3704f1791eafc6abce3422852977f1ed47ad287397"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\n\u22a2 (a + b) ^ 2 = a ^ 2 + 2 * a * b + b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "de92c314abcf62e9ca5b1da7aecfbc50fcdbbaf5c170d264defa167c350e8d4b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nh : b = d + d\nh' : a = b + c\n\u22a2 a + b = c + 4 * d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:38:53+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d74d3bfe1bcfd98b943fb8f5f517a9c405633b2bc2fbf38b0f1a7b75e1b080d2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 120,
      "start_column": 2,
      "end_line": 120,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\n\u22a2 exp (a + b - c) = exp a * exp b / (exp c * exp 0)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L120"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c1431370423f1eae606d3620bb9fda39696eaa3d4d01d6f1b14a1058becf212b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 144,
      "start_column": 2,
      "end_line": 144,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nh : a = b + b\nh' : b = c\nh'' : a = d\n\u22a2 b + c = d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d5a17e9d265fc341d06b520ee0dd71b387a71dd165430c3375e7124dae627d65"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 186,
      "start_column": 58,
      "end_line": 186,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * a) = exp (2 * (b + c))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L186"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d43ee6d505f38cd990eb9ce051d0c1d7ca14b703e2e5c29044af87224d26fef3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 187,
      "start_column": 58,
      "end_line": 187,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * (b + c)) = exp (b + b + (c + c))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L187"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "689222f0e1ae05839fb1a6505ade73e33fef66dffc91f2779af0d2f525933a7b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 188,
      "start_column": 58,
      "end_line": 188,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b + (c + c)) = exp (b + b) * exp (c + c)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L188"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "dad4759a559caddaff10d5186a63bf01cb0b48285ff5152c9c86ea503b0f7ea9"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 189,
      "start_column": 58,
      "end_line": 189,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b) * exp (c + c) = exp b * exp b * (exp c * exp c)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L189"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4fa1f44a57c1127bba667d73de33020143acfd861d9e0c5c6b503fbcbd1e6bc5"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 190,
      "start_column": 58,
      "end_line": 190,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp b * exp b * (exp c * exp c) = exp b ^ 2 * exp c ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L190"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4ec83107c241e45019522ee278e5d2363d0e6dbb29d026dcdc973f9d59503486"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nh : c = d * a + b\nh' : b = a * d\n\u22a2 c = 2 * a * d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f947dbb38ee5858bfbc2a9d9b481c33c915a88c284f8bd90aec01a218fede757"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 : X\nh : isInf s x\u2080\n\u22a2 x\u2080 \u2208 lowerBounds s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "fb48b482aa0856682fcacb4dea51b4ad8d30b953af0c7720d8cbb444aabda786"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 x\u2081 : X\nhx\u2080 : isInf s x\u2080\nhx\u2081 : isInf s x\u2081\n\u22a2 x\u2080 = x\u2081",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ed81f4a0fca149c4e2d4f2601720b079632accc9e4cc44547948fd7aa9538a35"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst\u271d : PartialOrder X\nI : Set X \u2192 X\nh : isInfFun I\n\u22a2 isSupFun fun s => I (upperBounds s)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e246e54cdc4e25d003aa48ce1159528038601bda72ecf8b8a283dd9a9362b481"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 148,
      "start_column": 2,
      "end_line": 148,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\ns t : Set X\nh : s \u2286 t\n\u22a2 Inf t \u2264 Inf s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L148"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "3d7f7264d7733abd1f987d1949ad0c68569e4bcc98f85e4c412a2c2cd038934b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx x' : X\n\u22a2 x \u2264 x' \u2194 Inf {x, x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "be92e50e481731da569cbd7f0eb900290ea45e528159033b330e0954a489d36b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx : X\n\u22a2 Inf {x' | x \u2264 x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "489561954e76809c197271bd602e8a2166160596238361e21379495f38054f7c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 173,
      "start_column": 2,
      "end_line": 173,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isInf S (\u22c2\u2080 S)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L173"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a6093176ad78b0fa55c64b8611fb8c03c92b12eaed3f927dc3a2bbcdf77fc4cc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isSup S (\u22c3\u2080 S)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a40887c50ab269636bd32d17efd62f8ce4673949aff59e07a0230296c7695955"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nY : Type u_2\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\n\u22a2 adjunction r l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "784c4d681e0f1ffb524b11b6c17486390c329fbc8be374651f3710c14ea5ecfd"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 248,
      "start_column": 2,
      "end_line": 248,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X Y : Type\ninst\u271d\u00b3 : PartialOrder X\ninst\u271d\u00b2 : CompleteLattice X\ninst\u271d\u00b9 : PartialOrder Y\ninst\u271d : CompleteLattice Y\nl : X \u2192 Y\nh : \u2200 (s : Set X), l (Sup s) = Sup (l '' s)\n\u22a2 adjunction l (mk_right l)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L248"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "70c0026107c402b07f2812a615d812915b8e891da23c7b6322d9d32a9bae980a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 383,
      "start_column": 2,
      "end_line": 383,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X Y : Type\nf : X \u2192 Y\nt : Set (Topology X)\n\u22a2 f\u204e (Sup t) = Sup (f\u204e '' t)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L383"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "656c3fc3ab9df2e87ac412b99e2f243fd8ee1214f053153e35b2c08b80bcafb8"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 396,
      "start_column": 2,
      "end_line": 396,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\nX : \u03b9 \u2192 Type\nT : \u03a0 (i : \u03b9), Topology (X i)\nZ : Type\nTZ : Topology Z\nf : Z \u2192 \u03a0 (i : \u03b9), X i\n\u22a2 Continuous TZ (ProductTopology T) f \u2194 \u2200 (i : \u03b9), Continuous TZ (T i) fun z => f z i",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L396"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "263aba893955dd29a3222b96894aca1518324e6a50f33c7a36740674214f4c94"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 422,
      "start_column": 4,
      "end_line": 422,
      "end_column": 9,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d : Group G\ns : Set (Subgroup G)\n\u22a2 1 \u2208 \u22c2 H \u2208 s, H.carrier",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L422"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c186b3b3f79bfdb8cb8013f818f0a3252faea0eb1475773541581572ffa2f0b3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 436,
      "start_column": 2,
      "end_line": 436,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d : Group G\n\u22a2 isInfFun SubgroupInf",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L436"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "16c306087fbed5df2e20cf4771a7e2e9bec1df661cb6ece6b11b26211cf4d935"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 449,
      "start_column": 2,
      "end_line": 449,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d : Group G\n\u22a2 adjunction generate forget",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L449"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "45f059b615def0bc21f423f85c71cbe400c192038d83189b3feb5ef1ecd51494"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 457,
      "start_column": 4,
      "end_line": 457,
      "end_column": 9,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Subgroup G'\n\u22a2 1 \u2208 \u21d1f \u207b\u00b9' H'.carrier",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L457"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d782436a4cf9f1eba597dfe6ae7c243e06fef5ed3745957340d22c4a6512285c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 474,
      "start_column": 2,
      "end_line": 474,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 adjunction (push f) (pull f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L474"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "848a88221b50f594184c0b37f1d804f3ec5df7f6a1efaa9b6df1b12de9623cbe"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 490,
      "start_column": 2,
      "end_line": 490,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl l' : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nh' : adjunction l' r\n\u22a2 l = l'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L490"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4d9727093500ea892db102c584888d894a3db80e2826660cea74274a134c3d56"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 495,
      "start_column": 2,
      "end_line": 495,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr r' : Y \u2192 X\nh : adjunction l r\nh' : adjunction l r'\n\u22a2 r = r'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L495"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "7a41dbeb8df1efc710d5af31bae9c9671e774809648ea3f54475aacd9e26736b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 502,
      "start_column": 2,
      "end_line": 502,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst\u271d\u00b2 : PartialOrder X\nY : Type\ninst\u271d\u00b9 : PartialOrder Y\nZ : Type\ninst\u271d : PartialOrder Z\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nl' : Y \u2192 Z\nr' : Z \u2192 Y\nh' : adjunction l' r'\n\u22a2 adjunction (l' \u2218 l) (r \u2218 r')",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L502"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "9da1e288f0382366952ec611bc92d3d6a7c8b743353cb1d1d97ba8d0d524253e"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 517,
      "start_column": 2,
      "end_line": 517,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 push f \u2218 generate = generate \u2218 Set.image \u21d1f",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L517"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "8435d8cd698bdfceeb8217861a91d74480d58eefa5607186cd3033e9fcdbe33b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 2,
      "end_line": 54,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 IndepSet A B \u2192 IndepSet B A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "2f9731105fae795b1ca7739f54772f72f05c51adec11b26fa333257973f8fd31"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 64,
      "start_column": 2,
      "end_line": 64,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B \u2192 IndepSet A B\u1d9c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ddadc8968c74f61b562b9d11dc06f3747e3e596bfe5d52314d62ebacd1c24b2b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 71,
      "start_column": 2,
      "end_line": 71,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B\u1d9c \u2194 IndepSet A B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "67addfe9d8c814b350ca38bee763cec3b650b9c3262e865cfe7f79eea442a813"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\nh : IndepSet A B\n\u22a2 IndepSet A\u1d9c B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "3577f3cf5999bad2f3b6bd7ce1a7b4b43afe49b10f7643e474cff5dfb1aa018b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 86,
      "start_column": 2,
      "end_line": 86,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA : Set \u03a9\nh : IndepSet A A\n\u22a2 \u2119 A = 0 \u2228 \u2119 A = 1",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L86"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "926e207c68bf5e0eee2705fbb68f26df59dede909b1f81f8c8ef961360bae260"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 108,
      "start_column": 2,
      "end_line": 108,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A = 0\n\u22a2 \u2119(A|B) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "212f9d566f3205e8383b7539fb3aef5fba81877c8733ec919faed61dcbe31141"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhB : \u2119 B = 0\n\u22a2 \u2119(A|B) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "fb467e8a702c20860b6ab5281b83e6c6694b2764003c2bd702f1823787f01990"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 126,
      "start_column": 2,
      "end_line": 126,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A \u2260 0\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "b9b6d794bf0fd543ef37805109dacd50932254d635086815acf843d35d79ff06"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 136,
      "start_column": 2,
      "end_line": 136,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "62759d0fbdfa04ae04a63e63ec6fd0e75081cac92966d39e10e50fa9921fb367"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 140,
      "start_column": 2,
      "end_line": 140,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nh : IndepSet B A\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L140"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e71ea4e4994260377362f7ab9f19a72614d1c65d2db29a224809e16a77bf1f14"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "a b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\n\u22a2 0 \u2264 a + b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5e0b11f48ec32e4fb9f580a36abeea035cfb9c11c4d3a9b9ef235a89a81cb8da"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "a b c d : \u211d\nhab : a \u2264 b\nhcd : c \u2264 d\n\u22a2 a + c \u2264 b + d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4047482a5125962dd4206849a3a1d90c01c6e3131b432523aebc5cf90dbbfda6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : \u2200 (n : \u2115), u n = l\n\u22a2 seq_limit u l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f51bdd3ef5cef0938f1aa098b662d8c9e4ab9293e4d6b993c87d05613f6f3d68"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 90,
      "start_column": 2,
      "end_line": 90,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : seq_limit u l\nhl : l > 0\n\u22a2 \u2203 N, \u2200 n \u2265 N, u n \u2265 l / 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L90"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6364d6640c356bc88ffa68816c8c375a10af34f630025c14c6980e86d29e04a6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 146,
      "start_column": 2,
      "end_line": 146,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl l' : \u211d\n\u22a2 seq_limit u l \u2192 seq_limit u l' \u2192 l = l'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5b33a5c1ef3874031f3fab4e6b21b7e7bb1dbe446ce79180044fcd97fa7919bc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 161,
      "start_column": 2,
      "end_line": 161,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nM : \u211d\nh : is_seq_sup M u\nh' : non_decreasing u\n\u22a2 seq_limit u M",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L161"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "28ef10d7c175fa2e6ea6552770b9507dc76c47d53ae04700c59a92c30f976631"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 239,
      "start_column": 2,
      "end_line": 239,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nhu : CauchySequence u\nhl : cluster_point u l\n\u22a2 seq_limit u l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L239"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4de6998a49e29646ebbaeea23f3785ef9690cc9fff66f4152c603b032872c954"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 61,
      "start_column": 2,
      "end_line": 61,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\n\u22a2 IsTrue v \u22a4",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ecccb0e6df9670b5d97a10320bcf4772173f5c0bd5576a9426bb61e9fb74a8af"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 65,
      "start_column": 2,
      "end_line": 65,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 IsTrue v (A \u21d4 B) \u2194 (IsTrue v A \u2194 IsTrue v B)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L65"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a0f840df63e15439057b7521bdf33a12c5446670d81a8be1af13925867381097"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 72,
      "start_column": 2,
      "end_line": 72,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 Valid (~~A \u21d4 A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L72"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c40cb3b87752db627ed06f0bfc1d9e9b46018e1bc73dd83b7ef1cc3b26c1ed2d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~~A \u21d4 A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6169fe714e5d27b56699f26c0aa6e7ef5684ce6db8e580ff2fbf4a9ef78072a0"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 139,
      "start_column": 2,
      "end_line": 139,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (A || ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e981025cfcacb89dcd6244a88b683282276414dd4adc8b34b6611d2a39a60e2f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 146,
      "start_column": 2,
      "end_line": 146,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~(A && B) \u21d4 ~A || ~B)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5a74c7843caca4e3710b76569d4a6909699e80388cb9de80cfcfcca16816e57c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 158,
      "start_column": 2,
      "end_line": 158,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A : Formula\n\u0393 \u0394 : Set Formula\nh : \u0393 \u22a2 A\nh2 : \u0393 \u2286 \u0394\n\u22a2 \u0394 \u22a2 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L158"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "b14186637c0a77bf03232e739ab08d9546e6f14cf6821b88100b549e24f0f964"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 165,
      "start_column": 2,
      "end_line": 165,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 Insert.insert B \u0393 \u22a2 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L165"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "48ce864a03f707474b99089f447ae45277b3d1dd8cfe7ac37a1b25cfddbbcfee"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 170,
      "start_column": 2,
      "end_line": 170,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 insert (A \u21d2 B) \u0393 \u22a2 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "1231075a51ae17e2266eae7591b69c9175b837c4f912d30cac559f457d1ef444"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 174,
      "start_column": 2,
      "end_line": 174,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A B : Formula\n\u0393 : Set Formula\nh1 : Provable (A \u21d2 B)\nh2 : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a2 B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L174"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a8bc81a374100a209a5526800daca7238aeb6df805025e7e355f27a2c49d2ebb"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 180,
      "start_column": 2,
      "end_line": 180,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a8 A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L180"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a84a62258e746b6f066cf1329098fc2cc38a8612df923293bd5261ac0d55df49"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A : Formula\nh : Provable A\n\u22a2 Valid A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c2205d9f50f1f04d953c9fe79ca96ff9ee75e18ac8c40d93769670a385ebea12"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\n\u22a2 eval v top = \u22a4",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "99efeed5557f8dafaff773b546ba0b450091c2c6482b62b2adaa841095010519"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 73,
      "start_column": 2,
      "end_line": 73,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 eval v (A \u21d4 B) = (eval v A \u21e8 eval v B) \u2293 (eval v B \u21e8 eval v A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ea4e3f0cd850382fdb7a240f0e210c67568cb8318e0d71351296d192993865d1"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 79,
      "start_column": 2,
      "end_line": 79,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.16048\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 Valid ~(A && ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e4ee464fba46aaa64d553d6212f4664b0995dc9db1a3ccbcd2f62457b6d273a4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 126,
      "start_column": 2,
      "end_line": 126,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.21261\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A || ~B \u21d2 ~(A && B))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "366b639d760eaf79eb4c11e0a411b22f1169ba867b78da31f145f95f3e94372b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 131,
      "start_column": 2,
      "end_line": 131,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.21285\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable ~(A && ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "7893b4193d726e8de8ff7cfb2c03d8ec9a6c05446f9ce9725ace15890f040de2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 136,
      "start_column": 2,
      "end_line": 136,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.21309\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A && ~B \u21d2 ~(A || B))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "73addb2e899f0e32fd7ab1d3f3523c9008a2c9166ee317c5415b1377acc0f744"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 59,
      "start_column": 2,
      "end_line": 59,
      "end_column": 7,
      "file": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean"
    },
    "debug_info": {
      "goal": "R : Type u_10\nM : Type u_11\nM' : Type u_12\ninst\u271d\u2076 : Ring R\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : AddCommGroup M'\ninst\u271d\u00b9 : Module R M\ninst\u271d : Module R M'\np : Submodule R M\nq : Submodule R M'\nhp : p.ClosedComplemented\nhq : q.ClosedComplemented\n\u22a2 (p.prod q).ClosedComplemented",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:14:52+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "e639724d572ac7132bbd070cea59560b8e90cf9834c65e2652d4a861f121346f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 196,
      "start_column": 8,
      "end_line": 196,
      "end_column": 13,
      "file": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_7\ninst\u271d\u2079 : RCLike \ud835\udd5c\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst\u271d\u2078 : NormedAddCommGroup E\ninst\u271d\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u2076 : NormedAddCommGroup F\ninst\u271d\u2075 : NormedSpace \ud835\udd5c F\ninst\u271d\u2074 : NormedAddCommGroup G\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c G\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace G\nf : E \u2192L[\ud835\udd5c] F\ng : F \u2192L[\ud835\udd5c] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (\u21d1g \u2218 \u21d1f))\nF' : Submodule \ud835\udd5c F := hf.complement\nthis\u271d : IsClosed \u2191(Submodule.map g F')\nthis : IsClosed \u2191hg.complement\nu : \u2115 \u2192 G\nu\u2080 : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u\u2080)\nhu : \u2200 (n : \u2115), \u2203 y \u2208 Submodule.map g F', \u2203 z \u2208 hg.complement, y + z = u n\nx : \u2115 \u2192 \u21a5(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => \u27e8y, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\ny : \u2115 \u2192 \u21a5hg.complement := fun n => (fun y x => (fun z x => \u27e8z, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\nn : \u2115\n\u22a2 u n = Classical.choose \u22ef + Classical.choose \u22ef",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L196"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T18:37:52+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "d735b65c20dd1c714075139151a998871c404733e306e976b3a03ca4267c1cef"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 6,
      "end_line": 205,
      "end_column": 11,
      "file": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean"
    },
    "debug_info": {
      "goal": "case refine_1\n\ud835\udd5c : Type u_7\ninst\u271d\u2079 : RCLike \ud835\udd5c\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst\u271d\u2078 : NormedAddCommGroup E\ninst\u271d\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u2076 : NormedAddCommGroup F\ninst\u271d\u2075 : NormedSpace \ud835\udd5c F\ninst\u271d\u2074 : NormedAddCommGroup G\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c G\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace G\nf : E \u2192L[\ud835\udd5c] F\ng : F \u2192L[\ud835\udd5c] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (\u21d1g \u2218 \u21d1f))\nF' : Submodule \ud835\udd5c F := hf.complement\nthis\u271d\u00b9 : IsClosed \u2191(Submodule.map g F')\nthis\u271d : IsClosed \u2191hg.complement\nu : \u2115 \u2192 G\nu\u2080 : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u\u2080)\nhu : \u2200 (n : \u2115), \u2203 y \u2208 Submodule.map g F', \u2203 z \u2208 hg.complement, y + z = u n\nx : \u2115 \u2192 \u21a5(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => \u27e8y, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\ny : \u2115 \u2192 \u21a5hg.complement := fun n => (fun y x => (fun z x => \u27e8z, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\nthis : \u2200 (n : \u2115), u n = \u2191(x n) + \u2191(y n)\n\u22a2 u\u2080 \u2208 \u2191(Submodule.map g F' + hg.complement)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-21T15:28:47+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "38ae2d124a4315e9deab759f0d74fe148daa609f0b64db8dabafc861b76208bb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 394,
      "start_column": 4,
      "end_line": 394,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "case hinv\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\nhg'' : MDifferentiableAt J I (\u2191hf.localInverse.toPartialEquiv) (f x)\n\u22a2 mfderiv I I (\u2191hf.localInverse.toPartialEquiv \u2218 f) x =\n    (mfderiv J I (\u2191hf.localInverse.toPartialEquiv) (f x)).comp (mfderiv I J f x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L394"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "820166d2e0046078d1eb65a0d795262dca9514c98d58fa5a752dd6dd76ae990c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 404,
      "start_column": 4,
      "end_line": 404,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "case hinv\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\nhf''' : MDifferentiableAt I J f (\u2191hf.localInverse.toPartialEquiv (f x))\nhg'' : MDifferentiableAt J I (\u2191hf.localInverse.toPartialEquiv) (f x)\n\u22a2 mfderiv J J (f \u2218 \u2191hf.localInverse.toPartialEquiv) (f x) =\n    (mfderiv I J f x).comp (mfderiv J I (\u2191hf.localInverse.toPartialEquiv) (f x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L404"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "9cc28994dd7842c314c2d585301269412459e82069343f483c92cf1e5b400155"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 399,
      "start_column": 68,
      "end_line": 399,
      "end_column": 73,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\n\u22a2 MDifferentiableAt I J f (\u2191hf.localInverse.toPartialEquiv (f x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "65fe6a2b3588cb6e7b89acf16543a28739e97eb89c31af3cd6c7e0def6519259"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-define-immersions",
      "commit": "93f7c1d0aa3d8a9ed50990ace8b079dbca48e3bc",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 90,
      "start_column": 2,
      "end_line": 90,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nG' : Type u_10\ninst\u271d\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_11\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace G N\nN' : Type u_14\ninst\u271d\u00b9 : TopologicalSpace N'\ninst\u271d : ChartedSpace G' N'\nf : M \u2192 M'\nx : M\ny : N\nhf : (mfderiv I I' f x).Splits\ng : N \u2192 N'\nhg : (mfderiv J J' g y).Splits\n\u22a2 (mfderiv (I.prod J) (I'.prod J') (Prod.map f g) (x, y)).Splits",
      "url": "https://github.com/leanprover-community/mathlib4/blob/93f7c1d0aa3d8a9ed50990ace8b079dbca48e3bc/Mathlib/Geometry/Manifold/MSplits.lean#L90"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T21:07:14+02:00",
      "inclusion_date": "2025-04-10T23:05:43.788477+00:00"
    },
    "id": "3d02382d075469e2476d9ae7ff5dc6fd167506688d81e930e109c48063257328"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 100,
      "start_column": 2,
      "end_line": 100,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : NormedSpace \ud835\udd5c E\nH : Type u_7\ninst\u271d\u00b3 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : ChartedSpace H M\nn : WithTop \u2115\u221e\ninst\u271d : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e \u2208 IsManifold.maximalAtlas I n M\nhx : x \u2208 (chartAt H x).source\n\u22a2 \u2191(extend_mfderiv_toContinousLinearEquiv he hx) = mfderiv I (modelWithCornersSelf \ud835\udd5c E) (\u2191(e.extend I)) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L100"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T11:03:10+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "920c396e25529401e975bb1ba0d8f058d53fbb6611e0992ee0d8925232385ea6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 110,
      "start_column": 79,
      "end_line": 110,
      "end_column": 84,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : NormedSpace \ud835\udd5c E\nH : Type u_7\ninst\u271d\u00b3 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : ChartedSpace H M\nn : WithTop \u2115\u221e\ninst\u271d : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e \u2208 IsManifold.maximalAtlas I n M\nhx : x \u2208 (chartAt H x).source\n\u22a2 \u2191(extend_symm_mfderiv_toContinousLinearEquiv he hx) =\n    mfderiv (modelWithCornersSelf \ud835\udd5c E) I (\u2191(e.extend I).symm) (\u2191(e.extend I) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L110"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T11:03:10+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "ce98dcd65000cf10fd8c9cb3514aff43846ae5338d85e23858bc661666a55293"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 193,
      "start_column": 4,
      "end_line": 193,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_11\ninst\u271d\u2078 : TopologicalSpace M\ninst\u271d\u2077 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2076 : TopologicalSpace M'\ninst\u271d\u2075 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u2074 : TopologicalSpace N\ninst\u271d\u00b3 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace E'\ng : M' \u2192 N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 \u2264 n\nh : MSplitsAt I J (g \u2218 f) x\nhg' : IsLocalDiffeomorphAt J I' n (\u2191hg.localInverse.toPartialEquiv) (g (f x))\nthis : \u2191hg.localInverse.toPartialEquiv \u2218 g =\u1da0[nhds (f x)] id\n\u22a2 ContinuousAt (\u2191hg.localInverse.toPartialEquiv) ((g \u2218 f) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L193"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:02:21+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "0407ffbd75c2ac985d142451d950cc971056408eb5a275bb94ec89760cc718f0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 197,
      "start_column": 4,
      "end_line": 197,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_11\ninst\u271d\u2078 : TopologicalSpace M\ninst\u271d\u2077 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2076 : TopologicalSpace M'\ninst\u271d\u2075 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u2074 : TopologicalSpace N\ninst\u271d\u00b3 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace E'\ng : M' \u2192 N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 \u2264 n\nh : MSplitsAt I J (g \u2218 f) x\nhg' : IsLocalDiffeomorphAt J I' n (\u2191hg.localInverse.toPartialEquiv) (g (f x))\nthis : \u2191hg.localInverse.toPartialEquiv \u2218 g =\u1da0[nhds (f x)] id\naux : ContinuousAt (\u2191hg.localInverse.toPartialEquiv \u2218 g \u2218 f) x\n\u22a2 ContinuousAt f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:02:21+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "9b35cd17037a51e8bbfb1ca1034a7abdf9a2dea29bad43022421ac48fd7fd960"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 120,
      "start_column": 6,
      "end_line": 120,
      "end_column": 11,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2075 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf g : M \u2192 M'\nx : M\nh : IsImmersionAt F I I' n f x\nh' : f =\u1da0[\ud835\udcdd x] g\ns : Set M\nhxs : s \u2208 \ud835\udcdd x\nhfg : EqOn f g s\n\u22a2 EqOn (\u2191(h.codChart.extend I') \u2218 g \u2218 \u2191(h.domChart.extend I).symm)\n    (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L120"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T17:10:59+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "c3629c50b43e4172f0a2bcfed7846ad830df3b6996af2d32c5b2853ed48ee59b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 128,
      "start_column": 2,
      "end_line": 128,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b2\u2070 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2079 : NormedAddCommGroup E\ninst\u271d\u00b9\u2078 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E'\nF : Type u_4\nF' : Type u_5\ninst\u271d\u00b9\u2075 : NormedAddCommGroup F\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c F\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F'\nH : Type u_6\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_8\ninst\u271d\u2079 : TopologicalSpace G\nG' : Type u_9\ninst\u271d\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_10\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nN : Type u_12\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace G N\nN' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace N'\ninst\u271d : ChartedSpace G' N'\nn : WithTop \u2115\u221e\nx : M\nf : M \u2192 N\ng : M' \u2192 N'\nx' : M'\nh : IsImmersionAt F I J n f x\nh' : IsImmersionAt F' I' J' n g x'\n\u22a2 IsImmersionAt (F \u00d7 F') (I.prod I') (J.prod J') n (Prod.map f g) (x, x')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "e19a8772ed025db77e293f5302e878760e29646c54d24169b5fb21b4a3acd889"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 133,
      "start_column": 2,
      "end_line": 133,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2075 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\nh : IsImmersionAt F I I' n f x\n\u22a2 ContinuousWithinAt f h.domChart.source x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-21T23:44:53+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "e68f36d16a05fea1f422485d34ee1ff5e700279aa311b6f3f025268fe60a1cf7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 153,
      "start_column": 6,
      "end_line": 153,
      "end_column": 11,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b9 : IsManifold I n M\ninst\u271d : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u21d1h.equiv \u2218 fun x => (x, 0))\n    (h.domChart.extend I).target\n\u22a2 ContDiffWithinAt \ud835\udd5c n (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (\u2191(h.domChart.extend I) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L153"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "5980547977ad012fa8402523f3bdf9fd4eb4c2753055687fd2736bad25a3a8fe"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 160,
      "start_column": 4,
      "end_line": 160,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case H\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b9 : IsManifold I n M\ninst\u271d : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u21d1h.equiv \u2218 fun x => (x, 0))\n    (h.domChart.extend I).target\nthis :\n  ContDiffWithinAt \ud835\udd5c n (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (\u2191(h.domChart.extend I) x)\n\u22a2 \u2191h.domChart.symm \u2218 \u2191I.symm \u207b\u00b9' h.domChart.source \u2286 \u2191I.symm \u207b\u00b9' h.domChart.target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "2418adeebbac7dac8b6de1787deb302ba406bd23d70cc98e675ee885204a7bd1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 182,
      "start_column": 8,
      "end_line": 182,
      "end_column": 13,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\n\u22a2 range \u21d1((ContinuousLinearMap.id \ud835\udd5c E).prod 0) = univ.prod {0}",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L182"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:13:02+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "aa13324e9d203061510224d0d1248488631baf9e5552e6bd91c67b6537bb819a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 206,
      "start_column": 20,
      "end_line": 206,
      "end_column": 25,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case left\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d : rhs.Splits\nthis : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\n\u22a2 range \u2191I \u2208 \ud835\udcdd (\u2191I (\u2191h.domChart x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L206"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T00:32:59+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "565d8556848cfff07cc620e6b647fcb909b2da0b3df1e676e4b66f4dc6f3eaf2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 206,
      "start_column": 20,
      "end_line": 206,
      "end_column": 25,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case right\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d : rhs.Splits\nthis : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\n\u22a2 \u2191I.symm \u207b\u00b9' h.domChart.target \u2208 \ud835\udcdd (\u2191I (\u2191h.domChart x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L206"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T00:32:59+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "fa8d80915b35517722c0f4a5c9bd4ddb3472dcfd6ba4afac31d0e28b7b70ab83"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 214,
      "start_column": 4,
      "end_line": 214,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d\u00b2 : rhs.Splits\nthis\u271d\u00b9 : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\nthis\u271d :\n  MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u2191(h.domChart.extend I) x)\nthis : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)) x\n\u22a2 \u2191(h.codChart.extend I') \u2218 f =\u1da0[\ud835\udcdd x] \u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:20:40+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "ad926bf8bbc060bab39704ac7e2540a250d9fd38368b312620b1a0cf5e12341b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d\u2074 : rhs.Splits\nthis\u271d\u00b3 : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\nthis\u271d\u00b2 :\n  MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u2191(h.domChart.extend I) x)\nthis\u271d\u00b9 : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)) x\nthis\u271d : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f) x\nthis : MSplitsAt I I' (\u2191(h.codChart.extend I').symm \u2218 \u2191(h.codChart.extend I') \u2218 f) x\n\u22a2 f =\u1da0[\ud835\udcdd x] \u2191(h.codChart.extend I').symm \u2218 \u2191(h.codChart.extend I') \u2218 f",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:20:40+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "808cb01a9c51f079b909ded22fa8c794c0ac64adf4183f50cbb1f945148eb46b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 226,
      "start_column": 2,
      "end_line": 226,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : MSplitsAt I I' f x\n\u22a2 IsImmersionAt F I I' n f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L226"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-17T22:40:42+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "fd9a62b160cf32ccc75acaf97669629f77d88850fd2968f001084e2fa9b80770"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 288,
      "start_column": 2,
      "end_line": 288,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b3 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2070 : NormedAddCommGroup E'\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2078 : NormedAddCommGroup F\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2076 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2075 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2074 : TopologicalSpace M\ninst\u271d\u00b3 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d : Nonempty M\nh : IsImmersion F I I' n f\ninhabited_h : Inhabited M\n\u22a2 \u2203 domCharts codCharts,\n    \u2200 (x : M),\n      x \u2208 (domCharts x).source \u2227\n        \u2200 (x : M),\n          f x \u2208 (codCharts x).source \u2227\n            \u2200 (x : M),\n              domCharts x \u2208 IsManifold.maximalAtlas I n M \u2227\n                \u2200 (x : M),\n                  codCharts x \u2208 IsManifold.maximalAtlas I' n M' \u2227\n                    \u2200 (x : M),\n                      EqOn (\u2191((codCharts x).extend I') \u2218 f \u2218 \u2191((domCharts x).extend I).symm)\n                        (\u21d1\u22ef.equiv \u2218 fun x => (x, 0)) ((domCharts x).extend I).target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L288"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T16:47:11+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "9096e53e16083fb8af471619797542f8b9af637e71e9b1c32c104765832e3432"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 324,
      "start_column": 29,
      "end_line": 324,
      "end_column": 34,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b2\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b2\u2075 : NormedAddCommGroup E\ninst\u271d\u00b2\u2074 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b2\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b2\u00b2 : NormedSpace \ud835\udd5c E'\nF : Type u_4\nF' : Type u_5\ninst\u271d\u00b2\u00b9 : NormedAddCommGroup F\ninst\u271d\u00b2\u2070 : NormedSpace \ud835\udd5c F\ninst\u271d\u00b9\u2079 : NormedAddCommGroup F'\ninst\u271d\u00b9\u2078 : NormedSpace \ud835\udd5c F'\nH : Type u_6\ninst\u271d\u00b9\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u2076 : TopologicalSpace H'\nG : Type u_8\ninst\u271d\u00b9\u2075 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_10\ninst\u271d\u00b9\u2074 : TopologicalSpace M\ninst\u271d\u00b9\u00b3 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9\u00b9 : ChartedSpace H' M'\nN : Type u_12\ninst\u271d\u00b9\u2070 : TopologicalSpace N\ninst\u271d\u2079 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2078 : IsManifold I n M\ninst\u271d\u2077 : IsManifold I' n M'\ninst\u271d\u2076 : CompleteSpace E\ninst\u271d\u2075 : CompleteSpace E'\ninst\u271d\u2074 : CompleteSpace F\ninst\u271d\u00b3 : CompleteSpace F'\ninst\u271d\u00b2 : IsManifold I 1 M\ninst\u271d\u00b9 : IsManifold I' 1 M'\ninst\u271d : IsManifold J n N\ng : M' \u2192 N\nhg : IsImmersion F' I' J n g\nhf : IsImmersion F I I' n f\n\u22a2 IsManifold J 1 N",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L324"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:15:03+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "c006cbb45a0bcb9dddf4f6c1387a9f8c54be06e6ecd5a4c3431bf97d43cf67df"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-hidden-openClassical",
      "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 258,
      "start_column": 80,
      "end_line": 258,
      "end_column": 85,
      "file": "MathlibTest/LintStyle.lean"
    },
    "debug_info": {
      "goal": "this : \u2115 \u2192 True\n\u22a2 Set.univ = \u22c3 i, \u22c3 j, {0, j}",
      "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L258"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2024-11-27T12:13:29+00:00",
      "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
    },
    "id": "f351a6e824f8f3ee292b3381888a5cab3079e131d00897202025514e936b6992"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-hidden-openClassical",
      "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 259,
      "start_column": 53,
      "end_line": 259,
      "end_column": 58,
      "file": "MathlibTest/LintStyle.lean"
    },
    "debug_info": {
      "goal": "this\u271d : \u2115 \u2192 True\nthis : Set.univ = \u22c3 i, \u22c3 j, {0, j}\n\u22a2 \u2203 m, \u22c3 i, Set.univ = \u2205",
      "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2024-11-27T12:13:29+00:00",
      "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
    },
    "id": "aaf32d27c1a0b931e36df890748a6031a30000c084331b157cd3e31f53d6d539"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 319,
      "start_column": 22,
      "end_line": 319,
      "end_column": 27,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d \u00ab$a\u2082\u00bb \u00ab$a\u2081\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u2081\u00bb + Nat.rawCast 0 = \u00ab$a\u2081\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L319"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "88b35be1c8a9bc6c964f27cc7f922e809e723148541872db621bae530e0646e8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 322,
      "start_column": 22,
      "end_line": 322,
      "end_column": 27,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb $a\u2082\u271d \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 Nat.rawCast 0 + \u00ab$a\u2082\u00bb = \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L322"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "eb9325db7d4b4597f0b1166d83d7e5fbc37aa126bd5f98bbb63f47bdd29cf964"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 331,
      "start_column": 38,
      "end_line": 331,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n$v\u271d : Level\n$R\u271d : Type v\u271d\n$sR\u271d : CommSemiring $R\u271d\n$r\u271d : $R\u271d\n$a\u271d $b\u271d : \u00ab$A\u00bb\n\u00ab$sAlg\u00bb : Algebra $R\u271d \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : $b\u271d + 1 = $expr\u271d\n\u22a2 $r\u271d \u2022 $a\u271d + $b\u271d + 1 = $r\u271d \u2022 $a\u271d + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L331"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "21ced7a698401c53c9861c41dc979685ad7927114503f9c805b152b4f48b6045"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 334,
      "start_column": 38,
      "end_line": 334,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n$v\u271d : Level\n$R\u271d : Type v\u271d\n$sR\u271d : CommSemiring $R\u271d\n$r\u271d : $R\u271d\n$a\u271d $b\u271d : \u00ab$A\u00bb\n\u00ab$sAlg\u00bb : Algebra $R\u271d \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : $b\u271d + 1 = $expr\u271d\n\u22a2 1 + ($r\u271d \u2022 $a\u271d + $b\u271d) = $r\u271d \u2022 $a\u271d + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "17f3befda0ab50e10b0c8bb77a822491d988d08cb6498ceebc3c2b56c8ab6ac2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 343,
      "start_column": 41,
      "end_line": 343,
      "end_column": 46,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = $expr\u271d\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L343"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e95546baf981dcb75849351adfcf6f79821665c157737f4473060816812c1db2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 347,
      "start_column": 41,
      "end_line": 347,
      "end_column": 46,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2082\u00bb + (\u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb) = $expr\u271d\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L347"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "304482c04da44010c20c8cb18abdd332adf8a5a1e3d0aff8123b14420f21a555"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 352,
      "start_column": 38,
      "end_line": 352,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "$u\u271d : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2081\u00bb + \u00ab$t\u2082\u00bb = $expr\u271d\n\u00ab$u\u00bb : Level\n\u00ab$R\u00bb : Type u\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$par\u00bb : \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb + $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L352"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f101b598c58371579d75e4dc168fa778d80b824c40f25c57b6bfc08dd2b2cc8b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 362,
      "start_column": 24,
      "end_line": 362,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 Nat.rawCast 0 * \u00ab$a\u2082\u00bb = Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L362"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "92dbde403e0e2d156407443088723fcc42044b211bac83b28afd18e0a95f3b6b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 365,
      "start_column": 32,
      "end_line": 365,
      "end_column": 37,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 1 * \u00ab$a\u2082\u00bb = 1 \u2022 \u00ab$a\u2082\u00bb + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L365"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e30559227cd5b7eebc23360e2b21ac4b561459d7f7b98949f5fcdc617be2b148"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 370,
      "start_column": 38,
      "end_line": 370,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u00bb : Type v\u271d\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb \u00ab$t\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb \u00ab$a'\u00bb : \u00ab$A\u00bb\n\u00ab$pa'\u00bb : \u00ab$a\u00bb * \u00ab$a\u2082\u00bb = \u00ab$a'\u00bb\n\u00ab$t'\u00bb : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : \u00ab$t\u00bb * \u00ab$a\u2082\u00bb = \u00ab$t'\u00bb\n\u22a2 (\u00ab$r\u00bb \u2022 \u00ab$a\u00bb + \u00ab$t\u00bb) * \u00ab$a\u2082\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a'\u00bb + \u00ab$t'\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e70927f4f2859e45f3df5bf2ed5ebf2b3b507f496f563993c2a9996519f9bb37"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 378,
      "start_column": 24,
      "end_line": 378,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2082\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u2081\u00bb * Nat.rawCast 0 = Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L378"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "51076a2b0119d234d94a21f2334ae42f51c7a6d32ae1e91c7636cce6194838fb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 451,
      "start_column": 37,
      "end_line": 451,
      "end_column": 42,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb \u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$R\u2081\u00bb : Type u\u2082 := \u00ab$R\u2082\u00bb\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2081'\u00bb : \u00ab$R\u2082\u00bb := \u00ab$r\u2081\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb * \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L451"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-08T17:33:25+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f52ad47f2959f73e0d6f68ba4b35c0cb5f83f9d58adc26eeb5ff41983dd03253"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 495,
      "start_column": 38,
      "end_line": 495,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$R\u00bb : Type u\n\u00ab$A\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$S\u00bb : Type v\u271d\n\u00ab$sS\u00bb : CommSemiring \u00ab$S\u00bb\n\u00ab$s\u00bb : \u00ab$S\u00bb\n\u00ab$a\u00bb $b\u271d : \u00ab$A\u00bb\n\u00ab$sSA\u00bb : Algebra \u00ab$S\u00bb \u00ab$A\u00bb\n\u00ab$et\u00bb : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$r\u00bb \u2022 $b\u271d = \u00ab$et\u00bb\n\u00ab$u\u2081\u00bb : Level\n\u00ab$R\u2081\u00bb : Type u\u2081\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sR\u2081A\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u2081\u00bb : \u00ab$s\u00bb \u2022 \u00ab$r\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u00bb\n\u22a2 \u00ab$r\u00bb \u2022 (\u00ab$s\u00bb \u2022 \u00ab$a\u00bb + $b\u271d) = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u00bb + \u00ab$et\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L495"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-03-31T18:54:54+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "8a760a1503c22d1615b738bcdfd78628353aa3f997b5e9c5c3ebc0bfaaf502cf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 530,
      "start_column": 9,
      "end_line": 530,
      "end_column": 14,
      "file": "Mathlib/Tactic/Polynomial.lean"
    },
    "debug_info": {
      "goal": "a : \u211a\n\u22a2 a + a = 2 * a",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Polynomial.lean#L530"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-02-25T18:05:11+01:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "bb4e8a8b5fe4ac30d4496be459ded460c04b5cb009507b556d6a4260462c7620"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 530,
      "start_column": 9,
      "end_line": 530,
      "end_column": 14,
      "file": "Mathlib/Tactic/Polynomial.lean"
    },
    "debug_info": {
      "goal": "a : \u211a\n\u22a2 a * a = a ^ 2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Polynomial.lean#L530"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-02-25T18:05:11+01:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "519b40fe6363b33886691745570984819d01d9e8fa1d68f46a9da632e19bd843"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25006 \u2208 \u2191ys then ?m.25035 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
    },
    "id": "4c5cb6906595728836d3da67298bfe26022968ff57cd1e368ad752e9058524b0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25006 \u2208 \u2191ys then ?m.25035 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
    },
    "id": "368788f8c327f5d1b524634ac8b5dd12311f38881459b2fb944f94afd96dd0a0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 68,
      "start_column": 14,
      "end_line": 68,
      "end_column": 19,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 \u2200 (x y : E \u00d7 G),\n    (Equiv.prodUnique E G).toFun (x + y) = (Equiv.prodUnique E G).toFun x + (Equiv.prodUnique E G).toFun y",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T22:02:51+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "ba7962a1180548d3c6b1b39f21295df2c71c15e0647ff09c2b2f2124a8d3769f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 69,
      "start_column": 15,
      "end_line": 69,
      "end_column": 20,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 \u2200 (m : \ud835\udd5c) (x : E \u00d7 G), (Equiv.prodUnique E G).toFun (m \u2022 x) = (RingHom.id \ud835\udd5c) m \u2022 (Equiv.prodUnique E G).toFun x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T22:02:51+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "173f5069843545787c030fbdd899c20d1030d0ad4dc2e6e3b7831f7e3637a1a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 83,
      "start_column": 4,
      "end_line": 83,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 Continuous \u21d1(Equiv.prodUnique E G).symm",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "f09d7dfb579135ab11ab68696e9b902e9e4fb39a5fd53da61b3cd8ab89a74b21"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 81,
      "end_line": 95,
      "end_column": 86,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2075 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup E\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c E\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nx : E\n\u22a2 (prodUnique \ud835\udd5c E).symm x = (x, sorry)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "1ea2b10ac8676611e0c87cdfa6390c7385e0d5f578263b28d28fc186f6588511"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 119,
      "start_column": 16,
      "end_line": 119,
      "end_column": 21,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nh : SliceModel F I I'\n\u22a2 \u2191(J.prod I') \u2218 Prod.map id (SliceModel.map F I I') =\n    \u21d1(let sdf := SliceModel.equiv I I';\n        sorry) \u2218\n      (fun x => (x, 0)) \u2218 \u2191(J.prod I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L119"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "6a5133f0e83a8402fa65a0cb23bbd2f869f4fab26b37890f8d5ae9c3a659a00d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 126,
      "start_column": 16,
      "end_line": 126,
      "end_column": 21,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nh : SliceModel F I I'\n\u22a2 \u2191(I'.prod J) \u2218 Prod.map (SliceModel.map F I I') id = \u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(I.prod J)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "eb41f86ab8afe3880384c1a6fd5a01be4a3381f23e5d03297468f6b7b291a149"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 164,
      "start_column": 6,
      "end_line": 164,
      "end_column": 11,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : Nonempty H\n\u03c6 : PartialHomeomorph M' H'\nf : M \u2192 M'\ninst\u271d : Nonempty M\nh : SliceModel F I I'\nhf : IsEmbedding f\nhyp : \u03c6.source \u2286 range f\n\u22a2 ContinuousOn (Function.extend f id fun x => Classical.arbitrary M) (range f)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T16:41:06+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "0dac06d436277c25a07b756e98a9e44909ec08a760917518f6ef101230ba39c4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 337,
      "start_column": 4,
      "end_line": 337,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "case left\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : IsManifold I' n M'\nh : SliceModel F I I'\ninst\u271d\u00b9 : Nonempty H\ninst\u271d : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\n\u22a2 ContDiffOn \ud835\udd5c n\n    (\u2191I \u2218\n      ((h.inverse \u2218 \u2191(chartAt H' (emb n h x')) \u2218 emb n h) \u2218\n          (extend (emb n h) id fun x => Classical.arbitrary M) \u2218\n            \u2191(chartAt H' (emb n h x)).symm \u2218 SliceModel.map F I I') \u2218\n        \u2191I.symm)\n    (\u2191I.symm \u207b\u00b9' (SliceModel.map F I I' \u207b\u00b9' (chartAt H' (emb n h x)).target) \u2229\n        \u2191I.symm \u207b\u00b9'\n          ((extend (emb n h) id fun x => Classical.arbitrary M) \u2218\n              \u2191(chartAt H' (emb n h x)).symm \u2218 SliceModel.map F I I' \u207b\u00b9'\n            (emb n h \u207b\u00b9' (chartAt H' (emb n h x')).source)) \u2229\n      range \u2191I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L337"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T19:38:29+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "c579f4b72707f4af460ad7abbda22e76ac31a89f741f5ff826c6563d1456d754"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 340,
      "start_column": 2,
      "end_line": 340,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "case right\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : IsManifold I' n M'\nh : SliceModel F I I'\ninst\u271d\u00b9 : Nonempty H\ninst\u271d : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\nX : M' := emb n h x\nX' : M' := emb n h x'\n\u22a2 { property := fun f s => ContDiffOn \ud835\udd5c n (\u2191I \u2218 f \u2218 \u2191I.symm) (\u2191I.symm \u207b\u00b9' s \u2229 range \u2191I), comp := \u22ef, id_mem := \u22ef,\n        locality := \u22ef, congr := \u22ef }.property\n    (\u2191((inst.myChart x).symm \u226b\u2095 inst.myChart x').symm) ((inst.myChart x).symm \u226b\u2095 inst.myChart x').target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L340"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T19:38:29+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "139bfe861986eda0e69845d32f898eab3561fc586db237733b0e182f035803d9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 60,
      "end_line": 30,
      "end_column": 65,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsNonloop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y (insert e s) = summand (M \uff0f {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "71f9f703d175987ac21dc8a115393be772a88d9a1277b970c7830b27bbf3846e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 70,
      "end_line": 33,
      "end_column": 75,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsLoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y (insert e s) = (y - 1) * summand (M \uff0f {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "41324751a40fb3c4711ef762eb0172c2f64dbb5622d30b0d1c8f73e4a686ab86"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 49,
      "end_line": 36,
      "end_column": 54,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : \u00acM.IsColoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y s = summand (M \uff3c {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "596d86d173f26419af96e80de1885015a4554748e982fdb2f71c491862b7ec80"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 59,
      "end_line": 39,
      "end_column": 64,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsColoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y s = (x - 1) * summand (M \uff3c {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "2b7d561b710a2fb41774deb686cac812c13cf12b63d9352492101a8956477e3b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\n\u22a2 NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f16d734974ce142a2d4897988e257460e0156c9b509fbcb490aa29a0d631f0c7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70ed2e7ecfab37f75b3ee0cceece0f0e3479bc791f74a440216a35de4ae16fe7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 67,
      "start_column": 14,
      "end_line": 67,
      "end_column": 19,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R : Type u\ninst\u271d\u00b3 : CommRing R\nM : ModuleCat R\nC : Type u\ninst\u271d\u00b2 : Category.{v, u} C\ninst\u271d\u00b9 : Abelian C\ninst\u271d : HasExt C\nX Y : C\n\u22a2 \u2200 (x y : Ext X Y 0), homEquiv\u2080.toFun (x + y) = homEquiv\u2080.toFun x + homEquiv\u2080.toFun y",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "7e20ae9362953f1e16980a52fbc2d71c5708a4552d45d3e3eded8ef89b61558a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 81,
      "start_column": 15,
      "end_line": 81,
      "end_column": 20,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : Ring R\ninst\u271d : Linear R C\nX Y : C\n\u22a2 \u2200 (m : R) (x : Ext X Y 0), (homEquiv\u2080_hom X Y).toFun (m \u2022 x) = (RingHom.id R) m \u2022 (homEquiv\u2080_hom X Y).toFun x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "c670d4377e4555381062f401ea5906c424124b8d9c0204fc874af4dd5c882220"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 93,
      "start_column": 18,
      "end_line": 93,
      "end_column": 23,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u03b1 : Ext X Y a\n\u22a2 \u2200 (x y : Ext Y Z b), \u03b1.comp (x + y) h = \u03b1.comp x h + \u03b1.comp y h",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L93"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "b882c720e1280aa726cbe584960e70b808fc81e072f98e9065f6c2008456f6d4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 94,
      "start_column": 19,
      "end_line": 94,
      "end_column": 24,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u03b1 : Ext X Y a\n\u22a2 \u2200 (m : R) (x : Ext Y Z b), \u03b1.comp (m \u2022 x) h = (RingHom.id R) m \u2022 \u03b1.comp x h",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L94"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "fafecbde3bb919f22939a4a03c47b33ef695ad647b16ae555f0aed1a6a1fc8f9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 14,
      "end_line": 95,
      "end_column": 19,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u22a2 \u2200 (x y : Ext X Y a),\n    { toFun := fun \u03b2 => (x + y).comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } =\n      { toFun := fun \u03b2 => x.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } +\n        { toFun := fun \u03b2 => y.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef }",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "49ad769ac8de9aca932340b8c946afa02391e2571a0fdd21a4c4b0460ac23105"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 96,
      "start_column": 15,
      "end_line": 96,
      "end_column": 20,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u22a2 \u2200 (m : R) (x : Ext X Y a),\n    { toFun := fun \u03b2 => (m \u2022 x).comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } =\n      (RingHom.id R) m \u2022 { toFun := fun \u03b2 => x.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef }",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L96"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "efca452d6c486187ba3cd0cb05ea127d1a804352a47fd8c4b4e3f95067d88a28"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 277,
      "start_column": 38,
      "end_line": 277,
      "end_column": 43,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\nx : M\nhdiff : Function.Bijective \u21d1(mfderiv I J f x)\n\u22a2 IsLocalDiffeomorphAt I J n f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "ee81358057c935f84a117a2766d854070f08222af30bb7922d37f7af6477a491"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 322,
      "start_column": 4,
      "end_line": 322,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c\u271d : Type u_1\ninst\u271d\u00b3\u2079 : NontriviallyNormedField \ud835\udd5c\u271d\nE\u271d : Type u_2\ninst\u271d\u00b3\u2078 : NormedAddCommGroup E\u271d\ninst\u271d\u00b3\u2077 : NormedSpace \ud835\udd5c\u271d E\u271d\nF\u271d : Type u_3\ninst\u271d\u00b3\u2076 : NormedAddCommGroup F\u271d\ninst\u271d\u00b3\u2075 : NormedSpace \ud835\udd5c\u271d F\u271d\nH\u271d : Type u_4\ninst\u271d\u00b3\u2074 : TopologicalSpace H\u271d\nG\u271d : Type u_5\ninst\u271d\u00b3\u00b3 : TopologicalSpace G\u271d\nI\u271d : ModelWithCorners \ud835\udd5c\u271d E\u271d H\u271d\nJ\u271d\u00b9 : ModelWithCorners \ud835\udd5c\u271d F\u271d G\u271d\nM\u271d : Type u_6\ninst\u271d\u00b3\u00b2 : TopologicalSpace M\u271d\ninst\u271d\u00b3\u00b9 : ChartedSpace H\u271d M\u271d\nN\u271d\u00b9 : Type u_7\ninst\u271d\u00b3\u2070 : TopologicalSpace N\u271d\u00b9\ninst\u271d\u00b2\u2079 : ChartedSpace G\u271d N\u271d\u00b9\nn\u271d : WithTop \u2115\u221e\nf\u271d : M\u271d \u2192 N\u271d\u00b9\ns : Set M\u271d\nx\u271d : M\u271d\n\ud835\udd5c : Type u_8\ninst\u271d\u00b2\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_9\ninst\u271d\u00b2\u2077 : NormedAddCommGroup E\ninst\u271d\u00b2\u2076 : NormedSpace \ud835\udd5c E\nE' : Type u_10\ninst\u271d\u00b2\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b2\u2074 : NormedSpace \ud835\udd5c E'\nF : Type u_11\ninst\u271d\u00b2\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b2\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_12\ninst\u271d\u00b2\u00b9 : TopologicalSpace H\nH' : Type u_13\ninst\u271d\u00b2\u2070 : TopologicalSpace H'\nG : Type u_14\ninst\u271d\u00b9\u2079 : TopologicalSpace G\nG' : Type u_15\ninst\u271d\u00b9\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ\u271d : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_16\ninst\u271d\u00b9\u2077 : TopologicalSpace M\ninst\u271d\u00b9\u2076 : ChartedSpace H M\nM'\u271d : Type u_17\ninst\u271d\u00b9\u2075 : TopologicalSpace M'\u271d\ninst\u271d\u00b9\u2074 : ChartedSpace H' M'\u271d\nN\u271d : Type u_18\ninst\u271d\u00b9\u00b3 : TopologicalSpace N\u271d\ninst\u271d\u00b9\u00b2 : ChartedSpace G N\u271d\nN'\u271d : Type u_19\ninst\u271d\u00b9\u00b9 : TopologicalSpace N'\u271d\ninst\u271d\u00b9\u2070 : ChartedSpace G' N'\u271d\nn : WithTop \u2115\u221e\nJ : ModelWithCorners \ud835\udd5c E' H\nM' : Type u_20\nM'' : Type u_21\nN : Type u_22\ninst\u271d\u2079 : TopologicalSpace M'\ninst\u271d\u2078 : ChartedSpace H M'\ninst\u271d\u2077 : TopologicalSpace M''\ninst\u271d\u2076 : ChartedSpace H M''\ninst\u271d\u2075 : TopologicalSpace N\ninst\u271d\u2074 : ChartedSpace H N\nN' : Type u_23\ninst\u271d\u00b3 : TopologicalSpace N'\ninst\u271d\u00b2 : ChartedSpace H N'\ninst\u271d\u00b9 : FiniteDimensional \ud835\udd5c E\ninst\u271d : FiniteDimensional \ud835\udd5c E'\nx : M \u00d7 N \u2295 M' \u00d7 N\nf : M \u00d7 N \u2295 M' \u00d7 N \u2243 (M \u2295 M') \u00d7 N := (Equiv.sumProdDistrib M M' N).symm\nthis : ContMDiff (I.prod J) (I.prod J) n \u21d1f\n\u22a2 Function.Injective \u21d1(mfderiv (I.prod J) (I.prod J) (\u21d1f) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L322"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "b50ebc5f597441fd27a957da6dbd55b366fc9713892894016f10afef2b6f0dbe"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 337,
      "start_column": 2,
      "end_line": 337,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "\ud835\udd5c : Type u_8\ninst\u271d\u00b9\u00b3 : NontriviallyNormedField \ud835\udd5c\nE : Type u_9\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E\nE' : Type u_10\ninst\u271d\u00b9\u2070 : NormedAddCommGroup E'\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\nH : Type u_12\ninst\u271d\u2078 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_16\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nn : WithTop \u2115\u221e\nJ : ModelWithCorners \ud835\udd5c E' H\nM' : Type u_20\nN : Type u_22\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H M'\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace H N\ninst\u271d\u00b9 : FiniteDimensional \ud835\udd5c E\ninst\u271d : FiniteDimensional \ud835\udd5c E'\n\u22a2 (prodSumDistrib I M n J M' N).toEquiv = (Equiv.sumProdDistrib M M' N).symm",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L337"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "c3dc5a834847802c55b02a9c6c41232567b2ca0f3f7b782fcf69d834f92e5962"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 477,
      "start_column": 8,
      "end_line": 477,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house\n      ((\u2191(\u2191(finProdFinEquiv.symm.toFun t).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t).2 + 1) \u2022 \u03b2') ^\n        \u2191(finProdFinEquiv.symm.toFun u).2) \u2264\n    house (\u2191a + b \u2022 \u03b2') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L477"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16a01d2ef544bcced8e74aa1e11b21ec9cd5a0ac2ac7b19135ba48b2a5c2a0d3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 478,
      "start_column": 8,
      "end_line": 478,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h\u2081.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264\n    house\n      ((\u2191(\u2191(finProdFinEquiv.symm.toFun t).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t).2 + 1) \u2022 \u03b2') ^\n        \u2191(finProdFinEquiv.symm.toFun u).2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L478"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1d037d346aad685ecccac686a49d8e649b474ee34a31e31984ca0ca8c5ee000c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 480,
      "start_column": 8,
      "end_line": 480,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264 house \u03b1' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8deeda4718e47dcea20ca9e27cd10aa48493d4a54d80239404b8799d85327e71"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 482,
      "start_column": 8,
      "end_line": 482,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * house (\u2191a + b \u2022 \u03b2') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L482"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ae583f0a7a5865be87c4d93b94aa69f1d9f66c6082e7fd3aae895ecec05bad26"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 483,
      "start_column": 8,
      "end_line": 483,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264 house \u03b3' ^ (b * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L483"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3995eee619bc2234d3dd3d834cc74d35203f9e2b132588a21547c7184b4b9580"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 485,
      "start_column": 8,
      "end_line": 485,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * house (\u2191a + b \u2022 \u03b2') ^ k * house \u03b1' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L485"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e46d0b8e9e9b6a97b489edba77bb97e4a3f8fd62a0e26faa519aab3ac865ca3f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 499,
      "start_column": 10,
      "end_line": 499,
      "end_column": 15,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 |c\u2081 K \u03b1' \u03b2' \u03b3'| = c\u2081 K \u03b1' \u03b2' \u03b3'",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L499"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b0061f685d3e8c6ef4bdf8cd3614c27509ee268f60e868d3b1a3e6d3b35c9444"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 505,
      "start_column": 8,
      "end_line": 505,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\nthis : |c\u2081 K \u03b1' \u03b2' \u03b3'| = c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 |\u2191(c\u2081 K \u03b1' \u03b2' \u03b3')| ^ (n K q - 1 + m K * q + m K * q) \u2264 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (1 + 2 * m K * (2 * m K).sqrt)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L505"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "21ed3fe5836d13e50f057c1bed597016de0a5b7c36eb2a9d55075d37aa93057b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 510,
      "start_column": 8,
      "end_line": 510,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191a + \u2191b * \u03b2') ^ k \u2264 \u2191(2 * m K).sqrt * (1 + house \u03b2')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L510"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e391fa3300cede2a3384840e62cd5b94f545fc1e34f27787d8e4a9c3d9557821"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 511,
      "start_column": 8,
      "end_line": 511,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house (\u2191a + \u2191b * \u03b2') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "259517c756b76a44bc6e3a170c57caf84ae2ff43820f0dc426e62a372569a9b5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 513,
      "start_column": 8,
      "end_line": 513,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3'",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L513"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8cf32ffb033df5e7b710c52a244a2598a3ae13a452667893cf8f905ac69b533b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 514,
      "start_column": 8,
      "end_line": 514,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b1' ^ (a * l) \u2264 house \u03b1' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "22f1c2df0142c6bae2959cd6f1d03d18515317fd6424ee42b0eb3f633fc60566"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 516,
      "start_column": 8,
      "end_line": 516,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u03b1' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L516"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3535841b7ef1c21dc8602efc55f6891a94e16f0ab7161087192a93cae16846d8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 517,
      "start_column": 8,
      "end_line": 517,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3' * \u2191(2 * m K).sqrt * (1 + house \u03b2')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L517"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b2cea7a75aed12c104bce5e71575d86ec567dbb91a7fdf45b866bd64e16f0d9d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 518,
      "start_column": 8,
      "end_line": 518,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b3' ^ (b * l) \u2264 house \u03b3' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L518"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a78e8756dd923bdc8379f9b6664b2abdca57089ab92adebaf0f932934122f795"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 519,
      "start_column": 8,
      "end_line": 519,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u03b3' ^ (b * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L519"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "59ea0d34dafdb3d44b26f96fa64c95d42cd221a1bbb389058c2ae8ae73e176a1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 520,
      "start_column": 8,
      "end_line": 520,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3' * \u2191(2 * m K).sqrt * (1 + house \u03b2') * house \u03b1' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L520"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d9625605bdc86c35f4bec818bc261b0ffaa6dc7ec5a3af20390eb2381b0bac46"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 670,
      "start_column": 8,
      "end_line": 670,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nH :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) +\n        -\u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) +\n      \u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\n\u22a2 -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191\u2191j % \u2191q) - 1) * \u03b2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L670"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8b742443c017c3579a11bb0415e9dc31e0bf24c1f2b50d2cb3bbedd3291db9f3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 681,
      "start_column": 10,
      "end_line": 681,
      "end_column": 15,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nH :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) +\n        -\u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) +\n      \u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\nthis : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\n\u22a2 (\u2191(\u2191i % q) + 1) * \u03b2 + (-\u2191(\u2191j % q) - 1) * \u03b2 = (\u2191(\u2191\u2191i % \u2191q) + 1 + -(\u2191(\u2191\u2191j % \u2191q) + 1)) * \u03b2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L681"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "4b354e3e595d9ac9d669c19708cbb4105bde1efdb138410ba3f65692a8193a73"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 691,
      "start_column": 10,
      "end_line": 691,
      "end_column": 15,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nthis\u271d : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\nthis :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) =\n    \u2191(\u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) + -(\u2191\u2191(finProdFinEquiv.symm.toFun j).2 + 1)) * \u03b2\nH : (\u2191(\u2191\u2191i % \u2191q) + 1 + (-1 + -\u2191(\u2191\u2191j % \u2191q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1))\n\u22a2 (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) \u2194\n    \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) / (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q)))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L691"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d0c476a6a8f14102657bcfcf6d2bc6edc8174eaf178b9c9f89ac11f24711fc06"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 693,
      "start_column": 6,
      "end_line": 693,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case neg\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nthis\u271d\u00b9 : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\nthis\u271d :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) =\n    \u2191(\u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) + -(\u2191\u2191(finProdFinEquiv.symm.toFun j).2 + 1)) * \u03b2\nH : (\u2191(\u2191\u2191i % \u2191q) + 1 + (-1 + -\u2191(\u2191\u2191j % \u2191q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1))\nthis :\n  (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) \u2194\n    \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) / (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q)))\n\u22a2 \u03b2 = \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L693"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2a6dc748e02d7a5c038cb659dffeda600ea04ba1f07c7508f6b6f8e14286dc6b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 795,
      "start_column": 2,
      "end_line": 795,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d\u00b9 : Fin (q * q)\nhq0 : 0 < q\nk : \u2115\nhR : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d\u00b9 = 0\nt\u271d : Fin (q * q)\nthis : \u2200 (x : \u2102), iteratedDeriv k (fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) x = 0\nderiv_eq :\n  (iteratedDeriv k fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) = fun x =>\n    \u2211 t, \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) * \u03c1 \u03b1 \u03b2 q t ^ k\nderiv_eq_0 : iteratedDeriv k (fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) 0 = 0\nt : Fin (q * q)\nht : t \u2208 Finset.univ\n\u22a2 \u03c1 \u03b1 \u03b2 q t ^ \u2191t\u271d = \u03c1 \u03b1 \u03b2 q t ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L795"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T00:24:25+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a7b4c434a5065ae1c080e92645409077dfb7d51f28bf4bdf9e36f0a118f9e3c5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 926,
      "start_column": 2,
      "end_line": 926,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hR\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk : \u2115\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nhl : l < n K q\n\u22a2 R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L926"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:10:19+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "0961b94062999728c10a4c5d873627eac2b7df239f59bab7617e1d0500e6d0a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 957,
      "start_column": 2,
      "end_line": 957,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv this : iteratedDeriv k R \u2191l = 0\n\u22a2 n K q \u2264 (Exists.choose \u22ef).order",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L957"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "23592e4d9edd52e29530f4a60d8fd67eb571ddda6a9264b24df3c27753922555"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 956,
      "start_column": 78,
      "end_line": 956,
      "end_column": 83,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv : iteratedDeriv k R \u2191l = 0\n\u22a2 \u2191(finProdFinEquiv.symm.toFun u).1 + 1 < n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L956"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "23756589725c27826520e9640a1ff8edaa833abdcb6e234fc17a76157908b5b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 964,
      "start_column": 6,
      "end_line": 964,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk l : \u2115\nhkn : k < n K q\n\u22a2 (Exists.choose \u22ef).order \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L964"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f5704d4507aceae0f2aa51b9306d57707035c4017bee32354b5edc99dacda2d0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 979,
      "start_column": 50,
      "end_line": 979,
      "end_column": 55,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  \u2203 l\u2080, iteratedDeriv r R \u2191\u2191l\u2080 \u2260 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L979"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ba8bc9c0b5c0a658690d2033337d422cc1b3284ab99cf62d3b51b53a835b1916"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1000,
      "start_column": 2,
      "end_line": 1000,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nH : \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0\n\u22a2 False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1000"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-01T02:10:10+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "bd432ec37c5700b0d9776c266d43a497644476096dbf8586a50f0d8f2eff38fb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1030,
      "start_column": 4,
      "end_line": 1030,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 IsIntegral (\ud835\udcde K)\n    (c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022 rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1030"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2d93563d376b94707e4ab26b556bfc9e67c937097baf27c33e767d5b016b441b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1071,
      "start_column": 6,
      "end_line": 1071,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1071"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "853e0d77e539b251804a5bc56196240c2bc19604aeeac24f19a17767394273cb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1072,
      "start_column": 6,
      "end_line": 1072,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.ha\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 0 < c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1072"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "606669bfd01ece1705b29ec23db54c1a0b7ddc15416015f690d8263681d91849"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1073,
      "start_column": 6,
      "end_line": 1073,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1073"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "7cea1217f82b127803488c4b8ba1d091a3a619666b1f3ca89924d3aaf8be7c4f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1089,
      "start_column": 6,
      "end_line": 1089,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\n\u22a2 |LinearMap.det\n        ((LinearMap.mul \u2124 (\ud835\udcde K))\n          (RingOfIntegers.restrict\n            (fun x =>\n              _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022\n                rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n            \u22ef \u2124))| =\n    |c\u03c1 * LinearMap.det ((LinearMap.mul \u2124 K) \u03c1)|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1089"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "638a919557faf4cbf8f84703429c4a960e5a7e370f228aef27a9943ec4c1b64e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1093,
      "start_column": 4,
      "end_line": 1093,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis\u271d : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\nthis : |(Algebra.norm \u2124) c1\u03c1| = |(Algebra.norm \u2124) c\u03c1| * |(Algebra.norm \u2124) \u03c1|\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2191|(Algebra.norm \u2124) \u03c1|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1093"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "c08e7d9c7f53f303d7280eb4f2e560248bda1e229a19ae50c891eebfa9cefc5e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1094,
      "start_column": 2,
      "end_line": 1094,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc.step\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191|(Algebra.norm \u2124) \u03c1| < \u2016(Algebra.norm \u211a) \u03c1\u2016",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1094"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1bb77735175bf54bf573205ae22d01467a990025fa90ebbab20286eb21617eb3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1061,
      "start_column": 16,
      "end_line": 1061,
      "end_column": 21,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 (c\u2085 ^ r)\u207b\u00b9 = c\u2085 ^ (-\u2191r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1061"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "571ebd41b3d4ff4cc0ca7d6f6cf32c8eecb1662c6ccaa31685ff90c470dd74c7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1139,
      "start_column": 6,
      "end_line": 1139,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\nthis : c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) = c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * 1\n\u22a2 1 \u2264 \u2191\u2191t * (c\u2086 * \u2191q) ^ r * c\u2087 ^ q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1139"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16affe970001c9ef33437483cc7b586d1d945d16becdff3b2b2d8275af774a4c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1145,
      "start_column": 4,
      "end_line": 1145,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (\u2191\u2191t * (c\u2086 * \u2191q) ^ r * c\u2087 ^ \u2191q) \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1145"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d79d37f1406e19fa4f7de61e8bd4ce0d4507dd387fe4c34421079b5ffdab98c0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1159,
      "start_column": 4,
      "end_line": 1159,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  DifferentiableAt \u2102 S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1159"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16ca67005d892418cf9e51eb2268b7eaf1e2a89123d29d2dd78fb4552eb1c4a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1220,
      "start_column": 8,
      "end_line": 1220,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 0 < \u2191r / \u2191q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1220"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "38f238d23ae462d5bedba7a0e04635706562cebe03d13d7cb75d120eea34383a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1225,
      "start_column": 4,
      "end_line": 1225,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hc\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191r / \u2191q)\n\u22a2 ContinuousWithinAt S (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191r / \u2191q))) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1225"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "4319f3a02364602af95ffbddb11f5b1b496919e4c113a33559356eafa9c63e5a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1250,
      "start_column": 4,
      "end_line": 1250,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u03c3 \u03c1 = Complex.log \u03b1 ^ (-\u2191r) * S \u2191l\u2080",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1250"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f4f9d52575496e3211263f295d7690860fa69887d035e4ca1fd56c2b940af777"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1273,
      "start_column": 4,
      "end_line": 1273,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2016R z\u2016 \u2264 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1273"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2ceccf12ec59752e19baada91beef6f6d3e7cc08dd75b203d429f108a3143526"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1274,
      "start_column": 4,
      "end_line": 1274,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q)) \u2264\n    \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1274"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e6a9621a9e15c2cc273d2f35221d6681b44e345db0eb3c47076749fbc88b3cb4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1275,
      "start_column": 4,
      "end_line": 1275,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1275"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "564c08711ec656026c89959340379b48c141322b3422836a881faef18ca334fc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1361,
      "start_column": 2,
      "end_line": 1361,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016S z\u2016 \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1361"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1acfb2b51abbcf5547166be07993300737d958780f8475cb8e72db076adb2bd2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1448,
      "start_column": 4,
      "end_line": 1448,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1448"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e0374ba3e3de222b7291fba300e7eccaf078f60df672a882a2f17519c294ae1d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1449,
      "start_column": 4,
      "end_line": 1449,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c\u2081\u2084 ^ r * \u2191r ^ (-\u2191r / 2 + 3 * \u2191(h K) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1449"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "410ab0ee4709d8167a99827aa77ffcfc22ebd4330c8c4c5334f8b2634d12b198"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1444,
      "start_column": 32,
      "end_line": 1444,
      "end_column": 37,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1444"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ea9f2aeca05e5a24af299aa20dce0f4f7748493debe635788c023dff26d8ca6a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1458,
      "start_column": 2,
      "end_line": 1458,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h.left\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2265 n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1458"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "5ee0c3be5ed07e970fff36cc10e69d9e226a0786f6ea117a2184349673515b6d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1473,
      "start_column": 4,
      "end_line": 1473,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191r ^ (r / 2 - 3 * h K / 2) < c\u2081\u2084 ^ r * c\u2085 ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1473"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f441878653743527aeca292226c3d46c74ca56d5bc7217f75ba749c7a7383a15"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 359,
      "start_column": 2,
      "end_line": 359,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 \u2264\n    \u2191(C_6_1_5 a) * (1 + \u2191(nndist_{\ud835\udd20 p' ,\u2191D ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p))) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) / volume \u2191(\ud835\udcd8 p) *\n      \u222b\u207b (y : X) in E p', \u2016g y\u2016\u2091 * \u222b\u207b (y : X) in E p, \u2016g y\u2016\u2091",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L359"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6befc5da4481a4528f3242732f32719a5691e6c6c927ed944708da65178560d8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d424334e3a1ad3994ff5c918fd6646ef8d8aaa501b080bd8d088d93b8c202c91"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 368,
      "start_column": 84,
      "end_line": 368,
      "end_column": 89,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9c3d5b5761f571a87d4227105f50b7bccfd865b24a56a0fdbf266e2458bae263"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nO : Set X\nhO : IsOpen O \u2227 O \u2260 univ\n\u22a2 \u2203 c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) \u2227\n      \u22c3 i, ball (c i) (3 * r i) = O \u2227\n        (\u2200 (i : \u2115), \u00acDisjoint (ball (c i) (7 * r i)) O\u1d9c) \u2227\n          \u2200 x \u2208 O, Cardinal.mk \u2191{i | x \u2208 ball (c i) (3 * r i)} \u2264 \u2191(2 ^ (6 * a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3a017eaecc2bd955c490e663dc39f0177e25ac66177746cac4f9ed1642644ae2"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 czBall3 ha hf hX i}.Finite",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5ce4e2732fc83213332e0e708c567e326999e9aad40d5d7f6553df8e91abec9f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ni : \u2115\n\u22a2 czBall ha hf hX i \u2286 czPartition ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "81b3c040dbd6d31256a2a93dbfef7ad20659e0772933eeb0fa79119594b01266"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => czPartition ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a27202be503557b59aefe1efd5e8920c45bbb73361eb79f474f48a440b4c5828"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 czPartition ha hf hX i\nhj : x \u2208 czPartition ha hf hX j\n\u22a2 i = j",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "ec528e4cc6b300527ebf683dbe6c018fc21a012a828028bcd2f14f1fc52d97b3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 \u22c3 i, czPartition ha hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "50cf553cb3438b8baea185bc4a42b2914c3ad299f3406aacb83f9c063d788543"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), czRemainder' ha hf hX i x = czRemainder ha hf \u03b1 x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T17:21:05+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "dac93e4181a286b4ce040895c2ce36af15538c31d1a044a3259a4c6cebd93459"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 202,
      "start_column": 2,
      "end_line": 202,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (czApproximation ha hf \u03b1)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "731bba3c4cf19d17a5fa46050be1fc540bd2072f3ecf7a1243bf0bbf30fa4fee"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "e324ec1bf49367ba48bbb2830a2a53df6ff962571e5bbbaee4ab460901378bd1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0079b7190025f8a6a492a167ea4e5a90850fcbbc2965c9fc42d53cf9f88e2f9f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czApproximation ha hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "41a517539345169a0cdd71e514728b588ec4f467863df7d09644e2613674c6a6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 230,
      "start_column": 2,
      "end_line": 230,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (czRemainder' ha hf hX i) \u2286 czBall3 ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "075f798ec0455a651505323aaa2afb6faee16f0ac64b468f6e7f942ab26dc259"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 236,
      "start_column": 2,
      "end_line": 236,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), czRemainder' ha hf hX i x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5c9d65b231d65742a9b722218a34a348d6b46cbe6a4928cb2910796502da34bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 241,
      "start_column": 2,
      "end_line": 241,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), czRemainder ha hf \u03b1 x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "127ee0ff2f31946c6700db45e7a2180f60ac1dafb91b1d7778728513dc5cc388"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (czRemainder' ha hf hX i) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume (czBall3 ha hf hX i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0562fd5a2d18ac401d0c2d2af9a2e4d77f87ce92be4c959975c958b53a4a5334"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 253,
      "start_column": 2,
      "end_line": 253,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder ha hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "01f57c78818ef6e984d2ed7b5adfeeca57221442f50f663b6242b760e537ad62"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (czBall3 ha hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "b6fb3ac078fb792023e20451ec18349137d8f4ab5e6f55a4dd70a36e4c60387b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9840b78a053f26a2f377c3402ab45b7918ca6c06a9a62b2cf91114e61b4daec7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 271,
      "start_column": 2,
      "end_line": 271,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (czRemainder' ha hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L271"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "4a18b036baa81ec20121dc0b8f8b12f48277ef1c0f73bbbbf6e6e3e171627a92"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 277,
      "start_column": 2,
      "end_line": 277,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder ha hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3a9b84009df5a5f861881b640665003321af7fc3cbc7118bdb54cc4234089f10"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 295,
      "start_column": 2,
      "end_line": 295,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (czApproximation ha hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L295"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7720b5df73764559acd731ce3b79b35e9145ddb61c6da38f138811e50a2b5b4b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 311,
      "start_column": 2,
      "end_line": 311,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (\u03a9 ha hf \u03b1)\u1d9c\nhX : GeneralCase f \u03b1\n\u22a2 \u2016czOperator K r (czRemainder ha hf \u03b1) x\u2016\u2091 \u2264 3 * czOperatorBound ha hf hX x + \u03b1 / 8",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L311"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f3475267796ca2060b57dbda940d978c859d3228c9637c5c170bf14201e88e98"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 321,
      "start_column": 2,
      "end_line": 321,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 volume ((\u03a9 ha hf \u03b1)\u1d9c \u2229 czOperatorBound ha hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264 \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L321"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "dd7931a06397f2150ac2fcb0a6bd01a37f7768400617535a976ede5cfedcc452"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 332,
      "start_column": 2,
      "end_line": 332,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 distribution (czOperator K r (czRemainder ha hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L332"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "63e23a1eba6e3cc213c6e85182744813d12002c7f91639ab567ea589d346b364"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "YK-poincare1",
      "commit": "63a19cb3ae132c07251ab30ed60965c3841540ab",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 387,
      "start_column": 35,
      "end_line": 387,
      "end_column": 40,
      "file": "Mathlib/Analysis/Calculus/Poincare/OneForm.lean"
    },
    "debug_info": {
      "goal": "E : Type u_1\nF : Type u_2\ninst\u271d\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b2 : NormedSpace \u211d E\ninst\u271d\u00b9 : NormedAddCommGroup F\ninst\u271d : NormedSpace \u211d F\na\u271d b c d : E\n\u03c9 : E \u2192 E \u2192L[\u211d] F\nd\u03c9 : E \u2192 E \u2192L[\u211d] E \u2192L[\u211d] F\n\u03b3\u2081 : Path a\u271d b\n\u03b3\u2082 : Path c d\ns : Set E\n\u03c6 : \u03b3\u2081.Homotopy \u2191\u03b3\u2082\nh\u03c9 : \u2200 x \u2208 s, HasFDerivWithinAt \u03c9 (d\u03c9 x) s x\nhd\u03c9 : \u2200 x \u2208 s, \u2200 a \u2208 tangentConeAt \u211d s x, \u2200 b \u2208 tangentConeAt \u211d s x, ((d\u03c9 x) a) b = ((d\u03c9 x) b) a\nh\u03c6s : \u2200 (a : \u2191I \u00d7 \u2191I), \u03c6 a \u2208 s\nhF : ContDiffOn \u211d 2 (fun xy => (IccExtend \u22ef (\u03c6.extend xy.1)) xy.2) (Icc (0, 0) (1, 1))\n\u03c8 : \u211d \u00d7 \u211d \u2192 E := fun xy => Set.IccExtend \u22ef (\u21d1(\u03c6.extend xy.1)) xy.2\nh\u03c8s : \u2200 (a : \u211d \u00d7 \u211d), \u03c8 a \u2208 s\nU : Set (\u211d \u00d7 \u211d) := Ioo 0 1 \u00d7\u02e2 Ioo 0 1\nhU : U = Ioo 0 1 \u00d7\u02e2 Ioo 0 1\nhUI' : interior (Icc 0 1) = U\nhUI : U \u2286 Icc 0 1\nhId : UniqueDiffOn \u211d (Icc 0 1)\nh\u03c8' : ContDiffOn \u211d 2 \u03c8 U\nhUo : IsOpen U\nd\u03c8 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] E := fderivWithin \u211d \u03c8 (Icc 0 1)\nd2\u03c8 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] \u211d \u00d7 \u211d \u2192L[\u211d] E := fderivWithin \u211d d\u03c8 (Icc 0 1)\nh\u03c8 : \u2200 a \u2208 U, HasFDerivAt \u03c8 (d\u03c8 a) a\nh\u03c8c : Continuous \u03c8\nhd\u03c8 : DifferentiableOn \u211d d\u03c8 (Icc 0 1)\nhd\u03c8Ioo : \u2200 a \u2208 Ioo 0 1 \u00d7\u02e2 Ioo 0 1, HasFDerivAt d\u03c8 (d2\u03c8 a) a\n\u03b7 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => (\u03c9 (\u03c8 a)).comp (d\u03c8 a)\nd\u03b7 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] \u211d \u00d7 \u211d \u2192L[\u211d] F :=\n  fun a => ((ContinuousLinearMap.compL \u211d (\u211d \u00d7 \u211d) E F) (\u03c9 (\u03c8 a))).comp (d2\u03c8 a) + (d\u03c9 (\u03c8 a)).bilinearComp (d\u03c8 a) (d\u03c8 a)\nh\u03b7c : ContinuousOn \u03b7 (Icc 0 1)\nh\u03b7 : \u2200 a \u2208 U, HasFDerivAt \u03b7 (d\u03b7 a) a\nf : \u211d \u00d7 \u211d \u2192 F := fun a => (\u03b7 a) (0, 1)\ng : \u211d \u00d7 \u211d \u2192 F := fun a => -(\u03b7 a) (1, 0)\nf' : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => ((ContinuousLinearMap.apply \u211d F) (0, 1)).comp (d\u03b7 a)\ng' : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => -((ContinuousLinearMap.apply \u211d F) (1, 0)).comp (d\u03b7 a)\nhd2\u03c8_symm : \u2200 a \u2208 Icc 0 1, \u2200 (x y : \u211d \u00d7 \u211d), ((d2\u03c8 a) x) y = ((d2\u03c8 a) y) x\na : \u211d \u00d7 \u211d\nha : a \u2208 Icc 0 1\nS : Submodule \u211d E := Submodule.span \u211d (tangentConeAt \u211d s (\u03c8 a))\nH\u2081 : \u2200 x \u2208 S, \u2200 y \u2208 S, ((d\u03c9 (\u03c8 a)) x) y = ((d\u03c9 (\u03c8 a)) y) x\nz : \u211d \u00d7 \u211d\n\u22a2 (d\u03c8 a) z \u2208 S",
      "url": "https://github.com/leanprover-community/mathlib4/blob/63a19cb3ae132c07251ab30ed60965c3841540ab/Mathlib/Analysis/Calculus/Poincare/OneForm.lean#L387"
    },
    "metadata": {
      "blame_email_hash": "9771bac611b3",
      "blame_date": "2025-04-13T14:35:21-05:00",
      "inclusion_date": "2025-04-13T23:08:58.715701+00:00"
    },
    "id": "f82e691bf9289aaaa1b0b45548c37d10fc0a3516cb5cd131fca26884a0fd55aa"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 216,
      "start_column": 36,
      "end_line": 216,
      "end_column": 41,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u271d : \u00ab$A\u00bb\n$hyp\u271d : Option Expr\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb := \u2191\u00ab$n\u00bb * 1\n\u22a2 \u00ab$a\u00bb = \u2191\u00ab$n\u00bb * 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "9d45431a387b81457a8fe631f6e30f197f423fd8532d9964b10f38e57473e9ea"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 36,
      "end_line": 219,
      "end_column": 41,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u00bb $x\u271d : \u00ab$A\u00bb\n$e\u271d : \u2115\n$b\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$b'\u00bb : \u00ab$A\u00bb\n\u00ab$pb'\u00bb : $b\u271d = \u2191\u00ab$n\u00bb * \u00ab$b'\u00bb\n\u22a2 $x\u271d ^ $e\u271d * $b\u271d = \u2191\u00ab$n\u00bb * ($x\u271d ^ $e\u271d * \u00ab$b'\u00bb)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "218921d7aaf2d0ca99df7c9ad56cbe41c922d918f30b5e8f9dfe79c641658120"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 241,
      "start_column": 28,
      "end_line": 241,
      "end_column": 33,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n\u22a2 \u00ab$r\u00bb \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "766769845569eb006c7a112b671258ab15540aa03b804ec12b3f5e954697a2f0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 243,
      "start_column": 26,
      "end_line": 243,
      "end_column": 31,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n$r\u271d : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$pr\u00bb : $r\u271d * \u2191\u00ab$n\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u271d \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L243"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "4f84bcffb9d9d42623d57a5933ca36efa39a5635f48f0a98ed661b89e780e9f7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 255,
      "start_column": 47,
      "end_line": 255,
      "end_column": 52,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$r\u2081'\u00bb \u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "45b808cfdbe493d69630ad9704b5af20853226ab3a366877653d9690c423a2b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 266,
      "start_column": 46,
      "end_line": 266,
      "end_column": 51,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d : \u00ab$R\u2081\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L266"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "2b14e9407c4b7a62038201579d07559cf91174139183b7dca4a434363695e10f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 276,
      "start_column": 46,
      "end_line": 276,
      "end_column": 51,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d : \u00ab$R\u2081\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2081\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "4f0911cbd09a936bcc1d04c49aa20387d34c8cf5e42d5aae7ceeec97802df23c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 325,
      "start_column": 92,
      "end_line": 325,
      "end_column": 97,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 1 + 1 = 1 \u2022 2 + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L325"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3b0d83f38e94f7f47e5935914872743487236d2d494c8416d2476c71f3297add"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 388,
      "start_column": 20,
      "end_line": 388,
      "end_column": 25,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2082\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u00bb : Type v\u271d\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb \u00ab$t\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a'\u00bb : \u00ab$A\u00bb\n\u00ab$pa'\u00bb : \u00ab$a\u2081\u00bb * \u00ab$a\u00bb = \u00ab$a'\u00bb\n\u00ab$ra'\u00bb : \u00ab$A\u00bb\n\u00ab$pra'\u00bb : \u00ab$r\u00bb \u2022 \u00ab$a'\u00bb = \u00ab$ra'\u00bb\n\u00ab$t'\u00bb : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : \u00ab$a\u2081\u00bb * \u00ab$t\u00bb = \u00ab$t'\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$p\u00bb : \u00ab$ra'\u00bb + \u00ab$t'\u00bb = $expr\u271d\n\u22a2 \u00ab$a\u2081\u00bb * (\u00ab$r\u00bb \u2022 \u00ab$a\u00bb + \u00ab$t\u00bb) = $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L388"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "80f7c3b8bdf32dd060c26f4723bd3e60fc578f5ac7b8ddd2cf0cab67e47d272c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 543,
      "start_column": 24,
      "end_line": 543,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$n\u00bb : Name\n$us\u271d : List Level\n$x\u271d : Expr \u00d7 Expr \u00d7 Bool\n\u00ab$a\u00bb \u00ab$b\u00bb : \u00ab$A\u00bb\n\u00ab$e\u00bb : \u00ab$A\u00bb := \u00ab$a\u00bb + \u00ab$b\u00bb\n$expr\u271d\u00b2 : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u00bb = $expr\u271d\u00b2\n$expr\u271d\u00b9 : \u00ab$A\u00bb\n\u00ab$pb\u00bb : \u00ab$b\u00bb = $expr\u271d\u00b9\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pab\u00bb : $expr\u271d\u00b2 + $expr\u271d\u00b9 = $expr\u271d\n\u22a2 \u00ab$e\u00bb = $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L543"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "802f97fd289945fd786424c05ef6eeea45921efd06b350ebb384983750929b4d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 552,
      "start_column": 24,
      "end_line": 552,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$n\u00bb : Name\n$us\u271d : List Level\n$x\u271d : Expr \u00d7 Expr \u00d7 Bool\n\u00ab$a\u00bb \u00ab$b\u00bb : \u00ab$A\u00bb\n\u00ab$e\u00bb : \u00ab$A\u00bb := \u00ab$a\u00bb * \u00ab$b\u00bb\n$expr\u271d\u00b2 : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u00bb = $expr\u271d\u00b2\n$expr\u271d\u00b9 : \u00ab$A\u00bb\n\u00ab$pb\u00bb : \u00ab$b\u00bb = $expr\u271d\u00b9\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pab\u00bb : $expr\u271d\u00b2 * $expr\u271d\u00b9 = $expr\u271d\n\u22a2 \u00ab$e\u00bb = $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L552"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "c9add0da1cab1289b4cc5d6816833eec11214f7239ce989bc5de35b10dc35e51"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 618,
      "start_column": 2,
      "end_line": 618,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 1 \u2022 (x ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0 = 1 \u2022 (1 ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L618"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f40b2d6e4a90d2f98d59096845fbd5d8e666f1054030dc5bbe21a1ba7eb762c2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 595,
      "start_column": 2,
      "end_line": 595,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 (1 \u2022 2 + 1) \u2022 (x ^ Nat.rawCast 1 * 1) + Nat.rawCast 0 =\n    1 \u2022 (x ^ Nat.rawCast 1 * (3 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L595"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "cba525f732b0879b2fe747b8f81b3e9c7a7f7de0bbbcca4313ce6bf980b0cdc4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 639,
      "start_column": 2,
      "end_line": 639,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x y : \u211a\n\u22a2 x * y + (x ^ 2 + (x * y + y ^ 2)) = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L639"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "43c003466af897771993222a0f28e9a56af8dd20abaad469d42a65e8393a97d7"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 24,
      "start_column": 63,
      "end_line": 24,
      "end_column": 68,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type ?u.2318\ninst\u271d : DecidableEq \u03b1\nl : List \u03b1\nx y : \u03b1\nn : \u2115\n\u22a2 Chain (fun x1 x2 => x1 < x2) 0 (range n)",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L24"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "650ac9f6087ca15b30b5b57ba9fe78e3a6c2e98a039aacf7b7d25d28e31b8a9d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "case intro\n\u03b1 : Type u_1\ninst\u271d\u00b2 : DecidableEq \u03b1\nR : \u03b1 \u2192 \u03b1 \u2192 Prop\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : IsTrans \u03b1 R\nl : List \u03b1\ni j : Fin l.length\nh : Chain' R l\neij : i \u2260 j\nnRij : \u00acR (l.get i) (l.get j)\nnRji : \u00acR (l.get j) (l.get i)\n\u22a2 False",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "13f7907fcb967107aee729b6da7cf90baf7fbdc05eb71d1afb5150d435ec800b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 110,
      "start_column": 4,
      "end_line": 110,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "case p\nF : Frame\nr : F.World\ninst\u271d : F.IsRooted r\nn : \u2115+\n\u22a2 List.Chain' (fun a b => a < b) do\n    let a \u2190 List.range \u2191n\n    pure \u2191a",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L110"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "7e5768b4d669745331e05caaaf79d9696e81c2e9a8db94176ec685729336e0e0"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 251,
      "start_column": 2,
      "end_line": 251,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "M : Model\ninst\u271d\u00b9 : IsTrans M.World M.Rel\ninst\u271d : IsIrrefl M.World M.Rel\nl : List M.World\nn : \u2115+\nl_length : l.length = \u2191n + 1\nl_chain : List.Chain' (fun x1 x2 => x1 \u227a x2) l\n\u0393 : Finset (Formula \u2115)\n\u0393_length : \u0393.card = \u2191n\n\u22a2 \u2203 x \u2208 l, x \u22a7 (Finset.image (fun \u03b3 => \u25a1\u03b3 \u279d \u03b3) \u0393).conj",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L251"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "7f5dce4b990d4048d1d39c649b212d3d27864fbed8fcab8fd277eeb38c28a088"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 102,
      "start_column": 2,
      "end_line": 102,
      "end_column": 7,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "n m : Nat\n\u22a2 List.replicate (2 * n) () = List.replicate n () ++ List.replicate n ()",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "568abb06ec8e089d6c8f26eee9d0f75ef985ded6e40ac5c66ad644307715bf6d"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 108,
      "start_column": 2,
      "end_line": 108,
      "end_column": 7,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "n m : Nat\n\u22a2 List.replicate n () ++ List.replicate m () = List.replicate (n + m) ()",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L108"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "10527d7f182ae93d223919a1aae377f5dbbc2cc4afe42783e7b9c55e20d27741"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 169,
      "start_column": 82,
      "end_line": 169,
      "end_column": 87,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : Star R\nx : R\n\u22a2 star x * x = x * star x",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "b8e6a617e0cd645aeb14c4d11910d7b306f6b4356a8ac700d9b76dcbed5d1792"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 227,
      "start_column": 78,
      "end_line": 227,
      "end_column": 83,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : Zero \u03b1\ninst\u271d\u00b9 : HMul \u03b1 \u03b1 \u03b1\ninst\u271d : LE \u03b1\na : \u03b1\n\u22a2 0 \u2264 a * a",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L227"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "22068073ae32646f2534f7f35f61036cb591dbebdc590fc9800937fe1d753b29"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 267,
      "start_column": 73,
      "end_line": 267,
      "end_column": 78,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pf_isNat_zero\u00bb : NormNum.IsNat (\u00ab$a\u2081\u00bb + \u00ab$a\u2082\u00bb) 0\n\u22a2 1 \u2022 \u00ab$a\u2081\u00bb + 1 \u2022 \u00ab$a\u2082\u00bb = 1 \u2022 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L267"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3f78f6436b79d4f9920d80e3c666ec2d11b19a8aa4fc0c36e76159ad2f67c16d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 269,
      "start_column": 52,
      "end_line": 269,
      "end_column": 57,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb $expr\u271d : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u2081\u00bb + \u00ab$a\u2082\u00bb = $expr\u271d\n\u22a2 1 \u2022 \u00ab$a\u2081\u00bb + 1 \u2022 \u00ab$a\u2082\u00bb = 1 \u2022 $expr\u271d",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L269"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "03ee8c96d596ba8c9756e5cd4a87b72567ef832c45c8f9bbd0faa737052b54e1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 283,
      "start_column": 49,
      "end_line": 283,
      "end_column": 54,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d \u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 $r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$r\u2081'\u00bb \u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L283"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "21dc9ddd09c87661527cd840e63c9f6182a37c62ea72180992fb21cb2c390416"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 294,
      "start_column": 48,
      "end_line": 294,
      "end_column": 53,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L294"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "1234d8b57ec5afcc2ad682a4a316769f9438e7c94608d26f8bee4166502a9573"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 304,
      "start_column": 48,
      "end_line": 304,
      "end_column": 53,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2081\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L304"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "ba0ef1d502fe07082fa9b6489fda91b0d81c1e35e1cbbcae48ae84306b3f5038"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 623,
      "start_column": 2,
      "end_line": 623,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 x + x + x = 3 * x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L623"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "ef0d20c676f00a4a6c9a5591cdf2e55d2feaad0147ed9bedcd787d8658a24105"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 629,
      "start_column": 2,
      "end_line": 629,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : \u211a\n\u22a2 1 \u2022 (x ^ Nat.rawCast 1 * Nat.rawCast 4) + Nat.rawCast 0 =\n    1 \u2022 (x ^ Nat.rawCast 1 * (4 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L629"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3c27d965f07ffc4df06e3de3533159998d5d61d6ff731d1d9777386b0d7eeae8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 649,
      "start_column": 2,
      "end_line": 649,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x y : \u211a\n\u22a2 x ^ 2 + x * y = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L649"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "23843aaf991ffc6ecb13c778b8376f79f6c0b05f7aeb64daf34429d0f22028db"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 657,
      "start_column": 2,
      "end_line": 657,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x y : \u211a\n\u22a2 x * y + (x ^ 2 + y ^ 2) = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L657"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "0ed1c576f3aea7b05b34a6afe1a181b3cbbd98d2ac182f0a96bf5809a810abcd"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-distribHaarChar-harder-results",
      "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 25,
      "start_column": 2,
      "end_line": 25,
      "end_column": 7,
      "file": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : LocallyCompactSpace R\ninst\u271d\u00b3 : CommRing R\ninst\u271d\u00b2 : IsTopologicalRing R\ninst\u271d\u00b9 : MeasurableSpace R\ninst\u271d : BorelSpace R\n\u22a2 Continuous \u21d1(distribHaarChar R)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-14T15:27:33+01:00",
      "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
    },
    "id": "2d9a654995dde411660797fa06220ff10e86cae6be456c754a9d914c9ddc3ee3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-distribHaarChar-harder-results",
      "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 48,
      "start_column": 2,
      "end_line": 48,
      "end_column": 7,
      "file": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9\u00b2 : TopologicalSpace R\ninst\u271d\u00b9\u00b9 : LocallyCompactSpace R\ninst\u271d\u00b9\u2070 : CommRing R\ninst\u271d\u2079 : IsTopologicalRing R\ninst\u271d\u2078 : MeasurableSpace R\ninst\u271d\u2077 : BorelSpace R\nS : Type u_2\ninst\u271d\u2076 : TopologicalSpace S\ninst\u271d\u2075 : LocallyCompactSpace S\ninst\u271d\u2074 : CommRing S\ninst\u271d\u00b3 : IsTopologicalRing S\ninst\u271d\u00b2 : MeasurableSpace S\ninst\u271d\u00b9 : BorelSpace S\ninst\u271d : SecondCountableTopologyEither R S\nr : R\u02e3\ns : S\u02e3\n\u22a2 (distribHaarChar (R \u00d7 S)) (MulEquiv.prodUnits.symm (r, s)) = (distribHaarChar R) r * (distribHaarChar S) s",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L48"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-14T15:27:33+01:00",
      "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
    },
    "id": "009491d4d2ba3d50fda0bed62f549b9a80519cc7f21744b5aedfa1c50be971fc"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 148,
      "start_column": 2,
      "end_line": 148,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "m : Type u_3\n\u03b1 : Type u_4\n\u03b2 : Type u_5\ninst\u271d\u2075 : Fintype m\ninst\u271d\u2074 : DecidableEq m\ninst\u271d\u00b3 : NonAssocSemiring \u03b1\ninst\u271d\u00b2 : NonAssocSemiring \u03b2\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : TopologicalSpace \u03b2\nf : \u03b1 \u2192+* \u03b2\nhf : Topology.IsOpenEmbedding \u21d1f\n\u22a2 IsOpenMap \u21d1f.mapMatrix",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L148"
    },
    "metadata": {
      "blame_email_hash": "6a0fe98fa9e8",
      "blame_date": "2025-04-14T10:40:13-04:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "47e1be26d6aab916d27553170f755f5e0fea0491529dcb4535fcfdb07b6e776b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 60,
      "start_column": 9,
      "end_line": 60,
      "end_column": 14,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "8cb97b78697f9d3d722d093d71b78752c3c72b97c20005418079521ebadcccd7"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 78,
      "start_column": 2,
      "end_line": 78,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "9634e91b97026d4ad9052a45c8fd57dfc3c182faaa5246f71f16313069ecc629"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 138,
      "start_column": 9,
      "end_line": 138,
      "end_column": 14,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "1c0a1df9559a18bb92a7f40930351ea8d0ce8ddd70729616ceccef389450c865"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "82e60541b214bc81155e20d2b578480abc213e2150bdf7402666f657eda5586e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 255,
      "start_column": 2,
      "end_line": 255,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Components.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "0aab9d6bb82ed7db37f02cd3766e5569ea8b168c3de31c219928e1eb0bdcf428"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Execution.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Execution.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "2a61074c3ccfcf7f939d457ebb409734caf59d32db16b5c05cbd4516603fa744"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 277,
      "start_column": 2,
      "end_line": 277,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Execution.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Execution.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "fab5e98061abf49a10374597f780921dcb626cfadef0b571a3d9230a1cdd868a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 66,
      "start_column": 2,
      "end_line": 66,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "f4d0ac0be92fe45347961a8160754376d63b2b9fda360a4f0e627a056cc7d8c2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 80,
      "start_column": 4,
      "end_line": 80,
      "end_column": 9,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L80"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "867ef88cabb2837f4603757e9d65c8825fc376f9abc78016b5f34e2af18a749e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 85,
      "start_column": 4,
      "end_line": 85,
      "end_column": 9,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L85"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "dee2663601a025a73f7d227a392d783959a114f90f22f3d39d5e1532a1037bcf"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 102,
      "start_column": 2,
      "end_line": 102,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Equiv.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "f6342a906709e50704760d92d14d6861495954e630de19b7ceebe6014e365710"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 299,
      "start_column": 2,
      "end_line": 299,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/ToOracle.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/ToOracle.lean#L299"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "c12f0a50aa0a68c96e495510a09aa4290d5b1d6e08023f14c833f939bd1b27aa"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 338,
      "start_column": 2,
      "end_line": 338,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/ToOracle.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/ToOracle.lean#L338"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "72930107b03a92ea272700ff2bbbabe528df66a93e5973d4f6d84b5b3b7d49ec"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 100,
      "start_column": 2,
      "end_line": 100,
      "end_column": 7,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L100"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "398e6f65a5710f6a1a6a7180e6d7304fb9d20d23e4045ca25317a884572f8ef8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 104,
      "start_column": 2,
      "end_line": 104,
      "end_column": 7,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L104"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "faaeb8586861680942a5a876ac17be2f4568fb4106560e1963373cb999682f83"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 116,
      "start_column": 11,
      "end_line": 116,
      "end_column": 16,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "e4e7f3c919e1e0b7a053d288f27e1482ece834f8ce9f2982ba06d382b8a81f0a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 116,
      "start_column": 26,
      "end_line": 116,
      "end_column": 31,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "284dc3b615fb27012394433b1589974008a4f8b35e4024646efdb8eabc1232a5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 167,
      "start_column": 4,
      "end_line": 167,
      "end_column": 9,
      "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
    },
    "debug_info": {
      "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (buildMerkleTree \u03b1 n leaves).neverFails \u2227\n      \u2200 x \u2208 (buildMerkleTree \u03b1 n leaves).support,\n        verifyProof \u03b1 i (leaves.get i) (x 0).head\n            (List.Vector.ofFn fun layer => (x \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer)) =\n          pure ()\n\u22a2 (do\n        let a \u2190 buildLayer \u03b1 n leaves\n        (fun a =>\n              (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n            buildMerkleTree \u03b1 n a).neverFails \u2227\n    \u2200 (a a_1 : \u03b1) (b : List.Vector \u03b1 (n + 1)),\n      \u2200 x \u2208 (buildLayer \u03b1 n leaves).finSupport,\n        (a, a_1, b) \u2208\n            ((fun a =>\n                  (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                    List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n                buildMerkleTree \u03b1 n x).finSupport \u2192\n          verifyProof \u03b1 i a a_1 b = pure ()",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/CommitmentScheme/MerkleTree.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "48f1c44bf91e7486e69bb0996e88393cf51e38641df150a1e92d302f09a48481"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 186,
      "start_column": 33,
      "end_line": 186,
      "end_column": 38,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L186"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "dacf5ebc6b1376fe0080217f9e31453eb7e421cc968f1573ca7a59cda0c96edc"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 187,
      "start_column": 4,
      "end_line": 187,
      "end_column": 9,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L187"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "51b69f0957a488cd0be6354c07bef0f80aa35be4964380e1e5511b17da8386b6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 231,
      "start_column": 4,
      "end_line": 231,
      "end_column": 9,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L231"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "1cc7055605da48496889f6ce06e4846ddebce297904deef05ec942747bf5f53c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 234,
      "start_column": 4,
      "end_line": 234,
      "end_column": 9,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L234"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "7f4c0d40c3a4a45cd608915568d2f024a059acd9e642cda20f1edd3e5fc8938a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 269,
      "start_column": 67,
      "end_line": 269,
      "end_column": 72,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L269"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "855f019cf83f3de6c9e9a8b64e72cc31b88bc4fd7dd29895df5d3dd638009218"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 275,
      "start_column": 65,
      "end_line": 275,
      "end_column": 70,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/CodingTheory/Basic.lean#L275"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "dff5b80e649eb902ea964bacb9d64264de977f15b8cec12ee391d06f06c7d84e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 34,
      "start_column": 14,
      "end_line": 34,
      "end_column": 19,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "fcaa9d066a40e686bf139f2bc730a8e91da92e48a0bf22380586c10bf522c37d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 15,
      "end_line": 35,
      "end_column": 20,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "725d8301545d8cc8bdf58f6190e1faa750f7dbdf3d711cb97bda2fe612e95702"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "926c806b883fc6509eb7e9bb9d5247adaefdeb1f88cb66369e9f299eded4f279"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Equiv.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "8089709f1b8b2af9d1632cb694775e26c7b1fad81ae19ceceada9bf6e427659a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "1e129e8b5002e3ce29406a9966fc7cc34a9f9ccf361d6bb7a2260d1cdf7960bb"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "17c624cb8536c1fd31bfaa33c7773b0e78f80794efa5be69a8d93789089051e0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 138,
      "start_column": 20,
      "end_line": 138,
      "end_column": 25,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "b93f10377b8380c51bd2a01d6c5e757267f7421fc7585d4324c1fbc2766583cc"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 141,
      "start_column": 19,
      "end_line": 141,
      "end_column": 24,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "a8bbc0b64f1d4c71eee5b2b55b850c6661dcd32d586bf12f7ba937fbcc35ef24"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 142,
      "start_column": 19,
      "end_line": 142,
      "end_column": 24,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L142"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "5c5bbe154be89a1d1c59d015bc6dc2ea6e669184d5e72448a38b20e06b5ca5cf"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 144,
      "start_column": 21,
      "end_line": 144,
      "end_column": 26,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "9bf47c9f3a89bc4f573202feac157e8113dc9e0c3bb631b71e14a53cf2389cfd"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 145,
      "start_column": 21,
      "end_line": 145,
      "end_column": 26,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L145"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "28daee58a5bb6bcad2ab52a0e7a20fb13f95b3b52f88acae8485fd992b7f094b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 139,
      "start_column": 19,
      "end_line": 139,
      "end_column": 24,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "fd85abed85310036960ca68ade7d221d4327542205512b2e31703947bba70bb7"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 17,
      "end_line": 151,
      "end_column": 22,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "e6732032e50a127802d4ebca4fe768993c3543eefbd87a0f0b9cca2746837a3d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 156,
      "start_column": 18,
      "end_line": 156,
      "end_column": 23,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MlPoly/Basic.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "73a6a6eb2a2471af8f722321d35fdf1a49efd5173ef277f2bfbe40a01bff70c7"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 374,
      "start_column": 43,
      "end_line": 374,
      "end_column": 48,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L374"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T14:25:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "214ee1a76b4bbb748254a4b76847a67ece815b0b1d7f6ed8d0e9fbe6f1407141"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 402,
      "start_column": 16,
      "end_line": 402,
      "end_column": 21,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L402"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "e138643b4d9e11fcd8e677a6b10deff8893a4c2e77ba2822351c5e41d97907c9"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 497,
      "start_column": 32,
      "end_line": 497,
      "end_column": 37,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "\u22a2 True",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L497"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "a359434336781b72d6e499df4e8d9ace778413e080f9667acb207aa5b057ba2f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 557,
      "start_column": 4,
      "end_line": 557,
      "end_column": 9,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L557"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "b4bc010562a47797680ac9d8113c579280b21381e27e060101f20950bb78aa85"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 569,
      "start_column": 80,
      "end_line": 569,
      "end_column": 85,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Fin.lean#L569"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "2961c19464dd280d3a7b4f8eb9b78f891f8cfa2fd9bf0731976f9911f7ce7256"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "bc49dc653fdf3fbc6ee91a6a8e3617512f2a43a96c49727595ce752c937954ed"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 209,
      "start_column": 5,
      "end_line": 209,
      "end_column": 10,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "f620d9036c8954c4b55eec5981cfbfc26e62acb31cdc7f1d085b875332925088"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "57f9e08fb26b7ec327de80540c5a2a84067cd974339a628e8e1ae4681a9586c8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 391,
      "start_column": 75,
      "end_line": 391,
      "end_column": 80,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/Math/Operations.lean#L391"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "93224091465864a0a764b0efab4cea81d9be710151b811beec38fed30bb1c57b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7,
      "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Sumcheck.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-16T12:52:41-06:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "39779d770ef5767858c06d71b8643336568fb6fe7352da7baa0fd2955f5af4c1"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 112,
      "start_column": 2,
      "end_line": 112,
      "end_column": 7,
      "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Sumcheck.lean#L112"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-13T15:50:48-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "c7b9ff003baf617406911f115aeb455ac6753c693d43f1bd51da74e9a2adca73"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 69,
      "start_column": 58,
      "end_line": 69,
      "end_column": 63,
      "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
    },
    "debug_info": {
      "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Interpolation.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "82763d1f7629bd1d20391fd09c4a89771060e58ff693ca99d863ca7fa235b6da"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 171,
      "start_column": 76,
      "end_line": 171,
      "end_column": 81,
      "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
    },
    "debug_info": {
      "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/MvPolynomial/Interpolation.lean#L171"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "4168775d5eabe89d7c2e929539cf94648329f8781c3edea59dc92477588e245d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 95,
      "start_column": 16,
      "end_line": 95,
      "end_column": 21,
      "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
    },
    "debug_info": {
      "goal": "case succ\nk : \u2115\na\u271d : k > 0 \u2192 AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n\u22a2 AdjoinRoot (poly (k + 1)) = Field (k + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/BinaryTowerField/Basic.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-30T10:53:02+05:30",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "97c240f7bd1de4eae3cb19a7a4ced3081ae03ead22575317ac855c400b2ff065"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 115,
      "start_column": 59,
      "end_line": 115,
      "end_column": 64,
      "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u22a2 Irreducible (poly n)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/BinaryTowerField/Basic.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2024-06-18T17:58:42-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "c69ab22003c59445085c5189b2e6c4bd4c1ea8390c8703ad2ddfc4ea9da3e2f4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 21,
      "end_line": 197,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "36ce9236de4de3779051a9dd596d1b535319e10c123528477824b4fac03e19df"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 198,
      "start_column": 22,
      "end_line": 198,
      "end_column": 27,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L198"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "037cf6623f0a6e9ddb5241245c970c1d2a8c5b47bbb2639ee3e8e7ac2ab1c78c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 199,
      "start_column": 21,
      "end_line": 199,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L199"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "4c70f2c9540b02f926bd873403674ed36e36f5b0f21f7b7360d431f90023af61"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 200,
      "start_column": 21,
      "end_line": 200,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic-old.lean#L200"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "4811eb58b4dc66a9fd940428d4dbbb3d02fcb7fe2054db44110e08a2edc4bb5e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 571,
      "start_column": 2,
      "end_line": 571,
      "end_column": 7,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L571"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "7f207f71aadf68db2743f84356ed04011f93c426a25f093b3e17b4b63750e725"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 899,
      "start_column": 4,
      "end_line": 899,
      "end_column": 9,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L899"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "d653c43c4680286d70b3cd649fa8ae34686cec73fe771d331f643bd925560d2f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 975,
      "start_column": 6,
      "end_line": 975,
      "end_column": 11,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L975"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-03-12T19:59:09-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "6a72e89ad349e60dfb91dfbedfc71d3580c075bbf9a9847832b35b64c2310816"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1005,
      "start_column": 22,
      "end_line": 1005,
      "end_column": 27,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L1005"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "1d27d724b46c893004f2757e87e4dc9349f66fd2224f46b6b54dff851f10f78d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1006,
      "start_column": 21,
      "end_line": 1006,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L1006"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "868a74af8d690830dfe4df2156db720b6107cdfe58693a0aa08410d92c76526f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1007,
      "start_column": 21,
      "end_line": 1007,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/Data/UniPoly/Basic.lean#L1007"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "ee2f2fed64f70189aa9b0eb324ecf91dbee0cb9d3231f77af4335dd48cf963b5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 254,
      "start_column": 2,
      "end_line": 254,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L254"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T12:49:22-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "439831572b581e2b542aa6c97dc80e7e28f347fa3f48d8380cba7907d888c09a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 556,
      "start_column": 55,
      "end_line": 556,
      "end_column": 60,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L556"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T18:57:31+07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "59ea45d0aea261d46664a23e15f1bdb6b51a612dc009b863a05e53da0faf959e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 572,
      "start_column": 2,
      "end_line": 572,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L572"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "2e1cae3fd63b29e481a2bb6faa02191c7c71c24dc8479a31dc5c3b61cb2af796"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 699,
      "start_column": 2,
      "end_line": 699,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L699"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-28T16:03:02+07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "40337c783acfc9bdb0d132155430deaa0cc411b2d936c868f824f92d25ce632c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 725,
      "start_column": 89,
      "end_line": 725,
      "end_column": 94,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L725"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-01T17:09:18-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "32c7547819c47c0e4d99a274f95cf8fe22dfdcdbf2f307998112268e4b35b3a4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 752,
      "start_column": 38,
      "end_line": 752,
      "end_column": 43,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Sequential.lean#L752"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "5ad15e47052bde9d775acbcee25da649426939bf7d782a58d9ace2baee2ed9f2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "41a524566b78037a1766cdd4744e36393ec6e4d95edc0718cb75c69061bd5da9"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "1834bfd8a089a9206277ffe44eeb6baab407174f6f5b5c86ae9a880808164a6d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "45a2f232b2a1fa07a79590f97cd2b7e2e0e004f9d184d55ebc5605528757658f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 214,
      "start_column": 2,
      "end_line": 214,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "2af878f3e815e1c9842749f7527173faf5e5411743bbd2bdaa42c2bcfab02a12"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 228,
      "start_column": 2,
      "end_line": 233,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "0f181c620ce833d0265da38973404bc9ccc4602a99b722c88fbfd2acc0f024ba"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 277,
      "start_column": 4,
      "end_line": 277,
      "end_column": 9,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Composition/Virtual.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "3b24f1f4f758f2b13932efd5408739fed0f8dd1b16728f113c0f52ea57f50a34"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 357,
      "start_column": 2,
      "end_line": 357,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L357"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "20fec634da906544ceb0c8e7f96c8db214aff3a1bfe3d5d2fc00428032a96dc8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 378,
      "start_column": 75,
      "end_line": 378,
      "end_column": 80,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L378"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "006a5eedce9579964cd552911f2f9c1fb4489d60cc103bc2a484fb6fbac8ec6a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 389,
      "start_column": 2,
      "end_line": 389,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L389"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "29c71fefd2b41879799ab0926baf3adfdd0bad616281949bb90288f20f03f35e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 399,
      "start_column": 82,
      "end_line": 399,
      "end_column": 87,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/OracleReduction/Security/Basic.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "21a89d8c609cf1d05f7a39f03d40cc105884b7c2ef0236787d0f1e19a5f639c8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 267,
      "start_column": 6,
      "end_line": 267,
      "end_column": 11,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "7c46b5dbf7f8a520093ed882169dde0dbddb09c862fe833c19d08dcc4a9a03d5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 276,
      "start_column": 27,
      "end_line": 276,
      "end_column": 32,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "2e0b8453049460d33108410b23030b210f89a9230e01f170395c7460cd81b088"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 488,
      "start_column": 2,
      "end_line": 488,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L488"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "d909e800b6d58c7eb511c741fc164e5fa2a2575544f27fde3506ec8029654429"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 505,
      "start_column": 57,
      "end_line": 505,
      "end_column": 62,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "3847d1df8a3ce64600ddd019a97d5044a3c3a99d5241012dcdfa1bafef968b8a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 514,
      "start_column": 2,
      "end_line": 514,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "a76bdcea9aa51669f6926322a8a6d98f9035f9b1438f861179d170e90fda2d61"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 563,
      "start_column": 4,
      "end_line": 563,
      "end_column": 9,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L563"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "a67dd84609bd4c271b88aaf8b7c3a04af2f0293644f5c9fd4c49fde0a3ddb5c8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "6b132a95b24fd98df41134bac8ce8ddb95f3cfca",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 638,
      "start_column": 42,
      "end_line": 638,
      "end_column": 47,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/6b132a95b24fd98df41134bac8ce8ddb95f3cfca/ZKLib/ProofSystem/Sumcheck/Basic.lean#L638"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-16T23:36:39.368956+00:00"
    },
    "id": "9c36e6930c089bb62070915b2969a072bf7783c174f43e8b5c85e837f74256b0"
  }
]