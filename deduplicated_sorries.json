{
  "documentation": "deduplicated list of sorries, for each unique goal string the most recent inclusion date is chosen",
  "sorries": [
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2016P5.lean",
        "start_line": 73,
        "start_column": 6,
        "end_line": 73,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.refine_4\nhp : \u2200 (n : \u2115), (n % 4 = 2 \u2228 n % 4 = 3) = \u00ac(n % 4 = 0 \u2228 n % 4 = 1)\nx : \u211d\n\u22a2 \u220f i \u2208 Finset.Icc 1 2016 \\ {n \u2208 Finset.Icc 1 2016 | n % 4 = 2 \u2228 n % 4 = 3}, (x - \u2191i) \u2260\n    \u220f i \u2208 Finset.Icc 1 2016 \\ {n \u2208 Finset.Icc 1 2016 | n % 4 = 0 \u2228 n % 4 = 1}, (x - \u2191i)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2016P5.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-07T10:28:23-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "ecd8031d4e97ccb987099033c7b36cb1b1ecf4ad233b7bc2df58969e8ecddacf"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa1983P5.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nn : \u2115\nhn : 0 < n\n\u22a2 let fracs := {q | q.den \u2264 n \u2227 \u2191q \u2208 Set.Ioo x (x + 1 / \u2191n)};\n  fracs.Finite \u2227 fracs.ncard \u2264 (n + 1) / 2",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1983P5.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T10:41:38-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "53cb21671f7fa8c8c8f1c56ca2864f61ca0bedb0e7503bb1129870ca4f63e3e4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Canada1998P5.lean",
        "start_line": 35,
        "start_column": 2,
        "end_line": 35,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nhm : 0 < m\na b : \u2115\nhab : a \u2264 b\n\u22a2 a ^ 2 + b ^ 2 = m ^ 2 * (a * b + 1) \u2194 \u2203 n, \u2191a = A m hm n \u2227 \u2191b = A m hm (n + 1)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Canada1998P5.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-06-16T22:18:26-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "22a90092699eaa13360ddaaec1446beb4a40cccd71a83e62cdf0d519f6abf8c9"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2004P6.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 n \u2208 SolutionSet \u2194 0 < n \u2227 \u2203 k, Alternating (n * k)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P6.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-30T13:21:06-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "38aa16505c3cd807c8542c1b64c5019cedb95e504aa2034046bf7b02c3aa45d9"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1977P4.lean",
        "start_line": 28,
        "start_column": 48,
        "end_line": 28,
        "end_column": 53
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\na b A B : \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 1 - a * Real.cos x - b * Real.sin x - A * Real.cos (2 * x) - B * Real.sin (2 * x)\nh\u2081 : \u2200 (x : \u211d), f x \u2265 0\n\u22a2 a ^ 2 + b ^ 2 \u2264 2 \u2227 A ^ 2 + B ^ 2 \u2264 1",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1977P4.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0ce174870bbc217593847460961248f789390f63f013c41063a006e11021513a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1972P4.lean",
        "start_line": 37,
        "start_column": 43,
        "end_line": 37,
        "end_column": 48
      },
      "debug_info": {
        "goal": "a b c d e : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2227 0 < e\n\u22a2 (a ^ 2 - c * e) * (b ^ 2 - c * e) \u2264 0 \u2227\n      (b ^ 2 - d * a) * (c ^ 2 - d * a) \u2264 0 \u2227\n        (c ^ 2 - e * b) * (d ^ 2 - e * b) \u2264 0 \u2227\n          (d ^ 2 - a * c) * (e ^ 2 - a * c) \u2264 0 \u2227 (e ^ 2 - b * d) * (a ^ 2 - b * d) \u2264 0 \u2194\n    (a, b, c, d, e) \u2208 solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1972P4.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "ff938d32047a58dfb1bf3488eb08cd6ecd1a61b810b115938beb88eef1ab358e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa1980P5.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z : \u211d\nhx : x \u2208 Set.Icc 0 1\nhy : y \u2208 Set.Icc 0 1\nhz : z \u2208 Set.Icc 0 1\n\u22a2 x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) \u2264 1 + (1 - x) * (1 - y) * (1 - z)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1980P5.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-27T11:18:26-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "49c783feef4b2a05278592d8bf190a8a2acc1793a99477193dd103bc19bf3159"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2022P1.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nha : 0 < a\nhb : 0 < b\ncolor : Fin (a + b + 1) \u00d7 Fin (a + b + 1) \u2192 Fin 2\nc0 : a ^ 2 + a * b - b \u2264 Fintype.card { s // color s = 0 }\nc1 : b ^ 2 + a * b - a \u2264 Fintype.card { s // color s = 1 }\n\u22a2 \u2203 A B,\n    A.card = a \u2227\n      B.card = b \u2227\n        (\u2200 x \u2208 A, color x = 0) \u2227 (\u2200 y \u2208 B, color y = 1) \u2227 \u2200 x \u2208 A \u222a B, \u2200 y \u2208 A \u222a B, x \u2260 y \u2192 x.1 \u2260 y.1 \u2227 x.2 \u2260 y.2",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2022P1.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-04-16T11:18:19-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "e6edf5173015cb68efb44283ff5ef765d97942176def4ec762cda65021f67e6a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2021P6.lean",
        "start_line": 28,
        "start_column": 2,
        "end_line": 28,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nhm : 2 \u2264 m\nA : Finset \u2124\nB : Fin m \u2192 Finset \u2124\nhB : \u2200 (k : Fin m), B k \u2286 A\nhs : \u2200 (k : Fin m), \u2211 b \u2208 B k, b = \u2191m ^ (\u2191k + 1)\n\u22a2 m \u2264 2 * A.card",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2021P6.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-05T14:13:49-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "823c9e2c94b72889d412fc11dd9425d3e3b3685b7dd492c0685297b0d24e13e4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2018P5.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u2124\napos : \u2200 (n : \u2115), 0 < a n\nN : \u2115\nhN : 0 < N\nh : \u2200 (n : \u2115), N \u2264 n \u2192 \u2203 z, \u2191z = \u2211 i \u2208 Finset.range n, \u2191(a i) / \u2191(a ((i + 1) % n))\n\u22a2 \u2203 M, \u2200 (m : \u2115), M \u2264 m \u2192 a m = a (m + 1)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P5.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-20T08:39:26-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "39f826693dd33111aa515e6e7e41df347029a34dd0ef693a8c6ece1d88c592e4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa1993P3.lean",
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {c | \u2200 (f : \u2191(Set.Icc 0 1) \u2192 \u211d), valid f \u2227 \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 c * \u2191\u2191x} min_c",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1993P3.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-17T17:28:05-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "693fe0a4b901598111f70d4be3658dc97da9b8be3c7a4b1a8f9a50a8920e8763"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1988P3.lean",
        "start_line": 37,
        "start_column": 28,
        "end_line": 37,
        "end_column": 33
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : f 1 = 1\nh\u2081 : f 3 = 3\nh\u2082 : \u2200 (n : \u2115), f (2 * n) = f n\nh\u2083 : \u2200 (n : \u2115), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh\u2084 : \u2200 (n : \u2115), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset \u2191{n | 0 < n \u2227 n \u2264 1988 \u2227 f n = n}\n\u22a2 A.card = solution",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1988P3.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "59de92e21cfae296e4b66f7deb395a01acb55a9e06e67321002dc3e973a525a7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1994P4.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2124\n\u22a2 (m, n) \u2208 SolutionSet \u2194 0 < m \u2227 0 < n \u2227 m * n - 1 \u2223 n ^ 3 + 1",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1994P4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-23T19:59:15-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "d99ee4237a684cd6a37cbaf1951f988026cafa15f338b5b9899e0fc680aa0d47"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1990P3.lean",
        "start_line": 30,
        "start_column": 4,
        "end_line": 30,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nn : \u2115\nhn : 1 < n\nhnd : n ^ 2 \u2223 2 ^ n + 1\n\u22a2 n \u2208 solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1990P3.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-01T16:38:24-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "758fafad7560a57d684d9f7eebf31a504afb36adce932b3367972349cd3d8da2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1999P4.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x p : \u2115\n\u22a2 (x, p) \u2208 SolutionSet \u2194 0 < x \u2227 Nat.Prime p \u2227 x ^ (p - 1) \u2223 (p - 1) ^ x + 1",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1999P4.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-01T11:05:51-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "bd063222b756ce52d4cd10c835265a7e46200225e627904c70e079aa0a2222e6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa1999P1.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nc : Finset (checkerboard n)\nha : \u2200 (x : checkerboard n), x \u2208 c \u2228 \u2203 y \u2208 c, adjacent x y\nhb : \u2200 x \u2208 c, \u2200 y \u2208 c, \u2203 p, List.Chain' adjacent p \u2227 p.head? = some x \u2227 p.getLast? = some y\n\u22a2 n ^ 2 \u2264 c.card * 3 + 2",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1999P1.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-12T15:42:10-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "18e66c7ee601f4c46a6619e6f90e818ee8eecf1194ffebf3f0c6876fe79c32dc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1998P6.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115+ \u2192 \u2115+\nh : \u2200 (s t : \u2115+), f (t ^ 2 * f s) = s * f t ^ 2\n\u22a2 IsLeast {n | n = \u2191(f 1998)} \u2191solution",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P6.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T10:49:10-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "485a0138d3e94f7ce0c4314dd39028fef5d95c7679266a155c5b6aae27df3c3c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2014P4.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B C P Q M N : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nacuteA : \u2220 C A B < Real.pi / 2\nacuteB : \u2220 A B C < Real.pi / 2\nacuteC : \u2220 B C A < Real.pi / 2\nhP : Sbtw \u211d P B C\nhQ : Sbtw \u211d Q B C\nhPAB : \u2220 P A B = \u2220 B C A\nhCAQ : \u2220 C A Q = \u2220 A B C\nhM : M \u2208 affineSpan \u211d {A, M}\nhN : Q \u2208 affineSpan \u211d {A, N}\nhPAM : P = midpoint \u211d A M\nhQAN : Q = midpoint \u211d A N\n\u22a2 let ABC := { points := ![A, B, C], independent := hABC };\n  let D := \u2191(affineSpan \u211d {B, M}) \u2229 \u2191(affineSpan \u211d {C, N});\n  D.Nonempty \u2227 D \u2286 Metric.sphere (Affine.Simplex.circumsphere ABC).center (Affine.Simplex.circumsphere ABC).radius",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2014P4.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-17T13:26:17-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "f7f04887d23d2c0bcd401dc258c7ff1432af00c33eb6d07e81b0f57c3d93a90c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1961P1.lean",
        "start_line": 44,
        "start_column": 54,
        "end_line": 44,
        "end_column": 59
      },
      "debug_info": {
        "goal": "a b x y z : \u211d\n\u22a2 (x, y, z) \u2208 xyz_of_ab a b \u2194 IsSolution a b x y z",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-15T21:26:42-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "977b18b828ee3c1ced5fc0ba497b0b928f57a2d4b9075fcc3661232d2920245e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1961P1.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 (a, b) \u2208 ab_that_make_xyz_positive_distinct \u2194\n    \u2200 (x y z : \u211d), IsSolution a b x y z \u2192 0 < x \u2227 0 < y \u2227 0 < z \u2227 [x, y, z].Nodup",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-15T21:26:42-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "f19746420ee4822c533114713613a83278b1298849e43bb4bb8df8f246a45f06"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2023P2.lean",
        "start_line": 93,
        "start_column": 28,
        "end_line": 93,
        "end_column": 33
      },
      "debug_info": {
        "goal": "V : Type u_1\nPt : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup V\ninst\u271d\u00b3 : InnerProductSpace \u211d V\ninst\u271d\u00b2 : MetricSpace Pt\ninst\u271d\u00b9 : NormedAddTorsor V Pt\nhd2 : Fact (finrank \u211d V = 2)\ninst\u271d : Oriented \u211d V (Fin 2)\nA B C D E L S P : Pt\n\u03a9 \u03c9 : Sphere Pt\nperp_A_BC prll_D_BC tang_P_\u03c9 : AffineSubspace \u211d Pt\nh_acute_ABC : acute V Pt A B C\nh_AB_lt_BC : dist A B < dist A C\nh_\u03a9 : {A, B, C} \u2286 Metric.sphere \u03a9.center \u03a9.radius\nh_S_\u03a9 : dist S C = dist S B \u2227 S \u2208 Metric.sphere \u03a9.center \u03a9.radius\nh_S_A : (\u2221 C B S).sign = (\u2221 C B A).sign\nh_perp_A_BC : perp_to V Pt perp_A_BC (affineSpan \u211d {B, C}) \u2227 A \u2208 perp_A_BC\nh_D : D \u2208 \u2191perp_A_BC \u2229 \u2191(affineSpan \u211d {B, S})\nh_E : E \u2208 \u2191perp_A_BC \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_E_ne_A : E \u2260 A\nh_prll_D_BC : D \u2208 prll_D_BC \u2227 prll_D_BC \u2225 affineSpan \u211d {B, C}\nh_L : L \u2208 \u2191prll_D_BC \u2229 \u2191(affineSpan \u211d {B, E})\nh_\u03c9 : {B, D, L} \u2286 Metric.sphere \u03c9.center \u03c9.radius\nh_P : P \u2208 Metric.sphere \u03c9.center \u03c9.radius \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_P_ne_B : P \u2260 B\nh_tang_P_\u03c9 : is_tangent V Pt tang_P_\u03c9 \u03c9 \u2227 P \u2208 tang_P_\u03c9\n\u22a2 \u2203 X \u2208 \u2191tang_P_\u03c9 \u2229 \u2191(affineSpan \u211d {B, S}), \u2220 B A X = \u2220 X A C \u2227 \u2220 B A X < \u03c0 / 2",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P2.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2024-06-30T13:54:06-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "7b3956fa65105267c283b43238e7aba1b2149d9c7538c3268f378ae7adfa2c20"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1985P4.lean",
        "start_line": 26,
        "start_column": 2,
        "end_line": 26,
        "end_column": 7
      },
      "debug_info": {
        "goal": "M : Finset \u2115\nMpos : \u2200 m \u2208 M, 0 < m\nMdivisors : \u2200 m \u2208 M, \u2200 (n : \u2115), Nat.Prime m \u2227 n \u2223 m \u2192 m \u2264 23\n\u22a2 \u2203 M' \u2286 M, \u2203 k, M'.prod id = k ^ 4",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1985P4.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T14:04:16-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "2728b1286e0ca6ab2b941aef35e95d5d1dff7d0f7b10d05ce96f2821fff0031e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2003P1.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Finset \u2115\nhA : A \u2286 S\n\u22a2 \u2203 t, \u2200 (i j : Fin 100), i \u2260 j \u2192 Disjoint {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t i) = x} {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t j) = x}",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P1.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-14T21:07:17-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "657cd833a974ab73627c17d6691be96ce65ce940112ce4eda2d8fe1858c42ad9"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2001P1.lean",
        "start_line": 55,
        "start_column": 6,
        "end_line": 55,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.right\nf : Fin 8 \u2192 Finset (Fin 23) :=\n  fun x =>\n    match x with\n    | 0 => {1, 2, 3, 4, 5, 6}\n    | 1 => {1, 7, 8, 9, 10, 11}\n    | 2 => {1, 12, 13, 14, 15, 16}\n    | 3 => {2, 7, 12, 17, 18, 19}\n    | 4 => {3, 8, 13, 17, 20, 21}\n    | 5 => {4, 9, 14, 17, 22, 23}\n    | 6 => {5, 10, 15, 18, 20, 22}\n    | 7 => {6, 11, 16, 19, 21, 23}\nx y : Fin min_colors\ni j : Fin 8\nhij : i \u2260 j\nhx : x \u2208 f i\nhy : y \u2208 f i\n\u22a2 \u00ac(x \u2208 f j \u2227 y \u2208 f j)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-12-05T14:18:02-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "52e3c5c580809d36090d9e8f44aef9fc4a04ff6f204aafc4fc9cd640ee363c8d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2001P1.lean",
        "start_line": 56,
        "start_column": 4,
        "end_line": 56,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case right\n\u22a2 min_colors \u2208 lowerBounds possible_num_colors",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-20T22:49:53-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "10222a5dcca446acc32bcfe899926803a340d05b0ce2f7372eaa12ef21e4af55"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P2.lean",
        "start_line": 38,
        "start_column": 41,
        "end_line": 38,
        "end_column": 46
      },
      "debug_info": {
        "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : \u2220 D A B = \u2220 A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := \u2220 D A C\nthis : \u2220 D A C = \u2220 D C A\ny : \u211d := \u2220 C A B\n\u22a2 \u2220 D A B = x + y",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-14T20:53:40-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "abee20d38c65c1d71797ca10be74434c936d00a85117508010ce88ea8991e006"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P2.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : \u2220 D A B = \u2220 A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := \u2220 D A C\nthis\u271d : \u2220 D A C = \u2220 D C A\ny : \u211d := \u2220 C A B\nthis : \u2220 A B C = x + y\n\u22a2 \u2220 B E C = \u2220 D A C",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-06-28T19:13:25-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "6461b41ab5e7770c2ed81776e8e350a5355af09005bfebc66e6f647615574984"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1996P3.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\n\u22a2 f \u2208 SolutionSet \u2194 \u2200 (m n : \u2115), f (m + f n) = f (f m) + f n",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1996P3.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T13:27:20-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4b3f1401c0e8ce853e000609b98f22842c3d0077977d1d935d95b761b26a194d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2009P6.lean",
        "start_line": 94,
        "start_column": 4,
        "end_line": 94,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ind.inl.inl\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2208 M\nh2 : \u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T21:41:42-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "eb4783cd7e1800c9e6ba2369546e47de16f89985ac2e2f428022b63964b19334"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2009P6.lean",
        "start_line": 95,
        "start_column": 4,
        "end_line": 95,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ind.inl.inr\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2208 M\nh2 : \u00ac\u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T21:41:42-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a37d8b31b61d44429f769c38fc35742a546b4f06be687ad4297cc30477412e4b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2009P6.lean",
        "start_line": 205,
        "start_column": 8,
        "end_line": 205,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := extendPerm p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2264 x)\nh35 : n' \u2264 n\n\u22a2 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-27T11:09:42-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "9166e5fdd3c527a41fb88d6b8da5ca6cebe2d8a26d68ab9baaf6d507f1235e6f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2009P6.lean",
        "start_line": 229,
        "start_column": 8,
        "end_line": 229,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := extendPerm p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x)\nh35 : n' \u2264 n\nh33 : \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)\n\u22a2 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-25T14:14:36-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "511c2d114eb89f65073e96eabcc3d71f98579702dd28c81bf5a23962d0a8a2db"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2009P6.lean",
        "start_line": 248,
        "start_column": 4,
        "end_line": 248,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ind.inr.inr\nn : \u2115\nih :\n  \u2200 m < n,\n    0 < m \u2192\n      \u2200 (a : Fin m \u2192 \u2124),\n        Function.Injective a \u2192\n          (\u2200 (i : Fin m), 0 < a i) \u2192\n            (\u2200 (i j : Fin m), i < j \u2192 a i < a j) \u2192\n              \u2200 (M : Finset \u2124),\n                (\u2200 m \u2208 M, 0 < m) \u2192 M.card \u2264 m - 1 \u2192 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin m), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\nh2 : \u00ac\u2203 y, x < y \u2227 y \u2208 M\n\u22a2 \u2211 i, a i \u2209 M \u2192 \u2203 p, \u2200 (i : Fin n), \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2209 M",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T21:41:42-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0fd808330eab9f92bb1ae2e2d6019e1b737134a236236567c9b04c569870ffa0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa1998P4.lean",
        "start_line": 66,
        "start_column": 6,
        "end_line": 66,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h\ns : chessboard\n\u22a2 List.foldl recolor_rect start_coloring\n      (List.map (fun x => { x := 2 * x, y := 0, width := 1, height := 98 }) (List.range 49) ++\n        List.map (fun y => { x := 0, y := 2 * y, width := 98, height := 1 }) (List.range 49))\n      s =\n    0",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-14T08:31:05-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "9ea8c2f130bba433b8a37b17018ff76e4fc61894dd2c1de84dcf5a50d8d06cca"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa1998P4.lean",
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case right.intro.intro\nn : \u2115\nrs : List Rectangle\nhrs : all_same_color (List.foldl recolor_rect start_coloring rs)\nhrsl : rs.length = n\n\u22a2 min_clicks \u2264 n",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-12T20:46:44-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "d1ba93a4731fbc74da9899276cada366ce2dc3a3b2d23e12a9e31354762b7b53"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1998P4.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\n\u22a2 0 < a \u2227 0 < b \u2227 a * b ^ 2 + b + 7 \u2223 a ^ 2 * b + a + b \u2194 (a, b) \u2208 solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P4.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T10:45:18-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "fc70b6c2b5fc0eb454b9dd3b62f2514672e8bdca0803d4e335cd505dae7ed741"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2011P5.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2124 \u2192 \u2124\nfpos\u271d : \u2200 (n : \u2124), 0 < f n\nfpos : \u2200 (m n : \u2124), f (m - n) \u2223 f m - f n\n\u22a2 \u2200 (m n : \u2124), f m \u2264 f n \u2192 f m \u2223 f n",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2011P5.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-03T09:55:58-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "28f79db23292ca27f97cf66eb89323122a92cc534683c82a12ebf679ea59049a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1978P6.lean",
        "start_line": 28,
        "start_column": 44,
        "end_line": 28,
        "end_column": 49
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : n = 1978\nC : Fin n \u2192 Fin 6\n\u22a2 \u2203 j i k, C i = C j \u2227 C j = C k \u2227 \u2191i + 1 + \u2191k + 1 = \u2191j + 1",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1978P6.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "54edd10f47cb051d6e8f07d29d88e0850e5a3a6d3975fd9db92f2ff1e8c88ef8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1971P5.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\n\u22a2 \u2203 S, S.Finite \u2227 \u2200 s \u2208 S, Nat.card \u2191{t | dist s t = 1} = m",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P5.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-22T17:20:29-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "e8b8b50bcfe121c3fe635582a739ee84b52789442cd0762620d5e4817bd9294c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1976P6.lean",
        "start_line": 28,
        "start_column": 55,
        "end_line": 28,
        "end_column": 60
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nh\u2080 : u 0 = 2\nh\u2081 : u 1 = 5 / 2\nh\u2082 : \u2200 (n : \u2115), u (n + 2) = u (n + 1) * (u n ^ 2 - 2) - u 1\n\u22a2 \u2200 (n : \u2115), \u2191\u230au n\u230b = 2 ^ ((2 ^ n - (-1) ^ n) / 3)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1976P6.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "44259a8830d9c287f32508c865ac2f061433f68a8980de46a63194a0ea770751"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2010P3.lean",
        "start_line": 36,
        "start_column": 38,
        "end_line": 36,
        "end_column": 43
      },
      "debug_info": {
        "goal": "case h\ng : \u2124>0 \u2192 \u2124>0\nc : \u2124>0\nhc : \u2200 (x : \u2124>0), g x = x + c\nm n : \u2124>0\n\u22a2 (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-01-21T08:16:08-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "94668c81e3549dfecb4822c85b43a18d85126a7d88d79f594fe3876d79f93f9a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2010P3.lean",
        "start_line": 37,
        "start_column": 4,
        "end_line": 37,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\ng : \u2124>0 \u2192 \u2124>0\n\u22a2 (\u2200 (m n : \u2124>0), IsSquare ((g m + n) * (g n + m))) \u2192 g \u2208 SolutionSet",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-23T10:40:22-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "c54f7b36c32bfd3312985b07d2f481cb30e8ebd526c7aa3b0b97c9600efd1f21"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2001P3.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Girl Boy Problem : Type\ninst\u271d\u00b2 : Finite Girl\ninst\u271d\u00b9 : Finite Boy\ninst\u271d : Finite Problem\ngirl_card : Nat.card Girl = 21\nboy_card : Nat.card Boy = 21\ngirl_solved : Girl \u2192 Problem \u2192 Prop\nboy_solved : Boy \u2192 Problem \u2192 Prop\nhG : \u2200 (g : Girl), {p | girl_solved g p}.ncard \u2264 6\nhB : \u2200 (b : Boy), {p | boy_solved b p}.ncard \u2264 6\nhp : \u2200 (g : Girl) (b : Boy), {p | girl_solved g p \u2227 boy_solved b p}.ncard \u2264 1\n\u22a2 \u2203 p, 3 \u2264 {g | girl_solved g p}.ncard \u2227 3 \u2264 {g | boy_solved g p}.ncard",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2001P3.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-27T13:39:48-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "ee3b919cd4d2a27d81e3d9b9af809a05cf8d2ac183b86594402a6519becf2697"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2016P4.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {b | \u2203 a, Fragrant {p | \u2203 i < b, \u2191p = P (a + 1 + \u2191i)}} Solution",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2016P4.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-11T08:43:20-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5ffeaafd6cde0607ff44006b6e318adc71b60ab65625f327fe3ca6855e65387b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2018P2.lean",
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp.intro\nn : \u2115\nhn1 : 3 \u2264 n\nhn2 : 3 \u2223 n\n\u22a2 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P2.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-05T08:47:40-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "9e22d6ad70f2c0237e78a2f3a9ba91a0375f16275fae2b153d05e3d583a79e7c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2018P2.lean",
        "start_line": 36,
        "start_column": 4,
        "end_line": 36,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nn : \u2115\n\u22a2 (3 \u2264 n \u2227 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)) \u2192 n \u2208 solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P2.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-05T08:47:40-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "28df25ad37b7fb2f16cd4f8fb7a0dbd384f98eb7b93f0373f54a4a63f0e39075"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1998P3.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 k \u2208 solution_set \u2194 \u2203 n, (n ^ 2).divisors.card = k * n.divisors.card",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P3.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T10:57:30-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4174712cf034663847198231d1aa7c3c55804dc7ae278d00dbf8b7d42ab9b70f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2023P4.lean",
        "start_line": 259,
        "start_column": 2,
        "end_line": 259,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u2115\nhp : 0 < x\nhx : Even x\n\u22a2 x.maxPowDiv / 2 + 1 = x.maxPowDiv",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2023P4.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-07-17T08:59:40-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "bfefb2210b77d91940eec9074e417b20b6181395f658b734bf23c78c2895011d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2023P4.lean",
        "start_line": 323,
        "start_column": 6,
        "end_line": 323,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case a.intro.intro\na : \u2115+\nN : \u2115\nhN : 1 < N\nms' : \u2115\nih :\n  \u2200 (s0 : State N),\n    (\u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191(s0.board i) < Nat.maxPowDiv 2 \u2191a) \u2192\n      \u2211 i, Nat.maxPowDiv 2 \u2191(s0.board i) = ms' \u2192 EndInevitableIn a N ms' s0\nb0 : Blackboard N\nt0 : Player\nhd : \u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Bob }.board i) < Nat.maxPowDiv 2 \u2191a\nhms : \u2211 i, Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Bob }.board i) = ms' + 1\ns : State N\ni : Fin N\nhie : Even \u2191(b0 i)\nhis : s = { board := Function.update b0 i \u27e8\u2191(b0 i) / 2, \u22ef\u27e9, turn := Player.Alice }\n\u22a2 EndInevitableIn a N ms' s",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L323"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-07-17T08:59:40-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "588abd4ec33720ef7944b078f097d6791dcea8f2d8048b615439550a5e648590"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2023P4.lean",
        "start_line": 344,
        "start_column": 4,
        "end_line": 344,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a.intro.intro.a.intro.intro\na : \u2115+\nN : \u2115\nhN : 1 < N\nms' : \u2115\nb0 : Blackboard N\nt0 : Player\nhd : \u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191({ board := b0, turn := Player.Alice }.board i) < Nat.maxPowDiv 2 \u2191a\nb1 : Blackboard N\nhms : \u2211 i, Nat.maxPowDiv 2 \u2191(b1 i) = ms' + 1\ni : Fin N\nhi : b1 = Function.update b0 i (b0 i + a)\ns2 : State N\nj : Fin N\nhje : Even \u2191(b1 j)\nhj : s2 = { board := Function.update b1 j \u27e8\u2191(b1 j) / 2, \u22ef\u27e9, turn := Player.Alice }\nih :\n  (\u2200 (i : Fin N), Nat.maxPowDiv 2 \u2191(s2.board i) < Nat.maxPowDiv 2 \u2191a) \u2192\n    \u2211 i, Nat.maxPowDiv 2 \u2191(s2.board i) = ms' \u2192 EndInevitableIn a N ms' s2\n\u22a2 EndInevitableIn a N ms' s2",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L344"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-07-17T08:59:40-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "93780d60039058a18ddb1b49b621c73a758165f125b921490dbf849fc282b82f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2023P4.lean",
        "start_line": 366,
        "start_column": 2,
        "end_line": 366,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case inr\na : \u2115+\nN : \u2115\nhN\u271d : 0 < N\nb0 : Blackboard N\nhe : BobCanForceEnd a N { board := b0, turn := Player.Alice }\nhN : 1 < N\n\u22a2 EndInevitable a N { board := b0, turn := Player.Alice }",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L366"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-12T16:07:14-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "cab7d541738fcdc4bd3856350d9101fd61352a5b0cc217b486a058b2b98e2e8e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2003P2.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2124\n\u22a2 (a, b) \u2208 solution_set \u2194 0 < a \u2227 a < b \u2227 \u2203 c, 0 < c \u2227 c * (2 * a * b ^ 2 - b ^ 3 + 1) = a ^ 2",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P2.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-09T08:45:13-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "6531c8f669557a8956b5774d758dad925c00b224eb3f12393efc8ccade689b32"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 115,
        "start_column": 2,
        "end_line": 115,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst\u271d : Fintype \u03b1\n\u22a2 Fintype.card { s // Even s.card } = 2 ^ (Fintype.card \u03b1 - 1)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:45:19-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "8585f3a90704ebcf1db5998d794ebf41e08c7eb58e6b89cffa6502b4e0ddbff9"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 121,
        "start_column": 40,
        "end_line": 121,
        "end_column": 45
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\n\u22a2 \u2200 (i : Fin n), 0 < c i",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:45:19-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5dbbd31b4b8a8c5fb210f8c40db26ab0212d73c391ec4b6dcf100ece3c1bbe71"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 122,
        "start_column": 39,
        "end_line": 122,
        "end_column": 44
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\n\u22a2 \u2211 i, c i = k",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L122"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:45:19-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "d4a3dc0886c39d91903f92ca1dbef2ea0a977839db922db8970e9a8e93e6014f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 132,
        "start_column": 40,
        "end_line": 132,
        "end_column": 45
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\n\u22a2 \u2191y < n",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5a2ed4b14f561e1c81fd5c6d9635d04f7de0c1c6331b720be482057c227d31a3"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 134,
        "start_column": 21,
        "end_line": 134,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 i \u2208 {j | \u2191f j = \u27e8\u2191y', \u22ef\u27e9}",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "dbf7b4453189af85ba47ca280e7dcf649fdfb0c53d3a45d008b444f864219027"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 134,
        "start_column": 57,
        "end_line": 134,
        "end_column": 62
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := \u2191f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 \u2191y + n < 2 * n",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4b376c21f9ce6fc057fcaafff54432ca6470c8fe26a02ffdb3b93f71c7e7cd6d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 135,
        "start_column": 21,
        "end_line": 135,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.28220 \u2208 \u2191ys then ?m.29219 else y\n\u22a2 NSequence n k g1",
        "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:51:19-04:00",
        "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
      },
      "id": "f8533dd0a3f55533c2477a49d0a3820d5ce9965da43dcffbe8e76b5b3654e1ce"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 136,
        "start_column": 21,
        "end_line": 136,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.28220 \u2208 \u2191ys then ?m.29219 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
        "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-22T23:33:30-04:00",
        "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
      },
      "id": "2a7d61deffe3d547be4916f255e97bbe931e7434f1991d206a653226c163286d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 147,
        "start_column": 4,
        "end_line": 147,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.e_a\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\na : Fin n\n\u22a2 (Finset.filter (Membership.mem {j | \u2191f j = \u27e8\u2191a, \u22ef\u27e9}) Finset.univ).card = c a",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-05-02T10:48:28-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "8a987bb8765c2df88e8b6b47d6fb8cefc854d0546fe560237a48614627c2a1ea"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 167,
        "start_column": 6,
        "end_line": 167,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case left\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\nx y : S\nhxy : p x = p y\n\u22a2 x = y",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "187544c61cc20ac3ab3cadc7ed93b0df5e5c897b9d6d0cc3acd67665cc3a4953"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 169,
        "start_column": 6,
        "end_line": 169,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case right.mk\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | \u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := \u22ef;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\ng : { f // NSequence n k f }\nhg : g \u2208 {g | \u03c8 n k g = f}\n\u22a2 \u2203 a, p a = \u27e8g, hg\u27e9",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "c1b370ae45f32b205ad252022edbd62aa344cdce9a0ab4ffa024cc3c4cb93f45"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2017P5.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "c : \u211d\n\u22a2 c \u2208 solution_set \u2194\n    0 < c \u2227\n      \u2203 l,\n        (Set.range l).Finite \u2227\n          (\u2200 (p : \u2124 \u00d7 \u2124), 0 < l p) \u2227 \u2200 {p1 p2 : \u2124 \u00d7 \u2124}, p1 \u2260 p2 \u2192 l p1 = l p2 \u2192 dist \u2191(l p1) \u2191(l p2) \u2264 c ^ l p1",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2017P5.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-16T15:48:13-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "c3050863d613aad47b9dfd678f561f1cbafeaf06591cd31a80abc13bb8ce12eb"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2004P2.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : Polynomial \u211d\n\u22a2 P \u2208 SolutionSet \u2194\n    \u2200 (a b c : \u211d),\n      a * b + b * c + c * a = 0 \u2192\n        Polynomial.eval (a - b) P + Polynomial.eval (b - c) P + Polynomial.eval (c - a) P =\n          2 * Polynomial.eval (a + b + c) P",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P2.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-06T15:22:50-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "9d3b5c062b3acb3eaa91fe7a425835d4cee7d144ccddaef7bfd996a58bdc3fb0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1976P4.lean",
        "start_line": 28,
        "start_column": 2,
        "end_line": 28,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {n | \u2203 s, \u2211 i \u2208 s, i = 1976 \u2227 \u220f i \u2208 s, i = n} solution",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1976P4.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-26T10:31:58-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "59b56ee6f40ffa4b324b92b4e5e51fef346312664d501e57fbf096b4046ee589"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1979P5.lean",
        "start_line": 33,
        "start_column": 76,
        "end_line": 33,
        "end_column": 81
      },
      "debug_info": {
        "goal": "a : \u211d\n\u22a2 (\u2203 x1 x2 x3 x4 x5,\n      x1 \u2265 0 \u2227\n        x2 \u2265 0 \u2227\n          x3 \u2265 0 \u2227\n            x4 \u2265 0 \u2227\n              x5 \u2265 0 \u2227\n                x1 + 2 * x2 + 3 * x3 + 4 * x4 + 5 * x5 = a \u2227\n                  x1 + 2 ^ 3 * x2 + 3 ^ 3 * x3 + 4 ^ 3 * x4 + 5 ^ 3 * x5 = a ^ 2 \u2227\n                    x1 + 2 ^ 5 * x2 + 3 ^ 5 * x3 + 4 ^ 5 * x4 + 5 ^ 5 * x5 = a ^ 3) \u2194\n    a \u2208 solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1979P5.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "a685641c3d0c1275d5dfd657aa7baf442f8004ced215bf8d31f62da6e68f9cd6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2018P3.lean",
        "start_line": 69,
        "start_column": 2,
        "end_line": 69,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nt : antipascal_triangle 2018\nht : \u2200 (n : \u2115), 1 \u2264 n \u2192 n \u2264 \u2211 i \u2208 Finset.range 2018, (i + 1) \u2192 \u2203 r \u2264 2018, \u2203 c < r, t.f { row := r, col := c } = n\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P3.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-09-16T20:32:12-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1b74da3c35c3c198ee6324b495f922b684119eb02f5199c5f7a3c268ac569586"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1995P4.lean",
        "start_line": 33,
        "start_column": 89,
        "end_line": 33,
        "end_column": 94
      },
      "debug_info": {
        "goal": "x : \u2115 \u2192 \u211d\nh : x 0 = x 1995\nh1 : \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i\n\u22a2 x 0 \u2264 solution \u2227\n    \u2203 x, x 0 = solution \u2227 x 0 = x 1995 \u2227 \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1995P4.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "8bf203733f0794e1e22f4376adcadd04cad7b415bd6860f73e1236dceb463e5c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2024P2.lean",
        "start_line": 42,
        "start_column": 5,
        "end_line": 42,
        "end_column": 10
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 IsLeast {k | \u2203 S, Good S \u2227 k = {z | InAtLeastKSubsets S k z}.ncard} solution",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2024P2.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-29T08:54:06-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "8c59bcdefbeba56749ef385508b5e62691ef4208163d7e2bbeb2954a29dbe8a2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1975P2.lean",
        "start_line": 34,
        "start_column": 21,
        "end_line": 34,
        "end_column": 26
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u2124\napos : \u2200 (i : \u2115), 0 < a i\nha : \u2200 (i : \u2115), a i < a (i + 1)\n\u22a2 \u2200 (i n0 : \u2115), \u2203 n, n0 \u2264 n \u2227 \u2203 r s j, a n = \u2191r * a i + \u2191s * a j \u2227 i < j \u2227 0 < r \u2227 0 < s",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1975P2.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "910bdd8d06502af1d86098e03cd7affb426b5d7a29a90861dffbafa29bf5aba2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2023P1.lean",
        "start_line": 34,
        "start_column": 4,
        "end_line": 34,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mp\nx : \u2115\n\u22a2 x \u2208 solution_set \u2192 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 P n}",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-23T06:07:49-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "15e0848c7784ad9fd15e9f10c392790899bf89491e42fa932bf9c6218e752563"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2023P1.lean",
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mpr\nx : \u2115\n\u22a2 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 P n} \u2192 x \u2208 solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-23T06:07:49-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "b3826aca3d84084fabd8dd55d0a97c4b07cbfb403dbfb879c501370e0fd9de29"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P6.lean",
        "start_line": 40,
        "start_column": 4,
        "end_line": 40,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ind.inl\nb c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\nb_odd : Odd b\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-12-13T12:48:09-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a292310b33d58c081a06d6cc4f50d414ef2707bbe9410100f4fe1004c15df4c8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P6.lean",
        "start_line": 41,
        "start_column": 4,
        "end_line": 41,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ind.inr\nb c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_odd : Odd c\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-12-13T12:48:09-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "db3f170ae002ea90f2e1d8b0628fec58fbe748bfb81429020d6655c872b11ecc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P6.lean",
        "start_line": 36,
        "start_column": 32,
        "end_line": 36,
        "end_column": 37
      },
      "debug_info": {
        "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\n\u22a2 a.gcd b = 1",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-12-13T12:48:09-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "ea13ded8936390883891499590a3519f0361b117a9cdc56ec6ff247cb3787ca0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P6.lean",
        "start_line": 38,
        "start_column": 26,
        "end_line": 38,
        "end_column": 31
      },
      "debug_info": {
        "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\n\u22a2 Odd a",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-12-13T12:48:09-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "ed0c4451ab472ba11dbeaa31795dd05162462e4a408642f01801ba6235c80d75"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P6.lean",
        "start_line": 39,
        "start_column": 26,
        "end_line": 39,
        "end_column": 31
      },
      "debug_info": {
        "goal": "b c : \u2115\nhb : 0 < b\nhc : 0 < c\na : \u2115\nih : \u2200 m < a, 0 < m \u2192 m ^ 4 = b ^ 4 + c ^ 2 \u2192 False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\n\u22a2 Odd b",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P6.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-12-13T12:48:09-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "c24da64aec0572f7df3c8dd87b09b058442341b2cc36a108acbf06c92a1969a5"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2012P2.lean",
        "start_line": 34,
        "start_column": 4,
        "end_line": 34,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 3 \u2264 n\na : { x // x \u2208 Finset.Icc 2 n } \u2192 \u211d\napos : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), 0 < a i\naprod : \u220f i, a i = 1\n\u22a2 \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), (1 + a i) ^ \u2191i \u2264 \u2191\u2191i ^ \u2191i / (\u2191\u2191i - 1) ^ (\u2191i - 1) * a i",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2012P2.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-27T20:50:55-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "6b656b40b452637f070abc94e0550c397e6fbb862d456da5f71ebafaced0039f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2012P2.lean",
        "start_line": 35,
        "start_column": 2,
        "end_line": 35,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 3 \u2264 n\na : { x // x \u2208 Finset.Icc 2 n } \u2192 \u211d\napos : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), 0 < a i\naprod : \u220f i, a i = 1\nh1 : \u2200 (i : { x // x \u2208 Finset.Icc 2 n }), (1 + a i) ^ \u2191i \u2264 \u2191\u2191i ^ \u2191i / (\u2191\u2191i - 1) ^ (\u2191i - 1) * a i\n\u22a2 \u2191n ^ n < \u220f i, (1 + a i) ^ \u2191i",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2012P2.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-07T17:59:59-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "000836facd65fa836ee16420b60558d83c4233fa24ad6c3a111a8e94d4a72ab4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1983P5.lean",
        "start_line": 27,
        "start_column": 65,
        "end_line": 27,
        "end_column": 70
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 S, S.card = 1983 \u2227 (\u2200 x \u2208 S, x \u2264 10 ^ 5) \u2227 \u2200 x \u2208 S, \u2200 y \u2208 S, \u2200 z \u2208 S, x < y \u2227 y < z \u2192 x + z \u2260 2 * y",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1983P5.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "7a69c42c7f9f125437185b1c9fc92d7795c86a2c379d368b7550ffed756e4d77"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2023P5.lean",
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 IsGreatest {k | \u2200 (j : JapaneseTriangle n), \u2203 p, k \u2264 Fintype.card { i // j.red i = p.steps i }} (solution_value n)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P5.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-23T09:39:50-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "10ebc2192d3a75b2f963bd3f61b4fdf1e4e2fac123ec0737279c201da26646bc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1983P6.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "T : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\na b c : \u211d\nha : a = dist (T.points 1) (T.points 2)\nhb : b = dist (T.points 2) (T.points 0)\nhc : c = dist (T.points 0) (T.points 1)\n\u22a2 0 \u2264 a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) \u2227\n    (0 = a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) \u2194 EqualityCondition a b c)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1983P6.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-05-24T09:06:54-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3d5a4451c801f87b1e7155be7e2701b268ef4ca0ef4d806d1a3bb331986c8ef2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2017P6.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset (\u2124 \u00d7 \u2124)\nhS : \u2200 s \u2208 S, gcd s.1 s.2 = 1\n\u22a2 \u2203 n, 0 < n \u2227 \u2203 a, \u2200 s \u2208 S, \u2211 i \u2208 Finset.range n, a i * s.1 ^ i * s.2 ^ (n - i) = 1",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2017P6.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-02T08:56:28-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "d64cc4968550b81e88fb7917de719f99088b77b082eadadac6c1460ab6e7d6e0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1971P3.lean",
        "start_line": 23,
        "start_column": 63,
        "end_line": 23,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u22a2 {(n, m) | (2 ^ n - 3).Coprime (2 ^ m - 3)}.Infinite",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P3.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "18493d62eebe92b1ad1c9b0b55228abc8759946c42a14d9dc2802344cbfee998"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2001P1.lean",
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\n\u22a2 \u2221 (Affine.Simplex.circumcenter t) (t.points 2) (t.points 1) = \u2191Real.pi - \u2221 (t.points 1) (t.points 0) (t.points 2)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-29T20:28:24-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "7b4a585c6f9e62a2df1aaa6fa81fe56ae506abc18da534a26d621188e0892c77"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2001P1.lean",
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B C : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nhAcuteA : \u2220 C A B < Real.pi / 2\nhAcuteB : \u2220 A B C < Real.pi / 2\nhAcuteC : \u2220 B C A < Real.pi / 2\nhAB : \u2220 A B C + Real.pi / 6 \u2264 \u2220 B C A\nABC : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2)) := { points := ![A, B, C], independent := hABC }\nP : \u21a5(affineSpan \u211d {B, C}) := (EuclideanGeometry.orthogonalProjection (affineSpan \u211d {B, C})) A\n\u22a2 \u2220 C A B + \u2220 C (Affine.Simplex.circumcenter ABC) \u2191P < Real.pi / 2",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-29T13:45:33-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "ee845fa1f900c8e260a593aed3969dec328d6ffd42cbd9035c04ad975e075edc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2017P1.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a0 : \u2115\n\u22a2 a0 \u2208 solution_set \u2194 \u2203 A, {n | a a0 n = A}.Infinite",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2017P1.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-02T09:41:34-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1d43200cfbd12ea0c73995ad0a7d4f5ec72ebb2f32f40ac5b062a020740cda6a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1982P4.lean",
        "start_line": 35,
        "start_column": 33,
        "end_line": 35,
        "end_column": 38
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\nhxy : \u2203 x y, x ^ 3 - 3 * x * y ^ 2 + y ^ 3 = \u2191n\n\u22a2 n \u2260 2891 \u2227\n    \u2203 x1 x2 x3 y1 y2 y3,\n      x1 ^ 3 - 3 * x1 * y1 ^ 2 + y1 ^ 3 = \u2191n \u2227\n        x2 ^ 3 - 3 * x2 * y2 ^ 2 + y2 ^ 3 = \u2191n \u2227\n          x3 ^ 3 - 3 * x3 * y3 ^ 2 + y3 ^ 3 = \u2191n \u2227 (x1 \u2260 x2 \u2228 y1 \u2260 y2) \u2227 (x1 \u2260 x3 \u2228 y1 \u2260 y3) \u2227 (x2 \u2260 x3 \u2228 y2 \u2260 y3)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1982P4.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "664bfebbac1c6fc2a923603ac9e942714cfb0aa25c04c858e12c987eae4d9cb6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2008P1.lean",
        "start_line": 28,
        "start_column": 2,
        "end_line": 28,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\n\u22a2 \u2203 k,\n    (\u2200 (i : Fin (n + 1)), 1 < k i) \u2227\n      (\u2200 (i j : Fin (n + 1)), i \u2260 j \u2192 (k i).Coprime (k j)) \u2227 \u2203 m, \u220f i, k i = 1 + m * (m + 1)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2008P1.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-28T09:53:59-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "17f52cc3fe6bdde2031dc9a3b63f2d37430f13f1d3d0d4890928f94430fdc881"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2020P5.lean",
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 n \u2208 SolutionSet \u2194\n    1 < n \u2227\n      \u2200 (\u03b1 : Type) [inst : Fintype \u03b1],\n        Fintype.card \u03b1 = n \u2192\n          \u2200 (f : \u03b1 \u2192 \u2115+),\n            (Pairwise fun a b => \u2203 s, s.Nonempty \u2227 geometric_mean f s = (\u2191\u2191(f a) + \u2191\u2191(f b)) / 2) \u2192\n              \u2203 y, \u2200 (a : \u03b1), f a = y",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P5.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-18T17:13:51-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "7cda25c5ee26d2e5ce0ba4bbd25626195a3d0276411517f6368e9375af56c748"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1963P4.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x\u2081 x\u2082 x\u2083 x\u2084 x\u2085 y : \u211d\n\u22a2 (x\u2081, x\u2082, x\u2083, x\u2084, x\u2085) \u2208 SolutionSet y \u2194\n    x\u2085 + x\u2082 = y * x\u2081 \u2227 x\u2081 + x\u2083 = y * x\u2082 \u2227 x\u2082 + x\u2084 = y * x\u2083 \u2227 x\u2083 + x\u2085 = y * x\u2084 \u2227 x\u2084 + x\u2081 = y * x\u2085",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1963P4.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T08:58:13-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "dadfe170b5abd88f8d87744633853afcb214ea416c42a1a6972de382d61ac7c6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "f5eccdc3c1087ce8e0fa5de98487c4b9f0e17b466a14c6ff17bfd51f7ee844df"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1b4549a7f99321c680d5eba196ed48a2f03b1c6e38b415b48bae98b318c4572d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "0e47e1dc204fb0cd9d9105a3bd0d11899f287fb03839c8ba1cda4499b53d0920"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "2d3c34ee5b51b3c60b46be7841a5183ec00109f623349a618507daf3252ca1db"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4e114f0a36a4c9f3e461bebd312cba323468378cb66eca708aa012370dc94ff2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "e5e44cbabf8ccde6e2b17551712341bbbb81bc84f5edcd799c24e3ff11403a2f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1242d7ce42b24197936bf10666d41b7af4016a6c0aa0b232d9283a169fc37599"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 hj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 1, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "f1f835af412ae1808f2381cfd6f798b1fc0fc43b42152709891c9eeaea4a3a77"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "7866919956bea21f27eadf5c1c009558e99ca771dab48b0c9b59630270de39dd"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4c2d40fbe36ea72d6f40744e439689d30e273cc8bb3a2fc9587ebef04f4f0b70"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "71e0d3357fad98db3158a08af93ea86e07bae53f7510a6825744878675a5f186"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "12034a8c19e0cd8a3821ca2b86cace0e9cda9afba573af42a01b58a591902f56"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "7fff431ac7296b360b5ddc858760e0033054c8ffec73a8c6163bd5debf63c704"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "af9433f7bed0a9d895eb5bcd10de53d73aad83db0529aa177255dce1f49e2872"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "73e6d2fd67880eb6c7e484c80eaf8611165d09d86dd77e565d8ece38f823b53c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 2, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "223af2772f141d557e778e97d00ee9d2f291296553ab3b67d4695be70854888b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "a7d4c52ff46ca1e0237446c281f067aa11eb39b7d9f11c7cfa70ca183621950d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "bf0ef1a15996584838fdc2c02c5d2504892791ae3f48bec4fa93b7f1a6acfaff"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "81be109718254013fa033ec3b4239dac571c95f84d92ad6a2e41c74de7d32119"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "41e6f9e1feec43b30dcbf75ff8fc0208a59b548d5300bb847fefbb9fdf1d7ff0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1274e5c83ee1358d23b96e80b4b9d95225b8397cbcb6a3e2714d59f168876957"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "04a2d75f85aa21a71d8fe9852f59d9aef4546ece37bd51fee9c4548247ac81b8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "ebd3d7afca130128d0fddf4d2663f299d853fc88b4d45df067f57d3ca59f0cb1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 3, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "fef2f82eb5bfb140d95bf0ce492965dcdb2bc400b7208f76d41318e7755b790f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "cb663d0e1ce874ba06b40e0121c51d823f1b5e4be93aa4bb37ff426e89243074"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "338df36c8e3359512d558471f6c8ae553079999294470ff526f0d4146a045c6f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3c54d0a3795b90b086596695c5ad6954507deeb3bab878598e4a4a174afcf40b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1121f8e9b163ec41eaa6f3fb5d37d01deb1abde552412d5e54640c8be6897bd6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5d603cce10e4b14df55f1eee78e88d8aeca193063a2a2c6f389265ed4c73953c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "c85747599a537c6ffca3bd2bbfd3b443d0b8d68d9cb0ad78f42756c5469c2373"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4c24939fc4bdb84e88077c67f9ad18f0da6ab223108218504392b3050f5be35c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 4, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3ba55cfc35d1b19ae77790c8e836b2c20bff6ad49190ba76f56b8d7c1c41f910"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "c78f65069c3786a53ce41267a2990b8f5e1c5a5a51e637d6857bb34fdcf08a06"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "732bc3d627983f68e0a0ae3489d7e202b4c8676ff9a5e8e511ae47c49a5fbdc9"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "9fd9f09a7f5151a28239f6b543542e12b1dea9c71ad71da1258cbdf8cce28951"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3a31f762344cc10a3f4a285b9707d82eec683ef62d3bc53e24878d8351c81e69"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "65579631a3df714f74b29fb7ec81c7d5c51d1f77f089f4bfaa1fe3b58c0447f1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "2427a12149ad60f3da8c4a82c3692bddef73e3da3a708d8e2851103641dd9f7a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4529f7c0345c3f1f556463a98a873bc2d898e214f552395d901fe00962abd86c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 5, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "d7a8990edf1cb34390db765087d674ed6c9169cb0f80c2ae1e56669dd45e7c7f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1a07994d64e82e9137330d5b7a85de2d429bcda8225ba5398c0a8f612125d507"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "01c3062f95ce457ac1390ec28f6ecbfc092c0a8bb90767852c79fb72457f0ad2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5ab24a647c77aa1c7b351b5e62316e68ae5358c3b0806b7297a4d0389b979001"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "6bcd360233d42fc12faf3d0c2d8c7c26a61296d0aa6d6d49305c1c01a0898340"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "06d66619040c0abd3e5408da51e157a7bd6e5e11c58c6eb2cffa071630ba544c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4bf8077509e327eb5012ef8948108574f7bbad3b09202cba62caf8881df2eb43"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "b4468593cce701f5d63754982acd49cf7f5f1b8b74c3b19873ea73ac6ff2162d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 6, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "40b44930609bb1217e1867d4cc6b022ccae06691e77b5eed12bff8771e6babda"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "336042af7186201ff93eb50061a1e0611d5193e6f4262b4461ecd53019934c03"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "813be212b88bae5d76a30f89dfb76bd84955f9c58f8563c93d0e7734a1b24996"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "56a755706dbce627a7857c8f09dbc0d4a458b95b66eb6d5da3730d73bd8e9619"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "d63a932f6883a1e474c2e910b1167b70bc081b66b002dccdca31e329cd467b62"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "ca9398af4e5e796553454024f23475f0e68bd188481300142556233e2a4e2575"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "fa24d207147bc4d1a6f09a98377900cb02f439a637c9c0078827c358c9d835ea"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "942ab9b9b0245cebdf7717ec80e51b172ce497744cb4bd0dc31e7b663699ab1f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 7, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5693d8cb01ecf4c7cd0bd1ab8e34f652978f261e1b548c58717719f5d7c421f5"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e81, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 1 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "fd18c3c0e2804a9f9ae657fc90b50e29e49fcf8ca1e977f063896e03f5e461ce"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 2 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "2cebe444324e0c668b07408c3def882f3093e2e1e1335a5e81edcf7932bc4b43"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e83, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 3 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "755e8bdf18242b1e67d89c9d674921f6d57ac24edd2008bf67f6162f7a6f0f59"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e84, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 4 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "8d035b859df9280e806942d1d964b5036e63de23f6f509d3f8cd47613f046106"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e85, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 5 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "bf78c7082e72970cbf40371637754b2d24de2ee8f22d7f2c51b4f82abfe36ae0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e86, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 6 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1b9ed15268bff60f67e1559600bcc93b11944f1a84432e4168630d7e48c50ef7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e87, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 7 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1a87f892ba397cfb3a94a0452a3a0f07f588492603784f88f270aa0583663527"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\nhc2 :\n  (match \u27e88, \u22ef\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0) =\n    match \u27e82 * 8 - 8, hij2\u27e9 with\n    | \u27e81, property\u27e9 => 0\n    | \u27e82, property\u27e9 => 1\n    | \u27e83, property\u27e9 => 0\n    | \u27e84, property\u27e9 => 1\n    | \u27e85, property\u27e9 => 1\n    | \u27e86, property\u27e9 => 0\n    | \u27e87, property\u27e9 => 1\n    | \u27e88, property\u27e9 => 0\n    | x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "9863b9380860a92d271ff1c11d72565631020b26d2e9f736feeb9f93f024355d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 87,
        "start_column": 4,
        "end_line": 87,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case left\ncolor : \u2191(Set.Icc 1 solution_value) \u2192 Fin 2\n\u22a2 coloring_is_good color",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-17T11:03:23-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "4dfcdfe291ff46c6fc82b53f0fca21f1b636bcff633ea8c0f9dc1411d818e8a1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1991P6.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u211d\nha : 1 < a\n\u22a2 Bounded (solution a ha) \u2227 \u2200 (i j : \u2115), i \u2260 j \u2192 1 \u2264 |solution a ha i - solution a ha j| * |\u2191i - \u2191j|",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1991P6.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-20T21:26:57-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "9a27ead7e901d4b2a8237c3922016f7362874addcf8d84c29521c4212418e36d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2021P2.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nx : Fin n \u2192 \u211d\n\u22a2 \u2211 i, \u2211 j, \u221a|x i - x j| \u2264 \u2211 i, \u2211 j, \u221a|x i + x j|",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2021P2.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-04T09:33:15-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "d30938ff6debc5503d64b6164a3d310e42a1a410883d04d98c121791789f58ed"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2015P2.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2124\n\u22a2 (a, b, c) \u2208 SolutionSet \u2194\n    0 < a \u2227 0 < b \u2227 0 < c \u2227 is_power_of_two (a * b - c) \u2227 is_power_of_two (b * c - a) \u2227 is_power_of_two (c * a - b)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2015P2.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-07T18:22:25-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3931ff4e24b0e27b3a721bd58c4c0c4fb3d99add222117fbe86db98047cd9fd5"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1993P5.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 if DoesExist = true then \u2203 f, Good f else \u00ac\u2203 f, Good f",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1993P5.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T13:48:13-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "b2eee41030bd1b84e31fcb8e72599d1d3785cce18cd948f2a3584e6da8159c3b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2007P1.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na x : Fin n \u2192 \u211d\nh : Monotone x\n\u22a2 (\u2a06 i, d a i) / 2 \u2264 \u2a06 i, |x i - a i|",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-27T11:23:45-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "0fa2c4666fb34d33a86e885cd30911f353a5e8db7640b27e303df0eaeebcb5a8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2007P1.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u211d\n\u22a2 \u2203 x, Monotone x \u2227 (\u2a06 i, d a i) / 2 = \u2a06 i, |x i - a i|",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-27T11:23:45-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "6ce2f8f3b0847e9ad0becb040b6fde0dbc8f1dcb19adea3c04eb0fb6a31f9102"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2023P3.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nhk : 2 \u2264 k\na : \u2115+ \u2192 \u2115+\n\u22a2 a \u2208 SolutionSet hk \u2194\n    \u2203 P,\n      P.Monic \u2227\n        P.degree = \u2191k \u2227\n          (\u2200 n \u2264 k, 0 \u2264 P.coeff n) \u2227\n            \u2200 (n : \u2115+), Polynomial.eval (\u2191\u2191(a n)) P = \u2191\u2191(\u220f i \u2208 Finset.range k, a \u27e8\u2191n + i + 1, \u22ef\u27e9)",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P3.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-24T09:05:23-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "1117e8a7a517122b73dbcb9fdd47dc1e91fcce2bc71ba0a142cbbb7b7a86c725"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1973P5.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Set (\u211d \u2192 \u211d)\nhf : \u2200 f \u2208 G, \u2203 a b, a \u2260 0 \u2227 \u2200 (x : \u211d), f x = a * x + b\nhG : \u2200 f \u2208 G, \u2200 g \u2208 G, g \u2218 f \u2208 G\nhinv : \u2200 f \u2208 G, (\u2200 (x : \u211d), f x \u2260 0) \u2192 f\u207b\u00b9 \u2208 G\nhfix : \u2200 f \u2208 G, \u2203 x, f x = x\n\u22a2 \u2203 k, \u2200 f \u2208 G, f k = k",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1973P5.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T12:13:52-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "326e1256148b8163d39717c39796f00ef6ec4ce41f967dee46711a7b96d432fc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1966P4.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nhx : \u2200 (t : \u2115) (k : \u2124), x \u2260 \u2191k * Real.pi / 2 ^ t\n\u22a2 \u2211 i \u2208 Finset.range n, 1 / Real.sin (2 ^ (i + 1) * x) = 1 / Real.tan x - 1 / Real.tan (2 ^ n * x)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1966P4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-23T21:57:24-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "02c78a8299d63bc3541eca361742691e59f1ec71d835fa9df2de40d42d12eba8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo1970P6.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : Fin 100 \u2192 Pt\nhP : \u2200 (a b c : Fin 100), [a, b, c].Nodup \u2192 \u00acCollinear \u211d {P c, P b, P c}\n\u22a2 let cardAll := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points};\n  let cardAcute := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points \u2227 AcuteTriangle t};\n  \u2191cardAcute / \u2191cardAll \u2264 7 / 10",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1970P6.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-21T09:27:31-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "fc4853fef38f3fe863cf2d87956e1ee4a2e7ce864d586917dde85c4771408849"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2000P5.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : ZMod 3 \u2192 EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A 0, A 1, A 2]\n\u03c9 : Fin 7 \u2192 Circle\nhTangent : \u2200 i < 6, ExternallyTangent (\u03c9 i) (\u03c9 (i + 1))\nhA : \u2200 i < 7, A \u2191i \u2208 \u03c9 \u2191i \u2227 A (\u2191i + 1) \u2208 \u03c9 \u2191i\n\u22a2 \u03c9 0 = \u03c9 6",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2000P5.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-16T09:11:27-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "e97dd05f8b02a88ccec3e6f2bced6a18341024aff9110c24dc12371251e8d418"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/CIIM2022P6.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\n\u22a2 d (n + 1).factorial \u2264 2 * d n.factorial",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/CIIM2022P6.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-16T20:57:01-05:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "8594afb538b66f2210ef250234e20ef941d0de3624227a418f60b8acdff8173f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2023P5.lean",
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\nn : \u2115\nhn : 2 < n\n\u22a2 n \u2208 solution_set \u2192\n    \u2200 (a : Fin n \u2192 Fin n \u2192 Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid \u22ef a ha \u2192 \u2203 p, \u2203 (hp : \u2200 (r : Fin n), Function.Injective (p r)), col_valid \u22ef (fun r c => a r (p r c)) \u22ef",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-04T12:29:47-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "5cf8e96ea39aac4fd4af09646d3eb359d3353f76ab6fa68f329cc347261e5677"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Usa2023P5.lean",
        "start_line": 61,
        "start_column": 4,
        "end_line": 61,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nn : \u2115\nhn : 2 < n\n\u22a2 (\u2200 (a : Fin n \u2192 Fin n \u2192 Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid \u22ef a ha \u2192\n        \u2203 p, \u2203 (hp : \u2200 (r : Fin n), Function.Injective (p r)), col_valid \u22ef (fun r c => a r (p r c)) \u22ef) \u2192\n    n \u2208 solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-04T12:29:47-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "3e6c2261cccc3c7a82006cbffa972069d8e9f7a3abbc6ffddb14c17dd8fba1a9"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Hilbert/NNFormula.lean",
        "start_line": 232,
        "start_column": 8,
        "end_line": 232,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalCNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Hilbert/NNFormula.lean#L232"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "bcf644c470f475c7994ab03bf0e0b46312f04b170fd9bea7dd71558840925546"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Hilbert/NNFormula.lean",
        "start_line": 236,
        "start_column": 8,
        "end_line": 236,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03c6 : NNFormula \u2115\n\u22a2 \u2203 \u03c8, \u03c8.isModalDNF \u2227 Hilbert.K \u22a2! \u03c6.toFormula \u2b64 \u03c8.toFormula",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Hilbert/NNFormula.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "2e5fd2d1ca89d742b05bf59bd6ed8a7908bc37efbb142bd4d13970da275f017b"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 29,
        "start_column": 25,
        "end_line": 29,
        "end_column": 30
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\n\u22a2 \u03b3 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Maximal/Makinson.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "c7a960f4d195c6fdbc65af7eb8de1b233da630460f066d3ee2d62197174de5bd"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 30,
        "start_column": 33,
        "end_line": 30,
        "end_column": 38
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\n\u22a2 \u03b3 \u2209 Logic.Ver",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Maximal/Makinson.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "1c29e71612ada3ce8fd3d9b9df9ae659d79c9e25d1d80e60c579177b0189255d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 33,
        "start_column": 4,
        "end_line": 33,
        "end_column": 9
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u22a2 \u2203 \u03b4 \u2208 \u0393, (\u2191\u03b4).toFormula \u2208 L \u2227 (\u2191\u03b4).toFormula \u2209 Logic.Ver",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Maximal/Makinson.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "545a7b40619b1186dafca2abb8710cd85eec8003cac79343198bb094a72e0698"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 38,
        "start_column": 4,
        "end_line": 38,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mk.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\n\u03be : NNFormula \u2115\nproperty\u271d : (\u25a1\u03be).isPrebox \u2228 (\u25a1\u03be).isPredia \u2228 (\u25a1\u03be).degree = 0\nh\u03c8\u2081 : \u27e8\u25a1\u03be, property\u271d\u27e9 \u2208 \u0394\nh\u03c8\u2082 : (\u2191\u27e8\u25a1\u03be, property\u271d\u27e9).isPrebox\nthis : \u25a1\u03be.toFormula \u2208 Logic.Ver\n\u22a2 False",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Maximal/Makinson.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "a82657060dc6aefdaf942d6c99ddb8e4426dc9e7570f8f7931c186844756b8db"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 40,
        "start_column": 49,
        "end_line": 40,
        "end_column": 54
      },
      "debug_info": {
        "goal": "L : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u03c6 \u2209 Logic.Ver\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\n\u22a2 \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Maximal/Makinson.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "64c76c03c06f86a0870049904896116a76cfd7f08b6fd0e5b6bfe94211f83cf1"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Maximal/Makinson.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.mk.intro.intro.intro\nL : Logic\ninst\u271d\u00b9 : L.Normal\ninst\u271d : L.Consistent\n\u03c6 : Formula \u2115\nhL : \u03c6 \u2208 L\nhV : \u00acHilbert.Ver \u22a2! \u03c6\n\u0393 : List { \u03c8 // \u03c8.isModalCNFPart }\n\u03b3 : Formula \u2115\ne\u03b3 : (\u22c0\u0393.unattach).toFormula = \u03b3\nh : Hilbert.K \u22a2! \u03c6.toNNFormula.toFormula \u2b64 \u03b3\nthis\u271d : \u03c6.toNNFormula.toFormula \u2b64 \u03b3 \u2208 L\nh\u03b3L : \u03b3 \u2208 L\nh\u03b3V : \u03b3 \u2209 Logic.Ver\n\u0394 : List { \u03c8 // \u03c8.isPrebox \u2228 \u03c8.isPredia \u2228 \u03c8.degree = 0 }\nh\u03b4\u0393 : \u27e8\u22c1\u0394.unattach, \u22ef\u27e9 \u2208 \u0393\nh\u03b4L : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2208 L\nh\u03b4V : (\u2191\u27e8\u22c1\u0394.unattach, \u22ef\u27e9).toFormula \u2209 Logic.Ver\nh\u0394\u2081 : \u2200 \u03c8 \u2208 \u0394, \u00ac(\u2191\u03c8).isPrebox\nthis : \u2203 \u0393, \u03c6 \u2b64 \u22c0\u0393 \u2208 L\n\u22a2 \u2203 \u03c8, \u25c7\u03c8 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Maximal/Makinson.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-10T09:06:15+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "be8bf55fc8172468fa6417a9957de39b6fa518ae160acfc9e942277be97796c3"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean",
        "start_line": 42,
        "start_column": 4,
        "end_line": 42,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 FrameClass.finite_connected_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "39bc3ea9cfec46b758df1d7b6d52a9a3728fde89c18cf4ef72a79e2c02790103"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean",
        "start_line": 33,
        "start_column": 101,
        "end_line": 33,
        "end_column": 106
      },
      "debug_info": {
        "goal": "\u22a2 Complete Hilbert.GLPoint3 FrameClass.finite_strict_linear_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-17T22:57:50+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "06b315c7c48ca584b60f9b5dcbeb344414dca3f7cd8f0168ac7e2811a9d1c9d2"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "strict-hierarchy",
        "commit": "c5ba54bc11691b0978d756355a7a8191dd4eec41",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean",
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115}, Grz.miniCanonicalFrame Hilbert.GrzPoint2 \u03c6 \u2208 FrameClass.finite_confluent_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c5ba54bc11691b0978d756355a7a8191dd4eec41/Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-04-26T23:33:31.647541+00:00"
      },
      "id": "3011fe079333483f83e4c162d2b58df07608e202f19aa0b5e2e7ad6cbc98e0dc"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "solovay-sentences",
        "commit": "96ecdcf3310a2fd8245872e8a962c668d61f0ce5",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/GL/Completeness.lean",
        "start_line": 111,
        "start_column": 2,
        "end_line": 111,
        "end_column": 7
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b2 : T.Delta1Definable\nM : Model\nr : M.World\ninst\u271d\u00b9 : M.IsFiniteTree r\ninst\u271d : Fintype M.World\nN N' : \u2115\nw : Fin N \u2192 Semiterm \u2112\u2092\u1d63 Empty N'\nt : M.World \u2192 Semiterm \u2112\u2092\u1d63 Empty N\ni : M.World\n\u22a2 (Rewriting.app (Rew.substs w)) (\u2a56 \u03b5, \u03b8ChainAux T t \u03b5) = \u2a56 \u03b5, \u03b8ChainAux T (fun i => (Rew.substs w) (t i)) \u03b5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/96ecdcf3310a2fd8245872e8a962c668d61f0ce5/Foundation/ProvabilityLogic/GL/Completeness.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "5a2548ae1d83",
        "blame_date": "2025-03-31T09:39:30+09:00",
        "inclusion_date": "2025-04-01T05:40:23.283040+00:00"
      },
      "id": "53f4f7361843fd4dac777d7c0e837d01743e4e73d6cc9e99fbc8c3bbe2452d92"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Carleson/LinearizedMetricCarleson.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/LinearizedMetricCarleson.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-07-30T10:31:30+02:00",
        "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
      },
      "id": "c310678d6982240739518fff83bb4c7b4b852dffb9d2a6da65f71a00216e5e57"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TileStructure.lean",
        "start_line": 526,
        "start_column": 70,
        "end_line": 526,
        "end_column": 75
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d\u00b2 : PseudoMetricSpace X\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\n\u22a2 IsAntichain (fun x1 x2 => x1 \u2264 x2) (toTileLike '' \ud835\udd04) \u2194\n    \u2200 (p p' : \ud835\udd13 X), p \u2208 \ud835\udd04 \u2192 p' \u2208 \ud835\udd04 \u2192 p \u2260 p' \u2192 Disjoint (toTileLike p).toTile (toTileLike p').toTile",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TileStructure.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-07-03T17:09:05+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "b11fec209a8e9e6d28ba0f72be209af353af056d145d5e5bf091a912ceee00b6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Carleson/HolderVanDerCorput.lean",
        "start_line": 218,
        "start_column": 2,
        "end_line": 218,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR t : \u211d\nhR : 0 < R\nC : \u211d\u22650\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z R\nh2\u03d5 : HolderWith C nn\u03c4 \u03d5\nht : t \u2208 Ioc 0 1\n\u22a2 LipschitzWith (C8_0_1 \u2191a \u27e8t, \u22ef\u27e9) (holderApprox R t \u03d5)",
        "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L218"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-07-19T16:30:05+02:00",
        "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
      },
      "id": "393599577049b16ddc0284d92bb8541569987867e6056aaf90f085f7000f6d65"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Carleson/HolderVanDerCorput.lean",
        "start_line": 229,
        "start_column": 55,
        "end_line": 229,
        "end_column": 60
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR : \u211d\u22650\nhR : 0 < R\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z \u2191R\nh2\u03d5 : hnorm \u03d5 z R < \u22a4\nf g : \u0398 X\n\u22a2 \u2191\u2016\u222b (x : X), cexp (I * (\u2191(f x) - \u2191(g x))) * \u03d5 x\u2016\u208a \u2264\n    \u2191(C2_0_5 \u2191a) * volume (ball z \u2191R) * hnorm \u03d5 z R * (1 + \u2191(nndist_{z ,\u2191R} f g)) ^ (2 * \u2191a ^ 2 + \u2191a ^ 3)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "4f0774fdf1b5",
        "blame_date": "2024-07-01T23:56:16+08:00",
        "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
      },
      "id": "0a7b83de487e4725261acd6846fed27d95d85448b239aef8106cf387db39e490"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Carleson/MetricCarleson.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/MetricCarleson.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-06-16T22:39:23+02:00",
        "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
      },
      "id": "614b0b1fd379e2aab89e519f6043f2cd34f21de790b42d55b8bc704504a1d15e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 58,
        "start_column": 2,
        "end_line": 58,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nx : \u211d\n\u22a2 partialFourierSum n (partialFourierSum n f) x = partialFourierSum n f x",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "5cf368edd40f6686c7cf712723cd2708e16112dafe65202e7ceff6b93580caae"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 68,
        "start_column": 2,
        "end_line": 68,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\n\u22a2 \u222b (x : \u211d) in 0 ..2 * \u03c0, (starRingEnd \u2102) (partialFourierSum n f x) * g x =\n    \u222b (x : \u211d) in 0 ..2 * \u03c0, (starRingEnd \u2102) (f x) * partialFourierSum n g x",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "60c0cd3392949ba20afa599ece3f28e3db655d1e45f1b616574451b1fdfb5bdc"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 134,
        "start_column": 2,
        "end_line": 134,
        "end_column": 7
      },
      "debug_info": {
        "goal": "g : \u211d \u2192 \u2102\nn : \u2115\nhmg : Measurable g\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\n\u22a2 (fun p => eLpNorm ((Ioc 0 (2 * \u03c0)).indicator (approxHilbertTransform n g)) p volume) \u2264 fun p =>\n    eLpNorm ((Ioc 0 (2 * \u03c0)).indicator g) p volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "0d0452e487bcae6fb1961fd7b6858cc14d0985e42138e76c88d15181c1c255be"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nhg\u271d : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * \u03c0)\nr : \u211d\nhr : r \u2208 Ioo 0 \u03c0\nhg : \u2200 (x : \u211d), \u2016g x\u2016 \u2264 niceKernel r x\n\u22a2 eLpNorm ((Ioc 0 (2 * \u03c0)).indicator fun x => \u222b (y : \u211d) in 0 ..2 * \u03c0, f y * g (x - y)) 2 volume \u2264\n    2 ^ 5 * eLpNorm ((Ioc 0 (2 * \u03c0)).indicator f) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "613e84de0ee275a0f16c37b30e3825a2914e869a1ccd76c1e0fc5873330f9699"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 168,
        "start_column": 2,
        "end_line": 168,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Continuous (dirichletApprox n)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L168"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "e56a79b1bebeac3fb340f47b6c862fdad5bf08d4608ceb92d994448138fab36f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Function.Periodic (dirichletApprox n) (2 * \u03c0)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "a04d60225babf97b3e178476dea5a97d57d0b2fff018930ec691ca25ebed64c1"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 182,
        "start_column": 2,
        "end_line": 182,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nn : \u2115\nx : \u211d\n\u22a2 approxHilbertTransform n f x = \u2191(2 * \u03c0)\u207b\u00b9 * \u222b (y : \u211d) in 0 ..2 * \u03c0, f y * dirichletApprox n (x - y)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "a5c69bea75b27a811d2528bbc7737b8ecd2ca4000425f6fa438dfca2d868ae80"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 192,
        "start_column": 2,
        "end_line": 192,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * \u03c0)\nr : \u211d\nhr : r \u2208 Ioo 0 1\nn : \u2115\nhn : n = \u2308r\u207b\u00b9\u2309\u208a\nx : \u211d\n\u22a2 dist (dirichletApprox n x) ({y | \u2016y\u2016 \u2208 Ioo r 1}.indicator 1 \u2191x) \u2264 2 ^ 5 * niceKernel r x",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L192"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "034e090b3b5d00fd6c5739e217cb6a1b098d003fa4a867f94e567c82879e24e6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 205,
        "start_column": 2,
        "end_line": 205,
        "end_column": 7
      },
      "debug_info": {
        "goal": "r : \u211d\nhr : 0 < r\n\u22a2 HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts 4)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Classical/HilbertStrongType.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "a1e9bc78fc17042729da155c3a7456a7e1e5986eb838c8a87676ab4cebb90d9d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/BoundedFiniteSupport.lean",
        "start_line": 50,
        "start_column": 2,
        "end_line": 50,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u2074 : MeasurableSpace X\nf : X \u2192 E\ninst\u271d\u00b3 : TopologicalSpace E\ninst\u271d\u00b2 : ENorm E\ninst\u271d\u00b9 : Zero E\n\u03bc : Measure X\ninst\u271d : MeasurableSpace E\nbfs : BoundedFiniteSupport f \u03bc\n\u22a2 Measurable f",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/BoundedFiniteSupport.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-03-19T12:39:18+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "460cda378c202c78d0e03cc5cd25dea5a98c833356f0b9cac604cad9b5f2b37a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\nhf : LocallyIntegrable f \u03bc\n\u22a2 ContinuousOn (fun x => \u2a0d\u207b (y : X) in ball x.1 x.2, \u2016f y\u2016\u2091 \u2202\u03bc) (univ \u00d7\u02e2 Ioi 0)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/HardyLittlewood.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "fd9f4b218937a4558c9f66cfca2221a69d91365e8e2f8b157616ca60e16e4f74"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 391,
        "start_column": 33,
        "end_line": 391,
        "end_column": 38
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u00b9\u00b9 : MetricSpace X\ninst\u271d\u00b9\u2070 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2079 : \u03bc.IsDoubling A\ninst\u271d\u2078 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2077 : BorelSpace X\ninst\u271d\u2076 : NormedSpace \u211d E\ninst\u271d\u2075 : MeasurableSpace E\ninst\u271d\u2074 : BorelSpace E\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\nh\ud835\udcd1 : \ud835\udcd1.Countable\nR : \u211d\nhR : \u2200 i \u2208 \ud835\udcd1, r i \u2264 R\np : \u211d\u22650\nhp : 1 < p\n\u22a2 \u2200 (f : X \u2192 E), MemLp f (\u2191p) \u03bc \u2192 \u2200\u1d50 (x : X) \u2202\u03bc, MB \u03bc \ud835\udcd1 c r f x \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-20T18:21:24+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "c7869fae856813b3e3c4345c57328e4428ee5e902a62545df85d66e836284c27"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 451,
        "start_column": 2,
        "end_line": 451,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    eLpNorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191(C2_0_6 A p\u2081 p\u2082) * eLpNorm v (\u2191p\u2082) \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L451"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "815e25d02c1768da1982f769158ae3560951060b22880e8619f49d3bbe5e85be"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 456,
        "start_column": 2,
        "end_line": 456,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (MB \u03bc \ud835\udcd1 c r f)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L456"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "05e80ff9860b703391208b2cda69077ae36243fad6875f39785f9e1e1e35295f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 469,
        "start_column": 2,
        "end_line": 469,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    wnorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191(A ^ 2) * eLpNorm v (\u2191p\u2082) \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L469"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "a65bf16630d6e102b858d7756662a7ae8631d5ae8fbaaddb09e4ca4e92f402cb"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 535,
        "start_column": 31,
        "end_line": 535,
        "end_column": 36
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 \u2200 (f : X \u2192 E),\n    MemLp f (\u2191p\u2082) \u03bc \u2192\n      \u2200\u1d50 (x : X) \u2202\u03bc, maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) f x \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L535"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "36bc1c4731292dca07e7f25f06f9fd49b9ecbd53961545f124f8197f49a5e0bb"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 546,
        "start_column": 29,
        "end_line": 546,
        "end_column": 34
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\n\u22a2 \u2200 (f : X \u2192 E),\n    MemLp f (\u2191p\u2082) \u03bc \u2192\n      \u2200\u1d50 (x : X) \u2202\u03bc, maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) f x \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/HardyLittlewood.lean#L546"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
      },
      "id": "cea385dac1d112850bc06971123e5c0fa2db07a903a7bfbc542d04ce324857e5"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 560,
        "start_column": 2,
        "end_line": 560,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u00b2 : \u03bc.IsDoubling A\ninst\u271d\u00b9 : NormedAddCommGroup E\nf : X \u2192 E\ninst\u271d : ProperSpace X\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (globalMaximalFunction \u03bc 1 f)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L560"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-06-20T19:02:09+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "a135885236f8f9812986da33746dc9973c1d95f6ba49bded65d807027401a0be"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/WeakType.lean",
        "start_line": 618,
        "start_column": 2,
        "end_line": 618,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b5 : Type u_3\ninst\u271d\u2075 : TopologicalSpace \u03b5\ninst\u271d\u2074 : ContinuousENorm \u03b5\n\ud835\udd5c : Type u_12\nE' : Type u_13\n\u03b1 : Type u_14\n\u03b1' : Type u_15\ninst\u271d\u00b3 : NormedAddCommGroup E'\n_x : MeasurableSpace \u03b1\n_x' : MeasurableSpace \u03b1'\nT : (\u03b1 \u2192 \u03b5) \u2192 \u03b1' \u2192 E'\np p' : \u211d\u22650\u221e\n\u03bc : Measure \u03b1\n\u03bd : Measure \u03b1'\nc : \u211d\u22650\nh : HasWeakType T p p' \u03bc \u03bd c\ninst\u271d\u00b2 : NormedRing \ud835\udd5c\ninst\u271d\u00b9 : MulActionWithZero \ud835\udd5c E'\ninst\u271d : IsBoundedSMul \ud835\udd5c E'\nk : \ud835\udd5c\nf : \u03b1 \u2192 \u03b5\nhf : MemLp f p \u03bc\n\u22a2 wnorm ((k \u2022 T) f) p' \u03bd \u2264 \u2191(\u2016k\u2016\u208a * c) * eLpNorm f p \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/WeakType.lean#L618"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
      },
      "id": "688b3e0133f891911b1757ec0b89288ac24a5d49c47c3a0d8ac4b0762edbf08f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_4 a n) *\n        eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "9a8e695223cd668091caf9069e8a3380828a4186c792edfeaa3281246711802a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_4 a n) *\n        eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "21e98d33c842da0b8a9dfa507c8c0a3b218b2a126cc0bd736f0e22d1dc343bac"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j : \u2115\nt : Forest X n\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhg : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm (\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f) 2 volume \u2264\n    \u2191(C7_7_2_1 a n) * eLpNorm f 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "5ec26505c5d27a1809261c859101c4ca93a0703ed52561c1971d211a82b08b23"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 262,
        "start_column": 2,
        "end_line": 262,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j : \u2115\nt : Forest X n\nu : \ud835\udd13 X\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhf : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm ((\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, F.indicator) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f)) 2 volume \u2264\n    \u2191(C7_7_2_2 a n) * dens\u2082 (\u22c3 u \u2208 t, (fun x => t.\ud835\udd17 x) u) ^ 2\u207b\u00b9 * eLpNorm f 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L262"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "189f0b1e011dcc5f7972e95e055f27bd5655a2de5faff1d289fe40c78149ca6d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 276,
        "start_column": 2,
        "end_line": 276,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn j j' : \u2115\nt : Forest X n\nf\u2081 f\u2082 : X \u2192 \u2102\nhjj' : j < j'\nhj' : j' < 2 ^ n\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nh3f\u2081 : \u2200 (x : X), \u2016f\u2081 x\u2016 \u2264 G.indicator 1 x\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\nh3f\u2082 : \u2200 (x : X), \u2016f\u2082 x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (x : X),\n          (\u2211 u \u2208 {p | p \u2208 t.rowDecomp j}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2081 x) *\n            \u2211 u \u2208 {p | p \u2208 t.rowDecomp j'}, adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2082 x\u2016\u208a \u2264\n    \u2191(C7_7_3 a n) * eLpNorm f\u2081 2 volume * eLpNorm f\u2082 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "9b07894f7d8ad30e35e87d859858543d5fc2574fc7497d546e08d9fdc540301f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 346,
        "start_column": 2,
        "end_line": 346,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\n\ud835\udd09 : Forest X n\nf g : X \u2192 \u2102\nhf : Measurable f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nh2g : Bornology.IsBounded (support g)\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 u \u2208 {p | p \u2208 \ud835\udd09}, carlesonSum ((fun x => \ud835\udd09.\ud835\udd17 x) u) f x\u2016\u208a \u2264\n    \u2191(C2_0_4 (\u2191a) q n) * dens\u2082 (\u22c3 u \u2208 \ud835\udd09, (fun x => \ud835\udd09.\ud835\udd17 x) u) ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume * eLpNorm g 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L346"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "6e86ac46e8b53c6748f5f525b75b04aa05b7d30bb539ceb386b3a703c7fe1d64"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/RemainingTiles.lean",
        "start_line": 370,
        "start_column": 2,
        "end_line": 370,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf : Bornology.IsBounded (range f)\nh2f : HasCompactSupport f\nh3f : AEStronglyMeasurable f volume\n\u22a2 eLpNorm (approxOnCube (t.\ud835\udcd9\u2086 u\u2081) fun x => \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016) 2 volume \u2264\n    \u2191(C7_6_2 a n) * eLpNorm ((\u2191(\ud835\udcd8 u\u2081)).indicator fun x => (MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x).toReal) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "4d015f611f4aaf2a01974bcaff01986b9180ceeac03d5716da495e1d2717d512"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/RemainingTiles.lean",
        "start_line": 385,
        "start_column": 2,
        "end_line": 385,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_6 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L385"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "8cb6159b07625d48c00c7d86fc540744d67a6e3e114eed79458f2bbb660a8e3e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/LargeSeparation.lean",
        "start_line": 1471,
        "start_column": 2,
        "end_line": 1471,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 t.\ud835\udcd9\u2085 u\u2081 u\u2082\nhf : BoundedCompactSupport f\n\u22a2 \u2191(\u2a06 x \u2208 ball (c J) (8 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016\u208a) \u2264\n    \u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J),\n      \u2191\u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f x\u2016\u208a + \u2191(C7_5_10 a) * \u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1471"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "3e5af1872ae08407ee90e3eac0d1240ca0de39efcceedca0bf7b85f740c605a8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/LargeSeparation.lean",
        "start_line": 1489,
        "start_column": 2,
        "end_line": 1489,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 t.\ud835\udcd9\u2085 u\u2081 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 HolderOnWith\n    (C7_5_4 a *\n        ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) f\u2081 x\u2016\u208a) +\n          (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2081 x\u2016) x).toNNReal) *\n      ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191D ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f\u2082 x\u2016\u208a) +\n        (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2082 x\u2016) x).toNNReal))\n    nn\u03c4 (t.holderFunction u\u2081 u\u2082 f\u2081 f\u2082 J) (ball (c J) (8 * \u2191D ^ s J))",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1489"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "f74815f5814774759ce140182d237b651e2816c81d4a7c7717e673e78cd0d9c0"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Carleson/ForestOperator/LargeSeparation.lean",
        "start_line": 1590,
        "start_column": 2,
        "end_line": 1590,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(C7_4_5 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/ForestOperator/LargeSeparation.lean#L1590"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
      },
      "id": "26e629ab562912a8106cd781ac490c4717fde3b0b5d65acc2036af727f39a87c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 343,
        "start_column": 83,
        "end_line": 343,
        "end_column": 88
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\n\u22a2 \u2211 p \u2208 \ud835\udd04_aux \ud835\udd04 \u03d1 N, volume (E p \u2229 G) \u2264 \u2191(C_6_3_4 a N) * dens\u2081 \u2191\ud835\udd04 * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p))",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L343"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-11-16T17:32:56+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "adc132913be3022f3730af799610f485f01120cd7ab74a685fb71670fef79372"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 \ud835\udd04' : Finset (\ud835\udd13 X)\nh_le : \ud835\udd04' \u2286 \ud835\udd04\n\u03d1 : \u0398 X\n\u22a2 eLpNorm\n      (\u2211 \ud835\udd2d \u2208 \ud835\udd04',\n        (1 + dist_{\ud835\udd20 \ud835\udd2d ,\u2191D ^ \ud835\udd30 \ud835\udd2d / 4} (\ud835\udcac \ud835\udd2d) \u03d1) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) \u2022 (E \ud835\udd2d).indicator 1 * G.indicator 1)\n      (\u2191(Antichain.p a)) volume \u2264\n    \u2191(C_6_1_6 a) * dens\u2081 \u2191\ud835\udd04 ^ (1 / \u2191(Antichain.p a)) * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p)) ^ (1 / \u2191(Antichain.p a))",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-28T18:13:23+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "06f3fc55faced5482011d84f9d1ae1d8acaf7f54de575585ad39e36918fc8c96"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 329,
        "start_column": 6,
        "end_line": 329,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2 = \u2191(3 * (2 * nnq / (nnq + 1)) - 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L329"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "8c1765e70683251fea028a23ac0b7340c8480c10ec4b5843d5d4d2fd814e4678"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 334,
        "start_column": 6,
        "end_line": 334,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) / (2 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))\u207b\u00b9)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "da54b74fccee08845a7f0951246a3ae63d24ea0c97c518704d24d356956d5b72"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 312,
        "start_column": 6,
        "end_line": 312,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p\u2081 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "50248e80408268fca85717aa466c8a09571a3e7de3f6820511951d7dea65568f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 379,
        "start_column": 86,
        "end_line": 379,
        "end_column": 91
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\n\u22a2 (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L379"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "a65910d5fb7f63889e11885ed3543e8ccf74f82360ccd62d73d8aac6d7d90403"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 385,
        "start_column": 4,
        "end_line": 385,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L385"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "e66468d344f740ee9c32dfd9cba7699cb20dedd7ce74cb44e72738ffa76b9016"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 420,
        "start_column": 6,
        "end_line": 420,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 p \u2208 \ud835\udd04, carlesonOn p f x\u2016\u208a \u2264\n    eLpNorm g 2 volume * eLpNorm (\u2211 p \u2208 \ud835\udd04, carlesonOn p f) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L420"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2024-08-09T16:06:25+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "fdaac9a729117fda775fcc30f221a6df6b6bbe2d5ef259c2aafeef241aa53a1b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 434,
        "start_column": 8,
        "end_line": 434,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\nh2 : 2 ^ (107 * a ^ 3) = \u2191\u20162 ^ (107 * a ^ 3)\u2016\u208a\nz : X\n\u22a2 MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f z \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L434"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2024-08-09T16:06:25+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "d4b881520eea376d1e741f6574d04f2f72ae4a9ea8529be360fb69f16e36b50f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 449,
        "start_column": 6,
        "end_line": 449,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 \u2264 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) \u2264 nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) / (2 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2) \u2264 2 ^ 2 / (2 * \u2191nnq / (\u2191nnq + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191nnq / (\u2191nnq + 1)) / (3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191nnq / (\u2191nnq + 1) - 1) * eLpNorm f 2 volume\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    2 ^ (2 * a + 2) *\n      (\u2191(2 * nnq / (nnq + 1) - 1)\u207b\u00b9 * (dens\u2082 \u2191\ud835\udd04 ^ ((2 * \u2191nnq / (\u2191nnq + 1))\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume))",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L449"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2024-08-09T16:06:25+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "da5097657100e02172a7422229c556d28bf7428304eeb7d36a8e9a5fb237db93"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 511,
        "start_column": 51,
        "end_line": 511,
        "end_column": 56
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u208a \u2264\n    \u2191(C_2_0_3 \u2191a nnq) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/Antichain/AntichainOperator.lean#L511"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-01-09T16:08:11+01:00",
        "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
      },
      "id": "4d02ec0de229e53442cd8d7d10fef21977c2bbb137a6e7a812b11e2cc537ad2d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 359,
        "start_column": 2,
        "end_line": 359,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a \u2264\n    \u2191(C_6_1_5 a) * (1 + dist_{\ud835\udd20 p' ,\u2191D ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p)) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) /\n        \u2191(volume.nnreal \u2191(\ud835\udcd8 p)) *\n      \u222b (y : X) in E p', \u2016g y\u2016 * \u222b (y : X) in E p, \u2016g y\u2016",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L359"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "edffe990c24946bdfd096d7d425b0c720841deb29ce19499d59cfc36be0645f7"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 370,
        "start_column": 2,
        "end_line": 370,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "44ce6540a88da0802e894ee902ce4c82444ab5be883869d39a93054cd1579559"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 368,
        "start_column": 84,
        "end_line": 368,
        "end_column": 89
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u208a = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "0ae5a937f31822b7e0e1866f76c40b62dd3c1e5691225fb8795f24a418d1c197"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 121,
        "start_column": 2,
        "end_line": 121,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\nhx : dist x x' \u2264 r\n\u22a2 \u2191(nndist (czOperator K r g x) (czOperator K r g x')) \u2264 \u2191(C10_1_2 a) * globalMaximalFunction volume 1 g x",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "d24c562a103f9d5c5263b1edb4991cdd2efb5914bdd754323a3ae5da4bb9bf3b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 131,
        "start_column": 2,
        "end_line": 131,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\nhx : dist x x' \u2264 R / 4\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    \u2016czOperator K r ((ball x (R / 2))\u1d9c.indicator g) x'\u2016\u2091 + \u2191(C10_1_3 a) * globalMaximalFunction volume 1 g x",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "0b9032e3a8c6b06e3363eeb38edeeacd8b8b1e21bb113cbef55de9d6e6e08aad"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 143,
        "start_column": 2,
        "end_line": 143,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume {x' | x' \u2208 ball x (R / 4) \u2227 4 * globalMaximalFunction volume 1 (czOperator K r g) x < \u2016czOperator K r g x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "96ed4696e3ff93212edaa6857e86be54312e9e7c762e4b49b6aa69aa1dce032f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 153,
        "start_column": 2,
        "end_line": 153,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume\n      {x' |\n        x' \u2208 ball x (R / 4) \u2227\n          \u2191(C10_1_4 a) * globalMaximalFunction volume 1 g x < \u2016czOperator K r ((ball x (R / 2)).indicator g) x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L153"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "b4b1117d1cddd63c605a19612f286428bcde49fe93b21cdf6c8ef9aa261d48b2"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + \u2191(C10_1_5 a) * globalMaximalFunction volume 1 g x",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "4f535c614e2276213415136b01e0d556f2972cb9853994652b369b213132f397"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 175,
        "start_column": 2,
        "end_line": 175,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "10a0528a1cd1de6cd54bcfc5f41dc722d76f5229096d9dd69b0b3049dbdddbbb"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 183,
        "start_column": 2,
        "end_line": 183,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "f0d5865f4327a57b55c4dd78ad977758ecd22d168459b7f309fbebddd35ff44b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 190,
        "start_column": 2,
        "end_line": 190,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2081 : \u211d\n\u22a2 Continuous fun R\u2082 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L190"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "0cb8ab414f4fae5a46c97491e27da5e532b8557bbcb82d7ecd79398c9517f44b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2082 : \u211d\n\u22a2 Continuous fun R\u2081 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "79798fe1e067378119b2470abc930f8f47c29dc8edf9c8ae2aa186e95802b96c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 739,
        "start_column": 2,
        "end_line": 739,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 nontangentialOperator K f x =\n    \u2a06 R\u2081, \u2a06 R\u2082, \u2a06 (_ : R\u2081 < R\u2082), \u2a06 x', \u2a06 (_ : dist x x' \u2264 R\u2081), \u2016\u222b (y : X) in ball x' R\u2082 \\ ball x' R\u2081, K x' y * f y\u2016\u2091",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L739"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "61678db16321e7e753ec53b2dedb9c687787cb234451d55240a987c1749e5ad9"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 216,
        "start_column": 2,
        "end_line": 216,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume (C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume (C10_0_2 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "b295d887e2ebe1477bd0d8fe9b63eb5d7df204ff8de62209e1d2f1d9c97c01f1"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
      },
      "id": "55316ee7ff6bda7ee05ebd30d9336efbccd10baa858aaaf4189189bade66565c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 36,
        "start_column": 31,
        "end_line": 36,
        "end_column": 36
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nthis : C10_2_1 a = \u2191(defaultA a) ^ 4\n\u22a2 \u2200 (f : X \u2192 \u2102), MemLp f 1 volume \u2192 \u2200\u1d50 (x : X), globalMaximalFunction volume 1 f x \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "6ac2db58396b0d5a22eac364b7897d17af11ae2c24dd334ab114c859afb215d3"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 50,
        "start_column": 2,
        "end_line": 50,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 \u2200\u1d50 (x : X),\n    \u2203 c r,\n      Tendsto (fun i => \u2a0d (y : X) in ball (c i) (r i), f y) atTop (\ud835\udcdd (f x)) \u2227\n        Tendsto r atTop (\ud835\udcdd[>] 0) \u2227 \u2200 (i : \u2115), x \u2208 ball (c i) (r i)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "6ab79ba19ffd9d83a9efd5388b98fc21700dbe0057fb2b8f629355096e42b702"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 62,
        "start_column": 2,
        "end_line": 62,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nO : Set X\nhO : IsOpen O \u2227 O \u2260 univ\n\u22a2 \u2203 c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) \u2227\n      \u22c3 i, ball (c i) (3 * r i) = O \u2227\n        (\u2200 (i : \u2115), \u00acDisjoint (ball (c i) (7 * r i)) O\u1d9c) \u2227\n          \u2200 x \u2208 O, Cardinal.mk \u2191{i | x \u2208 ball (c i) (3 * r i)} \u2264 \u2191(2 ^ (6 * a))",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "35d3cfe2ed3aedcece1c8d313be0fb81b531c0944b6610729384c0c547c840fc"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nh : \u00acGeneralCase f \u03b1\n\u22a2 volume univ < \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "76edf11015d2f4e455b520626d92be74d43df7b418716a280bb9c24a6e9b60c6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 88,
        "start_column": 2,
        "end_line": 88,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 IsOpen (globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1) \u2227 globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1 \u2260 univ",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "0d7951e9db5640cfd60b6d0161639c6ca82c9aa0645c59afcc612c840e7b8111"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 135,
        "start_column": 2,
        "end_line": 135,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 czBall3 hf hX i}.Finite",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "661be72b888469d048015fea1f8c9d57038fc53605017cf96a5dd937b7bdb83f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 143,
        "start_column": 2,
        "end_line": 143,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ni : \u2115\n\u22a2 czBall hf hX i \u2286 czPartition hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "ea0a98ee2716e72972242a884616109837af0f597078a6106827fd6620b58aef"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => czPartition hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "bc1271ca08a2e565e762e5fdcd27f56d20d2ce16d3fd506a42ff28e2ecff551e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 156,
        "start_column": 2,
        "end_line": 156,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 czPartition hf hX i\nhj : x \u2208 czPartition hf hX j\n\u22a2 i = j",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "bef8fe270fc7854e5072d5f060598b8e16f7ca0ca926c01bb2db901821d1d994"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 \u22c3 i, czPartition hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "a4881259c4913b7a297f4e4f189fa8db9be67ed1a9577dadf4d8368a150619bb"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), czRemainder' hf hX i x = czRemainder hf \u03b1 x",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T17:21:05+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "e9485aa0ceb780aa7fd852f0848204116d95496da780b1c892b80daad0a10300"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 202,
        "start_column": 2,
        "end_line": 202,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (czApproximation hf \u03b1)",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "8d0e7125c9131b2e2fd18f757ffeb3b3c78c2cf47e5fe55ade95ac2376652080"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 213,
        "start_column": 2,
        "end_line": 213,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "c5fae2a6f3ed0f2133638fb2e7851a7a9d12cfb67471f4ed6314796db5417547"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "f99dc4074ffc88be450cc84023bdb9e6006f7291f13d937c1bd05a08030f7806"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czApproximation hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "92ca7c7a65aee32ce23b03e64882af6a75d379ffc8da735c4f0f852e0c9039d7"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 230,
        "start_column": 2,
        "end_line": 230,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (czRemainder' hf hX i) \u2286 czBall3 hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "8cb9b98a34d7e4033311fb7ef06bedd0f504ad8eafd787b6fc9ba27c9ada6204"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 236,
        "start_column": 2,
        "end_line": 236,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), czRemainder' hf hX i x = 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "57e3d229379484c7daf59b8728f3b24972459d5a69756e708c2eeb1464f44016"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 241,
        "start_column": 2,
        "end_line": 241,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), czRemainder hf \u03b1 x = 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "0859f73bf06334982076ba8ef93b00810fda286cd33540d19e049f703b659f06"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (czRemainder' hf hX i) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume (czBall3 hf hX i)",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "c621919be3af7d0b02fef8b661d98ef314017303af4c879916217944935339bd"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 252,
        "start_column": 2,
        "end_line": 252,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "576e1bd794657e644ec7aca795dd3f3a9791a3aa8dd3bbd75d7bd022d8e842c0"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (czBall3 hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "a367981a94d8d52068531989a85ecbb5fa1d0efb88b129fdb2f928bd47517229"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 262,
        "start_column": 2,
        "end_line": 262,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L262"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "f4abb6415f63d2fdcc807fd089730c9aadbf2bc009b5b3a94c36fb1b826e62d3"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 268,
        "start_column": 2,
        "end_line": 268,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (czRemainder' hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L268"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "33f6c66298c7e80eca6b4b4dc521d0bbea420eac7d881b7e14238a4e323f5989"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 274,
        "start_column": 2,
        "end_line": 274,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L274"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "98202fd18d17752300cdee85000ef432cbfd9f88595c7e0bb0a7e221625b2a9b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 292,
        "start_column": 2,
        "end_line": 292,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (czApproximation hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L292"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "01b926c6b7a70c907f205655a86e324866173858ca317c72a8647d1f4030b588"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 307,
        "start_column": 2,
        "end_line": 307,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (\u03a9 hf \u03b1)\u1d9c\nhX : GeneralCase f \u03b1\n\u22a2 \u2016czOperator K r (czRemainder hf \u03b1) x\u2016\u2091 \u2264 3 * czOperatorBound hf hX x + \u03b1 / 8",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L307"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "a18a6174579adfc88f25bf9de4e93002f771db35b364318b5712401d66586e5e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 317,
        "start_column": 2,
        "end_line": 317,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 volume ((\u03a9 hf \u03b1)\u1d9c \u2229 czOperatorBound hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264 \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L317"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "0dba88cfa78cb53fd805d5fa5edce059644a81b5090c9633861f73d9b0c92dfb"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 328,
        "start_column": 2,
        "end_line": 328,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 distribution (czOperator K r (czRemainder hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
      },
      "id": "c3655a201bc62093a5dabb7ad9fd9e981517d16735637f3b9bbf084f6cd3db19"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 344,
        "start_column": 2,
        "end_line": 344,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\n\u22a2 HasBoundedWeakType (czOperator K r) 1 1 volume volume (C10_0_3 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L344"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "84dd636a123b0d04f995de2b8db851c6dacdc0df4e39a318c0e5a5efb899f749"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 84,
        "start_column": 21,
        "end_line": 84,
        "end_column": 26
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\nc : \u2102\nx : GL (Fin 0) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)\n\u22a2 \u22a4.FG",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-01-18T16:24:18+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "9e387459881cd06e272e824be590ae23b8dbeea7f8a795b138793d41827a9361"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 128,
        "start_column": 19,
        "end_line": 128,
        "end_column": 24
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 IsSmooth fun x => z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "82d1219a31ec6248c082e52254b9ea0e5469453722467bd455f48ca7e8bab7e5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 129,
        "start_column": 21,
        "end_line": 129,
        "end_column": 26
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (g : GL (Fin n) \u211a) (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)) (y : GL (Fin n) \u211d),\n    (fun x => z)\n        (((algebraMap \u211a (DedekindDomain.FiniteAdeleRing \u2124 \u211a)).GL (Fin n)) g * x, ((algebraMap \u211a \u211d).GL (Fin n)) g * y) =\n      (fun x => z) (x, y)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "6ca591f359cc5cfe62ef7ba54fe8a2445a82ffceb099ddc8af7ea10afd209a65"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 130,
        "start_column": 30,
        "end_line": 130,
        "end_column": 35
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)), IsSlowlyIncreasing fun y => (fun x => z) (x, y)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "acb487a3f803ef24437362c40783ccfc64dd3ed0312143596ae842f3acf31bb9"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 132,
        "start_column": 26,
        "end_line": 132,
        "end_column": 31
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2203 U, IsConstantOn U fun x => z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T23:32:34+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "3e33fcaa7e39bed563d6e4aff873004a6260a2d06811154a0d3104466c513cba"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 131,
        "start_column": 23,
        "end_line": 131,
        "end_column": 28
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => (fun x => z) (x, y), \u22ef\u27e9))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T23:29:04+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "2d14df01adfe386a57e34463a79d0a34952873d53b218d69ae2cd9df1efbffbe"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 137,
        "start_column": 28,
        "end_line": 137,
        "end_column": 33
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\nz : \u2102\n\u22a2 \u03c1.IsTrivial",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L137"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "7308b79f890354ea9fd42f982e1334101ff8882e1e369f274cf2162ce59e77d1"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 138,
        "start_column": 14,
        "end_line": 138,
        "end_column": 19
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\n\u22a2 Function.LeftInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "acf4aa7f710e488628f0cc7f15a91896a6cbdb0ce427d958d0e340411919c730"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 139,
        "start_column": 15,
        "end_line": 139,
        "end_column": 20
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\n\u22a2 Function.RightInverse (fun z => ofComplex z \u03c1 \u22ef) fun f => f.toFun 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "313d43ba40c7115106eb34b2e8729d3f504d3a4cd15597114f845635c8d50803"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/MeasurableSpacePadics.lean",
        "start_line": 67,
        "start_column": 87,
        "end_line": 67,
        "end_column": 92
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\ns : Set \u2124_[p]\n\u22a2 volume (Subtype.val '' s) = volume s",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/MeasurableSpacePadics.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-11T00:03:10+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "703055626bd73562f7d14717868b23079c8f9113595c9a9a73615feae15a6aa4"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/Basic/Reductions.lean",
        "start_line": 324,
        "start_column": 93,
        "end_line": 324,
        "end_column": 98
      },
      "debug_info": {
        "goal": "P : FreyPackage\n\u22a2 IsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L324"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-04-30T10:03:06+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "2189ad07df84bb378d050a31805a1b39aa348c4bcc7fd1399b8309cbf8ec24dd"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/Basic/Reductions.lean",
        "start_line": 334,
        "start_column": 95,
        "end_line": 334,
        "end_column": 100
      },
      "debug_info": {
        "goal": "P : FreyPackage\n\u22a2 \u00acIsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-04-30T10:03:06+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "410ec6dd9751afc45db92cf2f11470387a0ed41450c95a0d3be2793f315dda10"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 35,
        "start_column": 26,
        "end_line": 35,
        "end_column": 31
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\n\u22a2 \u2200 (x : E.n_torsion n), n \u2022 x = 0",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T22:55:14+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "aad435e98450cc8eda7ac39deb77c6ff11556d4d50eba3ab1e97c6debebb802c"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 39,
        "start_column": 91,
        "end_line": 39,
        "end_column": 96
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\nhn : 0 < n\n\u22a2 Finite (E.n_torsion n)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2024-11-30T14:53:27+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "cb8a28cde12be451040d5770e1012634fd01b89b2ed581e35d36e870d0deca49"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 44,
        "start_column": 38,
        "end_line": 44,
        "end_column": 43
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 Nat.card (E.n_torsion n) = n ^ 2",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-03-23T17:52:39+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "55e067881a3bc4db5dd8fdc930d16748550c26f26f88575d27b1df7d31413933"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 49,
        "start_column": 66,
        "end_line": 49,
        "end_column": 71
      },
      "debug_info": {
        "goal": "d : \u2115\nA : Type u_1\ninst\u271d : AddCommGroup A\nn : \u2115\nhn : 0 < n\nr : \u2115\nh : \u2200 (d : \u2115), d \u2223 n \u2192 Nat.card \u21a5(Submodule.torsionBy \u2124 A \u2191d) = d ^ r\n\u22a2 \u2203 \u03c6, True",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/EllipticCurve/Torsion.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-01T22:28:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "bcfa2016b2cad7eb0d107f9622244e651b574f7ad95513abe2bb51049753c11c"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 55,
        "start_column": 56,
        "end_line": 55,
        "end_column": 61
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 \u2203 \u03c6, True",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/EllipticCurve/Torsion.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-03-23T18:21:01+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "44fc57f04fb105798af94c2fbf93b9307825a21da196fb7cdf72f66e243963a8"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 64,
        "start_column": 73,
        "end_line": 64,
        "end_column": 78
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b3 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b2 : E.IsElliptic\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : Algebra k K\n\u22a2 map E (AlgHom.id k K) = AddMonoidHom.id E\u27eeK\u27ef",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2024-11-30T14:53:27+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "4fcf2fb55e3a98d5f1d6aa5a573795d7cef32383f7c213f3e1c13947a7ed6977"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 69,
        "start_column": 48,
        "end_line": 69,
        "end_column": 53
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u2077 : Field k\nE : WeierstrassCurve k\ninst\u271d\u2076 : E.IsElliptic\nK L M : Type u\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : Field L\ninst\u271d\u00b3 : Field M\ninst\u271d\u00b2 : Algebra k K\ninst\u271d\u00b9 : Algebra k L\ninst\u271d : Algebra k M\nf : K \u2192\u2090[k] L\ng : L \u2192\u2090[k] M\n\u22a2 (map E g).comp (map E f) = map E (g.comp f)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2024-11-30T14:53:27+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "4f65649d399b1e7211a7f204454bf8b25786f4755c28d5124477820cdbd0fb32"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 307,
        "start_column": 28,
        "end_line": 307,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x : QHat\n\u22a2 (\u2203 N z, IsCoprime N z \u2227 x = (1 / \u2191\u2191N) \u2297\u209c[\u2124] z) \u2227\n    \u2200 (N\u2081 N\u2082 : \u2115+) (z\u2081 z\u2082 : ZHat),\n      IsCoprime N\u2081 z\u2081 \u2227 IsCoprime N\u2082 z\u2082 \u2227 (1 / \u2191\u2191N\u2081) \u2297\u209c[\u2124] z\u2081 = (1 / \u2191\u2191N\u2082) \u2297\u209c[\u2124] z\u2082 \u2192 N\u2081 = N\u2082 \u2227 z\u2081 = z\u2082",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L307"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-06T01:01:13+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "575d2cf03b8e1b190f9460c549e6e9d5aebdd328d5045a25c142b9574e245895"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 472,
        "start_column": 66,
        "end_line": 472,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 unitsratsub \u2294 unitszHatsub = \u22a4",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L472"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-06T01:54:08+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "d8ab1086af92400d1e0380d15a45467deea7fec9e374a5c825c96c069c3e31b3"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1052,
        "start_column": 29,
        "end_line": 1052,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u22a2 Function.Injective \u21d1j\u2081",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1052"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "33b3f9cd03be709077d97d6ef55afbb006d2898a3b3672787c86ae7d431acfcb"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1059,
        "start_column": 29,
        "end_line": 1059,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u22a2 Function.Injective \u21d1j\u2082",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1059"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "548f6e54bb2a1566d16586c1aa7c3db3e24b4f98b4831cbf2392ed436a0339b1"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1063,
        "start_column": 2,
        "end_line": 1063,
        "end_column": 7
      },
      "debug_info": {
        "goal": "z : D^\n\u22a2 \u2203 N z', z = j\u2081 ((\u2191\u2191N)\u207b\u00b9 \u2297\u209c[\u2124] 1) * j\u2082 z'",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1063"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "2787052271a8828db0e207fce679f14d06b8a668073ef9e75b1f74a474723eb3"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1065,
        "start_column": 82,
        "end_line": 1065,
        "end_column": 87
      },
      "debug_info": {
        "goal": "z : D^\u02e3\n\u22a2 \u2203 u v, \u2191z = j\u2081 \u2191u * j\u2082 \u2191v",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1065"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "0189f8fb7c76b0126de4da39ec0923b904fae293f823025aa22d951c879d993b"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localFullLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "918aec9a99e7efdf6acae4f19f1ff000d0f0099f69f15b8ae1b316e1debcb987"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 176,
        "start_column": 2,
        "end_line": 176,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localFullLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "8e2146f4a30a231a6ec61953a7bcc51ec68dd4e083a7dd704cce2ca9124ba2d2"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 261,
        "start_column": 2,
        "end_line": 261,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpen (localTameLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L261"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "99a782dc181aa18fb17525521ae429273904e3c9e4fb090c48c5041cc34f6c36"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsCompact (localTameLevel v).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "248b4e4e5486e631159f9cea279a858ad0466f02199900a86296183031358d1f"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 313,
        "start_column": 2,
        "end_line": 313,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 IsOpen (TameLevel S).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L313"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "6c7aa55333f8b9c8af3c3aefe47d0554f084198b4f6c91d4445d22955c00e61f"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 316,
        "start_column": 2,
        "end_line": 316,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b9 : Field F\ninst\u271d : NumberField F\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 IsCompact (TameLevel S).carrier",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L316"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-27T16:12:15+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "d83950d603e9af205e68da765af229ff2154e74689a46b81a82e7d4ee37f189e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/NumberField/Completion.lean",
        "start_line": 92,
        "start_column": 2,
        "end_line": 92,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : Algebra K L\nv : InfinitePlace K\ninst\u271d : NumberField L\n\u22a2 Module.finrank v.Completion ((w : ExtensionPlace L v) \u2192 (\u2191w).Completion) =\n    Module.finrank v.Completion (L \u2297[K] v.Completion)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/Completion.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "82b95686a14c",
        "blame_date": "2025-03-27T09:14:59+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "782b95147e01ec113f6da3ea5d044879f88d4007fb0204c9c9292fb3fce89924"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/NumberField/AdeleRing.lean",
        "start_line": 26,
        "start_column": 2,
        "end_line": 26,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\n\u22a2 LocallyCompactSpace (AdeleRing (\ud835\udcde K) K)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-12-02T00:05:18+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "b138b46a0b4c5fb6cdcb7311b498a989628285d1f315b824553507dd9747e4cb"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/NumberField/AdeleRing.lean",
        "start_line": 73,
        "start_column": 2,
        "end_line": 73,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : NumberField L\ninst\u271d : Algebra K L\nl : L\n\u22a2 (baseChangeEquiv K L) (l \u2297\u209c[K] 1) = (algebraMap L (AdeleRing (\ud835\udcde L) L)) l",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-01-21T18:04:24+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "ca08523a05645c7a469b0c92a7d78139914b44d6921fc6fed5527c1b6165f122"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/NumberField/AdeleRing.lean",
        "start_line": 289,
        "start_column": 2,
        "end_line": 289,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 CompactSpace (AdeleRing (\ud835\udcde \u211a) \u211a \u29f8 AdeleRing.principalSubgroup (\ud835\udcde \u211a) \u211a)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "82b95686a14c",
        "blame_date": "2025-02-08T15:57:20+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "a8e1eca51621562e4746e894e62391e5bcb7122f667f9165071496ee611a6f14"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DivisionAlgebra/Finiteness.lean",
        "start_line": 39,
        "start_column": 87,
        "end_line": 39,
        "end_column": 92
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : NumberField K\nD : Type u_2\ninst\u271d\u00b9 : DivisionRing D\ninst\u271d : Algebra K D\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde K) K) (D \u2297[K] FiniteAdeleRing (\ud835\udcde K) K)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-01-09T16:34:07+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "a742558194f888ebbac37922e95767e75bb780311206c816d1622563d7014e02"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DivisionAlgebra/Finiteness.lean",
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : NumberField K\nD : Type u_2\ninst\u271d\u00b3 : DivisionRing D\ninst\u271d\u00b2 : Algebra K D\ninst\u271d\u00b9 : FiniteDimensional K D\ninst\u271d : Algebra.IsCentral K D\nU : Subgroup (Dfx K D)\nhU : IsOpen \u2191U\n\u22a2 Finite (Doset.Quotient (Set.range \u21d1(incl\u2081 K D)) \u2191U)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-10-18T18:57:02+01:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "1a8380d1447b935db0d1ad4785a60c3805b6767069dc936941198d22530f6cea"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 420,
        "start_column": 2,
        "end_line": 420,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nv : HeightOneSpectrum A\n\u22a2 Function.Bijective \u21d1(tensorAdicCompletionComapAlgHom A K L B v)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L420"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "d59614c30f225289f5dc68ec7b021ad171d7c0860d47de2f0862a732e62e9e90"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 531,
        "start_column": 77,
        "end_line": 531,
        "end_column": 82
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 \u2203 S,\n    \u2200 v \u2209 S,\n      ((AlgHom.restrictScalars B (tensorAdicCompletionComapAlgHom A K L B v)).comp\n            (tensorAdicCompletionIntegersTo A K L B v)).range =\n        Subalgebra.pi Set.univ fun x => adicCompletionIntegersSubalgebra L \u2191x",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L531"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "285fac86127eaef84d7a8be7da5ff815b52b6acc28cfd9af039a473477dba02c"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 684,
        "start_column": 4,
        "end_line": 684,
        "end_column": 9
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Function.Bijective \u21d1(baseChange A K L B).baseChange_of_algebraMap",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L684"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "93ea3a69f3f41ec84425f5c095279a6fb97c151f848b3fcf5161bad08cc0412f"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 613,
        "start_column": 84,
        "end_line": 613,
        "end_column": 89
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChange A K L B) x).IsFiniteAdele",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L613"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-11-26T09:29:45+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "8f8520d9be73c10e7f377bd42e354d0a9d34242aa641e396e9e4d07ef2d48f64"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 621,
        "start_column": 2,
        "end_line": 621,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\nx : ProdAdicCompletions A K\n\u22a2 x.IsFiniteAdele \u2194 ((baseChangeEquiv A K L B) (1 \u2297\u209c[K] x)).IsFiniteAdele",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L621"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-11-26T09:29:45+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "e6e8ac5c2400d8826cf13ae192c9b32fe2cb894cd7dfe3a0ff81acac99fa7bd7"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 673,
        "start_column": 2,
        "end_line": 673,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 IsModuleTopology (FiniteAdeleRing A K) (FiniteAdeleRing B L)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L673"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "dab045ce4cb80848b486b7a8626887c53ac68f2f800ffa6f32e8c94a2cf93b46"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 689,
        "start_column": 22,
        "end_line": 689,
        "end_column": 27
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.toFun",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L689"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "7b1b679e889c62f5a98a5fc2c2e10604fcc43253e250c09a356cb22f6860dbf4"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 690,
        "start_column": 23,
        "end_line": 690,
        "end_column": 28
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous __spread\u271d\u207b\u2070.invFun",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "a4a59ea585620cffd1aa9966388bb1b2b8495f30f5af7edd10c89b95c2972fec"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean",
        "start_line": 62,
        "start_column": 2,
        "end_line": 62,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d : Fact (Nat.Prime p)\nx : \u2124_[p]\ns : Submodule \u2124_[p] \u211a_[p]\n\u22a2 \u2191((x \u2022 s.toAddSubgroup).relindex s.toAddSubgroup) = \u2016x\u2016\u208a\u207b\u00b9",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-11T00:03:10+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "5dc4f2b0a450cca89e5a7ff72ad3bf79061e16dad7aea67468dad24672a44f43"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
        "start_line": 24,
        "start_column": 69,
        "end_line": 24,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableInv G\n\u22a2 Measurable Inv.inv",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/Mathlib/MeasureTheory/Group/Action.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-11T00:03:10+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "2f6b2a9320a27d5fdd9ab72addd26df72aeb558b19d07f4977179a72002e4ecb"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
        "start_line": 31,
        "start_column": 28,
        "end_line": 31,
        "end_column": 33
      },
      "debug_info": {
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u00b3 : Group G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d : MeasurableMul G\nc : \u21a5H\n\u22a2 Measurable fun x => c * x",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/Mathlib/MeasureTheory/Group/Action.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-11T00:03:10+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "9ee6174a1e52d16f344788c429d9c3e9c1c351bd09cf4fa3deaab75e70e6c97c"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
        "start_line": 36,
        "start_column": 28,
        "end_line": 36,
        "end_column": 33
      },
      "debug_info": {
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulLeftInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => g * x) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/Mathlib/MeasureTheory/Group/Action.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-11T00:03:10+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "ae0a81058457e8727238c0ae4f8bfcfa16c42b2079bec1779472d65ccd5b39ef"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/Mathlib/MeasureTheory/Group/Action.lean",
        "start_line": 41,
        "start_column": 29,
        "end_line": 41,
        "end_column": 34
      },
      "debug_info": {
        "goal": "G : Type u_1\n\u03b1 : Type u_2\ninst\u271d\u2074 : Group G\ninst\u271d\u00b3 : MeasurableSpace G\ninst\u271d\u00b2 : MeasurableSpace \u03b1\nH K : Subgroup G\ninst\u271d\u00b9 : MeasurableMul G\n\u03bc : Measure G\ninst\u271d : \u03bc.IsMulRightInvariant\ng : \u21a5H\n\u22a2 Measure.map (fun x => x * g) (Measure.comap Subtype.val \u03bc) = Measure.comap Subtype.val \u03bc",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/Mathlib/MeasureTheory/Group/Action.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-11T00:03:10+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "ab9ef74d4bd839729ff25158c9ee7b80acf6235ebad7d1d41d42528c9694e778"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean",
        "start_line": 176,
        "start_column": 2,
        "end_line": 176,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\nM : Type u_3\ninst\u271d\u00b9\u00b2 : CommRing R\ninst\u271d\u00b9\u00b9 : TopologicalSpace R\ninst\u271d\u00b9\u2070 : IsTopologicalRing R\ninst\u271d\u2079 : CommRing S\ninst\u271d\u2078 : TopologicalSpace S\ninst\u271d\u2077 : IsTopologicalRing S\ninst\u271d\u2076 : Algebra R S\ninst\u271d\u2075 : Module.Finite R S\ninst\u271d\u2074 : IsModuleTopology R S\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\ninst\u271d\u00b9 : Module S M\ninst\u271d : IsScalarTower R S M\n\u22a2 moduleTopology R M = moduleTopology S M",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-01-30T11:02:34+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "39062efae389150fafedff5df136b0908dbc9fbc34927fc93aa57c460d1584cd"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean",
        "start_line": 204,
        "start_column": 2,
        "end_line": 204,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u2076 : CommRing R\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : IsTopologicalRing R\ninst\u271d\u00b3 : CommRing S\ninst\u271d\u00b2 : TopologicalSpace S\ninst\u271d\u00b9 : IsTopologicalRing S\ninst\u271d : Algebra R S\nhcont : Continuous \u21d1(algebraMap R S)\nhopen : IsOpenMap \u21d1(algebraMap R S)\n\u22a2 IsModuleTopology R S",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L204"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-01-30T11:02:34+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "54c98af769c9ca6879828e3ad7b55a94e4b5d02db766da1edf5f07c97bdc7b81"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean",
        "start_line": 20,
        "start_column": 2,
        "end_line": 20,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2076 : Field F\ninst\u271d\u2075 : NumberField F\ninst\u271d\u2074 : IsTotallyReal F\nD : Type u_2\ninst\u271d\u00b3 : Ring D\ninst\u271d\u00b2 : Algebra F D\ninst\u271d\u00b9 : IsQuaternionAlgebra F D\nK : Type u_3\ninst\u271d : Field K\nU : Subgroup (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)\u02e3\n\u22a2 FiniteDimensional K (WeightTwoAutomorphicFormOfLevel U K)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "2f4c6b7472cd6724b1396e8d3fa00a413e50315f0cf763f1fa9a103e24e2af18"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b3 : Field F\ninst\u271d\u00b2 : NumberField F\nD : Type u_2\ninst\u271d\u00b9 : Ring D\ninst\u271d : Algebra F D\n\u22a2 (incl\u2082 F D).range \u2264 Subgroup.center (Dfx F D)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "de75557e0fe14dab1d7baca3364d1230e4b0dd856849bde1b66eef6dbb32d84a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean",
        "start_line": 178,
        "start_column": 2,
        "end_line": 178,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type u_4\ninst\u271d\u00b2 : Group G\ninst\u271d\u00b9 : TopologicalSpace G\ninst\u271d : IsTopologicalGroup G\nU : Subgroup G\nhU : IsOpen \u2191U\ng : ConjAct G\n\u22a2 IsOpen \u2191(g \u2022 U)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-03-15T18:40:46+00:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "61effcac3c2120fde9211c249603d077ef88f3854416c72690411f22cadbd327"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/quote4",
        "branch": "stable",
        "commit": "fa4f7f15d97591a9cf3aa7724ba371c7fc6dda02",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "examples/introQ.lean",
        "start_line": 16,
        "start_column": 18,
        "end_line": 16,
        "end_column": 23
      },
      "debug_info": {
        "goal": "\u00ab$P\u00bb : \u2200 {n : Nat}, n = 1\n$fst\u271d : Nat\n\u00ab$m\u00bb : $fst\u271d = 1\n\u22a2 $fst\u271d = 1",
        "url": "https://github.com/leanprover-community/quote4/blob/fa4f7f15d97591a9cf3aa7724ba371c7fc6dda02/examples/introQ.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "1c4ac4603b04",
        "blame_date": "2023-07-14T18:25:43-07:00",
        "inclusion_date": "2025-05-01T23:45:24.130436+00:00"
      },
      "id": "de2af27bbaf69bc7908c89e9a00b6475ebf27556df4c1fc487fd0172d1fff155"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "43be1bece7ff58a0168022c39aa223b8e730eca5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Duper/Tests/lastAsylum.lean",
        "start_line": 35,
        "start_column": 13,
        "end_line": 35,
        "end_column": 18
      },
      "debug_info": {
        "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 \u2200 (x : Inhab), Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
        "url": "https://github.com/leanprover-community/duper/blob/43be1bece7ff58a0168022c39aa223b8e730eca5/Duper/Tests/lastAsylum.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "d9c480704efb",
        "blame_date": "2022-08-01T22:37:02-04:00",
        "inclusion_date": "2025-05-08T23:57:49.858741+00:00"
      },
      "id": "1a84b4382e896315779fe88e608c4ab68099e1c382302ed640d38e38c297f72c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "0f56e6f6463c4d8d406de52cc69b29036e4bed7b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Duper/Tests/test_continuity.lean",
        "start_line": 18,
        "start_column": 50,
        "end_line": 18,
        "end_column": 55
      },
      "debug_info": {
        "goal": "a : Real\n\u22a2 dist a a = zero",
        "url": "https://github.com/leanprover-community/duper/blob/0f56e6f6463c4d8d406de52cc69b29036e4bed7b/Duper/Tests/test_continuity.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "4ac7eab8a488",
        "blame_date": "2023-06-05T10:39:00+02:00",
        "inclusion_date": "2025-05-14T23:19:01.080875+00:00"
      },
      "id": "f44f898036e0dc7614077ce5565e09d3488e31c69d59e89890de3e29cad71ab7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "43be1bece7ff58a0168022c39aa223b8e730eca5",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Duper/Tests/test_continuity.lean",
        "start_line": 20,
        "start_column": 48,
        "end_line": 20,
        "end_column": 53
      },
      "debug_info": {
        "goal": "a : Real\n\u22a2 lt zero one",
        "url": "https://github.com/leanprover-community/duper/blob/43be1bece7ff58a0168022c39aa223b8e730eca5/Duper/Tests/test_continuity.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "4ac7eab8a488",
        "blame_date": "2023-06-05T10:39:00+02:00",
        "inclusion_date": "2025-05-08T23:57:49.858741+00:00"
      },
      "id": "8c1874bf12cff9affa2b3b733c13b2c8770b167d348c91f3c51a3dce6cf572bc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "docs",
        "commit": "514c6039d70f6e63fb7bc3ab853adeb71bc56305",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "BatteriesTest/lintsimp.lean",
        "start_line": 37,
        "start_column": 64,
        "end_line": 37,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : \u03b1\u1d50\u1d52\u1d56\n\u22a2 SemiconjBy a.unop y.unop x.unop \u2194 SemiconjBy a x y",
        "url": "https://github.com/leanprover-community/batteries/blob/514c6039d70f6e63fb7bc3ab853adeb71bc56305/BatteriesTest/lintsimp.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2022-12-18T15:51:52-05:00",
        "inclusion_date": "2025-05-01T23:47:48.985035+00:00"
      },
      "id": "8b612b64eaaca2b8994fc9fc4c141fc33150ec5b80b48fbc6853e07f286e62ff"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "stable",
        "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "BatteriesTest/lintunused.lean",
        "start_line": 7,
        "start_column": 2,
        "end_line": 7,
        "end_column": 7
      },
      "debug_info": {
        "goal": "h : 1 = 1\n\u22a2 True",
        "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lintunused.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-08T02:17:31+02:00",
        "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
      },
      "id": "65144ba85df13429af184bbcebc9acec1069c551c47131a7f16569a4bffb8e41"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "stable",
        "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "BatteriesTest/lint_unreachableTactic.lean",
        "start_line": 23,
        "start_column": 2,
        "end_line": 24,
        "end_column": 5
      },
      "debug_info": {
        "goal": "\u22a2 1 = 1",
        "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lint_unreachableTactic.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
      },
      "id": "93629563ae76c71f4794260dc9c20b692c4af15ca09cc741848e9e2a5b34eeb1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "stable",
        "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "BatteriesTest/lint_unreachableTactic.lean",
        "start_line": 31,
        "start_column": 33,
        "end_line": 31,
        "end_column": 38
      },
      "debug_info": {
        "goal": "aa : Nat\n\u22a2 aa = 0 \u2192 t aa = 0",
        "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lint_unreachableTactic.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "45b5ed8e3c8e",
        "blame_date": "2023-08-26T11:27:15+01:00",
        "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
      },
      "id": "644435573ac6d86d1d3ce2d41e0a3473df4e1f537ec4c9c972b8a3b52de1e4ad"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.fst = q.fst",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "a51721b91b0b2117510c4cc666527c8e120c12b15fa99e03efab91ba8013b48e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 \u03b2\n\u22a2 p.snd = q.snd",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "e7c40d7381ef8a3bf20eb5f2ad02ec504ba7d996b43e400e5a0182d0667e53aa"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.fst = q.fst",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "c60be0eb3493d05540c6b0afcd11697dfe931fd0019344f94d5c304a9280896f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.fst = q.snd.fst",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "e137cb4370b5094681f3472ed98fadce92933e08d5a5777bc0ae77a25f8325d9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd \u03b1 (MyProd \u03b2 \u03b3)\n\u22a2 p.snd.snd = q.snd.snd",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "b1d791d51e35967d109fa20959f15cade1f426f0ab9f1d4f61648afd835f9d34"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "5bf66af5710b22c9a6fc547d31f0049c2fea49a2142c06a7b21a250d23aca054"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 p.snd = q.snd",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "0a82e6fb321217eab1b9685c9be1687c56b7e1ffb9924cd27de794614833e9b6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 78,
        "start_column": 12,
        "end_line": 78,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b1\n\u22a2 p.fst x = q.fst x",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "49046b306d9903282b3d2c27b3e303c7dc2bdd61e065f1a981d456be81a89402"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 78,
        "start_column": 12,
        "end_line": 78,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.h.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : (\u03b1 \u2192 \u03b2) \u00d7 (\u03b3 \u2192 \u03b4 \u2192 \u03b9)\nx : \u03b3\nx_1 : \u03b4\n\u22a2 p.snd x x_1 = q.snd x x_1",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "5a5c0a10ddb76559325fd6271339e247dede37b87f2cc2112c58d22a70e9c688"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 103,
        "start_column": 12,
        "end_line": 103,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\n\u22a2 u = v",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-09-10T21:14:20+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "304f8958c7cf13589590d08387a72628a00024ccf88f9089d668b48f937fb1c6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 103,
        "start_column": 12,
        "end_line": 103,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\nx y : T\nu v : U\n\u22a2 u = v",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-09-10T21:14:20+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "ea4972e01635cd6d3fb9bedf84a62a0df15525babbca6b159b3417c0e1e6ae87"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\nG : SimpleGraph \u03b1\na : \u03b1\nw : G.Walk a a\nhw : Odd w.length\n\u22a2 \u2203 b p, Odd (\u2191p).length",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "e53359d633abc8eb5a4a7f15f0371137577ec379e5e4bca13976fe3168e3a498"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 57,
        "start_column": 2,
        "end_line": 57,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 a b, a \u2260 b \u2227 G.degree a = G.degree b",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "94cc3e8613c67eabb828a15e18e11826833adb0233a0f2e27b35f59a39f00620"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 70,
        "start_column": 2,
        "end_line": 70,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\n\u03b1 : Type u_2\ninst\u271d\u00b9 : Finite \u03b1\ninst\u271d : Nontrivial \u03b1\nG : SimpleGraph \u03b1\nhG : G.Connected\nval\u271d : Fintype \u03b1\n\u22a2 \u2203 a, (\u22a4.deleteVerts {a}).coe.Connected",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "1391d0524974b13a200145cc377faaa9f466ae9eec3ad8dabededd885863256e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 83,
        "start_column": 2,
        "end_line": 83,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 : Type u_2\ninst\u271d\u00b2 : Fintype \u03b1\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\nhG : G.IsAcyclic\nh\u271d : Nonempty \u03b1\n\u22a2 G.edgeFinset.card \u2264 card \u03b1 - 1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2022-11-20T17:08:07+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "5348d23419967e6b8fd055ca91d957145622c42ca3b03784bffe17c6fb82d0aa"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, degreeSequence G = s",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "63d07dffb67aae4cdb0cac3b28801a01b2dbc0aa7fd1faef1eac94a6f7fef6cd"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type u_1\n\u03b1 : Type u_2\nG : SimpleGraph \u03b1\nhG : G.IsAcyclic\ns : Finset \u03b9\nf : \u03b9 \u2192 G.Subgraph\nhf : \u2200 i \u2208 s, (f i).coe.IsAcyclic\nh : \u2200 i \u2208 s, \u2200 j \u2208 s, f i \u2293 f j \u2260 \u22a5\n\u22a2 s.inf f \u2260 \u22a5",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "50db1c76d61f6ff19bc097b50ef35374c100869a7cb16a673c9e0f6016019e4c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 128,
        "start_column": 2,
        "end_line": 128,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), averageDegree G / 2 \u2264 \u2191(H.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "0aecd8513d95a3c39227c935c1102befbd938dec0b9c8f84ce14971e67bf005d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 145,
        "start_column": 2,
        "end_line": 145,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 (\u2203 \ud835\udc9c,\n      (\u2200 (p q : (a : \u03b1) \u00d7 G.Path a a), (\u2191p.snd).edges.Disjoint (\u2191q.snd).edges) \u2227\n        \u2200 (e : Sym2 \u03b1), \u2203 p \u2208 \ud835\udc9c, e \u2208 (\u2191p.snd).edges) \u2194\n    \u2200 (a : \u03b1), Even (G.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "a2171bc40c811962fa336b5a23f31bb8a28bc8fd0cc854c6cd46052ce00e1b7d"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : DecidableEq \u03b1\nn : \u2115\n\u22a2 (\u2203 G x k, G.IsRegularOfDegree k \u2227 G.cliqueNum = n) \u2194 n \u2264 card \u03b1 / 2 \u2228 n = card \u03b1",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "546e460fb0141fa6802b688a83ef3882204f5fa8828b1e0aa0fe5da86ceaf229"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227 (\u2200 a \u2208 u, Even #{ x // x \u2208 {b \u2208 u | G.Adj a b} }) \u2227 \u2200 a \u2208 v, Even #{ x // x \u2208 {b \u2208 v | G.Adj a b} }",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "9b32dab5d4cb28f91d6b01b4aa1011a4f891c4c36c835c30743b93a363c49b0a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : IsLatin f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 IsLatin f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "2a76f7b8970defcfa191b88a9ff249b73e9aa9fdbf6fc6ded13772215f4de3ac"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 #\u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "cc184c9b5d49cb6bd85611b690f265e6aa231d9a088cf9156737b6c2c641ba21"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b3 : DecidableEq \u03b2\ninst\u271d\u00b2 : Countable \u03b1\ninst\u271d\u00b9 : Countable \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "1b45661ff8497442d88727ebeb81179b8e0c99d69adb30951e703bf143d54747"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d\u00b9 : DecidableEq \u03b2\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\ninst\u271d : (a : \u03b1) \u2192 Fintype \u2191(Rel.image r {a})\nhr : \u2200 (A : Finset \u03b1), A.card \u2264 card \u2191(Rel.image r \u2191A)\n\u22a2 \u2203 f, Injective f \u2227 \u2200 (a : \u03b1), r a (f a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "0cba9d47f7b10920a840cbbf5c18260c2865e5609beefb9f13e7d96562aa541e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u221a\u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "8e26cd54b8be1340d8d563c8684323358197b445960de25fa966dc98367ab182"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 252,
        "start_column": 2,
        "end_line": 252,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5, 0 < \u03b5 \u2227 \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1], \u2203 x, \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d), \u03b5 * \u2191(card \u03b1) \u2264 distortion f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "8b867f6b08c33bef9844ac470761aa75a51758590ce5d5645a0dc7c8663125c3"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : \u211d\u22650\n\u03bc : Measure \u03a9\nhG : IsBinomialRandomGraph G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "46b51bb59c19a979862a472d54fe0443db1e06fd4900df7d9725c480a4a05693"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 117,
        "start_column": 8,
        "end_line": 117,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "c06097e51866c5822f2ad5c1f1270bafce0377529b89ed6cb91d59de11397399"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 118,
        "start_column": 8,
        "end_line": 118,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "c5663979c4e4160eb9e17548e7362b1b6a1e30575570fc12969c59fdaf579ebc"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 126,
        "start_column": 8,
        "end_line": 126,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "2d1ba1571cdeea5db20afd81a9e33e81b25c72235079eeeba0fbfcd78bcbaede"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 127,
        "start_column": 8,
        "end_line": 127,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "bc51c379889ca30374c7178ae2623e99043d06fd3c005f816ba5bebedcd3509a"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "0183bd953d3b7d8140d29187a408e2af62297dfb521544521b74627a89e2ee62"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 131,
        "start_column": 6,
        "end_line": 131,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "06324b761a5af46b48dd70c49ede9cbd3c0668d0e42d231cd7f1e810746e51ab"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 132,
        "start_column": 11,
        "end_line": 132,
        "end_column": 16
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : \u211d\u22650\nhX : IsBernoulliSeq X p \u03bc\nhY : IsBernoulliSeq Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "532f84982618eda07d712d8400024a254e9e844c3d41a1de312c949aefc0ee38"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 0)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "f91cda7e4cffbd3704db63e56f69d9308223c66e0e6a13fac8e83defeaa77450"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 \u211d\u22650\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H \u2291 G n \u03c9}) atTop (\ud835\udcdd 1)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "38c11c492591e4f1eaa791522219fb7aa5c05d2305da24cc98dd50cebd619d6f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean",
        "start_line": 97,
        "start_column": 72,
        "end_line": 97,
        "end_column": 77
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * #(\ud835\udc9c \u25a1 \u212c) \u2264 #\ud835\udc9c * #\u212c",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-21T08:29:20+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "0fcbdc47a490598239e7f1e78eaa58164a051ca492662eb6f40959b437097dc1"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : #P.parts = (#s).choose (#s / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    #P.parts = (#(insert i s)).choose (#(insert i s) / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "25b2db5be9910c4c534877f6d268145ded7f52147caef0fa9dbe2b1d44b27387"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/StableCombi/Rel.lean",
        "start_line": 38,
        "start_column": 42,
        "end_line": 38,
        "end_column": 47
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsStableRelWith n r\n\u22a2 IsTreeBoundedRelWith (2 ^ n + 1) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "ac26d5ff17429f369dcb78856730b3664538c3a71d3cf04649cc583df6c86224"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/StableCombi/Rel.lean",
        "start_line": 41,
        "start_column": 33,
        "end_line": 41,
        "end_column": 38
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\nn : \u2115\nr : \u03b1 \u2192 \u03b2 \u2192 Prop\nhr : IsTreeBoundedRelWith n r\n\u22a2 IsStableRelWith (2 ^ n) r",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-12-17T20:50:42+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "7b02aff6f66f487495b5f76843ba7dc3a04ce36bc3b154104ed8f1992544b205"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 25,
        "start_column": 60,
        "end_line": 25,
        "end_column": 65
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191(#A) \u2264 \u2191(#({x \u2208 A ^ 4 | Commute \u03b3 x}))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "9e9e2251f953eab398c6e3389c032592aa31c5dbd9c2c8f24144e38875d630eb"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 30,
        "start_column": 30,
        "end_line": 30,
        "end_column": 35
      },
      "debug_info": {
        "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set SL(2, \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, #F \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "bc809e511427e236c2df25fd3d34a06f10fae32fc59b42754634786397cca7ff"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 41,
        "start_column": 69,
        "end_line": 41,
        "end_column": 74
      },
      "debug_info": {
        "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(#(S ^ n)) \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "27ebd927086c4db93549c5a98d6cf30a84d8c7108f91354d83a57fe135fc2189"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 24,
        "start_column": 6,
        "end_line": 24,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(#(F i)) \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "edd13d8191b120ebea432442b2ba6f559c7fac2d3401253ce8d4c99e15ebfac8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 42,
        "start_column": 64,
        "end_line": 42,
        "end_column": 69
      },
      "debug_info": {
        "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192 (\u2191(#A) / (2 * K) \u2264 \u2191(#((MulOpposite.op a\u271d)\u207b\u00b9 \u2022> A \u2229 A)) \u2194 \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 a\u271d \u2229 A)))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "cb50e1caabd09046920c755e06c55399a308100ee27c75b2936f66ac91ebb5f0"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(S ^ 2)) \u2264 16 * K ^ 12 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "721cb512ffad45e7933f66dd12e701f60a41596bd9a7b5c7473e45302bb65d93"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191(#A) / (2 * K) \u2264 \u2191(#(A \u2229 S ^ 2 <\u2022 a))",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "3e635215843fdf70c6597f1bfed9e55c9faceff82c41ca1fc138b5ddcacd4ffd"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(#(A\u207b\u00b9 * A)) \u2264 K ^ 2 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "58fc57b29c1148d6decafbb5b43525f88aa71e1cffaea3fcc32a423d64b34705"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\n\u22a2 \u2203 F \u2286 A, \u2191(#F) \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "19c0481c5bc3939a05949d6d735fc88f540a6fac6a649b96ac38c8dacf7ded32"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(#(A ^ 2)) \u2264 K * \u2191(#A)\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191(#A) / (2 * K) \u2264 \u2191(#(A <\u2022 g \u2229 A))}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191(#S) \u2264 K ^ 2 * \u2191(#A)\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191(#F) \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(#(A * S ^ 3 * A\u207b\u00b9)) \u2264 8 * K ^ 11 * \u2191(#A)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
      },
      "id": "03aa836926fe6e9fa2eb93286d620ec46ac808bb6783d3f72983bf8b132889ef"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Wiener.lean",
        "start_line": 2275,
        "start_column": 61,
        "end_line": 2275,
        "end_column": 66
      },
      "debug_info": {
        "goal": "A x : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\nhx : 1 \u2264 x\n\u22a2 \u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x)) -\n      \u2191A * \u222b (u : \u211d) in Ici (-Real.log x), \ud835\udcd5 \u03c8.toFun (u / (2 * \u03c0)) =\n    \u222b (t : \u211d), G (1 + \u2191t * I) * \u03c8.toFun t * \u2191x ^ (\u2191t * I)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Wiener.lean#L2275"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-04-04T12:17:01-07:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "b26916486e5850256b0eed6caf786ec823c22e23726c545f8ee8b13c8edb9447"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Wiener.lean",
        "start_line": 2297,
        "start_column": 90,
        "end_line": 2297,
        "end_column": 95
      },
      "debug_info": {
        "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (\ud835\udcd5 \u03c8.toFun y).re \u2227 (\ud835\udcd5 \u03c8.toFun y).im = 0\n\u22a2 \u2203 B, \u2200 (x : \u211d), 0 < x \u2192 \u2016\u2211' (n : \u2115), \u2191(f n) / \u2191n * \ud835\udcd5 \u03c8.toFun (1 / (2 * \u03c0) * Real.log (\u2191n / x))\u2016 \u2264 B",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Wiener.lean#L2297"
      },
      "metadata": {
        "blame_email_hash": "4d01d7c10d46",
        "blame_date": "2024-04-16T02:15:35+02:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "db1247171c97ceeeab233775a62ffbd4e5a1bbaeab475d1218f95e54a97eb4bb"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Wiener.lean",
        "start_line": 2315,
        "start_column": 2,
        "end_line": 2315,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\n\u22a2 cheby fun n => \u2191(f n)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Wiener.lean#L2315"
      },
      "metadata": {
        "blame_email_hash": "4d01d7c10d46",
        "blame_date": "2024-04-16T02:15:35+02:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "486aca387903978e28c770610284dfb5ca299523a415b2f60c2bcab8beab43ae"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "89c431184f7af947a3127c71c18730224e168bda",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 328,
        "start_column": 2,
        "end_line": 328,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nCpos : 0 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), \u039b n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) - \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1\u039b)\u2016 \u2264 C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
      },
      "id": "5f3104a917032b249932ce6f08c0c08e464ff200ddc7419e5587a268f0caa950"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 319,
        "start_column": 23,
        "end_line": 319,
        "end_column": 28
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX : \u211d\nC : \u211d := sorry\n\u22a2 0 < C",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L319"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-14T14:09:55-05:00",
        "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
      },
      "id": "14fd33fdc080f056e7eed7aa93579499f13ed1df0bcaae4c7b4559fea8019345"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 471,
        "start_column": 2,
        "end_line": 471,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX \u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) volume",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/MediumPNT.lean#L471"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-28T10:57:09-05:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "7dcd5128e4cd1bfa3c0522981f901d7bb5ee85f3f23b7ad3897b299964a4471b"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "89c431184f7af947a3127c71c18730224e168bda",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 399,
        "start_column": 2,
        "end_line": 399,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191\u03c0 * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) 2 (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) =\n    \ud835\udcdc (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X +\n      1 / (2 * \u2191\u03c0 * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I))",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-10T12:59:29-05:00",
        "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
      },
      "id": "8a5f497557d4896ce8c37874eca4b8585364a3abd8ceb30f6ee6171d8482ad06"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 582,
        "start_column": 2,
        "end_line": 582,
        "end_column": 7
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\n\u22a2 \u2016(ChebyshevPsi - id) X\u2016 \u2264 C * \u2016X * rexp (-c * Real.log X ^ (1 / 10))\u2016",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L582"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "ae2e14c857bb150d685e8c3ae4bc2b4ba42e9005daf22e0b78acf87bc3dbf5bf"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 569,
        "start_column": 23,
        "end_line": 569,
        "end_column": 28
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\n\u22a2 0 < c",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/MediumPNT.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-14T15:25:09-05:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "0dd2d532c038754930a6fde16ec84ecd87baa418fe48e6d2a7d0d6b8c58b4435"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 1844,
        "start_column": 2,
        "end_line": 1844,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 c, (c =o[atTop] fun x => 1) \u2227 \u2200 (n : \u2115), \u2191(nth Nat.Prime n) = (1 + c n) * \u2191n * log \u2191n",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/Consequences.lean#L1844"
      },
      "metadata": {
        "blame_email_hash": "11451cd2f124",
        "blame_date": "2024-02-19T02:44:41-08:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "503bbb1a8d050d674a1022df9c2b422230f7cbbb09dcaba26ad7bec142948b00"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 2060,
        "start_column": 2,
        "end_line": 2060,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b5 : \u211d\nh\u03b5 : 0 < \u03b5\n\u22a2 \u2200\u1da0 (x : \u211d) in atTop, \u2203 p, Nat.Prime p \u2227 x < \u2191p \u2227 \u2191p < (1 + \u03b5) * x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2060"
      },
      "metadata": {
        "blame_email_hash": "11451cd2f124",
        "blame_date": "2024-02-19T02:44:41-08:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "18ca9b412e4a75a674094e2c67fa2087cfac73bfafa370b5d80bea962e8cef1f"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 2161,
        "start_column": 81,
        "end_line": 2161,
        "end_column": 86
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u03bc n) =o[atTop] fun x => x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2161"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-02-06T17:41:08+01:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "98e9ca1182f2e2c6ed23ddba3dbbea5ae879239b810331cf95b2221ade5925ea"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 2197,
        "start_column": 2,
        "end_line": 2197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, (-1) ^ \u03a9 n) =o[atTop] fun x => x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2197"
      },
      "metadata": {
        "blame_email_hash": "11451cd2f124",
        "blame_date": "2024-02-19T02:44:41-08:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "984e5a323e612c69c8530c42eaefe7d0a1a0cecee6bedc9695186baffb39331e"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 2221,
        "start_column": 98,
        "end_line": 2221,
        "end_column": 103
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u2191(\u03bc n) / \u2191n) =o[atTop] fun x => 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/Consequences.lean#L2221"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-02-06T17:41:08+01:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "afab4cd1c58d8fdec1744839690eae37a8b6cfdf8260ca9d20748696b24f180c"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean",
        "start_line": 70,
        "start_column": 44,
        "end_line": 70,
        "end_column": 49
      },
      "debug_info": {
        "goal": "K : Type u\ninst\u271d\u00b9 : Category.{v, u} K\ninst\u271d : InfinityCosmos K\nX Y X' Y' : K\nf : X \u21a0 Y\ng : X' \u21a0 Y'\n\u22a2 IsIsofibration (prod.map \u2191f \u2191g)",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "eaaeec08515d",
        "blame_date": "2024-12-03T11:33:30-05:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "7bfe8732d5962bbb479ac52b80759d74498dd77834421eb0c4574c2a5891bfc6"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 133,
        "start_column": 50,
        "end_line": 133,
        "end_column": 55
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u22a2 SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "e145769b3210c6f1a055e23e8bf0b1fc4ea2ace94285c386366305707117b87a"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 134,
        "start_column": 36,
        "end_line": 134,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u22a2 SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "4f7d5896175e711b887c3aec607b8fcba17340ee713df4bf19a92ed8e3eb5680"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 135,
        "start_column": 36,
        "end_line": 135,
        "end_column": 41
      },
      "debug_info": {
        "goal": "A : SSet\nf\u271d g\u271d f g h : A _\u298b1\u298c\nH\u2081 : HomotopyL f g\nH\u2082 : HomotopyL f h\n\u03c3 : Subpresheaf.toPresheaf \u039b[3, 1] \u27f6 A := sorry\n\u03c4 : A _\u298b3\u298c := sorry\n\u03c4\u2080 : SimplicialObject.\u03b4 A 0 \u03c4 = (SimplicialObject.\u03b4 A 0 \u226b SimplicialObject.\u03c3 A 0 \u226b SimplicialObject.\u03c3 A 0) g\n\u03c4\u2082 : SimplicialObject.\u03b4 A 2 \u03c4 = H\u2082.simplex\n\u22a2 SimplicialObject.\u03b4 A 3 \u03c4 = H\u2081.simplex",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-17T23:14:43+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "74b2f697370a4a9bddd820434ad83e677b9b29e13abf89b3e889097d2c59a6cc"
    },
    {
      "repo": {
        "remote": "https://github.com/emilyriehl/infinity-cosmos",
        "branch": "main",
        "commit": "8edc65d468b3ed2e4933c7969ec53bd4d904e753",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean",
        "start_line": 159,
        "start_column": 39,
        "end_line": 159,
        "end_column": 44
      },
      "debug_info": {
        "goal": "A : SSet\nf g : A _\u298b1\u298c\ninst\u271d : A.Quasicategory\n\u22a2 HomotopicL f g \u2194 HomotopicR f g",
        "url": "https://github.com/emilyriehl/infinity-cosmos/blob/8edc65d468b3ed2e4933c7969ec53bd4d904e753/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L159"
      },
      "metadata": {
        "blame_email_hash": "f0d6831918ab",
        "blame_date": "2024-12-05T19:17:58+01:00",
        "inclusion_date": "2025-05-05T23:23:15.244940+00:00"
      },
      "id": "39507d56dd2a9b4e7d6eecf744a216cd44fcf0dfaf6843976224448860244af0"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 144,
        "start_column": 4,
        "end_line": 144,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\nL : Logic\ninst\u271d : L.QuasiNormal\n\u0393 : FormulaFinset \u2115\nh : Finset.conj \u0393 \u2208 L\n\u03c6 : Formula \u2115\nh\u03c6 : \u03c6 \u2208 \u0393\n\u22a2 \u03c6 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T08:00:57+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "c5258f811bdb8990e381525f91fc584e6cb3b4038502d5aeb75ae949e5a660f3"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 146,
        "start_column": 4,
        "end_line": 146,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nL : Logic\ninst\u271d : L.QuasiNormal\n\u0393 : FormulaFinset \u2115\nh : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 L\n\u22a2 Finset.conj \u0393 \u2208 L",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T08:00:57+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "dda53ec29b1103f63934ec7e08f1fc466f776cddfb338f1434e28180443cb4bf"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 209,
        "start_column": 104,
        "end_line": 209,
        "end_column": 109
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2079 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2078 : L.DecidableEq\nT\u2080 T\u271d : Theory L\ninst\u271d\u2077 : T\u2080 \u2aaf T\u271d\ninst\u271d\u2076 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2075 : Nonempty M\ninst\u271d\u2074 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\u271d\ninst\u271d\u00b3 : \ud835\udd05.HBL\ninst\u271d\u00b2 : \ud835\udd05.Justified M\nA B : Modal.Formula \u2115\nT : Theory \u2112\u2092\u1d63\ninst\u271d\u00b9 : \ud835\udc0f\ud835\udc00 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 (\ud835\udc0f\ud835\udc00.standardDP T).Justified \u2115",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T08:00:57+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "b8820a4c9889e8e022e61aef8ecebe5e16ccf681866bbde93fe2f724ed9e175c"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 219,
        "start_column": 86,
        "end_line": 219,
        "end_column": 91
      },
      "debug_info": {
        "goal": "A : Modal.Formula \u2115\nh : \u25a1A \u2208 Logic.S\nf : Realization \u2112\u2092\u1d63\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, \ud835\udc0f\ud835\udc00 \u22a2!. \u03c3 \u2192 \u2115 \u22a7\u2098\u2080 \u03c3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-02T11:19:40+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "18f138ae18ab351667f062caf8c16ae0777df0e5485811ea46d9c7283c4d148b"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 247,
        "start_column": 6,
        "end_line": 247,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case hSound\nL : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\nh : A \u2208 Logic.S\nf : Realization L\n\u22a2 \u2200 {\u03c3 : Sentence L}, T \u22a2!. \u03c3 \u2192 M \u22a7\u2098\u2080 \u03c3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T09:24:01+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "14cb0ffdb4fd72cb29857360d735a756714be047f41508d11574a2f4ff5af3c8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 326,
        "start_column": 27,
        "end_line": 326,
        "end_column": 32
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : T\u2080 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret \ud835\udd05 B\n\u22a2 T\u2080.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L326"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T09:24:01+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "120a42e014cab0523fb7de3073411dd4250d7695a529d99a3f29445438fb4c63"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 339,
        "start_column": 61,
        "end_line": 339,
        "end_column": 66
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis : T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L339"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T09:24:01+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "9302abeca2fc455412c4e7fd0a618c79821702497ccc1e71686a2b9d83943d7f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 341,
        "start_column": 20,
        "end_line": 341,
        "end_column": 25
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2077 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2076 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2075 : T\u2080 \u2aaf T\ninst\u271d\u2074 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u00b3 : Nonempty M\ninst\u271d\u00b2 : Structure L M\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis\u271d : T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 A\nthis : M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00acM \u22a7\u2098\u2080 \u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L341"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T06:54:28+09:00",
        "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
      },
      "id": "dff1e90350cbcf3332f10cbce3b9fa17e3f6ad3eb3e449f2fb49a3269c7abe7e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/LinearizedMetricCarleson.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/LinearizedMetricCarleson.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-07-30T10:31:30+02:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "3dfb5cb6b310a05e71f8ab04822baf7038e7ca458e900e3ea3a118873ae6f925"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/HolderVanDerCorput.lean",
        "start_line": 443,
        "start_column": 55,
        "end_line": 443,
        "end_column": 60
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : MetricSpace X\ninst\u271d : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\nz : X\nR : \u211d\u22650\nhR : 0 < R\n\u03d5 : X \u2192 \u2102\nh\u03d5 : support \u03d5 \u2286 ball z \u2191R\nh2\u03d5 : iHolENorm \u03d5 z \u2191R < \u22a4\nf g : \u0398 X\n\u22a2 \u2191\u2016\u222b (x : X), cexp (I * (\u2191(f x) - \u2191(g x))) * \u03d5 x\u2016\u208a \u2264\n    \u2191(C2_0_5 \u2191a) * volume (ball z \u2191R) * iHolENorm \u03d5 z \u2191R * (1 + \u2191(nndist_{z ,\u2191R} f g)) ^ (2 * \u2191a ^ 2 + \u2191a ^ 3)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/HolderVanDerCorput.lean#L443"
      },
      "metadata": {
        "blame_email_hash": "4f0774fdf1b5",
        "blame_date": "2024-07-01T23:56:16+08:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "1d019c5d4b2138efdb149a15b6c4d49735c43c43addb334f4bce8845432268a8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/MetricCarleson.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/MetricCarleson.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-06-16T22:39:23+02:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "fa42f2793513a76e639cd89fb0b256f0689665b97fd5d71ea672ea914d79501c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ForestOperator/LargeSeparation.lean",
        "start_line": 1598,
        "start_column": 2,
        "end_line": 1598,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2016\u222b (x : X),\n        adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n          (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u2091 \u2264\n    \u2191(C7_4_5 a n) * eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x).toReal) 2 volume *\n      eLpNorm (fun x => ((\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x).toReal) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1598"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "680ce4eddb77eea9d9020204336fe3b5341d6a2ff7516f54d1947d6afa1d1e60"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 499,
        "start_column": 51,
        "end_line": 499,
        "end_column": 56
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u2091 \u2264\n    \u2191(C_2_0_3 \u2191a nnq) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-01-09T16:08:11+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "7bfdea9f30e10565b6dc8fc3168ed3461d57aca5edfbfe2b35d98acfb19e2a3c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "f2f88b4c32ecc0ef187ca775dfbff34415214457612d1d89800c0465daf678ea"
    },
    {
      "repo": {
        "remote": "https://github.com/frenzymath/jixia",
        "branch": "main",
        "commit": "d171b92cfcc808c3fcfa73b4f41c792648c9d48f",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Example.lean",
        "start_line": 82,
        "start_column": 55,
        "end_line": 82,
        "end_column": 60
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\n\u22a2 \u00acnone.IsSome",
        "url": "https://github.com/frenzymath/jixia/blob/d171b92cfcc808c3fcfa73b4f41c792648c9d48f/Example.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "aa8cba96a488",
        "blame_date": "2024-06-20T19:17:07+08:00",
        "inclusion_date": "2025-05-01T23:43:58.830638+00:00"
      },
      "id": "dda6eca1c24f3d179409b6135dea8b03fa033226aef1a1f3e8df49fa215ab69b"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Attribute/Aesop.lean",
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : Prop\nhp : P\n\u22a2 MyAnd P P",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T22:40:33+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "9a3464a8a3704a49b2292a811715e854fc1a1287ea0a702edbd56d942da7a48e"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Attribute/Aesop.lean",
        "start_line": 88,
        "start_column": 2,
        "end_line": 88,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 NonEmpty (MyList.cons 1 MyList.nil)",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T22:40:33+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "1c30fc32ce15f669075451698d47ff13a411eeaeb7c51b6964ed5e274eeafc8f"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "b6afdbee9516862a93891034ab6415399391c13b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanByExample/Attribute/Aesop.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d e : Nat\nh1 : a \u2264 b\nh2 : b \u2264 c\nh3 : c \u2264 d\nh4 : d \u2264 e\n\u22a2 a \u2264 e",
        "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Attribute/Aesop.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T22:40:33+09:00",
        "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
      },
      "id": "dda60bffce0fed704f9bad819514ab85e5332bbe353ed5ed67b3555cfd311aea"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "b6afdbee9516862a93891034ab6415399391c13b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanByExample/Declarative/ProofWanted.lean",
        "start_line": 16,
        "start_column": 41,
        "end_line": 16,
        "end_column": 46
      },
      "debug_info": {
        "goal": "n : Nat\n\u22a2 n + 0 = n",
        "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Declarative/ProofWanted.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-06-19T23:24:32+09:00",
        "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
      },
      "id": "e5faba745f8d444809ba4a7abadfc00f250efec3a787fcc8953a5f5c7d5515cc"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Sorry.lean",
        "start_line": 12,
        "start_column": 2,
        "end_line": 12,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 FermatLastTheorem",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Sorry.lean#L12"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-01-08T13:38:12+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "c1a5136e850b138a20962c448ffd3c5e1cfdf7d06860186676464fba8bbbf968"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\na b : Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "a79fbc1f99b4e315596137033e19ea503dda427a7c0dce0aaa7b85b74fd76775"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\np q : Foo\nhx : p.x = q.x\nhy : p.y = q.y\n\u22a2 p = q",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "5f71aae7fe81842dbdfa9970601f6c62c5de0ff5b96d88d5fb78baef222d3b88"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "b6afdbee9516862a93891034ab6415399391c13b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ring.lean",
        "start_line": 115,
        "start_column": 2,
        "end_line": 115,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : MyNat\n\u22a2 n * (n + m) = n * n + n * m",
        "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Ring.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-02-17T22:51:43+09:00",
        "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
      },
      "id": "8853ad6a657041f722b29f3afcd35f6e03efb25a729b1fb9baf5c0b9d64332f7"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "b6afdbee9516862a93891034ab6415399391c13b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanByExample/Tactic/Induction.lean",
        "start_line": 73,
        "start_column": 4,
        "end_line": 73,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\nn m : \u2115\nih : m + n = 0 \u2192 m = 0 \u2227 n = 0\nh : m + 1 + n = 0\n\u22a2 False",
        "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Induction.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-11-07T02:25:02+09:00",
        "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
      },
      "id": "b0f8d158d891969ca9d25e962c837182c2733d7e8eff00cf0495e4b5039ba37a"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "b6afdbee9516862a93891034ab6415399391c13b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanByExample/Tactic/Induction.lean",
        "start_line": 133,
        "start_column": 6,
        "end_line": 133,
        "end_column": 11
      },
      "debug_info": {
        "goal": "n\u271d n : \u2115\n\u22a2 sum (n + 1) = \u2191(n + 1) * (\u2191(n + 1) + 1) / 2",
        "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Induction.lean#L133"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-04-25T03:36:30+09:00",
        "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
      },
      "id": "c26294888fd43f47b34aacef3aba1b20b7b61407c8c38ad23fc27197e3c09a2a"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "LeanByExample/Tactic/Plausible.lean",
        "start_line": 67,
        "start_column": 2,
        "end_line": 67,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 (a b : MyNat), a = b",
        "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Plausible.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2024-11-25T09:56:34+09:00",
        "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
      },
      "id": "2923421152e5be64de021405d7350f597dee8d1e824b49847a8ac1aec39e67b6"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 262,
        "start_column": 105,
        "end_line": 262,
        "end_column": 110
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u00b9\u2070 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2079 : L.DecidableEq\nT\u2080 T\u271d : Theory L\ninst\u271d\u2078 : T\u2080 \u2aaf T\u271d\ninst\u271d\u2077 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2076 : Nonempty M\ninst\u271d\u2075 : Structure L M\ninst\u271d\u2074 : M \u22a7\u2098* T\u271d\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\u271d\ninst\u271d\u00b3 : \ud835\udd05.HBL\ninst\u271d\u00b2 : \ud835\udd05.Justified M\nA B : Modal.Formula \u2115\nT : Theory \u2112\u2092\u1d63\ninst\u271d\u00b9 : \ud835\udc0f\ud835\udc00 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, T \u22a2!. \u03c3 \u2194 \u2115 \u22a7\u2098\u2080 \u2191(\ud835\udc0f\ud835\udc00.standardDP T) \u03c3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L262"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T11:15:03+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "281bc26d3b1b574f84087a8e0af4b52ab8dad41d9e415b472ca5e30288168d47"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 378,
        "start_column": 27,
        "end_line": 378,
        "end_column": 32
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2074 : Nonempty M\ninst\u271d\u00b3 : Structure L M\ninst\u271d\u00b2 : M \u22a7\u2098* T\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : T\u2080 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret \ud835\udd05 B\n\u22a2 T\u2080.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T09:24:01+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "815da39e1f4ae2018ba3376dbcfc478597f566520ff058234a2607fcb58a784a"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Basic.lean",
        "start_line": 393,
        "start_column": 20,
        "end_line": 393,
        "end_column": 25
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory L\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\nM : Type u_1\ninst\u271d\u2074 : Nonempty M\ninst\u271d\u00b3 : Structure L M\ninst\u271d\u00b2 : M \u22a7\u2098* T\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b9 : \ud835\udd05.HBL\ninst\u271d : \ud835\udd05.Justified M\nA : Modal.Formula \u2115\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization L), M \u22a7\u2098\u2080 f.interpret \ud835\udd05 A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\n\u03c3 : SolovaySentences \ud835\udd05 M\u2081.toFrame r\u2081 := sorry\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret \ud835\udd05 B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 T\u2080 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret \ud835\udd05 B)\nthis\u271d : M \u22a7\u2098* T\u2080\nthis : M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00acM \u22a7\u2098\u2080 \u03c3.realization.interpret \ud835\udd05 A\n\u22a2 M \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L393"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T06:54:28+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "bcba129cb76ab930cd07720444e2484f4cad12efe6794d3da0d66fd69e2c2819"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/ZetaBounds.lean",
        "start_line": 2600,
        "start_column": 2,
        "end_line": 2600,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h\nA : \u211d\nhA : A \u2208 Ioc 0 (1 / 2)\nh\u271d :\n  \u2203 C,\n    \u2203 (_ : 0 < C),\n      \u2200 (\u03c3 t : \u211d),\n        3 < |t| \u2192\n          \u03c3 \u2208 Ico (1 - A / Real.log |t| ^ 9) 1 \u2192 \u2016deriv \u03b6 (\u2191\u03c3 + \u2191t * I) / \u03b6 (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C * Real.log |t| ^ 9\nT : \u211d\nT_gt : 3 < T\n\u22a2 HolomorphicOn (fun s => deriv \u03b6 s / \u03b6 s) (Ioc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/ZetaBounds.lean#L2600"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-03-07T16:45:37-05:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "37cf89e56cd035b931d71680eaca6f9d28e983fe3def14f17417bd7a2dacf9c8"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "82bb9617b8ccfa68054450b8e6f44c054f03fb74",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 362,
        "start_column": 2,
        "end_line": 362,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/82bb9617b8ccfa68054450b8e6f44c054f03fb74/PrimeNumberTheoremAnd/MediumPNT.lean#L362"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-04-29T23:14:01.338928+00:00"
      },
      "id": "220197c00a78e02df3ecd8138d363e8d1f7a7661a383a115f1632de961d2bd59"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "82bb9617b8ccfa68054450b8e6f44c054f03fb74",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 353,
        "start_column": 23,
        "end_line": 353,
        "end_column": 28
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX : \u211d\nC : \u211d := sorry\n\u22a2 3 < C",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/82bb9617b8ccfa68054450b8e6f44c054f03fb74/PrimeNumberTheoremAnd/MediumPNT.lean#L353"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-03-08T10:26:01-05:00",
        "inclusion_date": "2025-04-29T23:14:01.338928+00:00"
      },
      "id": "ca307cce52176a7909d378dafc3273a2785f2c5c8fe8371098ad000a65c1f11f"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 503,
        "start_column": 2,
        "end_line": 503,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) volume",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/MediumPNT.lean#L503"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-03-07T17:04:05-05:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "14aa1c60f86cca8ead6c81052865a6efd8540b35f89939a8579dccafa30c463a"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 470,
        "start_column": 2,
        "end_line": 470,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191\u03c0 * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (1 + (Real.log X)\u207b\u00b9) (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) =\n    1 / (2 * \u2191\u03c0 * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) +\n      \ud835\udcdc (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L470"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-10T12:59:29-05:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "1b95116178011a6ece4ffaaa49a093a8753aae136a1ee13ec4fb0aa23f182333"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "8dd6f415d456277d098fea761f015a635c09769e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 135,
        "start_column": 21,
        "end_line": 135,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25135 \u2208 \u2191ys then ?m.25164 else y\n\u22a2 NSequence n k g1",
        "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:51:19-04:00",
        "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
      },
      "id": "f81b74aae3103e71f48752698c13e903a86def12b61579cde195e801f908775f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "8dd6f415d456277d098fea761f015a635c09769e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 136,
        "start_column": 21,
        "end_line": 136,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25135 \u2208 \u2191ys then ?m.25164 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
        "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-22T23:33:30-04:00",
        "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
      },
      "id": "747528909d823ad66c5be55364bd463d8d47429fefedb47c7d201864a676e9d6"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/GL/Height.lean",
        "start_line": 37,
        "start_column": 50,
        "end_line": 37,
        "end_column": 55
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\n\u03c3 : Sentence L\n\u22a2 (\ud835\udd05^[n + 1])/[\u231c\u03c3\u231d] = \u2191\ud835\udd05 ((\ud835\udd05^[n])/[\u231c\u03c3\u231d])",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-04T09:21:39+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "6dcb0d6b1dacb386ec78231da3a1460d503041b76010a501338b8e79288c95ba"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/GL/Height.lean",
        "start_line": 179,
        "start_column": 2,
        "end_line": 179,
        "end_column": 7
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T U : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\n\u22a2 WellFounded fun a b => a < b \u2227 a \u2208 provabilityHeightSet U \ud835\udd05 \u2227 b \u2208 provabilityHeightSet U \ud835\udd05",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L179"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-04T11:09:14+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "c0a7740449e84840c053ef6013b2f860ab0f97fb569841faf7e442806bc0d69a"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/GL/Height.lean",
        "start_line": 189,
        "start_column": 4,
        "end_line": 189,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T U : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\n\u22a2 (provabilityHeightSet U \ud835\udd05).Nonempty \u2192 provabilityHeight U \ud835\udd05 \u2260 0",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L189"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-04T11:09:14+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "f0a04e7a5a29ab70dd975a193b8284e3d114a3284a4fc7bddbf9d0f5b0796fa9"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/GL/Height.lean",
        "start_line": 217,
        "start_column": 4,
        "end_line": 217,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\nh : Theory.provabilityHeight T \ud835\udd05 = \u2191n\n\u22a2 \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GLBB n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-04T11:09:14+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "3f93f32d684a3cce34eaa0404e2cedd284f19677a3b468d55a932a5e2fbd01d5"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/GL/Height.lean",
        "start_line": 219,
        "start_column": 4,
        "end_line": 219,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nn : \u2115+\nh : \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GLBB n\n\u22a2 Theory.provabilityHeight T \ud835\udd05 = \u2191n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-04T11:09:14+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "8d3279d9fe07b8f6f4a9b57cee8a31c02646091d17f284e46d8381157e838840"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "GL-height-crassify",
        "commit": "4039e2ec63c90beb405cef22556f24665de67668",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/GL/Height.lean",
        "start_line": 227,
        "start_column": 4,
        "end_line": 227,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp\nL : Language\ninst\u271d : Semiterm.Operator.GoedelNumber L (Sentence L)\nT\u2080 T : Theory L\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\nh : Theory.provabilityHeight T \ud835\udd05 = 0\nthis : \u2200 (n : \u2115+), T \u22ac. (\ud835\udd05^[n])/[\u231c\u22a5\u231d]\n\u22a2 \u2200 (A : Modal.Formula \u2115), (\u2200 {f : Realization L}, T \u22a2!. f.interpret \ud835\udd05 A) \u2194 A \u2208 Logic.GL",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L227"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-04T11:09:14+09:00",
        "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
      },
      "id": "218f14961eda369ebfcba1337b7a9bfd0e1c3b80692aab999af2fe184089d2ef"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/LinearizedMetricCarleson.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2).toReal) 2 2 volume volume\n    \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/LinearizedMetricCarleson.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-07-30T10:31:30+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "46571c141c45661b939dbb755ff9dc42ab02217902ab23e25c5e0dd5ce4c3333"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/MetricCarleson.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/MetricCarleson.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-06-16T22:39:23+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "7564bdd3b6d99f989b43bcf6f05d99a593eecc27bf75a45907f2fe2d60b714f4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 205,
        "start_column": 2,
        "end_line": 205,
        "end_column": 7
      },
      "debug_info": {
        "goal": "r : \u211d\nhr : 0 < r\n\u22a2 HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts 4)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "fc6fe6b64c195b88e39284b188bcd3a03077aff84c17cb92ec7511e08d947470"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 469,
        "start_column": 2,
        "end_line": 469,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nh\ud835\udcd1 : \ud835\udcd1.Countable\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nv : X \u2192 E\nmlpv : MemLp v (\u2191p\u2082) \u03bc\n\u22a2 AEStronglyMeasurable ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) \u03bc \u2227\n    wnorm ((fun u x => maximalFunction \u03bc \ud835\udcd1 c r (\u2191p\u2081) u x) v) (\u2191p\u2082) \u03bc \u2264 \u2191A ^ 2 * eLpNorm v (\u2191p\u2082) \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L469"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "cdca701e71c81765753bb5eca58fe2c8541741e0de1f81e615706d3e2918dad9"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 551,
        "start_column": 9,
        "end_line": 551,
        "end_column": 14
      },
      "debug_info": {
        "goal": "case a\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType\n      (fun u x =>\n        (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n      (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (\u2191A ^ 4) \u2194\n    MemLp ?convert_4 (\u2191p\u2082) \u03bc \u2192\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) \u03bc \u2227\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (\u2191p\u2082) \u03bc \u2264 \u2016A ^ 2\u2016\u2091 * \u2191A ^ 2 * eLpNorm ?convert_4 (\u2191p\u2082) \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-04T17:09:00+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "1b8ceb4a3627eb18cd924f0b5c8dac8101b0dc2757319bfd9d2b3f318a9a6769"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 551,
        "start_column": 9,
        "end_line": 551,
        "end_column": 14
      },
      "debug_info": {
        "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType sorry (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (\u2191A ^ 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-04T17:09:00+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "a14850251f9f3be49295603c5034136e361ae1afdf316c66d134e31e74728ccd"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 329,
        "start_column": 6,
        "end_line": 329,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191nnq / (\u2191nnq + 1)) - 2 = \u2191(3 * (2 * nnq / (nnq + 1)) - 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L329"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "1f49331d276e06d74ad989aa99269a948b369080bae089d711399bab04b4ea06"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 334,
        "start_column": 6,
        "end_line": 334,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) / (2 * (\u2191(2 * nnq) / \u2191(nnq + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))\u207b\u00b9)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "c0532c467566b54cd19f2aa89de565551e24a98abf7879a8690de41dc4fd35d1"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 312,
        "start_column": 6,
        "end_line": 312,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : \u211d\u22650 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191D ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x).toReal) 2 2 volume volume\n    \u2191(C2_0_6 (2 ^ a) p\u2081 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "0d934dafcedfd3ab16de4de2c207aa447b16a86db0d052b61a83f6c369ae37b1"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 677,
        "start_column": 2,
        "end_line": 677,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume {x' | x' \u2208 ball x (R / 4) \u2227 4 * globalMaximalFunction volume 1 (czOperator K r g) x < \u2016czOperator K r g x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L677"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "15a7ced16e09935577dfb0e8c5f1d0c3a29d6614293e45569966cf48fb0863ed"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 687,
        "start_column": 2,
        "end_line": 687,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\n\u22a2 volume\n      {x' |\n        x' \u2208 ball x (R / 4) \u2227\n          \u2191(C10_1_4 a) * globalMaximalFunction volume 1 g x < \u2016czOperator K r ((ball x (R / 2)).indicator g) x'\u2016\u2091} \u2264\n    volume (ball x (R / 4)) / 4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L687"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "c405062d2b02554109ed2261537aadeff220542fc54602c4f4fd3efc719c7e46"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 698,
        "start_column": 2,
        "end_line": 698,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr R : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : r \u2208 Ioc 0 R\n\u22a2 \u2016czOperator K R g x\u2016\u2091 \u2264\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + \u2191(C10_1_5 a) * globalMaximalFunction volume 1 g x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L698"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "64715693d0d5649c369a08614a732864068edc117eb5d5d59201140cb629eb8a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 175,
        "start_column": 2,
        "end_line": 175,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume \u2191(C10_1_6 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "c046998b5798fb0ba303d374d736df52a0c164a8b4a846d1a7eea7b9e9e1c296"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 183,
        "start_column": 2,
        "end_line": 183,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume \u2191(C10_1_6 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "9235b215f8a0b47574db3fa31bcb41fe27c1d4415b53c9211a3c754a7982b2c6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 724,
        "start_column": 2,
        "end_line": 724,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2081 : \u211d\n\u22a2 Continuous fun R\u2082 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L724"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "04fe0843aa9284bddf111b720e8dece227b22d099382ccbfa24ca75d5f66302b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 731,
        "start_column": 2,
        "end_line": 731,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\nx' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\nR\u2082 : \u211d\n\u22a2 Continuous fun R\u2081 => \u222b (y : X) in {y | dist x' y \u2208 Ioo R\u2081 R\u2082}, K x' y * f y",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L731"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "1e012d70eeeea4d4ac5d63fcce537984b0974ea1a76b2a60ce6965ba5464c9fa"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 216,
        "start_column": 2,
        "end_line": 216,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume \u2191(C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume \u2191(C10_0_2 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "9ef4ba451768e4c88e0b3a27fbe99fec4cae64d33e6b0d89a596a18001e4b6aa"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "452ca98a69e0649b0cd0f73b1979bcc99e085da756a52f7b120126a834d248db"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 349,
        "start_column": 2,
        "end_line": 349,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\n\u22a2 HasBoundedWeakType (czOperator K r) 1 1 volume volume \u2191(C10_0_3 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L349"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "8c94961869ec5f48ee5b1723bf94ac2d161531d238d5ad2f0de882aaea415f8c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 551,
        "start_column": 9,
        "end_line": 551,
        "end_column": 14
      },
      "debug_info": {
        "goal": "case a\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType\n      (fun u x =>\n        (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n      (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (A ^ 4) \u2194\n    MemLp ?convert_4 (\u2191p\u2082) \u03bc \u2192\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) \u03bc \u2227\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (\u2191p\u2082) \u03bc \u2264\n          \u2191(\u2016A ^ 2\u2016\u208a * A ^ 2) * eLpNorm ?convert_4 (\u2191p\u2082) \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-04T17:09:00+02:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "0d9aee127c8f347b0bb1e30e57bd700904d28c75c0ce542cb6e1e8c93cd8b977"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-leanoptions",
        "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 551,
        "start_column": 9,
        "end_line": 551,
        "end_column": 14
      },
      "debug_info": {
        "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 \u2264 p\u2082\nthis : \u2191p\u2082 \u2260 0\n\u22a2 HasWeakType sorry (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc (A ^ 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-04T17:09:00+02:00",
        "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
      },
      "id": "ed26d0428aed69bbe7e40b125abb6bb124bc00c6fc837132db120f9d3007342c"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-rigidification-refactor",
        "commit": "aa6d8c9e1d5f5b404fac024c800062d156669ef0",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 213,
        "start_column": 87,
        "end_line": 213,
        "end_column": 92
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nS : Finset (HeightOneSpectrum (\ud835\udcde F))\n\u22a2 Module.Finite (FiniteAdeleRing (\ud835\udcde F) F) (D \u2297[F] FiniteAdeleRing (\ud835\udcde F) F)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/aa6d8c9e1d5f5b404fac024c800062d156669ef0/FLT/QuaternionAlgebra/NumberField.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-04T17:21:54+01:00",
        "inclusion_date": "2025-04-05T01:25:01.623280+00:00"
      },
      "id": "77d883852a3a57f13c9c67e2b2b4a11a04b867d157857bff82e2313ea837a85f"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "M : Type u_3\nN : Type u_4\ninst\u271d\u00b3 : Monoid M\ninst\u271d\u00b2 : Monoid N\ninst\u271d\u00b9 : TopologicalSpace M\ninst\u271d : TopologicalSpace N\nf : M \u2192* N\nhf : IsOpenMap \u21d1f\n\u22a2 IsOpenMap fun u => { val := f \u2191u, inv := f \u2191u\u207b\u00b9, val_inv := \u22ef, inv_val := \u22ef }",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-04T09:45:19+01:00",
        "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
      },
      "id": "afd41ed70417ad4135fcbab1dfec134972d96099d85e20347bbe4ba85e6769d5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u2074 : Field F\ninst\u271d\u00b3 : NumberField F\nD : Type u_2\ninst\u271d\u00b2 : Ring D\ninst\u271d\u00b9 : Algebra F D\ninst\u271d : IsQuaternionAlgebra F D\nv : HeightOneSpectrum (\ud835\udcde F)\n\u22a2 IsOpenMap \u21d1(Units.map \u2191(HeightOneSpectrum.adicCompletionIntegers F v).subtype.mapMatrix)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-04T09:45:19+01:00",
        "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
      },
      "id": "be1cf925cb078da15ecb1bd227b47a63c3b7c6aa5cf8e03a733fc38ffd1e4c47"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 50,
        "start_column": 77,
        "end_line": 50,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "98735a10acb5a7bc5abf67cfa46478b3c359bf0d874a18624b81e3d09011393c"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 52,
        "start_column": 77,
        "end_line": 52,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "fee3a567bc7cda147b664bb160c06767e4b1e54d07160e5d1ed6250cf2efe99a"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 54,
        "start_column": 77,
        "end_line": 54,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "451fb0015c6418b9727b1aee983e4d8fbc52cc07f588aac5fd1254c79e4cb470"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 58,
        "start_column": 74,
        "end_line": 58,
        "end_column": 79
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "0381ab7073b4982159ac5623798bea6ea615a71bf007c9a54a9124baf57d9669"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 61,
        "start_column": 94,
        "end_line": 61,
        "end_column": 99
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "a1754d8ebf63b6090e9d889d468987275ebe12e78c5241969d575d4d138b7f52"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 64,
        "start_column": 60,
        "end_line": 64,
        "end_column": 65
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "42173fa706de4b468e991e3c9cc0fb7a25a22e64790e6cc5f3790bc6d33784c2"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 67,
        "start_column": 88,
        "end_line": 67,
        "end_column": 93
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure \u2119\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "eed20aa9302fa53c3ee24795645044bcd19beff22e6a6cffb96c8c4289ca24ab"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 79,
        "start_column": 398,
        "end_line": 79,
        "end_column": 403
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : MeasureableFinGroup G\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nT\u2081 T\u2082 T\u2083 : \u03a9 \u2192 G\nhsum : T\u2081 + T\u2082 + T\u2083 = 0\nn : \u2115\n\u03a9' : Fin n \u2192 Type u_3\nh\u03a9' : (i : Fin n) \u2192 MeasureSpace (\u03a9' i)\nY : (i : Fin n) \u2192 \u03a9' i \u2192 G\n\u03b1 : \u211d\nh\u03b1 : \u03b1 > 0\n\u22a2 \u2203 \u03a9'' h\u03a9'' U,\n    d[U # U] + \u03b1 * \u2211 i, d[Y i # U] \u2264 (2 + \u03b1 * \u2191n / 2) * (I[T\u2081 : T\u2082] + I[T\u2081 : T\u2083] + I[T\u2082 : T\u2083]) + \u03b1 * \u2211 i, d[Y i # T\u2082]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-04-17T21:11:56+01:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "9349131d79bf0075e62ede60861e7a6797f02f6e391798d2a1d86e672a5a6ab0"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 82,
        "start_column": 27,
        "end_line": 82,
        "end_column": 32
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u22a2 multiTau p \u03a9 h\u03a9 X = 0",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "1bad888fb80b90a1896023ba386a9e79f0c0c8eb79c066659f07333d5c3e6d63"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 89,
        "start_column": 54,
        "end_line": 89,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U \u2119 \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "affce0b8ad784ae4fb1eb28a54faf85650fdcc5be46728fc59806179c398bedc"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 102,
        "start_column": 64,
        "end_line": 102,
        "end_column": 69
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\nA : Set G\ninst\u271d : Finite \u2191A\nK : \u211d\nh\u2080A : A.Nonempty\nhA : \u2191(Nat.card \u2191(A + A)) \u2264 K * \u2191(Nat.card \u2191A)\n\u22a2 \u2203 H c,\n    \u2191(Nat.card \u2191c) \u2264 K ^ (64 * \u2191m ^ 3 + 2) * \u2191(Nat.card \u2191A) ^ (1 / 2) * \u2191(Nat.card \u21a5H) ^ (-1 / 2) \u2227\n      \u2191(Nat.card \u21a5H) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u2191A) \u2227\n        \u2191(Nat.card \u2191A) \u2264 K ^ (64 * \u2191m ^ 3) * \u2191(Nat.card \u21a5H) \u2227 A \u2286 c + \u2191H",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2024-08-18T18:37:52+02:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "a3a816a6ca42314d65ca929e6927930ec1151d28c491c3b9b16ad93e9cad997b"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/BoundingMutual.lean",
        "start_line": 36,
        "start_column": 79,
        "end_line": 36,
        "end_column": 84
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' \u2119\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) \u2119 \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/BoundingMutual.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "1bbff35f827b226473c16ec439932d644591efee74849ae8e1338c81a2fe5eeb"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 527,
        "start_column": 2,
        "end_line": 527,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type u_1\nG : Type u_5\nm\u03a9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : IsProbabilityMeasure \u03bc\nI : Type u_8\ns t : Finset I\nhdisj : Disjoint s t\nhs : s.Nonempty\nht : t.Nonempty\nX : I \u2192 \u03a9 \u2192 G\nhX : \u2200 (i : I), Measurable (X i)\nhX' : \u2200 (i : I), FiniteRange (X i)\nh_indep : iIndepFun X \u03bc\nf : I \u2192 I\nhf : Finset.image f t \u2286 s\n\u22a2 H[\u2211 i \u2208 t, X i ; \u03bc] \u2264 H[\u2211 i \u2208 s, X i ; \u03bc] + \u2211 i \u2208 t, (H[X i - X (f i) ; \u03bc] - H[X (f i) ; \u03bc])",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MoreRuzsaDist.lean#L527"
      },
      "metadata": {
        "blame_email_hash": "6e8091041644",
        "blame_date": "2024-05-31T19:35:50+01:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "0096fe7dfae77c016ed8c38588a02549b90f6ada960a95cd2c357ace26e8437d"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 760,
        "start_column": 62,
        "end_line": 760,
        "end_column": 67
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 D[X ; fun x => h\u03a9] = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L760"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-22T09:31:46-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "53952a34d0aa5bb64a0888247bda3172fe2169cc81bf4d400733ade08457c553"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 857,
        "start_column": 105,
        "end_line": 857,
        "end_column": 110
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 (\u2211 j, \u2211 k, if j = k then 0 else d[X j # X k]) \u2264 \u2191m * (\u2191m - 1) * D[X ; h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "9de8ea8429dbd769777e03886a061a9d6d1fea2772386257a7abea2d694c9251"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 862,
        "start_column": 69,
        "end_line": 862,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 \u2211 j, d[X j # X j] \u2264 2 * \u2191m * D[X ; h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L862"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "02a6bfca12778b8d54058abf6a2be8276203ac786965e258b31668ea565b4848"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 868,
        "start_column": 108,
        "end_line": 868,
        "end_column": 113
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhidenT : \u2200 (j k : Fin m), IdentDistrib (X j) (X k) \u2119 \u2119\n\u22a2 \u2200 (i : Fin m), D[X ; h\u03a9] \u2264 \u2191m * d[X i # X i]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L868"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "48ea0753abd67fbe6fe270d0a60c2749648b01ff3c66fd725d932e1a3aeeeae7"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 873,
        "start_column": 82,
        "end_line": 873,
        "end_column": 87
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * D[X ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L873"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "c2520a606cf7e2d5f451db4e8ba0e272bcf4c9aa6a21d0424c7abe5524c58452"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 877,
        "start_column": 235,
        "end_line": 877,
        "end_column": 240
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhvanish : D[X ; h\u03a9] = 0\n\u22a2 \u2200 (i : Fin m), \u2203 H U, Measurable U \u2227 IsUniform (\u2191H) U \u2119 \u2227 d[X i # U] = 0",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L877"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "c52d6e6eb7a0dded9b209c517f5a02052305d773f48d73baaa445693f6829613"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1504,
        "start_column": 8,
        "end_line": 1504,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case bc.h.e_11\nm : \u2115\nhm : m > 0\nG : Fin (m + 1) \u2192 Type u_8\nhG : (i : Fin (m + 1)) \u2192 MeasurableSpace (G i)\nhGs : \u2200 (i : Fin (m + 1)), MeasurableSingletonClass (G i)\nhGa : (i : Fin (m + 1)) \u2192 AddCommGroup (G i)\nhGcount : (i : Fin (m + 1)) \u2192 Fintype (G i)\n\u03c6 : (i : Fin m) \u2192 G i.succ \u2192+ G i.castSucc\n\u03c0 : (d : Fin (m + 1)) \u2192 G \u2191m \u2192+ G d\nh\u03c00 : \u03c0 0 = 0\nhcomp : \u2200 (i : Fin m), \u21d1(\u03c0 i.castSucc) = \u21d1(\u03c6 i) \u2218 \u21d1(\u03c0 i.succ)\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G \u2191m\nhX : \u2200 (i : Fin m), Measurable (X i)\nh_indep : iIndepFun X \u2119\nthis\u271d : IsProbabilityMeasure \u2119\nthis : NeZero m\nf : Fin m \u2192 \u211d :=\n  fun i => I[\u2211 i', X i' : fun \u03c9 i' => (\u03c0 i.succ) (X i' \u03c9)|\u27e8\u21d1(\u03c0 i.succ) \u2218 \u2211 i', X i', fun \u03c9 i' => (\u03c0 \u2191\u2191i) (X i' \u03c9)\u27e9]\nhf : \u2200 (i : Fin m), 0 \u2264 f i\nF : G 1 \u2192 G 1 \u00d7 (Fin m \u2192 G 0) := fun x => (x, fun x => 0)\nhF : Injective F\n\u22a2 HEq (fun x => (\u2211 x_1, (\u03c0 1) (X x_1 x), fun x => 0))\n    (\u27e8fun x => \u2211 x_1, (\u03c0 (Fin.succ 0)) (X x_1 x), fun \u03c9 i' => (\u03c0 \u21910) (X i' \u03c9)\u27e9)",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1504"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-14T04:44:11+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "7249c84cd6c3a75dd2d0ba153f332dc341ed72e13fe5478ca8df0d5bbf887cc9"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1518,
        "start_column": 54,
        "end_line": 1518,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X \u2119\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    \u2211 j,\n          (D[fun i => X (i, j) ; fun x => h\u03a9] -\n            D[fun i => X (i, j) | fun i => \u2211 k \u2208 Finset.Ici j, X (i, k) ; fun x => h\u03a9]) +\n        D[fun i => X (i, \u2191m) ; fun x => h\u03a9] -\n      D[fun i => \u2211 j, X (i, j) ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1518"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "52a1721dbb8c0782862edb4930da8a40c05f7962f40ed2c64d0bf263ae0810ea"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 54,
        "start_column": 111,
        "end_line": 54,
        "end_column": 116
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 Continuous fun \u03bc => multiTau p (fun x => G) (fun i => MeasureSpace.mk \u2191(\u03bc i)) fun x => id",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T09:57:28-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "0c8f0ab87fd932f370996a1f8af2a028fe9d72d6d44d76818ccf2c803d381e05"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 57,
        "start_column": 222,
        "end_line": 57,
        "end_column": 227
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : multiRefPackage G \u03a9\u2080\n\u22a2 \u2203 \u03a9 h\u03a9 X, multiTauMinimizes p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-08-18T19:14:43-07:00",
        "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
      },
      "id": "046a4809402ab4f13c0d6b2294f7b92b3ade7aee4fc484f440dc900a17c4a088"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-generalise-weaktype",
        "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/ENorm.lean",
        "start_line": 79,
        "start_column": 43,
        "end_line": 79,
        "end_column": 48
      },
      "debug_info": {
        "goal": "\u03b5 : Type u_9\n\u03b5' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace \u03b5\ninst\u271d\u00b2 : ContinuousENorm \u03b5\ninst\u271d\u00b9 : TopologicalSpace \u03b5'\ninst\u271d : ContinuousENorm \u03b5'\n\u03b1 : Type u_11\nm0 : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 \u03b5\ng : \u03b1 \u2192 \u03b5'\nc : \u211d\u22650\nh : \u2200\u1d50 (x : \u03b1) \u2202\u03bc, \u2016f x\u2016\u2091 \u2264 \u2191c * \u2016g x\u2016\u2091\np : \u211d\nhp : 0 < p\n\u22a2 eLpNorm' f p \u03bc \u2264 c \u2022 eLpNorm' g p \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-05T21:50:03+02:00",
        "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
      },
      "id": "81c61f87d56a75a64a440ada9e33545c4d24b088778c74663b9d71ad5e93debf"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-generalise-weaktype",
        "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/ENorm.lean",
        "start_line": 83,
        "start_column": 90,
        "end_line": 83,
        "end_column": 95
      },
      "debug_info": {
        "goal": "\u03b5 : Type u_9\n\u03b5' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace \u03b5\ninst\u271d\u00b2 : ContinuousENorm \u03b5\ninst\u271d\u00b9 : TopologicalSpace \u03b5'\ninst\u271d : ContinuousENorm \u03b5'\n\u03b1 : Type u_11\nm0 : MeasurableSpace \u03b1\n\u03bc : Measure \u03b1\nf : \u03b1 \u2192 \u03b5\ng : \u03b1 \u2192 \u03b5'\nc : \u211d\u22650\nh : \u2200\u1d50 (x : \u03b1) \u2202\u03bc, \u2016f x\u2016\u2091 \u2264 \u2191c * \u2016g x\u2016\u2091\n\u22a2 eLpNormEssSup f \u03bc \u2264 c \u2022 eLpNormEssSup g \u03bc",
        "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-05T21:50:03+02:00",
        "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
      },
      "id": "b845d5c723853d801ec19af37505f118126947084cb0f03384055585a5e985fe"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "MR-generalise-weaktype",
        "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 533,
        "start_column": 2,
        "end_line": 533,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : \u211d\u22650\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : ProperSpace X\ninst\u271d\u00b3 : BorelSpace X\ninst\u271d\u00b2 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : \u211d\u22650\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 HasStrongType\n    (fun u x =>\n      (\u2191A ^ 2).toReal * (maximalFunction \u03bc (\u22ef.choose \u00d7\u02e2 univ) (fun x => x.1) (fun x => 2 ^ x.2) (\u2191p\u2081) u x).toReal)\n    (\u2191p\u2082) (\u2191p\u2082) \u03bc \u03bc \u2191(A ^ 2 * C2_0_6 A p\u2081 p\u2082)",
        "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/HardyLittlewood.lean#L533"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-04T23:13:58+02:00",
        "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
      },
      "id": "61e81a0a60df1dee63473d6d592c13a9baa9ca1ca59d46690dab11a133343760"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-odlyzko",
        "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 121,
        "start_column": 21,
        "end_line": 121,
        "end_column": 26
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 GL (Fin n) \u211a \u2192 GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 GL (Fin n) \u211d \u2192 z = z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
      },
      "id": "7104965d4fd8eeff3884bc6da037f0e14cc01966382f94d4298a2896447174ec"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-odlyzko",
        "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 122,
        "start_column": 30,
        "end_line": 122,
        "end_column": 35
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 IsSlowlyIncreasing fun y => z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L122"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
      },
      "id": "56d4a469ae49648e66a7c86fdc91bcd12296e4cf2f0bc90c6e0f56c5a4b0fe09"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-odlyzko",
        "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 123,
        "start_column": 23,
        "end_line": 123,
        "end_column": 28
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : \u03c1.IsTrivial\n\u22a2 \u2200 (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => z, \u22ef\u27e9))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L123"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T23:29:04+02:00",
        "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
      },
      "id": "275a47fb62ec9d1334905a53daf10d5b0b1ad9e08c8373e7b7836effda52de65"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-odlyzko",
        "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 690,
        "start_column": 22,
        "end_line": 690,
        "end_column": 27
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous (baseChangeAlgEquiv A K L B).toFun",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
      },
      "id": "fba969b0c1b7f96394ee4cef57111ab977ab330798b7c4eeed7c7753417432f5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-odlyzko",
        "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean",
        "start_line": 691,
        "start_column": 23,
        "end_line": 691,
        "end_column": 28
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst\u271d\u00b2\u2070 : CommRing A\ninst\u271d\u00b9\u2079 : CommRing B\ninst\u271d\u00b9\u2078 : Algebra A B\ninst\u271d\u00b9\u2077 : Field K\ninst\u271d\u00b9\u2076 : Field L\ninst\u271d\u00b9\u2075 : Algebra A K\ninst\u271d\u00b9\u2074 : IsFractionRing A K\ninst\u271d\u00b9\u00b3 : Algebra B L\ninst\u271d\u00b9\u00b2 : IsDedekindDomain A\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra A L\ninst\u271d\u2079 : IsScalarTower A B L\ninst\u271d\u2078 : IsScalarTower A K L\ninst\u271d\u2077 : IsIntegralClosure B A L\ninst\u271d\u2076 : FiniteDimensional K L\ninst\u271d\u2075 : Algebra.IsSeparable K L\ninst\u271d\u2074 : IsDomain B\ninst\u271d\u00b3 : Algebra.IsIntegral A B\ninst\u271d\u00b2 : Module.Finite A B\ninst\u271d\u00b9 : IsDedekindDomain B\ninst\u271d : IsFractionRing B L\n\u22a2 Continuous (baseChangeAlgEquiv A K L B).invFun",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L691"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-02-02T13:44:48+00:00",
        "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
      },
      "id": "856bd9a2207cc21cc19cdf70843c95d8df860134913b418a70a3dbbbe24e05c1"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "palalansouki/issue303",
        "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
        "start_line": 251,
        "start_column": 57,
        "end_line": 251,
        "end_column": 62
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2076 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2075 : L.DecidableEq\nT\u2080 T : Theory \u2112\u2092\u1d63\ninst\u271d\u2074 : T\u2080 \u2aaf T\ninst\u271d\u00b3 : Diagonalization T\u2080\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u00b2 : \ud835\udd05.HBL\ninst\u271d\u00b9 : \u2115 \u22a7\u2098* T\ninst\u271d : \ud835\udd05.Justified \u2115\nA B : Modal.Formula \u2115\n\u22a2 Arith.SoundOn \ud835\udc08\ud835\udeba\u2081 (Arith.Hierarchy \ud835\udeb7 2)",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L251"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-06T15:53:13+09:00",
        "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
      },
      "id": "561aea2f41ccdded4a549bba38c20c7aff4ca18aed7fa403980d371473caf511"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "palalansouki/issue303",
        "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
        "start_line": 253,
        "start_column": 81,
        "end_line": 253,
        "end_column": 86
      },
      "debug_info": {
        "goal": "L : Language\ninst\u271d\u2078 : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst\u271d\u2077 : L.DecidableEq\nT\u2080 T : Theory \u2112\u2092\u1d63\ninst\u271d\u2076 : T\u2080 \u2aaf T\ninst\u271d\u2075 : Diagonalization T\u2080\n\ud835\udd05 : ProvabilityPredicate T\u2080 T\ninst\u271d\u2074 : \ud835\udd05.HBL\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\ninst\u271d\u00b2 : \ud835\udd05.Justified \u2115\nA B : Modal.Formula \u2115\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : T.Delta1Definable\n\u22a2 \u2200 {\u03c3 : Sentence \u2112\u2092\u1d63}, T \u22a2!. \u03c3 \u2194 \u2115 \u22a7\u2098\u2080 \u2191(\ud835\udc08\ud835\udeba\u2081.standardDP T) \u03c3",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-06T15:53:13+09:00",
        "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
      },
      "id": "258a7b918aeb06e842e71f2a126f95eb9e77b9b4822bcaaa065e40580452cc13"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
        "start_line": 375,
        "start_column": 27,
        "end_line": 375,
        "end_column": 32
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\nthis\u271d : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080\u271d :=\n  SolovaySentence.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : Satisfies M\u2080 (Sum.inr r\u2081) (\u25a1B)\nthis : \ud835\udc08\ud835\udeba\u2081 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B\n\u22a2 \ud835\udc08\ud835\udeba\u2081.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L375"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-06T15:53:13+09:00",
        "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
      },
      "id": "d7a66edadb2d3aea140f4728c8b1dd14daaa81c197de56e13742652f79511831"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue303",
        "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
        "start_line": 393,
        "start_column": 20,
        "end_line": 393,
        "end_column": 25
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080\u271d : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, Satisfies M\u2080 (Sum.inr r\u2081) \u03c6\nhA\u2082 : \u00acSatisfies M\u2080 (Sum.inr r\u2081) A\nthis\u271d\u00b9 : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080\u271d :=\n  SolovaySentence.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nr\u2080 : (M\u2081.extendRoot r\u2081).World := Model.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (Satisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acSatisfies M\u2080 (Sum.inr r\u2081) B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nthis\u271d : \u2115 \u22a7\u2098* \ud835\udc08\ud835\udeba\u2081\nthis : \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00ac\u2115 \u22a7\u2098\u2080 \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\n\u22a2 \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L393"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T06:54:28+09:00",
        "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
      },
      "id": "6f057b9e862a642dde34e8e6af4174370ecc50c1eac8f84693a55e360e8f3448"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-adele-refactor",
        "commit": "c5f85a01641c0135f6e95906e74b59461497f5cf",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/NumberField/AdeleRing.lean",
        "start_line": 170,
        "start_column": 4,
        "end_line": 170,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.refine_1.ht\nintegralAdeles : Set (FiniteAdeleRing (\ud835\udcde \u211a) \u211a) :=\n  {f |\n    \u2200 (v : IsDedekindDomain.HeightOneSpectrum (\ud835\udcde \u211a)),\n      f v \u2208 IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers \u211a v}\n\u22a2 IsOpen integralAdeles",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/c5f85a01641c0135f6e95906e74b59461497f5cf/FLT/NumberField/AdeleRing.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-06T18:09:43+01:00",
        "inclusion_date": "2025-04-14T23:44:51.413177+00:00"
      },
      "id": "7ff98dbd552c3feaca88b99da397b1db5fd47b3a853e70778b49ce125fcec19d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "RD_erealStieltjes",
        "commit": "d2f1f177e8408f47342c6a02c9fcc745d21dcf3d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/MeasureTheory/Measure/ERealStieltjes.lean",
        "start_line": 1226,
        "start_column": 2,
        "end_line": 1226,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : ERealStieltjes\n\u22a2 SFinite f.measure",
        "url": "https://github.com/leanprover-community/mathlib4/blob/d2f1f177e8408f47342c6a02c9fcc745d21dcf3d/Mathlib/MeasureTheory/Measure/ERealStieltjes.lean#L1226"
      },
      "metadata": {
        "blame_email_hash": "d765cd676b3d",
        "blame_date": "2025-04-09T09:41:05+02:00",
        "inclusion_date": "2025-04-09T23:09:10.124596+00:00"
      },
      "id": "1179c281c69582647601ca4de1353620f50570af58f80f961882d8cb1e002d5f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 462,
        "start_column": 6,
        "end_line": 462,
        "end_column": 11
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q)) *\n          house\n            ((\u2191\u2191(finProdFinEquiv.symm.toFun t).1 + 1 + (\u2191\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * \u03b2') ^\n              \u2191(finProdFinEquiv.symm.toFun u).2) *\n        house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264\n    house (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q) * \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (m K * q)) *\n          house ((\u2191a + \u2191b * \u03b2') ^ k) *\n        house (\u03b1' ^ (a * l)) *\n      house (\u03b3' ^ (b * l))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L462"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "c18faff69f09228240341a2dcf4a17551a1c4190ad8e2ea1a2c6292ed81f9c7e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 466,
        "start_column": 6,
        "end_line": 466,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 |\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q)| *\n          house\n            ((\u2191(\u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1) \u2022 \u03b2') ^\n              \u2191(finProdFinEquiv.symm.toFun u\u271d).2) *\n        house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1))) \u2264\n    let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n    let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n    let k := \u2191(finProdFinEquiv.symm.toFun u).2;\n    let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n    1 \u2294 |\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q)| * house ((\u2191a + b \u2022 \u03b2') ^ k) * house (\u03b1' ^ (a * l)) * house (\u03b3' ^ (b * l))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L466"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "0235c952ffd9324b86bbd044d68259fb50db3f23ebef366b68d89c91f535a097"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 480,
        "start_column": 4,
        "end_line": 480,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc.step\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t\u271d).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u\u271d).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 c\u2083 K \u03b1' \u03b2' \u03b3' q u t ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2) \u2264\n    c\u2083 K \u03b1' \u03b2' \u03b3' q u\u271d t\u271d ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L480"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "9ede7cc59c6c010bd09ea5f1342aba8ee0d71f9ac6d21bb13430dff5204b9412"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 594,
        "start_column": 6,
        "end_line": 594,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case neg\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\n\u22a2 \u00ac\u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun i).2 + 1) \u2022 \u03b2 =\n      \u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun j).2 + 1) \u2022 \u03b2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L594"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T17:11:21+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "ac77ca4b7191ceaf64dad19943fbe8a2ac751f23565a0cc09a4b395e5d34ebc3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 674,
        "start_column": 2,
        "end_line": 674,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhR : \u2211 t, \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) = 0\n\u22a2 ((fun t => \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t)) \u1d65* vandermonde fun t => \u03c1 \u03b1 \u03b2 q t) = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L674"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T00:24:25+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "921f85881b2e7bdf297989acac8cfcb3ae979d90b3495745d8e5c3704cda62fd"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 739,
        "start_column": 2,
        "end_line": 739,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case a.h.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nH : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x = 0\nHC\u271d : \u2200 (x : Fin (q * q)), \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u x hq0 x) = 0\nt : Fin (q * q)\nHC : \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0\n\u22a2 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t\u271d ?hq0 t = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L739"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "722a7424ddc03322cb20178c049ff38d9c8490931c3894ad50038d94ba7d3eea"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 740,
        "start_column": 2,
        "end_line": 740,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case hq0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : \u2102\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nH : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t x = 0\nHC : \u2200 (x : Fin (q * q)), \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u x hq0 x) = 0\n\u22a2 0 < q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L740"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "9c55146b3e4ea72bd5fa5060f7bb6c314730becd0dc8e9a325425c9d12b3983c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 779,
        "start_column": 2,
        "end_line": 779,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case hR.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\nk : Fin (q * q)\nl : Fin (m K)\nhl : \u2191l < n K q\nx : \u2102\nt : Fin (q * q)\nht : t \u2208 Finset.univ\nH :\n  R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 = 0 \u2192\n    (fun t => \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t)) = 0\nthis : A K \u03b1' \u03b2' \u03b3' q h2mq hq0 *\u1d65 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 = 0\n\u22a2 \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L779"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T17:10:19+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "104be27b1167a4a721504ad8b5dc420ef85d3d106504f8e6906b60683ac99317"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 791,
        "start_column": 92,
        "end_line": 791,
        "end_column": 97
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 (Exists.choose \u22ef).order \u2265 n K q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L791"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T17:29:48+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "9e430d82ad2132edeac14be7f8eca6326db9146e44417146098a7e8f74e8e93b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 793,
        "start_column": 80,
        "end_line": 793,
        "end_column": 85
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2265 n K q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L793"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T02:58:34+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "83102d5f7f548c91cc42030de1e8ae208b14107890047209b45754828c087d60"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 797,
        "start_column": 67,
        "end_line": 797,
        "end_column": 72
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nhq0 : 0 < q\nt : Fin (q * q)\n\u22a2 \u2203 l\u2080,\n    iteratedDeriv (r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n        (R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t) \u2191\u2191l\u2080 \u2260\n      0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L797"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T02:58:34+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "e7e8888fa6f6eb61e9dc68c3f523beb481e8196f4a62124e25d6813a600bfb23"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 822,
        "start_column": 2,
        "end_line": 822,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nthis : \u00ac\u22ef.choose = 0\nH : \u22ef.choose t = 0\n\u22a2 \u22ef.choose = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L822"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-01T02:10:10+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "29c9e004acac74b2369d248130afbbb37a1717d468bf0bae29ef8c77f8028ea9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1026,
        "start_column": 2,
        "end_line": 1026,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 IsIntegral \u2124\n    (c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022\n      (algebraMap (\ud835\udcde K) K) (\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1026"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T02:58:34+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "8b1e888e8279cba1149b83df9362c290242be2102e5d71ae9edef4e505d4ec82"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 867,
        "start_column": 6,
        "end_line": 867,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L867"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "4d52e56c26a7aed30845bcbd3649a164e7d061272c2c607a84b5d381d5737d23"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 868,
        "start_column": 6,
        "end_line": 868,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_1.ha\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 0 < c\u2085 ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L868"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "5e8ce56e1c74a450e14dda6ce6f79ea84da7ac5c43e6ea9dbc22749e10e3722b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 869,
        "start_column": 6,
        "end_line": 869,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_1.hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L869"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "6790cd97a655463d452f9cb9f35222e1d4ef1c416bf856132745c51729fb4058"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 870,
        "start_column": 4,
        "end_line": 870,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2016(Algebra.norm \u211a) \u03c1\u2016",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L870"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "5b47b9529867a39550c94b62ca8d85854d866a4193ba6552fa50549e9ab10b3a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 897,
        "start_column": 4,
        "end_line": 897,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) \u2264\n    \u2191\u2191t * c\u2084 * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ n K q * c\u2087 ^ \u2191q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L897"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T00:04:24+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "55bf0e831868323ba86ff7bb6a4ed70b5a51a84c454ecc2cc0b059ff122032bf"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 898,
        "start_column": 4,
        "end_line": 898,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191\u2191t * c\u2084 * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ n K q * c\u2087 ^ \u2191q \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L898"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T00:04:24+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "a4c334d81cdd8bea76f85afbbbc5daf9fa792c0a5ab84c0f1dc46926859d3c4e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 912,
        "start_column": 4,
        "end_line": 912,
        "end_column": 9
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  DifferentiableAt \u2102 S z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L912"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T17:11:21+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "98d35623a629a18d8978bd9e5129c588e63eb5d552ad952e6655aeb03d2dea12"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 926,
        "start_column": 4,
        "end_line": 926,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hd\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 DifferentiableOn \u2102 (S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191(r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q)))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L926"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "b7dfe85e337c62782d81d9b7ced6d74fefa4787bb56c7aa07982a9b0dd5e99e3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 931,
        "start_column": 6,
        "end_line": 931,
        "end_column": 11
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 < m K",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L931"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "867c91750524d482a06f6d4be3135841e60840fa3d48d979a9a5b78a43278edb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1193,
        "start_column": 8,
        "end_line": 1193,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case hb.intro.intro.intro\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhirr : \u2200 (i j : \u2124), \u03c3 \u03b2' \u2260 \u2191i / \u2191j\nleft : \u03c3 \u03b1' \u2260 0\nright : \u03c3 \u03b1' \u2260 1\nright_1 : \u03c3 \u03b1' ^ \u03c3 \u03b2' = \u03c3 \u03b3'\nl\u2080 : \u2115 := _root_.l\u2080 K (\u03c3 \u03b1') (\u03c3 \u03b2') hirr \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0\nthis : _root_.l\u2080 K (\u03c3 \u03b1') (\u03c3 \u03b2') \u22ef \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0 < m K\n\u22a2 0 < r K (\u03c3 \u03b1') (\u03c3 \u03b2') \u22ef \u22ef \u03c3 hd \u03b1' \u03b2' \u03b3' \u22ef q h2mq u t hq0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1193"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "f4d80544d130781ab4fc62ddcc6abaed3a6f05a29e69b888e1688d260d840353"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 968,
        "start_column": 8,
        "end_line": 968,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 1 < 1 + \u2191r / \u2191q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L968"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "0e747424280355a68aac241a6e0c8109ddb5fcea76519a73aa4dd474c77749ce"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 972,
        "start_column": 4,
        "end_line": 972,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hc\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q)\n\u22a2 ContinuousWithinAt (_root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q))) x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L972"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "7e62ba673e651ac51de0a7af0fd238c9de1fbcc620eb9edd65276f393ec4e887"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 979,
        "start_column": 4,
        "end_line": 979,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nz : \u2102\nhzabs : \u2016z\u2016 < \u2191(m K) * (1 + \u2191r / \u2191q)\nhzneq : \u00acz = \u2191l\u2080\n\u22a2 DifferentiableAt \u2102 S z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L979"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T17:11:21+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "e5a0e4111ac070844d418d361969508675a2e7d7d6df186ceefc6984483df674"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 963,
        "start_column": 29,
        "end_line": 963,
        "end_column": 34
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191l\u2080 < \u2191(m K)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L963"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "5faf5f86e1806fdc46a8c70abbd7d33b3334389faa4e231dbd941afce81087a7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1010,
        "start_column": 4,
        "end_line": 1010,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u03c3 (rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) = Complex.log \u03b1 ^ (-\u2191r) * S \u2191l\u2080",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1010"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "2c86848954dd97fb7728c8540e7d30195a1c07a92cdbd4a7a91969fdf2a54b0f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1037,
        "start_column": 4,
        "end_line": 1037,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2016_root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t z\u2016 \u2264\n    \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1037"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "4e8e77040d99c3327083ad6f4a8e175b2ea2f6bedbac4a827587d57a63373a71"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1038,
        "start_column": 4,
        "end_line": 1038,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q)) \u2264\n    \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1038"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "ed69a399692192c562277a3c8e38274d418ec21ee3f814ce7a52becf71817ab5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1039,
        "start_column": 4,
        "end_line": 1039,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q u t\n\u22a2 \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1039"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "1fbb30a28ae522eb300c1a7094d153db0d0af6d1573dbee84056ff458362c1ba"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1064,
        "start_column": 4,
        "end_line": 1064,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 \u2191(m K) * \u2191r / \u2191q = \u2191(m K) * (1 + \u2191r / \u2191q) - \u2191(m K)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1064"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "ebcfe16a308e25788cab3c686cae35f7a2187a5c6eed3c1ad3c4106810dd2af1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1068,
        "start_column": 8,
        "end_line": 1068,
        "end_column": 13
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 l\u2080 < m K",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1068"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "cf97aa12a87229bcb00b80a9f5741ef6fb0e9820f48ca35fd23324b4ebc8bea3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1070,
        "start_column": 4,
        "end_line": 1070,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR\u271d : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr\u271d : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080\u271d : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS\u271d : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1\u271d : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7\u271d : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 \u2191(m K) * (1 + \u2191r / \u2191q) - \u2191(m K) \u2264 \u2016z\u2016 - \u2191l\u2080",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1070"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "ac975c9beae6949194039d9e808495473906ff76589becdf222a5201a65be58e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1329,
        "start_column": 4,
        "end_line": 1329,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1.hz\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) / \u2191q))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1329"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "59e05b3dc741450705fba28231a57fd5560cb1c5a4d0eaff1d212abb0860b5cf"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1330,
        "start_column": 4,
        "end_line": 1330,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nhz : z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q))\n\u22a2 \u2016z - \u2191l\u2080\u2016 \u2264 \u2016z - k\u2016",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1330"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "0bf98d08c0cffde06e93cfd5e7c05c29be843989d7887a4322600e5d9039be36"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1345,
        "start_column": 41,
        "end_line": 1345,
        "end_column": 46
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  z \u2208 Metric.sphere 0 (\u2191(m K) * (1 + \u2191r / \u2191q)) \u2192\n    \u2016(z - \u2191l\u2080) ^ (-\u2191r) * \u220f k \u2208 Finset.range (m K + 1) \\ {l\u2080}, ((\u2191l\u2080 - \u2191k) / (z - \u2191k)) ^ r\u2016 \u2264\n      c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1345"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "a6bce69f636e0bef9ca1d2c3dbeefaa280160f83d07ee0f5049db46d2258955c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1128,
        "start_column": 2,
        "end_line": 1128,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 let R := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  \u2016S z\u2016 \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1128"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "1214a1d0d21f20a6cee8d9b8a00f0a743b70a087b96b2224d2105ad2954712e3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1398,
        "start_column": 52,
        "end_line": 1398,
        "end_column": 57
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhdistinct : \u2200 (i j : Fin (q * q)), i \u2260 j \u2192 \u03c1 \u03b1 \u03b2 q i \u2260 \u03c1 \u03b1 \u03b2 q j\n\u22a2 let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let l\u2080 := l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03c1 := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let \u03b7 := \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  \u03c3 \u03c1 = \u2191(2 * Real.pi)\u207b\u00b9 * \u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191l\u2080)\u207b\u00b9 * S z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1398"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "538bc7c81c1f7ef2b9df699872e2a04126f4e0de069ee854f109e1aa508e37bb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1426,
        "start_column": 4,
        "end_line": 1426,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016(2 * Real.pi)\u207b\u00b9\u2016 * \u2016\u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191l\u2080)\u207b\u00b9 * S z\u2016 \u2264\n    \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1426"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "b1b42d2a67fc3cef09e65f1400866e41dc1442e39e73d9b906796f554477de24"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1427,
        "start_column": 4,
        "end_line": 1427,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_4\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r) \u2264\n    c\u2081\u2083 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1427"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "49bbbf0cdd89c31d90eba4098e9d4b1588805da406a22b8d7c68f25c9782ac3c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1220,
        "start_column": 4,
        "end_line": 1220,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1220"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "1d236988296720703db9e6a8c8ebd0a049f83d6aae0b2eb5062aeada0bf9c59a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1221,
        "start_column": 4,
        "end_line": 1221,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c\u2081\u2084 ^ r * \u2191r ^ (-\u2191r / 2 + 3 * \u2191(h K) / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1221"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "dafff168f96d20962236891a8a4cc766e21c33ea6f14594a6388624d6438c85e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1460,
        "start_column": 2,
        "end_line": 1460,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.right\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 \u2191(r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) ^\n      ((r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 - 3 * h K) / 2) \u2265\n    c\u2081\u2085 ^ r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1460"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T02:58:34+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "3edb81b63e4b2932eb334f938aab8cc72abec5eb559ed8f8bd98041975a6d9f6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1246,
        "start_column": 4,
        "end_line": 1246,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191(_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0) ^\n      (_root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 / 2 - 3 * h K / 2) <\n    c\u2081\u2084 ^ r * c\u2085 ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1246"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
      },
      "id": "2dfb0de1ca23bd1b9aab32cf53cc50b316611b0ff82798934c9756709dba09c4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1480,
        "start_column": 2,
        "end_line": 1480,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.intro.intro.intro.intro.intro.intro\nK\u271d : Type\ninst\u271d\u00b9 : Field K\u271d\n\u03b1 \u03b2 : \u2102\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\n\u03c3\u271d : K\u271d \u2192+* \u2102\n\u03b1'\u271d \u03b2'\u271d \u03b3'\u271d : K\u271d\ninst\u271d : NumberField K\u271d\nq : \u2115\nu : Fin (m K\u271d * n K\u271d q)\nh\u03b3 : IsAlgebraic \u211a (\u03b1 ^ \u03b2)\nK : Type\nhK : Field K\nhNK : NumberField K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nha : \u03b1 = \u03c3 \u03b1'\nhb : \u03b2 = \u03c3 \u03b2'\nhc : \u03b1 ^ \u03b2 = \u03c3 \u03b3'\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1480"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "c26874e43979047d038540167cc6cf0f0808c5d5de18e89a12c26c7514223057"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "a5795764142a42265d7046750165aa183184fc94",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/MyGraph/Basic.lean",
        "start_line": 685,
        "start_column": 2,
        "end_line": 685,
        "end_column": 7
      },
      "debug_info": {
        "goal": "V : Type u\nG H : MyGraph V\nh : H \u2264 G\n\u22a2 G \\ (G \\ H) = H",
        "url": "https://github.com/leanprover-community/mathlib4/blob/a5795764142a42265d7046750165aa183184fc94/Mathlib/Combinatorics/MyGraph/Basic.lean#L685"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-04-09T17:01:03+01:00",
        "inclusion_date": "2025-04-09T23:24:48.994862+00:00"
      },
      "id": "0c1a4056a338c9060ee38e933527c2904aafab92e75d2c2eae5c0fc86ae26560"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/MyGraph/Basic.lean",
        "start_line": 1034,
        "start_column": 2,
        "end_line": 1034,
        "end_column": 7
      },
      "debug_info": {
        "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\nh : Disjoint G (fromEdgeSet s)\ne : Sym2 V\nhe : e \u2208 G.edgeSet\nhf : e \u2208 s\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1034"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-04-09T17:01:03+01:00",
        "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
      },
      "id": "46471fe2402bf29d56294f82728c19182e92c7d2dd858813536369af1d30af14"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_blowups",
        "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/MyGraph/Basic.lean",
        "start_line": 1037,
        "start_column": 2,
        "end_line": 1037,
        "end_column": 7
      },
      "debug_info": {
        "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\n\u22a2 Disjoint (fromEdgeSet s) G \u2194 Disjoint s G.edgeSet",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1037"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-04-09T17:01:03+01:00",
        "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
      },
      "id": "45d30a90910e455b19093a1a0d1bc85c86b593011c423ff84b5f65bd0f9ab0cc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "mans0954/bipolar-theorem",
        "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Analysis/LocallyConvex/Bipolar.lean",
        "start_line": 65,
        "start_column": 2,
        "end_line": 65,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\nE : Type u_2\nF : Type u_3\ninst\u271d\u2076 : RCLike \ud835\udd5c\ninst\u271d\u2075 : AddCommGroup E\ninst\u271d\u2074 : AddCommGroup F\ninst\u271d\u00b3 : Module \ud835\udd5c E\ninst\u271d\u00b2 : Module \ud835\udd5c F\nB : E \u2192\u2097[\ud835\udd5c] F \u2192\u2097[\ud835\udd5c] \ud835\udd5c\ninst\u271d\u00b9 : Module \u211d E\ninst\u271d : IsScalarTower \u211d \ud835\udd5c E\nf\u2081 : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c\n\u22a2 \u2203 a, (WeakBilin.eval B) a = f\u2081",
        "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "b075c7797d16",
        "blame_date": "2025-04-09T08:31:51+01:00",
        "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
      },
      "id": "6fb6962af2f299b3e0f28708b03dab08b6d6bfadf361083ee2a93015c9a30da9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "mans0954/bipolar-theorem",
        "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Analysis/LocallyConvex/Bipolar.lean",
        "start_line": 102,
        "start_column": 4,
        "end_line": 102,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a.intro.intro.intro\n\ud835\udd5c : Type u_1\nE : Type u_2\nF : Type u_3\ninst\u271d\u2077 : RCLike \ud835\udd5c\ninst\u271d\u2076 : AddCommGroup E\ninst\u271d\u2075 : AddCommGroup F\ninst\u271d\u2074 : Module \ud835\udd5c E\ninst\u271d\u00b3 : Module \ud835\udd5c F\ninst\u271d\u00b2 : Module \u211d E\ninst\u271d\u00b9 : IsScalarTower \u211d \ud835\udd5c E\nB : E \u2192\u2097[\ud835\udd5c] F \u2192\u2097[\ud835\udd5c] \ud835\udd5c\ns : Set E\ninst\u271d : Nonempty \u2191s\nh : B.Nondegenerate\nx : E\nhx : x \u2209 (closedAbsConvexHull \ud835\udd5c) s\nf : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c\nu : \u211d\nhf\u2081 : \u2200 a \u2208 (closedAbsConvexHull \ud835\udd5c) s, RCLike.re (f a) < u\nhf\u2082 : u < RCLike.re (f x)\ne3 : 0 < u\ng : WeakBilin B \u2192L[\ud835\udd5c] \ud835\udd5c := (1 / u) \u2022 f\nfg : g = (1 / u) \u2022 f\nhg\u2081 : \u2200 a \u2208 (closedAbsConvexHull \ud835\udd5c) s, RCLike.re (g a) < 1\n\u22a2 x \u2208 (B.flip.polar (B.polar s))\u1d9c",
        "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "b075c7797d16",
        "blame_date": "2025-04-09T08:31:51+01:00",
        "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
      },
      "id": "ed306d8ef427052daefa01ae9155736ec4e25bb70fee346f016285c260266d81"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 135,
        "start_column": 21,
        "end_line": 135,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.24977 \u2208 \u2191ys then ?m.25006 else y\n\u22a2 NSequence n k g1",
        "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:51:19-04:00",
        "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
      },
      "id": "aaa1785e9906507f71d6fda052deb608b0e68f8c29a5702e5c749538052c200d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 136,
        "start_column": 21,
        "end_line": 136,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.24977 \u2208 \u2191ys then ?m.25006 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
        "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-22T23:33:30-04:00",
        "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
      },
      "id": "92c4519c020b562fbd1913f0b0df29cc4ac6f33da9857d9d1bf7729825848dfc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2020P3.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nc : Fin (4 * n) \u2192 Fin n\nh : \u2200 (i : Fin n), #{j | c j = i} = 4\n\u22a2 \u2203 S, \u2211 i \u2208 S, (\u2191i + 1) = \u2211 i \u2208 S\u1d9c, (\u2191i + 1) \u2227 \u2200 (i : Fin n), #({j \u2208 S | c j = i}) = 2",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P3.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-04-08T13:09:24-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "70eb82b882388275af62794a7d8761678aee0776c17f603eefa6183ecd229e75"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "palalansouki/issue303",
        "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
        "start_line": 379,
        "start_column": 27,
        "end_line": 379,
        "end_column": 32
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080 : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, r\u2081 \u22a7 \u03c6\nhA\u2082 : \u00acr\u2081 \u22a7 A\nthis\u271d\u00b9 : (M\u2081.extendRoot r\u2081).IsFiniteTree r\u2080\nthis\u271d : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080 :=\n  SolovaySentences.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nB : Modal.Formula \u2115\nihB :\n  B \u2208 A.subformulas \u2192\n    (r\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acr\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nB_sub : \u25a1B \u2208 A.subformulas\nh : r\u2081 \u22a7 \u25a1B\nthis : \ud835\udc08\ud835\udeba\u2081 \u22a2!. (\u2a56 j, \u03c3.\u03c3 j) \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B\n\u22a2 \ud835\udc08\ud835\udeba\u2081.alt \u22a2! \u2a56 j, \u03c3.\u03c3 j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L379"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-06T15:53:13+09:00",
        "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
      },
      "id": "0b6e09e771d72bdfa1de4fc09d3d2a5adacb06abd1b9f5a3905e63f3ca1ba35f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "palalansouki/issue303",
        "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/S/Completeness.lean",
        "start_line": 397,
        "start_column": 20,
        "end_line": 397,
        "end_column": 25
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d\u00b3 : \u2115 \u22a7\u2098* T\nA : Modal.Formula \u2115\ninst\u271d\u00b2 : T.Delta1Definable\ninst\u271d\u00b9 : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\ninst\u271d : SoundOn T (Hierarchy \ud835\udeb7 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula \u279d A \u2208 Logic.GL \u2192 A \u2208 Logic.S\ntfae_2_to_3 : A \u2208 Logic.S \u2192 \u2200 (f : Realization \u2112\u2092\u1d63), \u2115 \u22a7\u2098\u2080 f.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\nhA : Finset.conj A.rflSubformula \u279d A \u2209 Logic.GL\nM\u2081 : Model\nr\u2081 : M\u2081.World\nleft\u271d : M\u2081.IsFiniteTree r\u2081\nM\u2080 : Model := M\u2081.extendRoot r\u2081\nr\u2080 : M\u2080.World := Model.extendRoot.root\nhA\u2081 : \u2200 \u03c6 \u2208 A.rflSubformula, r\u2081 \u22a7 \u03c6\nhA\u2082 : \u00acr\u2081 \u22a7 A\nthis\u271d\u00b2 : (M\u2081.extendRoot r\u2081).IsFiniteTree r\u2080\nthis\u271d\u00b9 : Fintype (M\u2081.extendRoot r\u2081).World\n\u03c3 : SolovaySentences (\ud835\udc08\ud835\udeba\u2081.standardDP T) (M\u2081.extendRoot r\u2081).toFrame r\u2080 :=\n  SolovaySentences.standard (M\u2081.extendRoot r\u2081).toFrame Frame.extendRoot.root\nH :\n  \u2200 B \u2208 A.subformulas,\n    (r\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B) \u2227\n      (\u00acr\u2081 \u22a7 B \u2192 \ud835\udc08\ud835\udeba\u2081 \u22a2!. \u03c3.\u03c3 r\u2080 \u279d \u223c\u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) B)\nthis\u271d : \u2115 \u22a7\u2098* \ud835\udc08\ud835\udeba\u2081\nthis : \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080 \u2192 \u00ac\u2115 \u22a7\u2098\u2080 \u03c3.realization.interpret (\ud835\udc08\ud835\udeba\u2081.standardDP T) A\n\u22a2 \u2115 \u22a7\u2098\u2080 \u03c3.\u03c3 r\u2080",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-03T06:54:28+09:00",
        "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
      },
      "id": "6175f8f733d259760ce20c2111278a5626f776ba0f081f606bcca07919386ced"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/04Exists.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q r : Prop\n\u22a2 p \u2192 q \u2192 r \u2194 p \u2227 q \u2192 r",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/04Exists.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "01ae624c573bd84c7d646c049c1a3df810d6e73d3d56bbe73f6e9d88cf7276ac"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/04Exists.lean",
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : b \u2223 c\n\u22a2 a \u2223 c",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/04Exists.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-10T10:40:08+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "42a05c381812020bc94d83f1feb9fbc31de4a6cee754fe7167b9f54571357865"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/04Exists.lean",
        "start_line": 92,
        "start_column": 2,
        "end_line": 92,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nh : Surjective (g \u2218 f)\n\u22a2 Surjective g",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/04Exists.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-10T10:40:08+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "8b41e43ec327e9e62411fd25b558279b5f9e5f08e0c1f49a7bc06565e09f376b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 (a + b) * (a - b) = a ^ 2 - b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "8b35c4c4f352b6f504cc81fa4cc21e00de605656baa8fcbbe1dd7f90fa51b5f2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\n\u22a2 f ((a + b) ^ 2 - 2 * a * b) = f (a ^ 2 + b ^ 2)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "36a7b732e05260776440055e18fb17b7e6ddcbce5b2c311e7a88d15de07b4f7d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 130,
        "start_column": 2,
        "end_line": 130,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = -b\nh' : b + c = 0\n\u22a2 b * (a - c) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "68b92401e7569bbbf24165d2432a379cd7d6860b1b6907eaf6918affd5ec568c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 143,
        "start_column": 2,
        "end_line": 143,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh : b \u2264 a\n\u22a2 a + b \u2264 2 * a",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "9412accec1bcf42d36a0deb0d998dc505743197c5b578cd34ab982f430b7969c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 203,
        "start_column": 2,
        "end_line": 203,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 f (-5) = f 5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L203"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "5c997a7c078e3bfc7dc5c43d7503e5c30398f8bb5686e68ff9a876508ea47cc0"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 317,
        "start_column": 2,
        "end_line": 317,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nhf : even_fun f\n\u22a2 even_fun (g \u2218 f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L317"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "5e83520fe483aebbc15c3b371f4cea2e27fa9860485aba462a373e1da7f24b7f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 388,
        "start_column": 2,
        "end_line": 388,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nhf : non_decreasing f\nhg : non_increasing g\n\u22a2 non_increasing (g \u2218 f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L388"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "f91f8dba73adccc676d4a7383327b45a3aa87eb3990ccbef77c79aa72695de5e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 393,
        "start_column": 2,
        "end_line": 393,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nX Y : Set \u211d\nhx : x \u2208 X\n\u22a2 x \u2208 X \u2229 Y \u222a X \\ Y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L393"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "4ac9610d95f3aab9646921e6e00e0d9a24ea76b85330d3aabb868880bf82c306"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 403,
        "start_column": 2,
        "end_line": 403,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nhf : Continuous f\nh2f : HasCompactSupport f\n\u22a2 \u2203 x, \u2200 (y : \u211d), f x \u2264 f y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L403"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "e98d556566321afddea939a11c71a535d6465d274823fa6b94b6b128cb950647"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 442,
        "start_column": 2,
        "end_line": 442,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2124\nh\u2081 : a \u2223 b\nh\u2082 : a \u2223 c\n\u22a2 a \u2223 b + c",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L442"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "16bb2c4f47cff1079af62d07f460c35a96bf0fcfb8bb000e4cee8f14f042c775"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 570,
        "start_column": 2,
        "end_line": 570,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nw v : \u2115 \u2192 \u211d\nhu : seq_limit u l\nhw : seq_limit w l\nh : \u2200 (n : \u2115), u n \u2264 v n\nh' : \u2200 (n : \u2115), v n \u2264 w n\n\u22a2 seq_limit v l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L570"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "ea2fa22461118eb86a0523e0e7523686172d7457abf6b58eaf01b8a0a9f03b9c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 547,
        "start_column": 2,
        "end_line": 547,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h\nu : \u2115 \u2192 \u211d\nl l' : \u211d\nhl : seq_limit u l\nhl' : seq_limit u l'\n\u22a2 \u2200 \u03b5 > 0, |l - l'| \u2264 \u03b5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L547"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "fa2e6ddc4333c329ecb3dc8b334c7820a807d53cf64a11121ac05f7e89800a03"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 628,
        "start_column": 2,
        "end_line": 628,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03c6 : \u2115 \u2192 \u2115\n\u22a2 extraction \u03c6 \u2192 \u2200 (N N' : \u2115), \u2203 n \u2265 N', \u03c6 n \u2265 N",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L628"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "acc2a016c137284d9ca15d47d4a8a99b51f367fb5c2afa582db2266a934c2ead"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 639,
        "start_column": 2,
        "end_line": 639,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\na : \u211d\n\u22a2 cluster_point u a \u2192 \u2200 \u03b5 > 0, \u2200 (N : \u2115), \u2203 n \u2265 N, |u n - a| \u2264 \u03b5",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L639"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "4e017b7c43c78766663bf5dda65f42b58bce962c75c8f9b55dd3c2d16801d84b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 646,
        "start_column": 2,
        "end_line": 646,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\n\u03c6 : \u2115 \u2192 \u2115\nh : seq_limit u l\nh\u03c6 : extraction \u03c6\n\u22a2 seq_limit (u \u2218 \u03c6) l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L646"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "1e49d681ba41e0e4a2ab26478663a210c8933e17f0fceca8fdbc866174cfece4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 608,
        "start_column": 2,
        "end_line": 608,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl a : \u211d\nhl : seq_limit u l\nha : cluster_point u a\n\u22a2 a = l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Shorter.lean#L608"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "5f7ecdd5f0e83be9b10f2ad52f3cb3ed5df7c029844d51e23eca554ab78c25d4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Shorter.lean",
        "start_line": 660,
        "start_column": 2,
        "end_line": 660,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\n\u22a2 (\u2203 l, seq_limit u l) \u2192 CauchySequence u",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L660"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-02-24T23:33:44+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "25dff7d0235178f2ab9d996cd0a31220b3057d04bae4e4e39333b0ffe0063196"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/02Iff.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nha : 0 < a\nhb : 0 < b\n\u22a2 0 < a ^ 2 + b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/02Iff.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "cb7f4fc733392c65397242eb72ab9df31701534c34002715bfa474c7b176585e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/02Iff.lean",
        "start_line": 117,
        "start_column": 2,
        "end_line": 117,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\n\u22a2 a + c \u2264 b + c \u2194 a \u2264 b",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/02Iff.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "e36ad6d13ba1f48a5d44b1f7685042d77e9ba1de04661cc00b91d4635be0defc"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/02Iff.lean",
        "start_line": 152,
        "start_column": 2,
        "end_line": 152,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nhb : 0 \u2264 b\n\u22a2 a \u2264 a + b",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/02Iff.lean#L152"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "39f63d7d1ad01ebd067cf59bc6f82df46fbf0a65b4ad007798ff3b3c5d7c022e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/02Iff.lean",
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 a = b \u2194 b - a = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/02Iff.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "409853f4f0fbbef548a8bd0f2c8d06680645f000242482fe93cd679f748510cf"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 (a + b) ^ 2 = a ^ 2 + 2 * a * b + b ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "38dfb17ccdb7a79b8b88886789a4da3fd2e92d54c04b0d33deb7a34852306d39"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh : b = d + d\nh' : a = b + c\n\u22a2 a + b = c + 4 * d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-10T10:38:53+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "be56533383048ce38b4ca3bedfc470fa8f7729b1285aeb765e7f8f6ada70a7d4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\n\u22a2 exp (a + b - c) = exp a * exp b / (exp c * exp 0)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ddab18b8239f4da28486c1330b51dbc23480b300e96a0e7d21574429f0552202"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 135,
        "start_column": 2,
        "end_line": 135,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh : a = b + b\nh' : b = c\nh'' : a = d\n\u22a2 b + c = d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "7dcef04a0afad59f61611177850898772636e90e01fe6d23493d94dbe6f92eb5"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 174,
        "start_column": 58,
        "end_line": 174,
        "end_column": 63
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * a) = exp (2 * (b + c))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "c64c4252d8925fc7c0b3614de1cd5af4aa319691001164241dc7623e440c2506"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 175,
        "start_column": 58,
        "end_line": 175,
        "end_column": 63
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (2 * (b + c)) = exp (b + b + (c + c))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L175"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "40a822019138872e093ccc694b39e04d361dba3c3d13a7441ae41ad524ed1237"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 176,
        "start_column": 58,
        "end_line": 176,
        "end_column": 63
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b + (c + c)) = exp (b + b) * exp (c + c)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "6b236737b75f3c75ab1b20b6eb4a8b0a2e379d1951c19eccd86d809bb533e500"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 177,
        "start_column": 58,
        "end_line": 177,
        "end_column": 63
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp (b + b) * exp (c + c) = exp b * exp b * (exp c * exp c)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "781ebab5e7d2d26fe6b4c394005fe5870dec2b8cd9d652aa6759cefafdc4d608"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 178,
        "start_column": 58,
        "end_line": 178,
        "end_column": 63
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh : a = b + c\n\u22a2 exp b * exp b * (exp c * exp c) = exp b ^ 2 * exp c ^ 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "5d8d47029b7f6e025f993a8419d661f33ec497747fa5819673b3c7f2d9375dd4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/01Rewriting.lean",
        "start_line": 192,
        "start_column": 2,
        "end_line": 192,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh : c = d * a + b\nh' : b = a * d\n\u22a2 c = 2 * a * d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/01Rewriting.lean#L192"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "9f54c1b0ad2dc49d89e80fef9b8af03c57e59ebe3b4ef487c563382b12e4fadb"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 35,
        "start_column": 2,
        "end_line": 35,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 : X\nh : isInf s x\u2080\n\u22a2 x\u2080 \u2208 lowerBounds s",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "fb48b482aa0856682fcacb4dea51b4ad8d30b953af0c7720d8cbb444aabda786"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 x\u2081 : X\nhx\u2080 : isInf s x\u2080\nhx\u2081 : isInf s x\u2081\n\u22a2 x\u2080 = x\u2081",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "ed81f4a0fca149c4e2d4f2601720b079632accc9e4cc44547948fd7aa9538a35"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\nI : Set X \u2192 X\nh : isInfFun I\n\u22a2 isSupFun fun s => I (upperBounds s)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "e246e54cdc4e25d003aa48ce1159528038601bda72ecf8b8a283dd9a9362b481"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 148,
        "start_column": 2,
        "end_line": 148,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\ns t : Set X\nh : s \u2286 t\n\u22a2 Inf t \u2264 Inf s",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "3d7f7264d7733abd1f987d1949ad0c68569e4bcc98f85e4c412a2c2cd038934b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx x' : X\n\u22a2 x \u2264 x' \u2194 Inf {x, x'} = x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "be92e50e481731da569cbd7f0eb900290ea45e528159033b330e0954a489d36b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : CompleteLattice X\nx : X\n\u22a2 Inf {x' | x \u2264 x'} = x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "489561954e76809c197271bd602e8a2166160596238361e21379495f38054f7c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 173,
        "start_column": 2,
        "end_line": 173,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isInf S (\u22c2\u2080 S)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L173"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "a6093176ad78b0fa55c64b8611fb8c03c92b12eaed3f927dc3a2bbcdf77fc4cc"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Y : Type\nS : Set (Set Y)\n\u22a2 isSup S (\u22c3\u2080 S)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "a40887c50ab269636bd32d17efd62f8ce4673949aff59e07a0230296c7695955"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 213,
        "start_column": 2,
        "end_line": 213,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nY : Type u_2\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\n\u22a2 adjunction r l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "784c4d681e0f1ffb524b11b6c17486390c329fbc8be374651f3710c14ea5ecfd"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 248,
        "start_column": 2,
        "end_line": 248,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X Y : Type\ninst\u271d\u00b3 : PartialOrder X\ninst\u271d\u00b2 : CompleteLattice X\ninst\u271d\u00b9 : PartialOrder Y\ninst\u271d : CompleteLattice Y\nl : X \u2192 Y\nh : \u2200 (s : Set X), l (Sup s) = Sup (l '' s)\n\u22a2 adjunction l (mk_right l)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "70c0026107c402b07f2812a615d812915b8e891da23c7b6322d9d32a9bae980a"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 383,
        "start_column": 2,
        "end_line": 383,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X Y : Type\nf : X \u2192 Y\nt : Set (Topology X)\n\u22a2 f\u204e (Sup t) = Sup (f\u204e '' t)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "656c3fc3ab9df2e87ac412b99e2f243fd8ee1214f053153e35b2c08b80bcafb8"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 396,
        "start_column": 2,
        "end_line": 396,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nX : \u03b9 \u2192 Type\nT : \u03a0 (i : \u03b9), Topology (X i)\nZ : Type\nTZ : Topology Z\nf : Z \u2192 \u03a0 (i : \u03b9), X i\n\u22a2 Continuous TZ (ProductTopology T) f \u2194 \u2200 (i : \u03b9), Continuous TZ (T i) fun z => f z i",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L396"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "263aba893955dd29a3222b96894aca1518324e6a50f33c7a36740674214f4c94"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 422,
        "start_column": 4,
        "end_line": 422,
        "end_column": 9
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d : Group G\ns : Set (Subgroup G)\n\u22a2 1 \u2208 \u22c2 H \u2208 s, H.carrier",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L422"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "c186b3b3f79bfdb8cb8013f818f0a3252faea0eb1475773541581572ffa2f0b3"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 436,
        "start_column": 2,
        "end_line": 436,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d : Group G\n\u22a2 isInfFun SubgroupInf",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L436"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "16c306087fbed5df2e20cf4771a7e2e9bec1df661cb6ece6b11b26211cf4d935"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 449,
        "start_column": 2,
        "end_line": 449,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d : Group G\n\u22a2 adjunction generate forget",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L449"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "45f059b615def0bc21f423f85c71cbe400c192038d83189b3feb5ef1ecd51494"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 457,
        "start_column": 4,
        "end_line": 457,
        "end_column": 9
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Subgroup G'\n\u22a2 1 \u2208 \u21d1f \u207b\u00b9' H'.carrier",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L457"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "d782436a4cf9f1eba597dfe6ae7c243e06fef5ed3745957340d22c4a6512285c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 474,
        "start_column": 2,
        "end_line": 474,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 adjunction (push f) (pull f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L474"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "848a88221b50f594184c0b37f1d804f3ec5df7f6a1efaa9b6df1b12de9623cbe"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 490,
        "start_column": 2,
        "end_line": 490,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl l' : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nh' : adjunction l' r\n\u22a2 l = l'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L490"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "4d9727093500ea892db102c584888d894a3db80e2826660cea74274a134c3d56"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 495,
        "start_column": 2,
        "end_line": 495,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr r' : Y \u2192 X\nh : adjunction l r\nh' : adjunction l r'\n\u22a2 r = r'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L495"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "7a41dbeb8df1efc710d5af31bae9c9671e774809648ea3f54475aacd9e26736b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 502,
        "start_column": 2,
        "end_line": 502,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b2 : PartialOrder X\nY : Type\ninst\u271d\u00b9 : PartialOrder Y\nZ : Type\ninst\u271d : PartialOrder Z\nl : X \u2192 Y\nr : Y \u2192 X\nh : adjunction l r\nl' : Y \u2192 Z\nr' : Z \u2192 Y\nh' : adjunction l' r'\n\u22a2 adjunction (l' \u2218 l) (r \u2218 r')",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L502"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "9da1e288f0382366952ec611bc92d3d6a7c8b743353cb1d1d97ba8d0d524253e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 517,
        "start_column": 2,
        "end_line": 517,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 push f \u2218 generate = generate \u2218 Set.image \u21d1f",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L517"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "8435d8cd698bdfceeb8217861a91d74480d58eefa5607186cd3033e9fcdbe33b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 54,
        "start_column": 2,
        "end_line": 54,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 IndepSet A B \u2192 IndepSet B A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "2f9731105fae795b1ca7739f54772f72f05c51adec11b26fa333257973f8fd31"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 64,
        "start_column": 2,
        "end_line": 64,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B \u2192 IndepSet A B\u1d9c",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "ddadc8968c74f61b562b9d11dc06f3747e3e596bfe5d52314d62ebacd1c24b2b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet A B\u1d9c \u2194 IndepSet A B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "67addfe9d8c814b350ca38bee763cec3b650b9c3262e865cfe7f79eea442a813"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 77,
        "start_column": 2,
        "end_line": 77,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\nh : IndepSet A B\n\u22a2 IndepSet A\u1d9c B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "3577f3cf5999bad2f3b6bd7ce1a7b4b43afe49b10f7643e474cff5dfb1aa018b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA : Set \u03a9\nh : IndepSet A A\n\u22a2 \u2119 A = 0 \u2228 \u2119 A = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "926e207c68bf5e0eee2705fbb68f26df59dede909b1f81f8c8ef961360bae260"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 108,
        "start_column": 2,
        "end_line": 108,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A = 0\n\u22a2 \u2119(A|B) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "212f9d566f3205e8383b7539fb3aef5fba81877c8733ec919faed61dcbe31141"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhB : \u2119 B = 0\n\u22a2 \u2119(A|B) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "fb467e8a702c20860b6ab5281b83e6c6694b2764003c2bd702f1823787f01990"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nhA : \u2119 A \u2260 0\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "b9b6d794bf0fd543ef37805109dacd50932254d635086815acf843d35d79ff06"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\n\u22a2 \u2119(A|B) = \u2119 A * \u2119(B|A) / \u2119 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "62759d0fbdfa04ae04a63e63ec6fd0e75081cac92966d39e10e50fa9921fb367"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 140,
        "start_column": 2,
        "end_line": 140,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure \u2119\nA B : Set \u03a9\nh : IndepSet B A\nhB : \u2119 B \u2260 0\n\u22a2 \u2119(A|B) = \u2119 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "e71ea4e4994260377362f7ab9f19a72614d1c65d2db29a224809e16a77bf1f14"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nha : 0 \u2264 a\nhb : 0 \u2264 b\n\u22a2 0 \u2264 a + b",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "d28266de77ce17b11ec99e1ce1803a707b967fc15fbc604c7a33f2256536ae2f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nhab : a \u2264 b\nhcd : c \u2264 d\n\u22a2 a + c \u2264 b + d",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "9f744c0e891c0c0c16cd786234ae33e50bc53b73a91d24172bda0e06f3185ce1"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 68,
        "start_column": 2,
        "end_line": 68,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : \u2200 (n : \u2115), u n = l\n\u22a2 seq_limit u l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "f51bdd3ef5cef0938f1aa098b662d8c9e4ab9293e4d6b993c87d05613f6f3d68"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 90,
        "start_column": 2,
        "end_line": 90,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : seq_limit u l\nhl : l > 0\n\u22a2 \u2203 N, \u2200 n \u2265 N, u n \u2265 l / 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L90"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "6364d6640c356bc88ffa68816c8c375a10af34f630025c14c6980e86d29e04a6"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl l' : \u211d\n\u22a2 seq_limit u l \u2192 seq_limit u l' \u2192 l = l'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "5b33a5c1ef3874031f3fab4e6b21b7e7bb1dbe446ce79180044fcd97fa7919bc"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 161,
        "start_column": 2,
        "end_line": 161,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nM : \u211d\nh : is_seq_sup M u\nh' : non_decreasing u\n\u22a2 seq_limit u M",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "28ef10d7c175fa2e6ea6552770b9507dc76c47d53ae04700c59a92c30f976631"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 239,
        "start_column": 2,
        "end_line": 239,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nhu : CauchySequence u\nhl : cluster_point u l\n\u22a2 seq_limit u l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L239"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "4de6998a49e29646ebbaeea23f3785ef9690cc9fff66f4152c603b032872c954"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\n\u22a2 IsTrue v \u22a4",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "ecccb0e6df9670b5d97a10320bcf4772173f5c0bd5576a9426bb61e9fb74a8af"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 65,
        "start_column": 2,
        "end_line": 65,
        "end_column": 7
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 IsTrue v (A \u21d4 B) \u2194 (IsTrue v A \u2194 IsTrue v B)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L65"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "a0f840df63e15439057b7521bdf33a12c5446670d81a8be1af13925867381097"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 72,
        "start_column": 2,
        "end_line": 72,
        "end_column": 7
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u22a2 Valid (~~A \u21d4 A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "c40cb3b87752db627ed06f0bfc1d9e9b46018e1bc73dd83b7ef1cc3b26c1ed2d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 134,
        "start_column": 2,
        "end_line": 134,
        "end_column": 7
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~~A \u21d4 A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "6169fe714e5d27b56699f26c0aa6e7ef5684ce6db8e580ff2fbf4a9ef78072a0"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 139,
        "start_column": 2,
        "end_line": 139,
        "end_column": 7
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (A || ~A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "e981025cfcacb89dcd6244a88b683282276414dd4adc8b34b6611d2a39a60e2f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 146,
        "start_column": 2,
        "end_line": 146,
        "end_column": 7
      },
      "debug_info": {
        "goal": "v : Variable \u2192 Prop\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~(A && B) \u21d4 ~A || ~B)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L146"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "5a74c7843caca4e3710b76569d4a6909699e80388cb9de80cfcfcca16816e57c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 158,
        "start_column": 2,
        "end_line": 158,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Formula\n\u0393 \u0394 : Set Formula\nh : \u0393 \u22a2 A\nh2 : \u0393 \u2286 \u0394\n\u22a2 \u0394 \u22a2 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "b14186637c0a77bf03232e739ab08d9546e6f14cf6821b88100b549e24f0f964"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 Insert.insert B \u0393 \u22a2 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "48ce864a03f707474b99089f447ae45277b3d1dd8cfe7ac37a1b25cfddbbcfee"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 insert (A \u21d2 B) \u0393 \u22a2 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "1231075a51ae17e2266eae7591b69c9175b837c4f912d30cac559f457d1ef444"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 174,
        "start_column": 2,
        "end_line": 174,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B : Formula\n\u0393 : Set Formula\nh1 : Provable (A \u21d2 B)\nh2 : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a2 B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L174"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "a8bc81a374100a209a5526800daca7238aeb6df805025e7e355f27a2c49d2ebb"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Formula\n\u0393 : Set Formula\nh : \u0393 \u22a2 A\n\u22a2 \u0393 \u22a8 A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "a84a62258e746b6f066cf1329098fc2cc38a8612df923293bd5261ac0d55df49"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Formula\nh : Provable A\n\u22a2 Valid A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "c2205d9f50f1f04d953c9fe79ca96ff9ee75e18ac8c40d93769670a385ebea12"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 68,
        "start_column": 2,
        "end_line": 68,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\n\u22a2 eval v top = \u22a4",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "99efeed5557f8dafaff773b546ba0b450091c2c6482b62b2adaa841095010519"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 73,
        "start_column": 2,
        "end_line": 73,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 eval v (A \u21d4 B) = (eval v A \u21e8 eval v B) \u2293 (eval v B \u21e8 eval v A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "ea4e3f0cd850382fdb7a240f0e210c67568cb8318e0d71351296d192993865d1"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type ?u.16048\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u22a2 Valid ~(A && ~A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "e4ee464fba46aaa64d553d6212f4664b0995dc9db1a3ccbcd2f62457b6d273a4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 126,
        "start_column": 2,
        "end_line": 126,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type ?u.21261\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A || ~B \u21d2 ~(A && B))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "366b639d760eaf79eb4c11e0a411b22f1169ba867b78da31f145f95f3e94372b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 131,
        "start_column": 2,
        "end_line": 131,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type ?u.21285\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable ~(A && ~A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "7893b4193d726e8de8ff7cfb2c03d8ec9a6c05446f9ce9725ace15890f040de2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type ?u.21309\ninst\u271d : HeytingAlgebra H\nv : Variable \u2192 H\nA B : Formula\n\u0393 \u0394 : Set Formula\n\u22a2 Provable (~A && ~B \u21d2 ~(A || B))",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
      },
      "id": "73addb2e899f0e32fd7ab1d3f3523c9008a2c9166ee317c5415b1377acc0f744"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean",
        "start_line": 59,
        "start_column": 2,
        "end_line": 59,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_10\nM : Type u_11\nM' : Type u_12\ninst\u271d\u2076 : Ring R\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : AddCommGroup M'\ninst\u271d\u00b9 : Module R M\ninst\u271d : Module R M'\np : Submodule R M\nq : Submodule R M'\nhp : p.ClosedComplemented\nhq : q.ClosedComplemented\n\u22a2 (p.prod q).ClosedComplemented",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T20:14:52+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "2c7c42314aaa33cac1eb9386f14d9e2d51eb53117ebb0f8804f9899c5b9df2fa"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean",
        "start_line": 196,
        "start_column": 8,
        "end_line": 196,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_7\ninst\u271d\u2079 : RCLike \ud835\udd5c\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst\u271d\u2078 : NormedAddCommGroup E\ninst\u271d\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u2076 : NormedAddCommGroup F\ninst\u271d\u2075 : NormedSpace \ud835\udd5c F\ninst\u271d\u2074 : NormedAddCommGroup G\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c G\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace G\nf : E \u2192L[\ud835\udd5c] F\ng : F \u2192L[\ud835\udd5c] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (\u21d1g \u2218 \u21d1f))\nF' : Submodule \ud835\udd5c F := hf.complement\nthis\u271d : IsClosed \u2191(Submodule.map g F')\nthis : IsClosed \u2191hg.complement\nu : \u2115 \u2192 G\nu\u2080 : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u\u2080)\nhu : \u2200 (n : \u2115), \u2203 y \u2208 Submodule.map g F', \u2203 z \u2208 hg.complement, y + z = u n\nx : \u2115 \u2192 \u21a5(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => \u27e8y, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\ny : \u2115 \u2192 \u21a5hg.complement := fun n => (fun y x => (fun z x => \u27e8z, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\nn : \u2115\n\u22a2 u n = Classical.choose \u22ef + Classical.choose \u22ef",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L196"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T18:37:52+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "94086d77a447c82ac1c72c8862c2d9c06b8fa7d90e38614339bd0c6f3a611ada"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean",
        "start_line": 205,
        "start_column": 6,
        "end_line": 205,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_1\n\ud835\udd5c : Type u_7\ninst\u271d\u2079 : RCLike \ud835\udd5c\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst\u271d\u2078 : NormedAddCommGroup E\ninst\u271d\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u2076 : NormedAddCommGroup F\ninst\u271d\u2075 : NormedSpace \ud835\udd5c F\ninst\u271d\u2074 : NormedAddCommGroup G\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c G\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace G\nf : E \u2192L[\ud835\udd5c] F\ng : F \u2192L[\ud835\udd5c] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (\u21d1g \u2218 \u21d1f))\nF' : Submodule \ud835\udd5c F := hf.complement\nthis\u271d\u00b9 : IsClosed \u2191(Submodule.map g F')\nthis\u271d : IsClosed \u2191hg.complement\nu : \u2115 \u2192 G\nu\u2080 : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u\u2080)\nhu : \u2200 (n : \u2115), \u2203 y \u2208 Submodule.map g F', \u2203 z \u2208 hg.complement, y + z = u n\nx : \u2115 \u2192 \u21a5(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => \u27e8y, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\ny : \u2115 \u2192 \u21a5hg.complement := fun n => (fun y x => (fun z x => \u27e8z, \u22ef\u27e9) (Classical.choose \u22ef) \u22ef) (Classical.choose \u22ef) \u22ef\nthis : \u2200 (n : \u2115), u n = \u2191(x n) + \u2191(y n)\n\u22a2 u\u2080 \u2208 \u2191(Submodule.map g F' + hg.complement)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-21T15:28:47+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "b4b145c4f61564d4e14aaf0e17474a39da2b65f38b3d78596ea67913616f83db"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
        "start_line": 394,
        "start_column": 4,
        "end_line": 394,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hinv\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\nhg'' : MDifferentiableAt J I (\u2191hf.localInverse.toPartialEquiv) (f x)\n\u22a2 mfderiv I I (\u2191hf.localInverse.toPartialEquiv \u2218 f) x =\n    (mfderiv J I (\u2191hf.localInverse.toPartialEquiv) (f x)).comp (mfderiv I J f x)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L394"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T19:15:52+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "d72fdfb8292fb9a86900616f5f2998f98f61b09fe1e8e93a26678c5b798a7aa8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
        "start_line": 404,
        "start_column": 4,
        "end_line": 404,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hinv\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\nhf''' : MDifferentiableAt I J f (\u2191hf.localInverse.toPartialEquiv (f x))\nhg'' : MDifferentiableAt J I (\u2191hf.localInverse.toPartialEquiv) (f x)\n\u22a2 mfderiv J J (f \u2218 \u2191hf.localInverse.toPartialEquiv) (f x) =\n    (mfderiv I J f x).comp (mfderiv J I (\u2191hf.localInverse.toPartialEquiv) (f x))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T19:15:52+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "62d6e76d5eadf086504c3e196da94004f95a22d1701dacbcaff12faf7208f89c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
        "start_line": 399,
        "start_column": 68,
        "end_line": 399,
        "end_column": 73
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 \u2264 n\nhf'' : MDifferentiableAt I J f x\n\u22a2 MDifferentiableAt I J f (\u2191hf.localInverse.toPartialEquiv (f x))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T19:15:52+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "d5cbfe136c1a55f26027cd9a745345bbfa82f275718db64c2458e0f634e1df08"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/MSplits.lean",
        "start_line": 90,
        "start_column": 2,
        "end_line": 90,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nG' : Type u_10\ninst\u271d\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_11\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace G N\nN' : Type u_14\ninst\u271d\u00b9 : TopologicalSpace N'\ninst\u271d : ChartedSpace G' N'\nf : M \u2192 M'\nx : M\ny : N\nhf : (mfderiv I I' f x).Splits\ng : N \u2192 N'\nhg : (mfderiv J J' g y).Splits\n\u22a2 (mfderiv (I.prod J) (I'.prod J') (Prod.map f g) (x, y)).Splits",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L90"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T21:07:14+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "c5033ce7ff464139bcf39200dbe0088781a3e32a21f4f58f3dfca1a6c0e18564"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/MSplits.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : NormedSpace \ud835\udd5c E\nH : Type u_7\ninst\u271d\u00b3 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : ChartedSpace H M\nn : WithTop \u2115\u221e\ninst\u271d : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e \u2208 IsManifold.maximalAtlas I n M\nhx : x \u2208 (chartAt H x).source\n\u22a2 \u2191(extend_mfderiv_toContinousLinearEquiv he hx) = mfderiv I (modelWithCornersSelf \ud835\udd5c E) (\u2191(e.extend I)) x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T11:03:10+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "7db8197ee2c0ae45ea50b8e6d02d6709b22197c18629d45cb2a94ea8a7b38736"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/MSplits.lean",
        "start_line": 117,
        "start_column": 79,
        "end_line": 117,
        "end_column": 84
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u2075 : NormedAddCommGroup E\ninst\u271d\u2074 : NormedSpace \ud835\udd5c E\nH : Type u_7\ninst\u271d\u00b3 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : ChartedSpace H M\nn : WithTop \u2115\u221e\ninst\u271d : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e \u2208 IsManifold.maximalAtlas I n M\nhx : x \u2208 (chartAt H x).source\n\u22a2 \u2191(extend_symm_mfderiv_toContinousLinearEquiv he hx) =\n    mfderiv (modelWithCornersSelf \ud835\udd5c E) I (\u2191(e.extend I).symm) (\u2191(e.extend I) x)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T11:03:10+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "c67bc8601452e8f3de4bc913957bdaa6eb1c67611d8faf7949fd4da14881955c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/MSplits.lean",
        "start_line": 200,
        "start_column": 4,
        "end_line": 200,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_11\ninst\u271d\u2078 : TopologicalSpace M\ninst\u271d\u2077 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2076 : TopologicalSpace M'\ninst\u271d\u2075 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u2074 : TopologicalSpace N\ninst\u271d\u00b3 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace E'\ng : M' \u2192 N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 \u2264 n\nh : MSplitsAt I J (g \u2218 f) x\nhg' : IsLocalDiffeomorphAt J I' n (\u2191hg.localInverse.toPartialEquiv) (g (f x))\nthis : \u2191hg.localInverse.toPartialEquiv \u2218 g =\u1da0[nhds (f x)] id\n\u22a2 ContinuousAt (\u2191hg.localInverse.toPartialEquiv) ((g \u2218 f) x)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T20:02:21+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "b0859a83d4cc1553a7ae66b0c60158776191f41a78cdb675a6d5cb7ca676a354"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/MSplits.lean",
        "start_line": 204,
        "start_column": 4,
        "end_line": 204,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : RCLike \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_8\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_9\ninst\u271d\u2079 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_11\ninst\u271d\u2078 : TopologicalSpace M\ninst\u271d\u2077 : ChartedSpace H M\nM' : Type u_12\ninst\u271d\u2076 : TopologicalSpace M'\ninst\u271d\u2075 : ChartedSpace H' M'\nN : Type u_13\ninst\u271d\u2074 : TopologicalSpace N\ninst\u271d\u00b3 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b2 : CompleteSpace E\ninst\u271d\u00b9 : CompleteSpace F\ninst\u271d : CompleteSpace E'\ng : M' \u2192 N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 \u2264 n\nh : MSplitsAt I J (g \u2218 f) x\nhg' : IsLocalDiffeomorphAt J I' n (\u2191hg.localInverse.toPartialEquiv) (g (f x))\nthis : \u2191hg.localInverse.toPartialEquiv \u2218 g =\u1da0[nhds (f x)] id\naux : ContinuousAt (\u2191hg.localInverse.toPartialEquiv \u2218 g \u2218 f) x\n\u22a2 ContinuousAt f x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/MSplits.lean#L204"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T20:02:21+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "972f91ca99322b411e3808955a677a9c828d82b52cd9a61b537b9e03ba2cc17f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 120,
        "start_column": 6,
        "end_line": 120,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2075 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf g : M \u2192 M'\nx : M\nh : IsImmersionAt F I I' n f x\nh' : f =\u1da0[\ud835\udcdd x] g\ns : Set M\nhxs : s \u2208 \ud835\udcdd x\nhfg : EqOn f g s\n\u22a2 EqOn (\u2191(h.codChart.extend I') \u2218 g \u2218 \u2191(h.domChart.extend I).symm)\n    (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L120"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-18T17:10:59+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "ba961a7a2e1f494673b051066af405a069dfac693fa20110aa7f2353d7c0e917"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 131,
        "start_column": 2,
        "end_line": 131,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b2\u2070 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2079 : NormedAddCommGroup E\ninst\u271d\u00b9\u2078 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E'\nF : Type u_4\nF' : Type u_5\ninst\u271d\u00b9\u2075 : NormedAddCommGroup F\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c F\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup F'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c F'\nH : Type u_6\ninst\u271d\u00b9\u00b9 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u2070 : TopologicalSpace H'\nG : Type u_8\ninst\u271d\u2079 : TopologicalSpace G\nG' : Type u_9\ninst\u271d\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_10\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nN : Type u_12\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace G N\nN' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace N'\ninst\u271d : ChartedSpace G' N'\nn : WithTop \u2115\u221e\nx : M\nf : M \u2192 N\ng : M' \u2192 N'\nx' : M'\nh : IsImmersionAt F I J n f x\nh' : IsImmersionAt F' I' J' n g x'\n\u22a2 IsImmersionAt (F \u00d7 F') (I.prod I') (J.prod J') n (Prod.map f g) (x, x')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-18T18:30:38+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "b7345ca931ac6fa8305cc9be135c9ae36c98efede92d5387a3761cb2f153fa46"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2075 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\nh : IsImmersionAt F I I' n f x\n\u22a2 ContinuousWithinAt f h.domChart.source x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-21T23:44:53+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "9478dd660824743cf15c31d6a0a9c4f1ca790ecefc57db493c76d59438bbf368"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 156,
        "start_column": 6,
        "end_line": 156,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b9 : IsManifold I n M\ninst\u271d : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u21d1h.equiv \u2218 fun x => (x, 0))\n    (h.domChart.extend I).target\n\u22a2 ContDiffWithinAt \ud835\udd5c n (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (\u2191(h.domChart.extend I) x)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-18T18:30:38+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "79ba46067f3b2475163163133b64cc0beb679d85631bc48b63076837c5e07a8b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 163,
        "start_column": 4,
        "end_line": 163,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case H\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2075 : TopologicalSpace M\ninst\u271d\u2074 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\nx : M\ninst\u271d\u00b9 : IsManifold I n M\ninst\u271d : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u21d1h.equiv \u2218 fun x => (x, 0))\n    (h.domChart.extend I).target\nthis :\n  ContDiffWithinAt \ud835\udd5c n (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (\u2191(h.domChart.extend I) x)\n\u22a2 \u2191h.domChart.symm \u2218 \u2191I.symm \u207b\u00b9' h.domChart.source \u2286 \u2191I.symm \u207b\u00b9' h.domChart.target",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L163"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-18T18:30:38+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "0dcd3a311d360be3daf0f26af23a541a917d3a2066628c022557dd49013993ef"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 185,
        "start_column": 8,
        "end_line": 185,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\n\u22a2 range \u21d1((ContinuousLinearMap.id \ud835\udd5c E).prod 0) = univ.prod {0}",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T10:13:02+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "9687799f54dfe3d0835ba761536be9a6547ee01f0a2606269b1027e469f9c69e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 209,
        "start_column": 20,
        "end_line": 209,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case left\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d : rhs.Splits\nthis : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\n\u22a2 range \u2191I \u2208 \ud835\udcdd (\u2191I (\u2191h.domChart x))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T00:32:59+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "096e6150e527d883b8fb2a90e2c0988a3d508cda84e78d005721c7c490daa5cb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 209,
        "start_column": 20,
        "end_line": 209,
        "end_column": 25
      },
      "debug_info": {
        "goal": "case right\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d : rhs.Splits\nthis : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\n\u22a2 \u2191I.symm \u207b\u00b9' h.domChart.target \u2208 \ud835\udcdd (\u2191I (\u2191h.domChart x))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T00:32:59+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "85f3a21ce68bd1036a4fd476a82e5460d9b4eeb229f3cecc5ffebf258f735186"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 217,
        "start_column": 4,
        "end_line": 217,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d\u00b2 : rhs.Splits\nthis\u271d\u00b9 : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\nthis\u271d :\n  MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u2191(h.domChart.extend I) x)\nthis : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)) x\n\u22a2 \u2191(h.codChart.extend I') \u2218 f =\u1da0[\ud835\udcdd x] \u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T10:20:40+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "961b3e77a7aa338f0e991572e05e09d21fef07eba7cdbf1d34dc48d0a3ace21d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 222,
        "start_column": 2,
        "end_line": 222,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E \u2192L[\ud835\udd5c] E' := (\u2191h.equiv).comp ((ContinuousLinearMap.id \ud835\udd5c E).prod 0)\nthis\u271d\u2074 : rhs.Splits\nthis\u271d\u00b3 : MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u21d1rhs) (\u2191I (\u2191h.domChart x))\nthis\u271d\u00b2 :\n  MSplitsAt \ud835\udcd8(\ud835\udd5c, E) \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm) (\u2191(h.domChart.extend I) x)\nthis\u271d\u00b9 : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f \u2218 \u2191(h.domChart.extend I).symm \u2218 \u2191(h.domChart.extend I)) x\nthis\u271d : MSplitsAt I \ud835\udcd8(\ud835\udd5c, E') (\u2191(h.codChart.extend I') \u2218 f) x\nthis : MSplitsAt I I' (\u2191(h.codChart.extend I').symm \u2218 \u2191(h.codChart.extend I') \u2218 f) x\n\u22a2 f =\u1da0[\ud835\udcdd x] \u2191(h.codChart.extend I').symm \u2218 \u2191(h.codChart.extend I') \u2218 f",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L222"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-22T10:20:40+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "bdc729babb4df6531a9ccb2ee11c3a971a1a6ebb4f0c8e0f4edb86295a30d24e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 229,
        "start_column": 2,
        "end_line": 229,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u00b9\u2074 : NormedAddCommGroup F\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u00b9\u00b2 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u00b9 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u00b9\u2070 : TopologicalSpace M\ninst\u271d\u2079 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u2078 : TopologicalSpace M'\ninst\u271d\u2077 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2076 : IsManifold I n M\ninst\u271d\u2075 : IsManifold I' n M'\ninst\u271d\u2074 : CompleteSpace E'\ninst\u271d\u00b3 : CompleteSpace E\ninst\u271d\u00b2 : CompleteSpace F\ninst\u271d\u00b9 : IsManifold I 1 M\ninst\u271d : IsManifold I' 1 M'\nx : M\nh : MSplitsAt I I' f x\n\u22a2 IsImmersionAt F I I' n f x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-17T22:40:42+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "3ed9e6f40fa6067752db434725cb0589a978fc546c48079a2b9fadaaa77bdb96"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 291,
        "start_column": 2,
        "end_line": 291,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b3 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b9\u2070 : NormedAddCommGroup E'\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\nF : Type u_4\ninst\u271d\u2078 : NormedAddCommGroup F\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F\nH : Type u_6\ninst\u271d\u2076 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u2075 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_10\ninst\u271d\u2074 : TopologicalSpace M\ninst\u271d\u00b3 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d : Nonempty M\nh : IsImmersion F I I' n f\ninhabited_h : Inhabited M\n\u22a2 \u2203 domCharts codCharts,\n    \u2200 (x : M),\n      x \u2208 (domCharts x).source \u2227\n        \u2200 (x : M),\n          f x \u2208 (codCharts x).source \u2227\n            \u2200 (x : M),\n              domCharts x \u2208 IsManifold.maximalAtlas I n M \u2227\n                \u2200 (x : M),\n                  codCharts x \u2208 IsManifold.maximalAtlas I' n M' \u2227\n                    \u2200 (x : M),\n                      EqOn (\u2191((codCharts x).extend I') \u2218 f \u2218 \u2191((domCharts x).extend I).symm)\n                        (\u21d1\u22ef.equiv \u2218 fun x => (x, 0)) ((domCharts x).extend I).target",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L291"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-18T16:47:11+01:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "60b935ede5d9d2f87cf2401f9455a18eb15ed593b3c8fd86f1fa7433987a4303"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean",
        "start_line": 327,
        "start_column": 29,
        "end_line": 327,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b2\u2076 : RCLike \ud835\udd5c\nE : Type u_2\ninst\u271d\u00b2\u2075 : NormedAddCommGroup E\ninst\u271d\u00b2\u2074 : NormedSpace \ud835\udd5c E\nE' : Type u_3\ninst\u271d\u00b2\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b2\u00b2 : NormedSpace \ud835\udd5c E'\nF : Type u_4\nF' : Type u_5\ninst\u271d\u00b2\u00b9 : NormedAddCommGroup F\ninst\u271d\u00b2\u2070 : NormedSpace \ud835\udd5c F\ninst\u271d\u00b9\u2079 : NormedAddCommGroup F'\ninst\u271d\u00b9\u2078 : NormedSpace \ud835\udd5c F'\nH : Type u_6\ninst\u271d\u00b9\u2077 : TopologicalSpace H\nH' : Type u_7\ninst\u271d\u00b9\u2076 : TopologicalSpace H'\nG : Type u_8\ninst\u271d\u00b9\u2075 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_10\ninst\u271d\u00b9\u2074 : TopologicalSpace M\ninst\u271d\u00b9\u00b3 : ChartedSpace H M\nM' : Type u_11\ninst\u271d\u00b9\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9\u00b9 : ChartedSpace H' M'\nN : Type u_12\ninst\u271d\u00b9\u2070 : TopologicalSpace N\ninst\u271d\u2079 : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 M'\ninst\u271d\u2078 : IsManifold I n M\ninst\u271d\u2077 : IsManifold I' n M'\ninst\u271d\u2076 : CompleteSpace E\ninst\u271d\u2075 : CompleteSpace E'\ninst\u271d\u2074 : CompleteSpace F\ninst\u271d\u00b3 : CompleteSpace F'\ninst\u271d\u00b2 : IsManifold I 1 M\ninst\u271d\u00b9 : IsManifold I' 1 M'\ninst\u271d : IsManifold J n N\ng : M' \u2192 N\nhg : IsImmersion F' I' J n g\nhf : IsImmersion F I I' n f\n\u22a2 IsManifold J 1 N",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L327"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T20:15:03+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "986cce4125b5e98ed02fa8900581dd248e58e5481b1f13a25374b2e39b8ff414"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-hidden-openClassical",
        "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "MathlibTest/LintStyle.lean",
        "start_line": 258,
        "start_column": 80,
        "end_line": 258,
        "end_column": 85
      },
      "debug_info": {
        "goal": "this : \u2115 \u2192 True\n\u22a2 Set.univ = \u22c3 i, \u22c3 j, {0, j}",
        "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L258"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2024-11-27T12:13:29+00:00",
        "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
      },
      "id": "f351a6e824f8f3ee292b3381888a5cab3079e131d00897202025514e936b6992"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-hidden-openClassical",
        "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "MathlibTest/LintStyle.lean",
        "start_line": 259,
        "start_column": 53,
        "end_line": 259,
        "end_column": 58
      },
      "debug_info": {
        "goal": "this\u271d : \u2115 \u2192 True\nthis : Set.univ = \u22c3 i, \u22c3 j, {0, j}\n\u22a2 \u2203 m, \u22c3 i, Set.univ = \u2205",
        "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2024-11-27T12:13:29+00:00",
        "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
      },
      "id": "aaf32d27c1a0b931e36df890748a6031a30000c084331b157cd3e31f53d6d539"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 365,
        "start_column": 22,
        "end_line": 365,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d \u00ab$a\u2082\u00bb \u00ab$a\u2081\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u2081\u00bb + Nat.rawCast 0 = \u00ab$a\u2081\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L365"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-09T00:17:18+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "1ef5aef31b60b2bd2ea607397c7bb58be8b365d4b99166c2781f8827aa6fdb9a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 368,
        "start_column": 22,
        "end_line": 368,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb $a\u2082\u271d \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 Nat.rawCast 0 + \u00ab$a\u2082\u00bb = \u00ab$a\u2082\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-10T16:14:36+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "94f99dc277db30fabcf3fc1e314d2d1d5233ba6411cdb446c46a3eab97e15849"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 331,
        "start_column": 38,
        "end_line": 331,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n$v\u271d : Level\n$R\u271d : Type v\u271d\n$sR\u271d : CommSemiring $R\u271d\n$r\u271d : $R\u271d\n$a\u271d $b\u271d : \u00ab$A\u00bb\n\u00ab$sAlg\u00bb : Algebra $R\u271d \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : $b\u271d + 1 = $expr\u271d\n\u22a2 $r\u271d \u2022 $a\u271d + $b\u271d + 1 = $r\u271d \u2022 $a\u271d + $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L331"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-10T16:14:36+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "21ced7a698401c53c9861c41dc979685ad7927114503f9c805b152b4f48b6045"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 334,
        "start_column": 38,
        "end_line": 334,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n$v\u271d : Level\n$R\u271d : Type v\u271d\n$sR\u271d : CommSemiring $R\u271d\n$r\u271d : $R\u271d\n$a\u271d $b\u271d : \u00ab$A\u00bb\n\u00ab$sAlg\u00bb : Algebra $R\u271d \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : $b\u271d + 1 = $expr\u271d\n\u22a2 1 + ($r\u271d \u2022 $a\u271d + $b\u271d) = $r\u271d \u2022 $a\u271d + $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-10T16:14:36+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "17f3befda0ab50e10b0c8bb77a822491d988d08cb6498ceebc3c2b56c8ab6ac2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 343,
        "start_column": 41,
        "end_line": 343,
        "end_column": 46
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = $expr\u271d\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L343"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-10T16:14:36+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "e95546baf981dcb75849351adfcf6f79821665c157737f4473060816812c1db2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 347,
        "start_column": 41,
        "end_line": 347,
        "end_column": 46
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2082\u00bb + (\u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb) = $expr\u271d\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L347"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-10T16:14:36+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "304482c04da44010c20c8cb18abdd332adf8a5a1e3d0aff8123b14420f21a555"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 352,
        "start_column": 38,
        "end_line": 352,
        "end_column": 43
      },
      "debug_info": {
        "goal": "$u\u271d : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$v\u271d\u00b9 : Level\n\u00ab$R\u2081\u00bb : Type v\u271d\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$a\u2081\u00bb \u00ab$t\u2081\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u2082\u00bb : Type v\u271d\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb \u00ab$t\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$t\u2081\u00bb + \u00ab$t\u2082\u00bb = $expr\u271d\n\u00ab$u\u00bb : Level\n\u00ab$R\u00bb : Type u\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$par\u00bb : \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb + \u00ab$t\u2081\u00bb + (\u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb + \u00ab$t\u2082\u00bb) = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb + $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L352"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-10T16:14:36+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "f101b598c58371579d75e4dc168fa778d80b824c40f25c57b6bfc08dd2b2cc8b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 416,
        "start_column": 24,
        "end_line": 416,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 Nat.rawCast 0 * \u00ab$a\u2082\u00bb = Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L416"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-09T00:17:18+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "0575aaa2b15dd73ae7ba285d4245c4a2e5d20eca43d2ca6984cac44df8dafb38"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 365,
        "start_column": 32,
        "end_line": 365,
        "end_column": 37
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 1 * \u00ab$a\u2082\u00bb = 1 \u2022 \u00ab$a\u2082\u00bb + Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L365"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-09T00:17:18+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "e30559227cd5b7eebc23360e2b21ac4b561459d7f7b98949f5fcdc617be2b148"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 424,
        "start_column": 38,
        "end_line": 424,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2081\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u00bb : Type v\u271d\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb \u00ab$t\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$a\u2082\u00bb \u00ab$a'\u00bb : \u00ab$A\u00bb\n\u00ab$pa'\u00bb : \u00ab$a\u00bb * \u00ab$a\u2082\u00bb = \u00ab$a'\u00bb\n\u00ab$t'\u00bb : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : \u00ab$t\u00bb * \u00ab$a\u2082\u00bb = \u00ab$t'\u00bb\n\u22a2 (\u00ab$r\u00bb \u2022 \u00ab$a\u00bb + \u00ab$t\u00bb) * \u00ab$a\u2082\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a'\u00bb + \u00ab$t'\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L424"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-09T00:17:18+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "f6c4834f885c7e7fca5de16dd9672ca8bc0802def0f32c1f6d9bad5e4b8e06be"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 432,
        "start_column": 24,
        "end_line": 432,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2082\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u2081\u00bb * Nat.rawCast 0 = Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L432"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-09T00:17:18+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "2080ab0026588630603ca85fd29eecd73d56ec12c94c71c041576b3092175bcf"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 451,
        "start_column": 37,
        "end_line": 451,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb \u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$R\u2081\u00bb : Type u\u2082 := \u00ab$R\u2082\u00bb\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2081'\u00bb : \u00ab$R\u2082\u00bb := \u00ab$r\u2081\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb * \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L451"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-08T17:33:25+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "f52ad47f2959f73e0d6f68ba4b35c0cb5f83f9d58adc26eeb5ff41983dd03253"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 552,
        "start_column": 45,
        "end_line": 552,
        "end_column": 50
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$R\u00bb : Type u\n\u00ab$A\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$S\u00bb : Type v\u271d\n\u00ab$sS\u00bb : CommSemiring \u00ab$S\u00bb\n\u00ab$s\u00bb : \u00ab$S\u00bb\n\u00ab$a\u00bb $b\u271d : \u00ab$A\u00bb\n\u00ab$sSA\u00bb : Algebra \u00ab$S\u00bb \u00ab$A\u00bb\n\u00ab$et\u00bb : \u00ab$A\u00bb\n\u00ab$pt\u00bb : \u00ab$r\u00bb \u2022 $b\u271d = \u00ab$et\u00bb\n\u00ab$u\u2081\u00bb : Level\n\u00ab$R\u2081\u00bb : Type u\u2081\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sR\u2081A\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u2081\u00bb : \u00ab$s\u00bb \u2022 \u00ab$r\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u00bb\n\u22a2 \u00ab$r\u00bb \u2022 (\u00ab$s\u00bb \u2022 \u00ab$a\u00bb + $b\u271d) = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u00bb + \u00ab$et\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L552"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "afd5daa4c3ca42aa080901cd9553277d665a3136aa7551403719c13a7882bf00"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Polynomial.lean",
        "start_line": 530,
        "start_column": 9,
        "end_line": 530,
        "end_column": 14
      },
      "debug_info": {
        "goal": "a : \u211a\n\u22a2 a + a = 2 * a",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Polynomial.lean#L530"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-02-25T18:05:11+01:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "ddf72bb6ac2cf2c05db381d9ca1375187d640bb059f5c12d727fdcf11446862c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Polynomial.lean",
        "start_line": 530,
        "start_column": 9,
        "end_line": 530,
        "end_column": 14
      },
      "debug_info": {
        "goal": "a : \u211a\n\u22a2 a * a = a ^ 2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Polynomial.lean#L530"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-02-25T18:05:11+01:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "54c8904e9c3eec29624b69fcded63c952e134526ae499f399817b4a9c96766c0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 135,
        "start_column": 21,
        "end_line": 135,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25006 \u2208 \u2191ys then ?m.25035 else y\n\u22a2 NSequence n k g1",
        "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:51:19-04:00",
        "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
      },
      "id": "4c5cb6906595728836d3da67298bfe26022968ff57cd1e368ad752e9058524b0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 136,
        "start_column": 21,
        "end_line": 136,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.25006 \u2208 \u2191ys then ?m.25035 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
        "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-22T23:33:30-04:00",
        "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
      },
      "id": "368788f8c327f5d1b524634ac8b5dd12311f38881459b2fb944f94afd96dd0a0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 68,
        "start_column": 14,
        "end_line": 68,
        "end_column": 19
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 \u2200 (x y : E \u00d7 G),\n    (Equiv.prodUnique E G).toFun (x + y) = (Equiv.prodUnique E G).toFun x + (Equiv.prodUnique E G).toFun y",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T22:02:51+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "ba7962a1180548d3c6b1b39f21295df2c71c15e0647ff09c2b2f2124a8d3769f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 69,
        "start_column": 15,
        "end_line": 69,
        "end_column": 20
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 \u2200 (m : \ud835\udd5c) (x : E \u00d7 G), (Equiv.prodUnique E G).toFun (m \u2022 x) = (RingHom.id \ud835\udd5c) m \u2022 (Equiv.prodUnique E G).toFun x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-10T22:02:51+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "173f5069843545787c030fbdd899c20d1030d0ad4dc2e6e3b7831f7e3637a1a8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 83,
        "start_column": 4,
        "end_line": 83,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\n\u22a2 Continuous \u21d1(Equiv.prodUnique E G).symm",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-11T11:01:50+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "f09d7dfb579135ab11ab68696e9b902e9e4fb39a5fd53da61b3cd8ab89a74b21"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 95,
        "start_column": 81,
        "end_line": 95,
        "end_column": 86
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u2075 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup E\ninst\u271d\u00b3 : NormedSpace \ud835\udd5c E\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nx : E\n\u22a2 (prodUnique \ud835\udd5c E).symm x = (x, sorry)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-11T11:01:50+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "1ea2b10ac8676611e0c87cdfa6390c7385e0d5f578263b28d28fc186f6588511"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 119,
        "start_column": 16,
        "end_line": 119,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nh : SliceModel F I I'\n\u22a2 \u2191(J.prod I') \u2218 Prod.map id (SliceModel.map F I I') =\n    \u21d1(let sdf := SliceModel.equiv I I';\n        sorry) \u2218\n      (fun x => (x, 0)) \u2218 \u2191(J.prod I)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L119"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-11T11:01:50+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "6a5133f0e83a8402fa65a0cb23bbd2f869f4fab26b37890f8d5ae9c3a659a00d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 126,
        "start_column": 16,
        "end_line": 126,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2076 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E''\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\ninst\u271d\u2075 : TopologicalSpace H''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ : ModelWithCorners \ud835\udd5c E'' H''\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2074 : TopologicalSpace M'\ninst\u271d\u00b3 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nG : Type u_11\ninst\u271d\u00b2 : NormedAddCommGroup G\ninst\u271d\u00b9 : NormedSpace \ud835\udd5c G\ninst\u271d : Unique G\nh : SliceModel F I I'\n\u22a2 \u2191(I'.prod J) \u2218 Prod.map (SliceModel.map F I I') id = \u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(I.prod J)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-11T11:01:50+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "eb41f86ab8afe3880384c1a6fd5a01be4a3381f23e5d03297468f6b7b291a149"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 164,
        "start_column": 6,
        "end_line": 164,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u00b2 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\ninst\u271d\u2079 : NormedAddCommGroup E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u00b3 : TopologicalSpace M'\ninst\u271d\u00b2 : TopologicalSpace M\ninst\u271d\u00b9 : Nonempty H\n\u03c6 : PartialHomeomorph M' H'\nf : M \u2192 M'\ninst\u271d : Nonempty M\nh : SliceModel F I I'\nhf : IsEmbedding f\nhyp : \u03c6.source \u2286 range f\n\u22a2 ContinuousOn (Function.extend f id fun x => Classical.arbitrary M) (range f)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-11T16:41:06+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "0dac06d436277c25a07b756e98a9e44909ec08a760917518f6ef101230ba39c4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 337,
        "start_column": 4,
        "end_line": 337,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case left\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : IsManifold I' n M'\nh : SliceModel F I I'\ninst\u271d\u00b9 : Nonempty H\ninst\u271d : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\n\u22a2 ContDiffOn \ud835\udd5c n\n    (\u2191I \u2218\n      ((h.inverse \u2218 \u2191(chartAt H' (emb n h x')) \u2218 emb n h) \u2218\n          (extend (emb n h) id fun x => Classical.arbitrary M) \u2218\n            \u2191(chartAt H' (emb n h x)).symm \u2218 SliceModel.map F I I') \u2218\n        \u2191I.symm)\n    (\u2191I.symm \u207b\u00b9' (SliceModel.map F I I' \u207b\u00b9' (chartAt H' (emb n h x)).target) \u2229\n        \u2191I.symm \u207b\u00b9'\n          ((extend (emb n h) id fun x => Classical.arbitrary M) \u2218\n              \u2191(chartAt H' (emb n h x)).symm \u2218 SliceModel.map F I I' \u207b\u00b9'\n            (emb n h \u207b\u00b9' (chartAt H' (emb n h x')).source)) \u2229\n      range \u2191I)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L337"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-11T19:38:29+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "c579f4b72707f4af460ad7abbda22e76ac31a89f741f5ff826c6563d1456d754"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-embedded-submanifolds",
        "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean",
        "start_line": 340,
        "start_column": 2,
        "end_line": 340,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case right\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2074 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'\nF : Type u_5\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\nH : Type u_6\nH' : Type u_7\ninst\u271d\u2077 : TopologicalSpace H\ninst\u271d\u2076 : TopologicalSpace H'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nM : Type u_9\nM' : Type u_10\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H' M'\nn : WithTop \u2115\u221e\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : IsManifold I' n M'\nh : SliceModel F I I'\ninst\u271d\u00b9 : Nonempty H\ninst\u271d : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\nX : M' := emb n h x\nX' : M' := emb n h x'\n\u22a2 { property := fun f s => ContDiffOn \ud835\udd5c n (\u2191I \u2218 f \u2218 \u2191I.symm) (\u2191I.symm \u207b\u00b9' s \u2229 range \u2191I), comp := \u22ef, id_mem := \u22ef,\n        locality := \u22ef, congr := \u22ef }.property\n    (\u2191((inst.myChart x).symm \u226b\u2095 inst.myChart x').symm) ((inst.myChart x).symm \u226b\u2095 inst.myChart x').target",
        "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L340"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-11T19:38:29+02:00",
        "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
      },
      "id": "139bfe861986eda0e69845d32f898eab3561fc586db237733b0e182f035803d9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "b-reinke/Tutte",
        "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
        "start_line": 30,
        "start_column": 60,
        "end_line": 30,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsNonloop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y (insert e s) = summand (M \uff0f {e}) x y s",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0b20d9cd07c4",
        "blame_date": "2025-04-11T16:25:04+02:00",
        "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
      },
      "id": "71f9f703d175987ac21dc8a115393be772a88d9a1277b970c7830b27bbf3846e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "b-reinke/Tutte",
        "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
        "start_line": 33,
        "start_column": 70,
        "end_line": 33,
        "end_column": 75
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsLoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y (insert e s) = (y - 1) * summand (M \uff0f {e}) x y s",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "0b20d9cd07c4",
        "blame_date": "2025-04-11T16:25:04+02:00",
        "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
      },
      "id": "41324751a40fb3c4711ef762eb0172c2f64dbb5622d30b0d1c8f73e4a686ab86"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "b-reinke/Tutte",
        "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
        "start_line": 36,
        "start_column": 49,
        "end_line": 36,
        "end_column": 54
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : \u00acM.IsColoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y s = summand (M \uff3c {e}) x y s",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "0b20d9cd07c4",
        "blame_date": "2025-04-11T16:25:04+02:00",
        "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
      },
      "id": "596d86d173f26419af96e80de1885015a4554748e982fdb2f71c491862b7ec80"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "b-reinke/Tutte",
        "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Data/Matroid/Tutte/Basic.lean",
        "start_line": 39,
        "start_column": 59,
        "end_line": 39,
        "end_column": 64
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nM : Matroid \u03b1\ninst\u271d\u00b9 : M.Finite\nR : Type u_2\ninst\u271d : CommRing R\nx y : R\ne : \u03b1\nh : M.IsColoop e\ns : Set \u03b1\nhs : s \u2208 \ud835\udcab(M.E \\ {e})\n\u22a2 summand M x y s = (x - 1) * summand (M \uff3c {e}) x y s",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "0b20d9cd07c4",
        "blame_date": "2025-04-11T16:25:04+02:00",
        "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
      },
      "id": "2b7d561b710a2fb41774deb686cac812c13cf12b63d9352492101a8956477e3b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 135,
        "start_column": 21,
        "end_line": 135,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\n\u22a2 NSequence n k g1",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:51:19-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "f16d734974ce142a2d4897988e257460e0156c9b509fbcb490aa29a0d631f0c7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 136,
        "start_column": 21,
        "end_line": 136,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n \u2192 \u2115 := fun i => Nat.card \u2191{j | \u2191f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := \u2191f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\nhg1 : NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | \u03c8 n k g = f}",
        "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-22T23:33:30-04:00",
        "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
      },
      "id": "70ed2e7ecfab37f75b3ee0cceece0f0e3479bc791f74a440216a35de4ae16fe7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "vanishing-of-induced-hom-between-ext",
        "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 67,
        "start_column": 14,
        "end_line": 67,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : Type u\ninst\u271d\u00b3 : CommRing R\nM : ModuleCat R\nC : Type u\ninst\u271d\u00b2 : Category.{v, u} C\ninst\u271d\u00b9 : Abelian C\ninst\u271d : HasExt C\nX Y : C\n\u22a2 \u2200 (x y : Ext X Y 0), homEquiv\u2080.toFun (x + y) = homEquiv\u2080.toFun x + homEquiv\u2080.toFun y",
        "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
      },
      "id": "7e20ae9362953f1e16980a52fbc2d71c5708a4552d45d3e3eded8ef89b61558a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "vanishing-of-induced-hom-between-ext",
        "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 81,
        "start_column": 15,
        "end_line": 81,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : Ring R\ninst\u271d : Linear R C\nX Y : C\n\u22a2 \u2200 (m : R) (x : Ext X Y 0), (homEquiv\u2080_hom X Y).toFun (m \u2022 x) = (RingHom.id R) m \u2022 (homEquiv\u2080_hom X Y).toFun x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
      },
      "id": "c670d4377e4555381062f401ea5906c424124b8d9c0204fc874af4dd5c882220"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "vanishing-of-induced-hom-between-ext",
        "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 93,
        "start_column": 18,
        "end_line": 93,
        "end_column": 23
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u03b1 : Ext X Y a\n\u22a2 \u2200 (x y : Ext Y Z b), \u03b1.comp (x + y) h = \u03b1.comp x h + \u03b1.comp y h",
        "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
      },
      "id": "b882c720e1280aa726cbe584960e70b808fc81e072f98e9065f6c2008456f6d4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "vanishing-of-induced-hom-between-ext",
        "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 94,
        "start_column": 19,
        "end_line": 94,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u03b1 : Ext X Y a\n\u22a2 \u2200 (m : R) (x : Ext Y Z b), \u03b1.comp (m \u2022 x) h = (RingHom.id R) m \u2022 \u03b1.comp x h",
        "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
      },
      "id": "fafecbde3bb919f22939a4a03c47b33ef695ad647b16ae555f0aed1a6a1fc8f9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "vanishing-of-induced-hom-between-ext",
        "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 95,
        "start_column": 14,
        "end_line": 95,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u22a2 \u2200 (x y : Ext X Y a),\n    { toFun := fun \u03b2 => (x + y).comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } =\n      { toFun := fun \u03b2 => x.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } +\n        { toFun := fun \u03b2 => y.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef }",
        "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
      },
      "id": "49ad769ac8de9aca932340b8c946afa02391e2571a0fdd21a4c4b0460ac23105"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "vanishing-of-induced-hom-between-ext",
        "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/Regular/Category.lean",
        "start_line": 96,
        "start_column": 15,
        "end_line": 96,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R\u271d : Type u\ninst\u271d\u2078 : CommRing R\u271d\nM : ModuleCat R\u271d\nC\u271d : Type u\ninst\u271d\u2077 : Category.{v, u} C\u271d\ninst\u271d\u2076 : Abelian C\u271d\ninst\u271d\u2075 : HasExt C\u271d\nX\u271d Y\u271d : C\u271d\nC : Type u\ninst\u271d\u2074 : Category.{v, u} C\ninst\u271d\u00b3 : Abelian C\ninst\u271d\u00b2 : HasExt C\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Linear R C\nX Y Z : C\na b c : \u2115\nh : a + b = c\n\u22a2 \u2200 (m : R) (x : Ext X Y a),\n    { toFun := fun \u03b2 => (m \u2022 x).comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef } =\n      (RingHom.id R) m \u2022 { toFun := fun \u03b2 => x.comp \u03b2 h, map_add' := \u22ef, map_smul' := \u22ef }",
        "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L96"
      },
      "metadata": {
        "blame_email_hash": "0aaeb3f219e2",
        "blame_date": "2025-04-11T11:20:08+08:00",
        "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
      },
      "id": "efca452d6c486187ba3cd0cb05ea127d1a804352a47fd8c4b4e3f95067d88a28"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-disjointUnion-prod-distributive",
        "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
        "start_line": 277,
        "start_column": 38,
        "end_line": 277,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2070 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\ninst\u271d\u2079 : NormedAddCommGroup E\ninst\u271d\u2078 : NormedSpace \ud835\udd5c E\nF : Type u_3\ninst\u271d\u2077 : NormedAddCommGroup F\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F\nH : Type u_4\ninst\u271d\u2075 : TopologicalSpace H\nG : Type u_5\ninst\u271d\u2074 : TopologicalSpace G\nI : ModelWithCorners \ud835\udd5c E H\nJ : ModelWithCorners \ud835\udd5c F G\nM : Type u_6\ninst\u271d\u00b3 : TopologicalSpace M\ninst\u271d\u00b2 : ChartedSpace H M\nN : Type u_7\ninst\u271d\u00b9 : TopologicalSpace N\ninst\u271d : ChartedSpace G N\nn : WithTop \u2115\u221e\nf : M \u2192 N\nx : M\nhdiff : Function.Bijective \u21d1(mfderiv I J f x)\n\u22a2 IsLocalDiffeomorphAt I J n f x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-05T17:56:40+01:00",
        "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
      },
      "id": "ee81358057c935f84a117a2766d854070f08222af30bb7922d37f7af6477a491"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-disjointUnion-prod-distributive",
        "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
        "start_line": 322,
        "start_column": 4,
        "end_line": 322,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c\u271d : Type u_1\ninst\u271d\u00b3\u2079 : NontriviallyNormedField \ud835\udd5c\u271d\nE\u271d : Type u_2\ninst\u271d\u00b3\u2078 : NormedAddCommGroup E\u271d\ninst\u271d\u00b3\u2077 : NormedSpace \ud835\udd5c\u271d E\u271d\nF\u271d : Type u_3\ninst\u271d\u00b3\u2076 : NormedAddCommGroup F\u271d\ninst\u271d\u00b3\u2075 : NormedSpace \ud835\udd5c\u271d F\u271d\nH\u271d : Type u_4\ninst\u271d\u00b3\u2074 : TopologicalSpace H\u271d\nG\u271d : Type u_5\ninst\u271d\u00b3\u00b3 : TopologicalSpace G\u271d\nI\u271d : ModelWithCorners \ud835\udd5c\u271d E\u271d H\u271d\nJ\u271d\u00b9 : ModelWithCorners \ud835\udd5c\u271d F\u271d G\u271d\nM\u271d : Type u_6\ninst\u271d\u00b3\u00b2 : TopologicalSpace M\u271d\ninst\u271d\u00b3\u00b9 : ChartedSpace H\u271d M\u271d\nN\u271d\u00b9 : Type u_7\ninst\u271d\u00b3\u2070 : TopologicalSpace N\u271d\u00b9\ninst\u271d\u00b2\u2079 : ChartedSpace G\u271d N\u271d\u00b9\nn\u271d : WithTop \u2115\u221e\nf\u271d : M\u271d \u2192 N\u271d\u00b9\ns : Set M\u271d\nx\u271d : M\u271d\n\ud835\udd5c : Type u_8\ninst\u271d\u00b2\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_9\ninst\u271d\u00b2\u2077 : NormedAddCommGroup E\ninst\u271d\u00b2\u2076 : NormedSpace \ud835\udd5c E\nE' : Type u_10\ninst\u271d\u00b2\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b2\u2074 : NormedSpace \ud835\udd5c E'\nF : Type u_11\ninst\u271d\u00b2\u00b3 : NormedAddCommGroup F\ninst\u271d\u00b2\u00b2 : NormedSpace \ud835\udd5c F\nH : Type u_12\ninst\u271d\u00b2\u00b9 : TopologicalSpace H\nH' : Type u_13\ninst\u271d\u00b2\u2070 : TopologicalSpace H'\nG : Type u_14\ninst\u271d\u00b9\u2079 : TopologicalSpace G\nG' : Type u_15\ninst\u271d\u00b9\u2078 : TopologicalSpace G'\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nJ\u271d : ModelWithCorners \ud835\udd5c F G\nJ' : ModelWithCorners \ud835\udd5c F G'\nM : Type u_16\ninst\u271d\u00b9\u2077 : TopologicalSpace M\ninst\u271d\u00b9\u2076 : ChartedSpace H M\nM'\u271d : Type u_17\ninst\u271d\u00b9\u2075 : TopologicalSpace M'\u271d\ninst\u271d\u00b9\u2074 : ChartedSpace H' M'\u271d\nN\u271d : Type u_18\ninst\u271d\u00b9\u00b3 : TopologicalSpace N\u271d\ninst\u271d\u00b9\u00b2 : ChartedSpace G N\u271d\nN'\u271d : Type u_19\ninst\u271d\u00b9\u00b9 : TopologicalSpace N'\u271d\ninst\u271d\u00b9\u2070 : ChartedSpace G' N'\u271d\nn : WithTop \u2115\u221e\nJ : ModelWithCorners \ud835\udd5c E' H\nM' : Type u_20\nM'' : Type u_21\nN : Type u_22\ninst\u271d\u2079 : TopologicalSpace M'\ninst\u271d\u2078 : ChartedSpace H M'\ninst\u271d\u2077 : TopologicalSpace M''\ninst\u271d\u2076 : ChartedSpace H M''\ninst\u271d\u2075 : TopologicalSpace N\ninst\u271d\u2074 : ChartedSpace H N\nN' : Type u_23\ninst\u271d\u00b3 : TopologicalSpace N'\ninst\u271d\u00b2 : ChartedSpace H N'\ninst\u271d\u00b9 : FiniteDimensional \ud835\udd5c E\ninst\u271d : FiniteDimensional \ud835\udd5c E'\nx : M \u00d7 N \u2295 M' \u00d7 N\nf : M \u00d7 N \u2295 M' \u00d7 N \u2243 (M \u2295 M') \u00d7 N := (Equiv.sumProdDistrib M M' N).symm\nthis : ContMDiff (I.prod J) (I.prod J) n \u21d1f\n\u22a2 Function.Injective \u21d1(mfderiv (I.prod J) (I.prod J) (\u21d1f) x)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L322"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-05T17:56:40+01:00",
        "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
      },
      "id": "b50ebc5f597441fd27a957da6dbd55b366fc9713892894016f10afef2b6f0dbe"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-disjointUnion-prod-distributive",
        "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean",
        "start_line": 337,
        "start_column": 2,
        "end_line": 337,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_8\ninst\u271d\u00b9\u00b3 : NontriviallyNormedField \ud835\udd5c\nE : Type u_9\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E\nE' : Type u_10\ninst\u271d\u00b9\u2070 : NormedAddCommGroup E'\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\nH : Type u_12\ninst\u271d\u2078 : TopologicalSpace H\nI : ModelWithCorners \ud835\udd5c E H\nM : Type u_16\ninst\u271d\u2077 : TopologicalSpace M\ninst\u271d\u2076 : ChartedSpace H M\nn : WithTop \u2115\u221e\nJ : ModelWithCorners \ud835\udd5c E' H\nM' : Type u_20\nN : Type u_22\ninst\u271d\u2075 : TopologicalSpace M'\ninst\u271d\u2074 : ChartedSpace H M'\ninst\u271d\u00b3 : TopologicalSpace N\ninst\u271d\u00b2 : ChartedSpace H N\ninst\u271d\u00b9 : FiniteDimensional \ud835\udd5c E\ninst\u271d : FiniteDimensional \ud835\udd5c E'\n\u22a2 (prodSumDistrib I M n J M' N).toEquiv = (Equiv.sumProdDistrib M M' N).symm",
        "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L337"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-03-05T17:56:40+01:00",
        "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
      },
      "id": "c3dc5a834847802c55b02a9c6c41232567b2ca0f3f7b782fcf69d834f92e5962"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 477,
        "start_column": 8,
        "end_line": 477,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house\n      ((\u2191(\u2191(finProdFinEquiv.symm.toFun t).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t).2 + 1) \u2022 \u03b2') ^\n        \u2191(finProdFinEquiv.symm.toFun u).2) \u2264\n    house (\u2191a + b \u2022 \u03b2') ^ k",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L477"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "16a01d2ef544bcced8e74aa1e11b21ec9cd5a0ac2ac7b19135ba48b2a5c2a0d3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 478,
        "start_column": 8,
        "end_line": 478,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h\u2081.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264\n    house\n      ((\u2191(\u2191(finProdFinEquiv.symm.toFun t).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun t).2 + 1) \u2022 \u03b2') ^\n        \u2191(finProdFinEquiv.symm.toFun u).2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L478"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "1d037d346aad685ecccac686a49d8e649b474ee34a31e31984ca0ca8c5ee000c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 480,
        "start_column": 8,
        "end_line": 480,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun t).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264 house \u03b1' ^ (a * l)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L480"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "8deeda4718e47dcea20ca9e27cd10aa48493d4a54d80239404b8799d85327e71"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 482,
        "start_column": 8,
        "end_line": 482,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * house (\u2191a + b \u2022 \u03b2') ^ k",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L482"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "ae583f0a7a5865be87c4d93b94aa69f1d9f66c6082e7fd3aae895ecec05bad26"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 483,
        "start_column": 8,
        "end_line": 483,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun t).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264 house \u03b3' ^ (b * l)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L483"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "3995eee619bc2234d3dd3d834cc74d35203f9e2b132588a21547c7184b4b9580"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 485,
        "start_column": 8,
        "end_line": 485,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * house (\u2191a + b \u2022 \u03b2') ^ k * house \u03b1' ^ (a * l)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L485"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "e46d0b8e9e9b6a97b489edba77bb97e4a3f8fd62a0e26faa519aab3ac865ca3f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 499,
        "start_column": 10,
        "end_line": 499,
        "end_column": 15
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 |c\u2081 K \u03b1' \u03b2' \u03b3'| = c\u2081 K \u03b1' \u03b2' \u03b3'",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "b0061f685d3e8c6ef4bdf8cd3614c27509ee268f60e868d3b1a3e6d3b35c9444"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 505,
        "start_column": 8,
        "end_line": 505,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\nthis : |c\u2081 K \u03b1' \u03b2' \u03b3'| = c\u2081 K \u03b1' \u03b2' \u03b3'\n\u22a2 |\u2191(c\u2081 K \u03b1' \u03b2' \u03b3')| ^ (n K q - 1 + m K * q + m K * q) \u2264 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (1 + 2 * m K * (2 * m K).sqrt)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L505"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "21ed3fe5836d13e50f057c1bed597016de0a5b7c36eb2a9d55075d37aa93057b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 510,
        "start_column": 8,
        "end_line": 510,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191a + \u2191b * \u03b2') ^ k \u2264 \u2191(2 * m K).sqrt * (1 + house \u03b2')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "e391fa3300cede2a3384840e62cd5b94f545fc1e34f27787d8e4a9c3d9557821"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 511,
        "start_column": 8,
        "end_line": 511,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house (\u2191a + \u2191b * \u03b2') ^ k",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L511"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "259517c756b76a44bc6e3a170c57caf84ae2ff43820f0dc426e62a372569a9b5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 513,
        "start_column": 8,
        "end_line": 513,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3'",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L513"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "8cf32ffb033df5e7b710c52a244a2598a3ae13a452667893cf8f905ac69b533b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 514,
        "start_column": 8,
        "end_line": 514,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b1' ^ (a * l) \u2264 house \u03b1' ^ (2 * m K ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "22f1c2df0142c6bae2959cd6f1d03d18515317fd6424ee42b0eb3f633fc60566"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 516,
        "start_column": 8,
        "end_line": 516,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u03b1' ^ (a * l)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L516"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "3535841b7ef1c21dc8602efc55f6891a94e16f0ab7161087192a93cae16846d8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 517,
        "start_column": 8,
        "end_line": 517,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3' * \u2191(2 * m K).sqrt * (1 + house \u03b2')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L517"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "b2cea7a75aed12c104bce5e71575d86ec567dbb91a7fdf45b866bd64e16f0d9d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 518,
        "start_column": 8,
        "end_line": 518,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b3' ^ (b * l) \u2264 house \u03b3' ^ (2 * m K ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L518"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "a78e8756dd923bdc8379f9b6664b2abdca57089ab92adebaf0f932934122f795"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 519,
        "start_column": 8,
        "end_line": 519,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.c0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 house \u03b3' ^ (b * l)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L519"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "59ea0d34dafdb3d44b26f96fa64c95d42cd221a1bbb389058c2ae8ae73e176a1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 520,
        "start_column": 8,
        "end_line": 520,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.b0\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 0 \u2264 c\u2082 K \u03b1' \u03b2' \u03b3' * \u2191(2 * m K).sqrt * (1 + house \u03b2') * house \u03b1' ^ (2 * m K ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L520"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "d9625605bdc86c35f4bec818bc261b0ffaa6dc7ec5a3af20390eb2381b0bac46"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 670,
        "start_column": 8,
        "end_line": 670,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nH :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) +\n        -\u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) +\n      \u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\n\u22a2 -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191\u2191j % \u2191q) - 1) * \u03b2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L670"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "8b742443c017c3579a11bb0415e9dc31e0bf24c1f2b50d2cb3bbedd3291db9f3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 681,
        "start_column": 10,
        "end_line": 681,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nH :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) +\n        -\u2191(\u2191(finProdFinEquiv.symm.toFun j).1 + 1) +\n      \u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\nthis : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\n\u22a2 (\u2191(\u2191i % q) + 1) * \u03b2 + (-\u2191(\u2191j % q) - 1) * \u03b2 = (\u2191(\u2191\u2191i % \u2191q) + 1 + -(\u2191(\u2191\u2191j % \u2191q) + 1)) * \u03b2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L681"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "4b354e3e595d9ac9d669c19708cbb4105bde1efdb138410ba3f65692a8193a73"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 691,
        "start_column": 10,
        "end_line": 691,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nthis\u271d : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\nthis :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) =\n    \u2191(\u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) + -(\u2191\u2191(finProdFinEquiv.symm.toFun j).2 + 1)) * \u03b2\nH : (\u2191(\u2191\u2191i % \u2191q) + 1 + (-1 + -\u2191(\u2191\u2191j % \u2191q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1))\n\u22a2 (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) \u2194\n    \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) / (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q)))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L691"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "d0c476a6a8f14102657bcfcf6d2bc6edc8174eaf178b9c9f89ac11f24711fc06"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 693,
        "start_column": 6,
        "end_line": 693,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case neg\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nq : \u2115\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 \u2192\n    \u00ac(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : \u00ac(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : \u2115 := \u2191(finProdFinEquiv.symm.toFun j).1 + 1\nhb : \u03b2 \u2260 \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)\nthis\u271d\u00b9 : -((\u2191(\u2191j % q) + 1) * \u03b2) = (-\u2191(\u2191j % q) - 1) * \u03b2\nthis\u271d :\n  \u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * \u03b2 + -(\u2191(\u2191(finProdFinEquiv.symm.toFun j).2 + 1) * \u03b2) =\n    \u2191(\u2191(\u2191(finProdFinEquiv.symm.toFun i).2 + 1) + -(\u2191\u2191(finProdFinEquiv.symm.toFun j).2 + 1)) * \u03b2\nH : (\u2191(\u2191\u2191i % \u2191q) + 1 + (-1 + -\u2191(\u2191\u2191j % \u2191q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1))\nthis :\n  (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q))) * \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) \u2194\n    \u03b2 = -(-1 + -\u2191(\u2191j / q) + (\u2191(\u2191i / q) + 1)) / (\u2191(\u2191i % q) + 1 + (-1 + -\u2191(\u2191j % q)))\n\u22a2 \u03b2 = \u2191(\u2191i1 - \u2191j1) / \u2191(\u2191j2 - \u2191i2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L693"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "2a6dc748e02d7a5c038cb659dffeda600ea04ba1f07c7508f6b6f8e14286dc6b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 795,
        "start_column": 2,
        "end_line": 795,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt\u271d\u00b9 : Fin (q * q)\nhq0 : 0 < q\nk : \u2115\nhR : R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d\u00b9 = 0\nt\u271d : Fin (q * q)\nthis : \u2200 (x : \u2102), iteratedDeriv k (fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) x = 0\nderiv_eq :\n  (iteratedDeriv k fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) = fun x =>\n    \u2211 t, \u03c3 \u2191(\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) * \u03c1 \u03b1 \u03b2 q t ^ k\nderiv_eq_0 : iteratedDeriv k (fun x => R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\u271d x) 0 = 0\nt : Fin (q * q)\nht : t \u2208 Finset.univ\n\u22a2 \u03c1 \u03b1 \u03b2 q t ^ \u2191t\u271d = \u03c1 \u03b1 \u03b2 q t ^ k",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L795"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T00:24:25+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "a7b4c434a5065ae1c080e92645409077dfb7d51f28bf4bdf9e36f0a118f9e3c5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 926,
        "start_column": 2,
        "end_line": 926,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case hR\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk : \u2115\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nhl : l < n K q\n\u22a2 R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L926"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T17:10:19+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "0961b94062999728c10a4c5d873627eac2b7df239f59bab7617e1d0500e6d0a8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 957,
        "start_column": 2,
        "end_line": 957,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv this : iteratedDeriv k R \u2191l = 0\n\u22a2 n K q \u2264 (Exists.choose \u22ef).order",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L957"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "23592e4d9edd52e29530f4a60d8fd67eb571ddda6a9264b24df3c27753922555"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 956,
        "start_column": 78,
        "end_line": 956,
        "end_column": 83
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv : iteratedDeriv k R \u2191l = 0\n\u22a2 \u2191(finProdFinEquiv.symm.toFun u).1 + 1 < n K q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L956"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "23756589725c27826520e9640a1ff8edaa833abdcb6e234fc17a76157908b5b6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 964,
        "start_column": 6,
        "end_line": 964,
        "end_column": 11
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk l : \u2115\nhkn : k < n K q\n\u22a2 (Exists.choose \u22ef).order \u2265 n K q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L964"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "f5704d4507aceae0f2aa51b9306d57707035c4017bee32354b5edc99dacda2d0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 979,
        "start_column": 50,
        "end_line": 979,
        "end_column": 55
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let R := R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t;\n  \u2203 l\u2080, iteratedDeriv r R \u2191\u2191l\u2080 \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L979"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "ba8bc9c0b5c0a658690d2033337d422cc1b3284ab99cf62d3b51b53a835b1916"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1000,
        "start_column": 2,
        "end_line": 1000,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nH : \u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 t = 0\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1000"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-01T02:10:10+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "bd432ec37c5700b0d9776c266d43a497644476096dbf8586a50f0d8f2eff38fb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1030,
        "start_column": 4,
        "end_line": 1030,
        "end_column": 9
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 IsIntegral (\ud835\udcde K)\n    (c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022 rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1030"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "2d93563d376b94707e4ab26b556bfc9e67c937097baf27c33e767d5b016b441b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1071,
        "start_column": 6,
        "end_line": 1071,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1071"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "853e0d77e539b251804a5bc56196240c2bc19604aeeac24f19a17767394273cb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1072,
        "start_column": 6,
        "end_line": 1072,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_1.ha\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 0 < c\u2085 ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1072"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "606669bfd01ece1705b29ec23db54c1a0b7ddc15416015f690d8263681d91849"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1073,
        "start_column": 6,
        "end_line": 1073,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_1.hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1073"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "7cea1217f82b127803488c4b8ba1d091a3a619666b1f3ca89924d3aaf8be7c4f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1089,
        "start_column": 6,
        "end_line": 1089,
        "end_column": 11
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\n\u22a2 |LinearMap.det\n        ((LinearMap.mul \u2124 (\ud835\udcde K))\n          (RingOfIntegers.restrict\n            (fun x =>\n              _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2022\n                rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0)\n            \u22ef \u2124))| =\n    |c\u03c1 * LinearMap.det ((LinearMap.mul \u2124 K) \u03c1)|",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1089"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "638a919557faf4cbf8f84703429c4a960e5a7e370f228aef27a9943ec4c1b64e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1093,
        "start_column": 4,
        "end_line": 1093,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis\u271d : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\nthis : |(Algebra.norm \u2124) c1\u03c1| = |(Algebra.norm \u2124) c\u03c1| * |(Algebra.norm \u2124) \u03c1|\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2191|(Algebra.norm \u2124) \u03c1|",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1093"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "c08e7d9c7f53f303d7280eb4f2e560248bda1e229a19ae50c891eebfa9cefc5e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1094,
        "start_column": 2,
        "end_line": 1094,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case calc.step\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191|(Algebra.norm \u2124) \u03c1| < \u2016(Algebra.norm \u211a) \u03c1\u2016",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1094"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "1bb77735175bf54bf573205ae22d01467a990025fa90ebbab20286eb21617eb3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1061,
        "start_column": 16,
        "end_line": 1061,
        "end_column": 21
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u03c1 : \u2124 := _root_.c\u03c1 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 (c\u2085 ^ r)\u207b\u00b9 = c\u2085 ^ (-\u2191r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1061"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "571ebd41b3d4ff4cc0ca7d6f6cf32c8eecb1662c6ccaa31685ff90c470dd74c7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1139,
        "start_column": 6,
        "end_line": 1139,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_2.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\nthis : c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) = c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * 1\n\u22a2 1 \u2264 \u2191\u2191t * (c\u2086 * \u2191q) ^ r * c\u2087 ^ q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1139"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "16affe970001c9ef33437483cc7b586d1d945d16becdff3b2b2d8275af774a4c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1145,
        "start_column": 4,
        "end_line": 1145,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (\u2191\u2191t * (c\u2086 * \u2191q) ^ r * c\u2087 ^ \u2191q) \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1145"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T00:04:24+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "d79d37f1406e19fa4f7de61e8bd4ce0d4507dd387fe4c34421079b5ffdab98c0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1159,
        "start_column": 4,
        "end_line": 1159,
        "end_column": 9
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\n\u22a2 let r := r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  let S := S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0;\n  DifferentiableAt \u2102 S z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1159"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T17:11:21+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "16ca67005d892418cf9e51eb2268b7eaf1e2a89123d29d2dd78fb4552eb1c4a8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1220,
        "start_column": 8,
        "end_line": 1220,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case hb\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : \u2191l\u2080 < \u2191(m K)\n\u22a2 0 < \u2191r / \u2191q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1220"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "38f238d23ae462d5bedba7a0e04635706562cebe03d13d7cb75d120eea34383a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1225,
        "start_column": 4,
        "end_line": 1225,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hc\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191r / \u2191q)\n\u22a2 ContinuousWithinAt S (Metric.closedBall 0 (\u2191(m K) * (1 + \u2191r / \u2191q))) x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1225"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "4319f3a02364602af95ffbddb11f5b1b496919e4c113a33559356eafa9c63e5a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1250,
        "start_column": 4,
        "end_line": 1250,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u03c3 \u03c1 = Complex.log \u03b1 ^ (-\u2191r) * S \u2191l\u2080",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1250"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "f4f9d52575496e3211263f295d7690860fa69887d035e4ca1fd56c2b940af777"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1273,
        "start_column": 4,
        "end_line": 1273,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2016R z\u2016 \u2264 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1273"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "2ceccf12ec59752e19baada91beef6f6d3e7cc08dd75b203d429f108a3143526"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1274,
        "start_column": 4,
        "end_line": 1274,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * \u2016\u03c3 \u2191(\u03b7 t)\u2016 * Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * Real.log \u2016\u03b1\u2016 * \u2191(m K) * (1 + \u2191r / \u2191q)) \u2264\n    \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1274"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "e6a9621a9e15c2cc273d2f35221d6681b44e345db0eb3c47076749fbc88b3cb4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1275,
        "start_column": 4,
        "end_line": 1275,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * c\u2084 ^ n K q * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1275"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "564c08711ec656026c89959340379b48c141322b3422836a881faef18ca334fc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1361,
        "start_column": 2,
        "end_line": 1361,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u hq0 t\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03c1 : K := rho K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2016S z\u2016 \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1361"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "1acfb2b51abbcf5547166be07993300737d958780f8475cb8e72db076adb2bd2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1448,
        "start_column": 4,
        "end_line": 1448,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1448"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "e0374ba3e3de222b7291fba300e7eccaf078f60df672a882a2f17519c294ae1d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1449,
        "start_column": 4,
        "end_line": 1449,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c\u2081\u2084 ^ r * \u2191r ^ (-\u2191r / 2 + 3 * \u2191(h K) / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1449"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "410ab0ee4709d8167a99827aa77ffcfc22ebd4330c8c4c5334f8b2634d12b198"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1444,
        "start_column": 32,
        "end_line": 1444,
        "end_column": 37
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1444"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "ea9f2aeca05e5a24af299aa20dce0f4f7748493debe635788c023dff26d8ca6a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1458,
        "start_column": 2,
        "end_line": 1458,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.left\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0 \u2265 n K q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1458"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "5ee0c3be5ed07e970fff36cc10e69d9e226a0786f6ea117a2184349673515b6d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1473,
        "start_column": 4,
        "end_line": 1473,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : \u2115 := _root_.r K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nl\u2080 : \u2115 := _root_.l\u2080 K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\nS : \u2102 \u2192 \u2102 := _root_.S K \u03b1 \u03b2 hirr htriv \u03c3 hd \u03b1' \u03b2' \u03b3' habc q h2mq u t hq0\n\u22a2 \u2191r ^ (r / 2 - 3 * h K / 2) < c\u2081\u2084 ^ r * c\u2085 ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1473"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
      },
      "id": "f441878653743527aeca292226c3d46c74ca56d5bc7217f75ba749c7a7383a15"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 359,
        "start_column": 2,
        "end_line": 359,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 \u2264\n    \u2191(C_6_1_5 a) * (1 + \u2191(nndist_{\ud835\udd20 p' ,\u2191D ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p))) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) / volume \u2191(\ud835\udcd8 p) *\n      \u222b\u207b (y : X) in E p', \u2016g y\u2016\u2091 * \u222b\u207b (y : X) in E p, \u2016g y\u2016\u2091",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L359"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "6befc5da4481a4528f3242732f32719a5691e6c6c927ed944708da65178560d8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 370,
        "start_column": 2,
        "end_line": 370,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "d424334e3a1ad3994ff5c918fd6646ef8d8aaa501b080bd8d088d93b8c202c91"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 368,
        "start_column": 84,
        "end_line": 368,
        "end_column": 89
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q D \u03ba S o\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191D ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "9c3d5b5761f571a87d4227105f50b7bccfd865b24a56a0fdbf266e2458bae263"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 61,
        "start_column": 2,
        "end_line": 61,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nO : Set X\nhO : IsOpen O \u2227 O \u2260 univ\n\u22a2 \u2203 c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) \u2227\n      \u22c3 i, ball (c i) (3 * r i) = O \u2227\n        (\u2200 (i : \u2115), \u00acDisjoint (ball (c i) (7 * r i)) O\u1d9c) \u2227\n          \u2200 x \u2208 O, Cardinal.mk \u2191{i | x \u2208 ball (c i) (3 * r i)} \u2264 \u2191(2 ^ (6 * a))",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "f974e798a5fe0513436bde1f1a95dfc27f6cef844682141a6268dc534e459a02"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 135,
        "start_column": 2,
        "end_line": 135,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 czBall3 ha hf hX i}.Finite",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "5ce4e2732fc83213332e0e708c567e326999e9aad40d5d7f6553df8e91abec9f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 143,
        "start_column": 2,
        "end_line": 143,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\ni : \u2115\n\u22a2 czBall ha hf hX i \u2286 czPartition ha hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "81b3c040dbd6d31256a2a93dbfef7ad20659e0772933eeb0fa79119594b01266"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => czPartition ha hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "a27202be503557b59aefe1efd5e8920c45bbb73361eb79f474f48a440b4c5828"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 156,
        "start_column": 2,
        "end_line": 156,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 czPartition ha hf hX i\nhj : x \u2208 czPartition ha hf hX j\n\u22a2 i = j",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "ec528e4cc6b300527ebf683dbe6c018fc21a012a828028bcd2f14f1fc52d97b3"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\n\u22a2 \u22c3 i, czPartition ha hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "50cf553cb3438b8baea185bc4a42b2914c3ad299f3406aacb83f9c063d788543"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : \u211d\u22650\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), czRemainder' ha hf hX i x = czRemainder ha hf \u03b1 x",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T17:21:05+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "dac93e4181a286b4ce040895c2ce36af15538c31d1a044a3259a4c6cebd93459"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 202,
        "start_column": 2,
        "end_line": 202,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (czApproximation ha hf \u03b1)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "731bba3c4cf19d17a5fa46050be1fc540bd2072f3ecf7a1243bf0bbf30fa4fee"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 213,
        "start_column": 2,
        "end_line": 213,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "e324ec1bf49367ba48bbb2830a2a53df6ff962571e5bbbaee4ab460901378bd1"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016czApproximation ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "0079b7190025f8a6a492a167ea4e5a90850fcbbc2965c9fc42d53cf9f88e2f9f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czApproximation ha hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "41a517539345169a0cdd71e514728b588ec4f467863df7d09644e2613674c6a6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 230,
        "start_column": 2,
        "end_line": 230,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (czRemainder' ha hf hX i) \u2286 czBall3 ha hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "075f798ec0455a651505323aaa2afb6faee16f0ac64b468f6e7f942ab26dc259"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 236,
        "start_column": 2,
        "end_line": 236,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), czRemainder' ha hf hX i x = 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "5c9d65b231d65742a9b722218a34a348d6b46cbe6a4928cb2910796502da34bd"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 241,
        "start_column": 2,
        "end_line": 241,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), czRemainder ha hf \u03b1 x = 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "127ee0ff2f31946c6700db45e7a2180f60ac1dafb91b1d7778728513dc5cc388"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (czRemainder' ha hf hX i) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume (czBall3 ha hf hX i)",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "0562fd5a2d18ac401d0c2d2af9a2e4d77f87ce92be4c959975c958b53a4a5334"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 253,
        "start_column": 2,
        "end_line": 253,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder ha hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "01f57c78818ef6e984d2ed7b5adfeeca57221442f50f663b6242b760e537ad62"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 259,
        "start_column": 2,
        "end_line": 259,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (czBall3 ha hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "b6fb3ac078fb792023e20451ec18349137d8f4ab5e6f55a4dd70a36e4c60387b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "9840b78a053f26a2f377c3402ab45b7918ca6c06a9a62b2cf91114e61b4daec7"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 271,
        "start_column": 2,
        "end_line": 271,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (czRemainder' ha hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L271"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "4a18b036baa81ec20121dc0b8f8b12f48277ef1c0f73bbbbf6e6e3e171627a92"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00acGeneralCase f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (czRemainder ha hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "3a9b84009df5a5f861881b640665003321af7fc3cbc7118bdb54cc4234089f10"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 295,
        "start_column": 2,
        "end_line": 295,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (czApproximation ha hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L295"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "7720b5df73764559acd731ce3b79b35e9145ddb61c6da38f138811e50a2b5b4b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 311,
        "start_column": 2,
        "end_line": 311,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (\u03a9 ha hf \u03b1)\u1d9c\nhX : GeneralCase f \u03b1\n\u22a2 \u2016czOperator K r (czRemainder ha hf \u03b1) x\u2016\u2091 \u2264 3 * czOperatorBound ha hf hX x + \u03b1 / 8",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L311"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "f3475267796ca2060b57dbda940d978c859d3228c9637c5c170bf14201e88e98"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 321,
        "start_column": 2,
        "end_line": 321,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 volume ((\u03a9 ha hf \u03b1)\u1d9c \u2229 czOperatorBound ha hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264 \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L321"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "dd7931a06397f2150ac2fcb0a6bd01a37f7768400617535a976ede5cfedcc452"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "master",
        "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 332,
        "start_column": 2,
        "end_line": 332,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\n\u03b1 : \u211d\u22650\u221e\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : GeneralCase f \u03b1\n\u22a2 distribution (czOperator K r (czRemainder ha hf \u03b1)) (\u03b1 / 2) volume \u2264 \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L332"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
      },
      "id": "63e23a1eba6e3cc213c6e85182744813d12002c7f91639ab567ea589d346b364"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "YK-poincare1",
        "commit": "63a19cb3ae132c07251ab30ed60965c3841540ab",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Analysis/Calculus/Poincare/OneForm.lean",
        "start_line": 387,
        "start_column": 35,
        "end_line": 387,
        "end_column": 40
      },
      "debug_info": {
        "goal": "E : Type u_1\nF : Type u_2\ninst\u271d\u00b3 : NormedAddCommGroup E\ninst\u271d\u00b2 : NormedSpace \u211d E\ninst\u271d\u00b9 : NormedAddCommGroup F\ninst\u271d : NormedSpace \u211d F\na\u271d b c d : E\n\u03c9 : E \u2192 E \u2192L[\u211d] F\nd\u03c9 : E \u2192 E \u2192L[\u211d] E \u2192L[\u211d] F\n\u03b3\u2081 : Path a\u271d b\n\u03b3\u2082 : Path c d\ns : Set E\n\u03c6 : \u03b3\u2081.Homotopy \u2191\u03b3\u2082\nh\u03c9 : \u2200 x \u2208 s, HasFDerivWithinAt \u03c9 (d\u03c9 x) s x\nhd\u03c9 : \u2200 x \u2208 s, \u2200 a \u2208 tangentConeAt \u211d s x, \u2200 b \u2208 tangentConeAt \u211d s x, ((d\u03c9 x) a) b = ((d\u03c9 x) b) a\nh\u03c6s : \u2200 (a : \u2191I \u00d7 \u2191I), \u03c6 a \u2208 s\nhF : ContDiffOn \u211d 2 (fun xy => (IccExtend \u22ef (\u03c6.extend xy.1)) xy.2) (Icc (0, 0) (1, 1))\n\u03c8 : \u211d \u00d7 \u211d \u2192 E := fun xy => Set.IccExtend \u22ef (\u21d1(\u03c6.extend xy.1)) xy.2\nh\u03c8s : \u2200 (a : \u211d \u00d7 \u211d), \u03c8 a \u2208 s\nU : Set (\u211d \u00d7 \u211d) := Ioo 0 1 \u00d7\u02e2 Ioo 0 1\nhU : U = Ioo 0 1 \u00d7\u02e2 Ioo 0 1\nhUI' : interior (Icc 0 1) = U\nhUI : U \u2286 Icc 0 1\nhId : UniqueDiffOn \u211d (Icc 0 1)\nh\u03c8' : ContDiffOn \u211d 2 \u03c8 U\nhUo : IsOpen U\nd\u03c8 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] E := fderivWithin \u211d \u03c8 (Icc 0 1)\nd2\u03c8 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] \u211d \u00d7 \u211d \u2192L[\u211d] E := fderivWithin \u211d d\u03c8 (Icc 0 1)\nh\u03c8 : \u2200 a \u2208 U, HasFDerivAt \u03c8 (d\u03c8 a) a\nh\u03c8c : Continuous \u03c8\nhd\u03c8 : DifferentiableOn \u211d d\u03c8 (Icc 0 1)\nhd\u03c8Ioo : \u2200 a \u2208 Ioo 0 1 \u00d7\u02e2 Ioo 0 1, HasFDerivAt d\u03c8 (d2\u03c8 a) a\n\u03b7 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => (\u03c9 (\u03c8 a)).comp (d\u03c8 a)\nd\u03b7 : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] \u211d \u00d7 \u211d \u2192L[\u211d] F :=\n  fun a => ((ContinuousLinearMap.compL \u211d (\u211d \u00d7 \u211d) E F) (\u03c9 (\u03c8 a))).comp (d2\u03c8 a) + (d\u03c9 (\u03c8 a)).bilinearComp (d\u03c8 a) (d\u03c8 a)\nh\u03b7c : ContinuousOn \u03b7 (Icc 0 1)\nh\u03b7 : \u2200 a \u2208 U, HasFDerivAt \u03b7 (d\u03b7 a) a\nf : \u211d \u00d7 \u211d \u2192 F := fun a => (\u03b7 a) (0, 1)\ng : \u211d \u00d7 \u211d \u2192 F := fun a => -(\u03b7 a) (1, 0)\nf' : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => ((ContinuousLinearMap.apply \u211d F) (0, 1)).comp (d\u03b7 a)\ng' : \u211d \u00d7 \u211d \u2192 \u211d \u00d7 \u211d \u2192L[\u211d] F := fun a => -((ContinuousLinearMap.apply \u211d F) (1, 0)).comp (d\u03b7 a)\nhd2\u03c8_symm : \u2200 a \u2208 Icc 0 1, \u2200 (x y : \u211d \u00d7 \u211d), ((d2\u03c8 a) x) y = ((d2\u03c8 a) y) x\na : \u211d \u00d7 \u211d\nha : a \u2208 Icc 0 1\nS : Submodule \u211d E := Submodule.span \u211d (tangentConeAt \u211d s (\u03c8 a))\nH\u2081 : \u2200 x \u2208 S, \u2200 y \u2208 S, ((d\u03c9 (\u03c8 a)) x) y = ((d\u03c9 (\u03c8 a)) y) x\nz : \u211d \u00d7 \u211d\n\u22a2 (d\u03c8 a) z \u2208 S",
        "url": "https://github.com/leanprover-community/mathlib4/blob/63a19cb3ae132c07251ab30ed60965c3841540ab/Mathlib/Analysis/Calculus/Poincare/OneForm.lean#L387"
      },
      "metadata": {
        "blame_email_hash": "9771bac611b3",
        "blame_date": "2025-04-13T14:35:21-05:00",
        "inclusion_date": "2025-04-13T23:08:58.715701+00:00"
      },
      "id": "f82e691bf9289aaaa1b0b45548c37d10fc0a3516cb5cd131fca26884a0fd55aa"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 257,
        "start_column": 36,
        "end_line": 257,
        "end_column": 41
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$a\u271d : \u00ab$A\u00bb\n$hyp\u271d : Option Expr\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb := \u2191\u00ab$n\u00bb * 1\n\u22a2 \u00ab$a\u00bb = \u2191\u00ab$n\u00bb * 1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "3e22c038a8638536ea261624648d8ffa0b9cfee6e8b4ca0491f72044fddec3e2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 260,
        "start_column": 36,
        "end_line": 260,
        "end_column": 41
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u00bb $x\u271d : \u00ab$A\u00bb\n$e\u271d : \u2115\n$b\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$b'\u00bb : \u00ab$A\u00bb\n\u00ab$pb'\u00bb : $b\u271d = \u2191\u00ab$n\u00bb * \u00ab$b'\u00bb\n\u22a2 $x\u271d ^ $e\u271d * $b\u271d = \u2191\u00ab$n\u00bb * ($x\u271d ^ $e\u271d * \u00ab$b'\u00bb)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L260"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "bb729561dfb5dc36a85d7f562ad085ea19bcc50f58ea59974a0a03ba8cb85a43"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 282,
        "start_column": 28,
        "end_line": 282,
        "end_column": 33
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n\u22a2 \u00ab$r\u00bb \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L282"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "810bcb3f4e7138f9ea91eb72c1fa602f5d2e6f10405d12f76fc16c93d470b024"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 243,
        "start_column": 26,
        "end_line": 243,
        "end_column": 31
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n$r\u271d : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$pr\u00bb : $r\u271d * \u2191\u00ab$n\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u271d \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L243"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "4f84bcffb9d9d42623d57a5933ca36efa39a5635f48f0a98ed661b89e780e9f7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 255,
        "start_column": 47,
        "end_line": 255,
        "end_column": 52
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$r\u2081'\u00bb \u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
      },
      "id": "45b808cfdbe493d69630ad9704b5af20853226ab3a366877653d9690c423a2b6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 266,
        "start_column": 46,
        "end_line": 266,
        "end_column": 51
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d : \u00ab$R\u2081\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L266"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
      },
      "id": "2b14e9407c4b7a62038201579d07559cf91174139183b7dca4a434363695e10f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 276,
        "start_column": 46,
        "end_line": 276,
        "end_column": 51
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d : \u00ab$R\u2081\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 \u00ab$a\u2081\u00bb = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2081\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
      },
      "id": "4f0911cbd09a936bcc1d04c49aa20387d34c8cf5e42d5aae7ceeec97802df23c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 325,
        "start_column": 92,
        "end_line": 325,
        "end_column": 97
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u22a2 1 + 1 = 1 \u2022 2 + Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L325"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "3b0d83f38e94f7f47e5935914872743487236d2d494c8416d2476c71f3297add"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 442,
        "start_column": 20,
        "end_line": 442,
        "end_column": 25
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n$A\u271d : Type u\n$sA\u271d : CommSemiring $A\u271d\n\u00ab$a\u2082\u00bb : $A\u271d\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n$v\u271d : Level\n\u00ab$R\u00bb : Type v\u271d\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$a\u00bb \u00ab$t\u00bb : \u00ab$A\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a'\u00bb : \u00ab$A\u00bb\n\u00ab$pa'\u00bb : \u00ab$a\u2081\u00bb * \u00ab$a\u00bb = \u00ab$a'\u00bb\n\u00ab$ra'\u00bb : \u00ab$A\u00bb\n\u00ab$pra'\u00bb : \u00ab$r\u00bb \u2022 \u00ab$a'\u00bb = \u00ab$ra'\u00bb\n\u00ab$t'\u00bb : \u00ab$A\u00bb\n\u00ab$pt'\u00bb : \u00ab$a\u2081\u00bb * \u00ab$t\u00bb = \u00ab$t'\u00bb\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$p\u00bb : \u00ab$ra'\u00bb + \u00ab$t'\u00bb = $expr\u271d\n\u22a2 \u00ab$a\u2081\u00bb * (\u00ab$r\u00bb \u2022 \u00ab$a\u00bb + \u00ab$t\u00bb) = $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L442"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "3f097a67c22927235d073e4a7885b39506d8af44631d24be9330eed46efa347d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 600,
        "start_column": 24,
        "end_line": 600,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$n\u00bb : Name\n$us\u271d : List Level\n$x\u271d : Expr \u00d7 Expr \u00d7 Bool\n\u00ab$a\u00bb \u00ab$b\u00bb : \u00ab$A\u00bb\n\u00ab$e\u00bb : \u00ab$A\u00bb := \u00ab$a\u00bb + \u00ab$b\u00bb\n$expr\u271d\u00b2 : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u00bb = $expr\u271d\u00b2\n$expr\u271d\u00b9 : \u00ab$A\u00bb\n\u00ab$pb\u00bb : \u00ab$b\u00bb = $expr\u271d\u00b9\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pab\u00bb : $expr\u271d\u00b2 + $expr\u271d\u00b9 = $expr\u271d\n\u22a2 \u00ab$e\u00bb = $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L600"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "e6fcf08d10360d883313e545cc1b93d6bcc0f7431ac667cae3a1fe43bfc5d508"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 609,
        "start_column": 24,
        "end_line": 609,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$n\u00bb : Name\n$us\u271d : List Level\n$x\u271d : Expr \u00d7 Expr \u00d7 Bool\n\u00ab$a\u00bb \u00ab$b\u00bb : \u00ab$A\u00bb\n\u00ab$e\u00bb : \u00ab$A\u00bb := \u00ab$a\u00bb * \u00ab$b\u00bb\n$expr\u271d\u00b2 : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u00bb = $expr\u271d\u00b2\n$expr\u271d\u00b9 : \u00ab$A\u00bb\n\u00ab$pb\u00bb : \u00ab$b\u00bb = $expr\u271d\u00b9\n$expr\u271d : \u00ab$A\u00bb\n\u00ab$pab\u00bb : $expr\u271d\u00b2 * $expr\u271d\u00b9 = $expr\u271d\n\u22a2 \u00ab$e\u00bb = $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L609"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "9356c2954c552e9818e1035a084eec05c0b00a4387b0ad36167ae1903d2ff4d0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 618,
        "start_column": 2,
        "end_line": 618,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211a\n\u22a2 1 \u2022 (x ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0 = 1 \u2022 (1 ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L618"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "f40b2d6e4a90d2f98d59096845fbd5d8e666f1054030dc5bbe21a1ba7eb762c2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 595,
        "start_column": 2,
        "end_line": 595,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211a\n\u22a2 (1 \u2022 2 + 1) \u2022 (x ^ Nat.rawCast 1 * 1) + Nat.rawCast 0 =\n    1 \u2022 (x ^ Nat.rawCast 1 * (3 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L595"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
      },
      "id": "cba525f732b0879b2fe747b8f81b3e9c7a7f7de0bbbcca4313ce6bf980b0cdc4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 639,
        "start_column": 2,
        "end_line": 639,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211a\n\u22a2 x * y + (x ^ 2 + (x * y + y ^ 2)) = 1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L639"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "43c003466af897771993222a0f28e9a56af8dd20abaad469d42a65e8393a97d7"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue323",
        "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
        "start_line": 24,
        "start_column": 63,
        "end_line": 24,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03b1 : Type ?u.2318\ninst\u271d : DecidableEq \u03b1\nl : List \u03b1\nx y : \u03b1\nn : \u2115\n\u22a2 Chain (fun x1 x2 => x1 < x2) 0 (range n)",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-13T21:16:44+09:00",
        "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
      },
      "id": "650ac9f6087ca15b30b5b57ba9fe78e3a6c2e98a039aacf7b7d25d28e31b8a9d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue323",
        "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\n\u03b1 : Type u_1\ninst\u271d\u00b2 : DecidableEq \u03b1\nR : \u03b1 \u2192 \u03b1 \u2192 Prop\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : IsTrans \u03b1 R\nl : List \u03b1\ni j : Fin l.length\nh : Chain' R l\neij : i \u2260 j\nnRij : \u00acR (l.get i) (l.get j)\nnRji : \u00acR (l.get j) (l.get i)\n\u22a2 False",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-13T21:16:44+09:00",
        "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
      },
      "id": "13f7907fcb967107aee729b6da7cf90baf7fbdc05eb71d1afb5150d435ec800b"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue323",
        "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
        "start_line": 110,
        "start_column": 4,
        "end_line": 110,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case p\nF : Frame\nr : F.World\ninst\u271d : F.IsRooted r\nn : \u2115+\n\u22a2 List.Chain' (fun a b => a < b) do\n    let a \u2190 List.range \u2191n\n    pure \u2191a",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L110"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-13T21:16:44+09:00",
        "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
      },
      "id": "7e5768b4d669745331e05caaaf79d9696e81c2e9a8db94176ec685729336e0e0"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "SnO2WMaN/issue323",
        "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/ProvabilityLogic/Grz/Completeness.lean",
        "start_line": 251,
        "start_column": 2,
        "end_line": 251,
        "end_column": 7
      },
      "debug_info": {
        "goal": "M : Model\ninst\u271d\u00b9 : IsTrans M.World M.Rel\ninst\u271d : IsIrrefl M.World M.Rel\nl : List M.World\nn : \u2115+\nl_length : l.length = \u2191n + 1\nl_chain : List.Chain' (fun x1 x2 => x1 \u227a x2) l\n\u0393 : Finset (Formula \u2115)\n\u0393_length : \u0393.card = \u2191n\n\u22a2 \u2203 x \u2208 l, x \u22a7 (Finset.image (fun \u03b3 => \u25a1\u03b3 \u279d \u03b3) \u0393).conj",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L251"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-13T21:16:44+09:00",
        "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
      },
      "id": "7f5dce4b990d4048d1d39c649b212d3d27864fbed8fcab8fd277eeb38c28a088"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : Nat\n\u22a2 List.replicate (2 * n) () = List.replicate n () ++ List.replicate n ()",
        "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
      },
      "id": "568abb06ec8e089d6c8f26eee9d0f75ef985ded6e40ac5c66ad644307715bf6d"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 108,
        "start_column": 2,
        "end_line": 108,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : Nat\n\u22a2 List.replicate n () ++ List.replicate m () = List.replicate (n + m) ()",
        "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
      },
      "id": "10527d7f182ae93d223919a1aae377f5dbbc2cc4afe42783e7b9c55e20d27741"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 169,
        "start_column": 82,
        "end_line": 169,
        "end_column": 87
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : Star R\nx : R\n\u22a2 star x * x = x * star x",
        "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
      },
      "id": "b8e6a617e0cd645aeb14c4d11910d7b306f6b4356a8ac700d9b76dcbed5d1792"
    },
    {
      "repo": {
        "remote": "https://github.com/nomeata/loogle",
        "branch": "master",
        "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Tests.lean",
        "start_line": 227,
        "start_column": 78,
        "end_line": 227,
        "end_column": 83
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : Zero \u03b1\ninst\u271d\u00b9 : HMul \u03b1 \u03b1 \u03b1\ninst\u271d : LE \u03b1\na : \u03b1\n\u22a2 0 \u2264 a * a",
        "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L227"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-11-11T14:02:18+01:00",
        "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
      },
      "id": "22068073ae32646f2534f7f35f61036cb591dbebdc590fc9800937fe1d753b29"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 309,
        "start_column": 73,
        "end_line": 309,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pf_isNat_zero\u00bb : NormNum.IsNat (\u00ab$a\u2081\u00bb + \u00ab$a\u2082\u00bb) 0\n\u22a2 1 \u2022 \u00ab$a\u2081\u00bb + 1 \u2022 \u00ab$a\u2082\u00bb = 1 \u2022 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L309"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "96b68d4fb4e2fb05e809ec7917b749c91882484fe8b5e4a4b83e611917d8651c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 311,
        "start_column": 52,
        "end_line": 311,
        "end_column": 57
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2081\u00bb \u00ab$a\u2082\u00bb $expr\u271d : \u00ab$A\u00bb\n\u00ab$pa\u00bb : \u00ab$a\u2081\u00bb + \u00ab$a\u2082\u00bb = $expr\u271d\n\u22a2 1 \u2022 \u00ab$a\u2081\u00bb + 1 \u2022 \u00ab$a\u2082\u00bb = 1 \u2022 $expr\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L311"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "6196316dfb8c51a29432d750d1019641dda3bd0266d6d066625f61fecd0e0251"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 283,
        "start_column": 49,
        "end_line": 283,
        "end_column": 54
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d \u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 $r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$r\u2081'\u00bb \u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L283"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "21dc9ddd09c87661527cd840e63c9f6182a37c62ea72180992fb21cb2c390416"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 294,
        "start_column": 48,
        "end_line": 294,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2082\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L294"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "1234d8b57ec5afcc2ad682a4a316769f9438e7c94608d26f8bee4166502a9573"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 304,
        "start_column": 48,
        "end_line": 304,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + \u00ab$r\u2081\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L304"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "ba0ef1d502fe07082fa9b6489fda91b0d81c1e35e1cbbcae48ae84306b3f5038"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 623,
        "start_column": 2,
        "end_line": 623,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211a\n\u22a2 x + x + x = 3 * x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L623"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "ef0d20c676f00a4a6c9a5591cdf2e55d2feaad0147ed9bedcd787d8658a24105"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 629,
        "start_column": 2,
        "end_line": 629,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211a\n\u22a2 1 \u2022 (x ^ Nat.rawCast 1 * Nat.rawCast 4) + Nat.rawCast 0 =\n    1 \u2022 (x ^ Nat.rawCast 1 * (4 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L629"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-13T18:43:26+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "3c27d965f07ffc4df06e3de3533159998d5d61d6ff731d1d9777386b0d7eeae8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 649,
        "start_column": 2,
        "end_line": 649,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211a\n\u22a2 x ^ 2 + x * y = 1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L649"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "23843aaf991ffc6ecb13c778b8376f79f6c0b05f7aeb64daf34429d0f22028db"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/poly",
        "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 657,
        "start_column": 2,
        "end_line": 657,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211a\n\u22a2 x * y + (x ^ 2 + y ^ 2) = 1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L657"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-14T17:07:18+02:00",
        "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
      },
      "id": "0ed1c576f3aea7b05b34a6afe1a181b3cbbd98d2ac182f0a96bf5809a810abcd"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-distribHaarChar-harder-results",
        "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean",
        "start_line": 25,
        "start_column": 2,
        "end_line": 25,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2075 : TopologicalSpace R\ninst\u271d\u2074 : LocallyCompactSpace R\ninst\u271d\u00b3 : CommRing R\ninst\u271d\u00b2 : IsTopologicalRing R\ninst\u271d\u00b9 : MeasurableSpace R\ninst\u271d : BorelSpace R\n\u22a2 Continuous \u21d1(distribHaarChar R)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-14T15:27:33+01:00",
        "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
      },
      "id": "2d9a654995dde411660797fa06220ff10e86cae6be456c754a9d914c9ddc3ee3"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-distribHaarChar-harder-results",
        "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9\u00b2 : TopologicalSpace R\ninst\u271d\u00b9\u00b9 : LocallyCompactSpace R\ninst\u271d\u00b9\u2070 : CommRing R\ninst\u271d\u2079 : IsTopologicalRing R\ninst\u271d\u2078 : MeasurableSpace R\ninst\u271d\u2077 : BorelSpace R\nS : Type u_2\ninst\u271d\u2076 : TopologicalSpace S\ninst\u271d\u2075 : LocallyCompactSpace S\ninst\u271d\u2074 : CommRing S\ninst\u271d\u00b3 : IsTopologicalRing S\ninst\u271d\u00b2 : MeasurableSpace S\ninst\u271d\u00b9 : BorelSpace S\ninst\u271d : SecondCountableTopologyEither R S\nr : R\u02e3\ns : S\u02e3\n\u22a2 (distribHaarChar (R \u00d7 S)) (MulEquiv.prodUnits.symm (r, s)) = (distribHaarChar R) r * (distribHaarChar S) s",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-14T15:27:33+01:00",
        "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
      },
      "id": "009491d4d2ba3d50fda0bed62f549b9a80519cc7f21744b5aedfa1c50be971fc"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "kbuzzard-topology-experiments",
        "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "FLT/QuaternionAlgebra/NumberField.lean",
        "start_line": 148,
        "start_column": 2,
        "end_line": 148,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : Type u_3\n\u03b1 : Type u_4\n\u03b2 : Type u_5\ninst\u271d\u2075 : Fintype m\ninst\u271d\u2074 : DecidableEq m\ninst\u271d\u00b3 : NonAssocSemiring \u03b1\ninst\u271d\u00b2 : NonAssocSemiring \u03b2\ninst\u271d\u00b9 : TopologicalSpace \u03b1\ninst\u271d : TopologicalSpace \u03b2\nf : \u03b1 \u2192+* \u03b2\nhf : Topology.IsOpenEmbedding \u21d1f\n\u22a2 IsOpenMap \u21d1f.mapMatrix",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "6a0fe98fa9e8",
        "blame_date": "2025-04-14T10:40:13-04:00",
        "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
      },
      "id": "47e1be26d6aab916d27553170f755f5e0fea0491529dcb4535fcfdb07b6e776b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 60,
        "start_column": 9,
        "end_line": 60,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "25895a31ba729853cdd0b06dc65d1d9cb9b20ae34221911ffabeb809a69eb81d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 78,
        "start_column": 2,
        "end_line": 78,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : ToOracle WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L78"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "0e31c28fda296f71d4420901a1c00b407598c841efa347f6efafc122faf01680"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 138,
        "start_column": 9,
        "end_line": 138,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "1f7a6f60c830235ee58cb1f665b0ce1567b9f2aa9610bc36ec8bd5e1c52603f3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b2 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 ToOracle (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "b6bf82cb9566a0c8cb4646b0a0bd687262ef9f5e9c0c2837a266a4198bd028a2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 255,
        "start_column": 2,
        "end_line": 255,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b2 : ToOracle OStatement\ninst\u271d\u00b9 : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Components.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "306ee4b8c52e9202adf94a3dc2c2328608002709a8fb9d82e606a7860daa6251"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/OracleReduction/Execution.lean",
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "5064ee3a205fa75c674388ea0c2c85cfc30703d50cf7e54f4f8bf35d47024be1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/OracleReduction/Execution.lean",
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "f762c3fb7d26710a7394ac55fd4a5715dc1c5b169dfd2e9c0204ac206536ff08"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 66,
        "start_column": 2,
        "end_line": 66,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (do\n      let _ \u2190 liftM (query 0 ())\n      (fun a => (0, \u2191a)) <$> liftM (query 1 ())) =\n    do\n    let y \u2190 liftM (query 1 ())\n    (fun a => (0, \u2191y)) <$> liftM (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Equiv.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "bdc8a5777f2b8e10319f46ba71623f78b51ca3341df7f4fbf665f36bd87eca22"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.h.none\n\u22a2 (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a)))) none =\n    \u2211' (a : Fin 2), 2\u207b\u00b9 * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a_1 => (0, \u2191a)))) none",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Equiv.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "e9cdd8ff97fd021edc2dac38826994b7d29bd001727a8096ccbec894c2b322d5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 85,
        "start_column": 4,
        "end_line": 85,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.h.some.mk\nx y : \u2115\n\u22a2 (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure \u2218 fun a => (0, \u2191a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run \u2218 evalDist \u2218 fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure \u2218 fun a => (0, \u2191y))))\n      (some (x, y))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Equiv.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "e3a99024c3d462de38742531493dccd6f97d90bc1af19d02296ad09f07ba4a62"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Equiv.lean",
        "start_line": 102,
        "start_column": 2,
        "end_line": 102,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : (i : \u2115) \u2192 unifSpec.domain i \u2192 Fin (i + 1)\n\u22a2 (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun x => (fun a => (0, \u2191a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {\u03b1} x =>\n              match \u03b1, x with\n              | .(unifSpec.range i), query i t => some (f i t) } \u2218\n        fun y => (fun a => (0, \u2191y)) <$> lift (query 0 ())",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Equiv.lean#L102"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "a693c11c15f56b4e08a13d72c8c56d4c04ceb76f9e76d6ea150b4d53bf796864"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 312,
        "start_column": 2,
        "end_line": 312,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : R[X \u03c3]\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : R[X \u03c3]\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/OracleInterface.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "275b4383fe00947d8ed714002fbba5a841cb92064aca47127a8e537d7477718b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 351,
        "start_column": 2,
        "end_line": 351,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : R[X]\n\u22a2 \u2203 x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          (statelessOracle spec [fun x => R[X]]\u2092 fun i q => oracle p q).impl) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/OracleInterface.lean#L351"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "6e66fe614efd12f6416d1c60b874c993844f1f13900a1666baf5e2cb98f15718"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 100,
        "start_column": 2,
        "end_line": 100,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/CommitmentScheme/Fold.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "d62569f01c9ed308e57146ab692525ede0eec81bc806ad84c99e7f356c251f78"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : R[X]\n\u22a2 (splitEvenOdd p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/CommitmentScheme/Fold.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "26de337f6793125b662105dee94b3df0bda00f2a14759346cfd60c3dd520e5d7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 116,
        "start_column": 11,
        "end_line": 116,
        "end_column": 16
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pEven \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "a717f51dfd13da3cc72aef3f466535dac8ed693ed2b5265d2542f5b9afd04798"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 116,
        "start_column": 26,
        "end_line": 116,
        "end_column": 31
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5R\u2983< 2 * n\u2984[X]\npEven pOdd : R[X]\n\u22a2 pOdd \u2208 R\u2983< n\u2984[X]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/CommitmentScheme/Fold.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "dc807915a7ccc91faef0d54a6eb678c5c5e041ada6c069f8b445d9d8c8179e40"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "d006bfadcfa73fe62c453e059621fb0baf69146f",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 167,
        "start_column": 4,
        "end_line": 167,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (buildMerkleTree \u03b1 n leaves).neverFails \u2227\n      \u2200 x \u2208 (buildMerkleTree \u03b1 n leaves).support,\n        verifyProof \u03b1 i (leaves.get i) (x 0).head\n            (List.Vector.ofFn fun layer => (x \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer)) =\n          pure ()\n\u22a2 (do\n        let a \u2190 buildLayer \u03b1 n leaves\n        (fun a =>\n              (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n            buildMerkleTree \u03b1 n a).neverFails \u2227\n    \u2200 (a a_1 : \u03b1) (b : List.Vector \u03b1 (n + 1)),\n      \u2200 x \u2208 (buildLayer \u03b1 n leaves).finSupport,\n        (a, a_1, b) \u2208\n            ((fun a =>\n                  (leaves.get i, (Cache.cons \u03b1 n leaves a 0).head,\n                    List.Vector.ofFn fun layer => (Cache.cons \u03b1 n leaves a \u2191\u2191layer).get \u2191\u2191(findNeighbors i layer))) <$>\n                buildMerkleTree \u03b1 n x).finSupport \u2192\n          verifyProof \u03b1 i a a_1 b = pure ()",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/d006bfadcfa73fe62c453e059621fb0baf69146f/ZKLib/CommitmentScheme/MerkleTree.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-17T23:52:18.829560+00:00"
      },
      "id": "e869651a93ee12de3b514f32d3a43f6d80a30e4a6577df77a65d9e7542352036"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 \u2016C\u2016\u2080' \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "fda9b9216f2ac8c758f0ab273774e820133b570a4ef25a71bc2602f169e32ca3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : \u2016C\u2016\u2080' \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => \u0394\u2080(\u2191x.1, \u2191x.2)) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "6e6004654b0ad9490fa259735c9f085d7c53b39ab66fd8f18c1d3c31e4e50edb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : \u0394\u2080(u, v) \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 \u2016u\u2016\u2080 \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "86f30b5c172226b56326fdb833386279dc6bef1ed94fb756ee40326808de0284"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : \u2016u\u2016\u2080 \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 \u0394\u2080(u, v) \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "2d4e9fb2f519b74e3cb7fcdb6357916d085e8134a43887b6b744981f3a864f2a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 269,
        "start_column": 67,
        "end_line": 269,
        "end_column": 72
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : Finite R\nC : Set (n \u2192 R)\n\u22a2 card \u2191C \u2264 card R ^ (card n - \u2016C\u2016\u2080 + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/CodingTheory/Basic.lean#L269"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "49449cee8ea694cee8921808d870cde5f01988d53974721315ece20621f25095"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 275,
        "start_column": 65,
        "end_line": 275,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - \u2016C.carrier\u2016\u2080 + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/CodingTheory/Basic.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "de2f3d31c89b034fa086dab21a459db4c0805f47f42696e56c5b246b8b623fe8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "31079da88dc5e58585862a9b59966afcecfe0b0e4b02b80a832d36aa3fe38dd4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse ofSpec toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "2952275d01cede1556da77b053b2c0b66a682ad9db491baeffbde62b6b69cfe1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 (p + q).toSpec = p.toSpec + q.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "1bbe3c6deef92619ed4befba1ed207d3b6e01e7ba184c9fca87084090b9c3d2b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191p.toSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "ae5877c05a565928c19990ffffa74f9ee38d64e3af111768bd8b2dd490ad010d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Basic.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "a8190b54d3662de6d9fc00acef82b4260fecd5d7923f79ab8f77a0db73d895eb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 (cons a b).get \u2b1d\u1d65 (cons c d).get = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "002abc260c8c3cc1087c3b345e18cc17245200b957e6643cf17b5d6f88faf8c1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 138,
        "start_column": 20,
        "end_line": 138,
        "end_column": 25
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b c : MlPoly R n), a + b + c = a + (b + c)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "59f0313579ba03b4b743d366cbd118f2d36871ebeff7de8aae23beacc8385296"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 141,
        "start_column": 19,
        "end_line": 141,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), 0 + a = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "f2c7c85bff48df5a38d83fe279c82d9547c630d6ec65a419af5c451100578137"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 142,
        "start_column": 19,
        "end_line": 142,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a : MlPoly R n), a + 0 = a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "2f572a2384c2dfb1d62c34b471ce566321872f115958df35367ad9e14105ddb1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 144,
        "start_column": 21,
        "end_line": 144,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (x : MlPoly R n), nsmul 0 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L144"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "5644b7d5974fa6dc021373880309187c0f91df95dc50e7e0db39eb142c84dc33"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 145,
        "start_column": 21,
        "end_line": 145,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (n_1 : \u2115) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "26b7b8cc31f71c00958cb560db04273334236dfb735929cc625b5d112b9fc254"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 139,
        "start_column": 19,
        "end_line": 139,
        "end_column": 24
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : AddCommMonoid R\n\u22a2 \u2200 (a b : MlPoly R n), a + b = b + a",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L139"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "2a853b143a6273e342e6733226b0154fbd770ecd3f7c655a2b82dc2d813ffe28"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 151,
        "start_column": 17,
        "end_line": 151,
        "end_column": 22
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (b : MlPoly R n), 1 \u2022 b = b",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "4a8da728f9abdef47bebb0adbbf7ed5a113fe6b29a9c77f386558b9a4c19338d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 156,
        "start_column": 18,
        "end_line": 156,
        "end_column": 23
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (x : MlPoly R n), 0 \u2022 x = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MlPoly/Basic.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "fed38b4d8f23b0ab93f30b71f34fc1346e9e99b9ed6445ab76e65712b95db6c1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Fin.lean",
        "start_line": 374,
        "start_column": 43,
        "end_line": 374,
        "end_column": 48
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b1 : Fin n \u2192 Sort u\nl : List \u2115\nn' : \u2115\nl' : List \u2115\nmotive : Fin (n' :: l').sum \u2192 Sort u_1\ncases : (n : \u2115) \u2192 (h : n \u2208 n' :: l') \u2192 (i : Fin n) \u2192 motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : \u00ac\u2191i < n'\n\u22a2 \u2191i - n' < l'.sum",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Fin.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T14:25:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "1bd86de154d5715bd71f60b0f9664c69eeff15acd5b96261229723f7b579a9cb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Fin.lean",
        "start_line": 402,
        "start_column": 16,
        "end_line": 402,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case ind\nn\u271d n : \u2115\nIH : \u2200 m < n, \u2200 {a : Fin m \u2192 \u2115}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n \u2192 \u2115\n\u22a2 (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Fin.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "0e10ba0ca6d4c7ad0a9da3c549ee01e453c3bc3cd162ae2c968772a65cfdb1cf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Fin.lean",
        "start_line": 497,
        "start_column": 32,
        "end_line": 497,
        "end_column": 37
      },
      "debug_info": {
        "goal": "\u22a2 True",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Fin.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-11T17:39:02-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "59adc1fdee05238b50504116d106a3c12ec908bf6c1a599236565929e9320d7d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Fin.lean",
        "start_line": 557,
        "start_column": 4,
        "end_line": 557,
        "end_column": 9
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, (a :: l').findSum j = some n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Fin.lean#L557"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "5ecd4d175034bdb23cec86e17a773f831a48d0d06f8c4ee5abeb13a8634c24eb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Fin.lean",
        "start_line": 569,
        "start_column": 80,
        "end_line": 569,
        "end_column": 85
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 l.findSumIdx \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Fin.lean#L569"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-14T00:01:07-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "15e1f35d1b7ab55013d1a86bf9e5c6887990a3404d777f6658ad3c722c7f9b80"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Operations.lean",
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n \u2294 l.length = n' \u2294 l'.length\n\u22a2 l ++ replicate (n - l.length + (m - n' \u2294 l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' \u2294 l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Operations.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "f47d43addd73fa73b100aaa08fa15fea818478ded22b6d21130fefb99d49f2f6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Operations.lean",
        "start_line": 209,
        "start_column": 5,
        "end_line": 209,
        "end_column": 10
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l\u2081.matchSize l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Operations.lean#L209"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "0b7e0d7f656f15cc0d5a3823e72d8bed295a97d69b58689b2782802c39b46582"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 248,
        "start_column": 2,
        "end_line": 248,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\na : Array \u03b1\nn : \u2115\nunit : \u03b1\ni : \u2115\nh\u271d : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n\u22a2 { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/Math/Basic.lean#L248"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "0c65523c3e6d665492d44249154791653efb4e5b0431f525609d645afc5f8ad1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Operations.lean",
        "start_line": 391,
        "start_column": 75,
        "end_line": 391,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp ((popWhile p as).getLast h) = true",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Math/Operations.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "c925fe1d8d5ba00fd7ffee997efa78d89a6e9303bf74cdb053bc446c4b2b6fdb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : R[X \u03c3]\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "4dcffecec2fe1016be16cfaec5c78c91f9332a142f32c153564fd4dd159c2d21"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : R[X Fin n]\n\u22a2 ((sumExceptFirst' n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "7e127ddb44622344ee642fd5053beeddb5c1758ad1a76c11178422b055786e19"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : R[X \u03c3]\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191(#({x \u2208 p.vars.pi S | (eval (extendDomain x)) p = 0})) / \u220f i \u2208 p.vars, \u2191(#(S i)) \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(#(S i))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "03bab2ac699a7fcaf46935f67190e4a81156c3c00ca66a23235305a275aaf9a6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : R[X \u03c3]\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < #(S i)\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "2647779ac60eed38177c3e49b2db454d7ef5cb63d5ed51b75a677ac1dc7b080a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "name-change",
        "commit": "d732f5dc6c14fb841c08ab4e21a099f590b9b994",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/BinaryTowerField/Basic.lean",
        "start_line": 95,
        "start_column": 16,
        "end_line": 95,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case succ\nk : \u2115\na\u271d : k > 0 \u2192 AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n\u22a2 AdjoinRoot (poly (k + 1)) = Field (k + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/d732f5dc6c14fb841c08ab4e21a099f590b9b994/ArkLib/Data/BinaryTowerField/Basic.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-30T10:53:02+05:30",
        "inclusion_date": "2025-04-25T14:18:32.399926+00:00"
      },
      "id": "b57a85aba550532ee84846aac75b3c04febd1b7825b6219f3c6f3d3f4c07661e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "name-change",
        "commit": "d732f5dc6c14fb841c08ab4e21a099f590b9b994",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/BinaryTowerField/Basic.lean",
        "start_line": 115,
        "start_column": 59,
        "end_line": 115,
        "end_column": 64
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Irreducible (poly n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/d732f5dc6c14fb841c08ab4e21a099f590b9b994/ArkLib/Data/BinaryTowerField/Basic.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2024-06-18T17:58:42-04:00",
        "inclusion_date": "2025-04-25T14:18:32.399926+00:00"
      },
      "id": "5b01c13bbc3317b449c682a0cdafb13c2f638fc93aa58ea0c49f4a61996ec2f0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic-old.lean",
        "start_line": 197,
        "start_column": 21,
        "end_line": 197,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "8281a4c04760e5653c3c7929d88fe49704fd2b422425125436952fd1b7ada85a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic-old.lean",
        "start_line": 198,
        "start_column": 22,
        "end_line": 198,
        "end_column": 27
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L198"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "8387c38e435842fad009d20d3f51446c3cf874e3b56a6a5428aeb465846c4b85"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic-old.lean",
        "start_line": 199,
        "start_column": 21,
        "end_line": 199,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "a56d2600205b17d74131b07300a9fd4d07a952d18272943065f506e8b804a9b2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic-old.lean",
        "start_line": 200,
        "start_column": 21,
        "end_line": 200,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d : Semiring R\n\u22a2 \u2200 (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := \u22ef, right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := \u22ef, right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/UniPoly/Basic-old.lean#L200"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-07T14:00:27-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "8f2444bd7f7ae6d1ce12a2ab41605b10ea7c5d5a7ad239ffccb2b486e8b5e82f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : UniPoly Q\ni : \u2115\nhi : i < Array.size (p.add_raw q)\n\u22a2 (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "e38fce3908de0a6616c489ec5fdb6dd9d7ecd499d87da5c29ba145cf86adda56"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n\u22a2 p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "0a7cf332cea4f099f83d11d1da9b3dd999eab6c73b15c5ce187a8f85cacc9e7c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 975,
        "start_column": 6,
        "end_line": 975,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : Ring R\ninst\u271d : BEq R\np : UniPoly R\n\u22a2 (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) \u2208 TropicallyBoundPoly R",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/UniPoly/Basic.lean#L975"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-03-12T19:59:09-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "80e26193e4adfec6775d1f62bf8953eb8e1330b341d75ed32cce0580eacbf7a6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 1005,
        "start_column": 22,
        "end_line": 1005,
        "end_column": 27
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/UniPoly/Basic.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "4a72ebb7194a5770205236c8ceded53b1a0fb13aadb70c66c3faa86a17cbc797"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 1006,
        "start_column": 21,
        "end_line": 1006,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/UniPoly/Basic.lean#L1006"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "3a9619fc544f57ab7734ca8f8bff52f8119e6178d1cfff0ec2efd85a109004b6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 1007,
        "start_column": 21,
        "end_line": 1007,
        "end_column": 26
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : BEq R\ninst\u271d : Ring R\n\u22a2 \u2200 (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n            right_inv := \u22ef }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := \u22ef,\n              right_inv := \u22ef }.toFun\n          y",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/UniPoly/Basic.lean#L1007"
      },
      "metadata": {
        "blame_email_hash": "94b4cc0e139f",
        "blame_date": "2024-05-31T16:31:08-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "925dbbcf4b320193ea1fbd58614d2da1e6265b353a0455aafb37fe8ea7b8b1c2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 254,
        "start_column": 2,
        "end_line": 254,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h\nm n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\nT : pSpec\u2081.FullTranscript\nT' : pSpec\u2082.FullTranscript\ni : Fin m\n\u22a2 _root_.cast \u22ef (T i) = (\u22ef \u25b8 T) i",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Sequential.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-07T12:49:22-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "9b7240ad33088a4f0420079811ddc552e2c91236c01b2cd60a38a8fc7d849c02"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 559,
        "start_column": 55,
        "end_line": 559,
        "end_column": 60
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u22a2 (compose 0 (fun x => n) fun x => pSpec) = pSpec",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Sequential.lean#L559"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T18:57:31+07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "bf781fd2c92a8dff0e7bd5800ff19834d4bb267926b05a827ac13996e2bf0670"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 575,
        "start_column": 2,
        "end_line": 575,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ni : Fin m\n\u22a2 compose (\u2191i + 1) (Fin.take (\u2191i + 2) \u22ef n) (Fin.take (\u2191i + 2) \u22ef pSpec) =\n    cast \u22ef (compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec) ++\u209a pSpec i.succ)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Sequential.lean#L575"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "ee0aaebac47029ef94772a04d8cafd40c1b4dfc7acbe1b0e5f86aff40df1e14e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIndex) \u2192 ToOracle (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIndex) \u2192 ToOracle (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "852d097173e79d9a621f32e1764a29c69a9c7a18c9e19e6ece60ba307519c332"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 725,
        "start_column": 89,
        "end_line": 725,
        "end_column": 94
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIndex) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIndex) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L725"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "ffd646d51531d61e7d737ffa66192b23b761dd48fffc28af053f49a7a2f61c3a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 752,
        "start_column": 38,
        "end_line": 752,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIndex) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Sequential.lean#L752"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "d5301b00dd2ce4b5c5ab4b30e2a83ddc631da0dcda1dc0e643007893dea339c5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "486d0cde64cff684f11bc036ea330a677b0a33f67129dfce973eaa92f802e767"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "f117539370c663f89bb2c6e5ee5d8b02cb5415a56f68f18d612f59a9368b6501"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "e6993baaef7b48017a56c965b8963617232c26e0e7bedcd3362ea406b9b7b97f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "c5557703762cd135dd88cbe5c9a853b803f67584cd3c1966a9ba805feb6dc922"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 228,
        "start_column": 2,
        "end_line": 233,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "ebc773e42b65bd7706fdb24a0a02c9ecb4b97136316d93369d6b417d22b68611"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 278,
        "start_column": 4,
        "end_line": 278,
        "end_column": 9
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : \u2124[X]\nt : \u2124\nf : \u2124[X]\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Virtual.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "f054e80b7ecbc409ec7a9de956ed8da7cf994903eeca26f88869cafb7165dad5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/OracleReduction/Security/Basic.lean",
        "start_line": 357,
        "start_column": 2,
        "end_line": 357,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Security/Basic.lean#L357"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "b7b72cfb30a1824947373d60cc66dae89dd21023523edd55a1fb0d191e4a3117"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 382,
        "start_column": 75,
        "end_line": 382,
        "end_column": 80
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn StmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError \u2192\n    soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L382"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "0c5ead4245a46307e1a2ca1627432a96c785afdf12729dec96b42890a2932ce7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 393,
        "start_column": 2,
        "end_line": 393,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L393"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "a8e21ee131a48968140ab7500913d3ccf40196f1ccfa7f3733df037936afa7d4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 403,
        "start_column": 82,
        "end_line": 403,
        "end_column": 87
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L403"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "d4f60714e052d8df32470451c21e2fc5fd8a811a1cef2868612d5d665f5da92c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 267,
        "start_column": 6,
        "end_line": 267,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mk.convert_7.left\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\n\u22a2 ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "b938b3e1056500192ff45b5c7ac46bae00ebe6d3fd2e0aa9c6f8cc8ffd257a66"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 276,
        "start_column": 27,
        "end_line": 276,
        "end_column": 32
      },
      "debug_info": {
        "goal": "case pos\nR : Type\ninst\u271d\u00b9 : CommSemiring R\nd m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\ntarget : R\noStmt : (i : Unit) \u2192 InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly \u2208 R\u2983\u2264 \u2191d\u2984[X]\nh : oStmt () = \u27e8poly, hp\u27e9\nstmt : R\noStmtOut : (i : Unit \u2295 Unit) \u2192 OutputOracleStatement R d i\nfst\u271d : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : \u2211 x, Polynomial.eval (D x) poly = target\n\u22a2 (pure (stmt, fun x => \u27e8poly, hp\u27e9)).neverFailsWhen fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-16T18:04:04-04:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "a9accd2716149ecd2b347d52a05707f3ebe4cfda83f6f7b7932328406841b619"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 496,
        "start_column": 2,
        "end_line": 496,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/ProofSystem/Sumcheck/Basic.lean#L496"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "88fc2ed57d742cd39faa229908302abb0bb60f306c7a02fbc20aed1d1ba9bdb4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 505,
        "start_column": 57,
        "end_line": 505,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    \u27e81, \u22ef\u27e9 x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "f24a85d7adc8111b49dc589d9e8cbcbf06c2c9eeccc5ac357df8f53ba7981c3a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | \u27e8poly, property\u27e9 =>\n          \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n            target",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "20f4800a1927dfb4c37b9d9561f23730e7c711ac5563e31bd6829f43cba9de7e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 571,
        "start_column": 4,
        "end_line": 571,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R\u271d : Type\ninst\u271d\u2075 : CommSemiring R\u271d\nn\u271d deg\u271d m\u271d : \u2115\nD\u271d : Fin m\u271d \u21aa R\u271d\n\u03b9\u271d : Type\noSpec\u271d : OracleSpec \u03b9\u271d\ninst\u271d\u2074 : VCVCompatible R\u271d\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni\u271d : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  \u00acrelation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i),\n    (a, b) \u2208 (Verifier.run stmt tr (verifier R n deg D oSpec i)).support \u2192\n      \u2200 (x : Unit), \u00acrelation R n deg D i.succ (a, b) x",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "364b15ae0e91b630ab1b8122133e779c5a60db4db83b3c89c57a1d2d44eab190"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 646,
        "start_column": 42,
        "end_line": 646,
        "end_column": 47
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L646"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "f880e198932306ad238c44908557359d44733654aeb1491cf830e46f7ecdaba2"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ZKLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n                (OptionT.run \u2218 fun cache =>\n                  verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n            fun {\u03b1_1} q =>\n            match \u03b1_1, q with\n            | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n          fun __do_lift => __do_lift.getM)\n        ()).neverFailsWhen\n    fun {\u03b1} x => Set.univ",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
      },
      "id": "4771b3d3db601fc7c1651f675a3985efdfcc4664a281f4879d70f344ab1c9872"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "mariainesdff/isup_lemmas",
        "commit": "9171df48f3adfe318101adbbbae9771dff90a0e2",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean",
        "start_line": 455,
        "start_column": 33,
        "end_line": 455,
        "end_column": 38
      },
      "debug_info": {
        "goal": "\u03b9 : Sort u_1\ninst\u271d : Nonempty \u03b9\nf : \u03b9 \u2192 \u211d\nhf : \u2200 (i : \u03b9), 0 \u2264 f i\nn : \u2115\nhn : n \u2260 0\nhf_bdd : \u2200 (x : \u211d), \u2203 y \u2208 Set.range f, x < y\nx : \u211d\na : \u03b9\nhax : x ^ (1 / \u2191n) < f a\n\u22a2 0 < \u2191n",
        "url": "https://github.com/leanprover-community/mathlib4/blob/9171df48f3adfe318101adbbbae9771dff90a0e2/Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean#L455"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2025-04-22T17:56:46+02:00",
        "inclusion_date": "2025-04-22T23:16:22.108310+00:00"
      },
      "id": "be413472e395f4ada0f788c69719eae4047ed10b0ea6fe684e77bd040a5d13ac"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group",
        "commit": "c93714889b11af507b2aba887ed572442c733635",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 43,
        "start_column": 14,
        "end_line": 43,
        "end_column": 19
      },
      "debug_info": {
        "goal": "d : \u2115\na\u271d b\u271d : \u2191(\ud835\udcdb d)\n\u22a2 a\u271d \u2208 Restricted d \u2192 b\u271d \u2208 Restricted d \u2192 a\u271d * b\u271d \u2208 Restricted d",
        "url": "https://github.com/HEPLean/PhysLean/blob/c93714889b11af507b2aba887ed572442c733635/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-04-23T00:56:21+10:00",
        "inclusion_date": "2025-04-22T23:41:43.397834+00:00"
      },
      "id": "99b053006370fffe2a83eff1ec225c70986baa9f32a5f3c272c1edab77433d5a"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group",
        "commit": "c93714889b11af507b2aba887ed572442c733635",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 44,
        "start_column": 14,
        "end_line": 44,
        "end_column": 19
      },
      "debug_info": {
        "goal": "d : \u2115\nx\u271d : \u2191(\ud835\udcdb d)\n\u22a2 x\u271d \u2208 { carrier := Restricted d, mul_mem' := \u22ef, one_mem' := \u22ef }.carrier \u2192\n    x\u271d\u207b\u00b9 \u2208 { carrier := Restricted d, mul_mem' := \u22ef, one_mem' := \u22ef }.carrier",
        "url": "https://github.com/HEPLean/PhysLean/blob/c93714889b11af507b2aba887ed572442c733635/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-04-23T00:56:21+10:00",
        "inclusion_date": "2025-04-22T23:41:43.397834+00:00"
      },
      "id": "fc648fc33a34a12b28465821e7b05c6d6429ebde031a28d251db85c6a318654f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 185,
        "start_column": 2,
        "end_line": 185,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Execution.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "896d6432d41c7b0d133c82c603b2722eaf6036fa8bd78c0dd8f4ba7c0182212d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 278,
        "start_column": 2,
        "end_line": 278,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                match i with\n                | \u27e80, isLt\u27e9 => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | \u27e80, isLt\u27e9 => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Execution.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "3addc07e90e140ef0b0af6900f9b832cd7b02c2f1a2126c4559df80dcd57aacb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := generateProof \u03b1 i cache\n          verifyProof \u03b1 i leaves[i] (getRoot \u03b1 cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n              (OptionT.run \u2218 fun cache =>\n                verifyProof \u03b1 i (leaves.get i) (getRoot \u03b1 cache) (generateProof \u03b1 i cache))).mapM\n          fun {\u03b1_1} q =>\n          match \u03b1_1, q with\n          | .((spec \u03b1).range i), query i (left, right) => pure (hash (left, right))) >>=\n        fun __do_lift => __do_lift.getM)\n      ()).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "645b122ed314c884d53657f8293f42267545ae1e9956194117192fb890d80b11"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "5660ac2e84aa9398c62d43c4ba6c17e5420c27b25ec1c953309e905ef3750f82"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 =>\n          ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1.1), a.2.2.1, a.2.2.2,\n            a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "9dab56482964bc9b5560df7acc804f995ae65e3db75774af904d555155a9a285"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 201,
        "start_column": 2,
        "end_line": 201,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\ncompletenessError : \u211d\u22650\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn \u2192\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run stmtIn witIn R] \u2265\n        1 - \u2191completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run (data.fStmtIn stmtIn) (data.fWitIn witIn) R] \u2265\n    1 - \u2191completenessError\nx\u271d : (StmtOut' \u00d7 WitOut') \u00d7 StmtOut' \u00d7 pSpec.FullTranscript\na\u271d : x\u271d \u2208 (run (data.fStmtIn stmtIn) (data.fWitIn witIn) R).support\nhRelOut' : relOut' x\u271d.2.1 x\u271d.1.2 \u2227 x\u271d.1.1 = x\u271d.2.1\n\u22a2 ((fun x => relOut x.2.1 x.1.2 \u2227 x.1.1 = x.2.1) \u2218 fun a =>\n      ((data.fStmtOut (stmtIn, a.1.1), data.fWitOut (witIn, a.1.2)), data.fStmtOut (stmtIn, a.2.1), a.2.2))\n    x\u271d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-22T09:32:10-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "5b8e47146a7b0f13ad1679036acae7968c0dbe5279f746b32a8ac533ff165395"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 215,
        "start_column": 2,
        "end_line": 215,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L215"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "468d7cccde62cb6e6a856ebad4f59d7d5b1bc557bc64791b36af256395f682de"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 229,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Composition/Virtual.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "5693e308d28f423f8b2d1faae0b1be7a5651230ccdef851961e9cb08b1667aef"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 361,
        "start_column": 2,
        "end_line": 361,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIndex) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/OracleReduction/Security/Basic.lean#L361"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "e7e93c3c5808e27103634da4adf56d6d57dbfd825f8112cc0118cfeeb31f6115"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 513,
        "start_column": 57,
        "end_line": 513,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 (do\n      let x \u2190\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                \u27e80, \u22ef\u27e9\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn\u271d)).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)\n      let a \u2190 liftM (query (Sum.inr \u27e81, \u22ef\u27e9) ())\n      (fun a_1 =>\n            ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                  \u27e81, \u22ef\u27e9 x.2 a),\n              a_1, Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++\u2092 [(pSpec R deg).Challenge]\u2092)).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L513"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "3a182ef55c7a57e87b58fa80a40f4ef63a8dca28568f03634af09297595e4b5a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 522,
        "start_column": 2,
        "end_line": 522,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case right\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 OracleStatement R n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast \u22ef)) \u2191(oStmt 0) =\n    target\n\u22a2 \u2200 (a : Statement R n i.succ) (b : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_1 : Unit) (a_1 : Statement R n i.succ)\n    (b_2 : (i : Fin 1) \u2192 OracleStatement R n deg i) (b_3 : (pSpec R deg).FullTranscript),\n    (((a, b), b_1), (a_1, b_2), b_3) \u2208\n        (run ({ target := target, challenges := challenge }, oStmt) witIn\u271d\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support \u2192\n      (match (a_1, b_2) with\n        | ({ target := target, challenges := challenges }, oStmt) =>\n          match oStmt 0 with\n          | \u27e8poly, property\u27e9 =>\n            \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n                (MvPolynomial.eval (Fin.append challenges x \u2218 Fin.cast \u22ef)) poly =\n              target) \u2227\n        (a, b) = (a_1, b_2)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L522"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "c3e91a4b9c295d1ec5191fa19fc1ddef254e6eec71ade4d266426e062656df56"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 106,
        "start_column": 2,
        "end_line": 106,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 \u2200 (n : \u2115) (f : \u2102 \u2192 \u2102) (z : \u2102) (hf : \u2200 (z : \u2102), AnalyticAt \u2102 f z),\n    \u22ef.order \u2260 \u22a4 \u2192 ((\u2200 k < n, iteratedDeriv k f z = 0) \u2227 iteratedDeriv k f z \u2260 0 \u2194 \u22ef.order = \u2191n)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L106"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-23T18:11:52+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "a98b1ead9fa56944dfb177a7485fd70651cdfdcaf74dd4cebd9ba7a7fc8c1b90"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 125,
        "start_column": 74,
        "end_line": 125,
        "end_column": 79
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2200 (f : \u2102 \u2192 \u2102) (z\u2080 : \u2102) (hf : \u2200 (z : \u2102), AnalyticAt \u2102 f z), (\u2200 k < n, iteratedDeriv k f z\u2080 = 0) \u2192 \u2191n \u2264 \u22ef.order",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L125"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-23T18:11:52+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "a59249705b34abc51e860efed72dea467fd81a4e049eab04b73a2cd7dee46b4f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 112,
        "start_column": 50,
        "end_line": 112,
        "end_column": 55
      },
      "debug_info": {
        "goal": "k : \u2115\nf : \u2102 \u2192 \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\n\u22a2 \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-23T18:11:52+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "665e5cf6f92e441232d11640cc0bf1433a8af5c3ddf959689f62bd831eeb4015"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 116,
        "start_column": 71,
        "end_line": 116,
        "end_column": 76
      },
      "debug_info": {
        "goal": "k : \u2115\nf : \u2102 \u2192 \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhfdev : \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z\n\u22a2 \u2200 (z : \u2102), \u22ef.order = \u22ef.order - 1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L116"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-23T18:11:52+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "7960b68b88dc3342e2bc31527ed7108b0d9741fcd22995835e4622cb22d98a67"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 201,
        "start_column": 53,
        "end_line": 205,
        "end_column": 9
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' \u2022 \u03b1')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "09cc12df4d13e1a6384b15128e6ac1ff2e9f7ff63d48eeadbc4d60a6b544849d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 207,
        "start_column": 53,
        "end_line": 209,
        "end_column": 33
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' \u2022 \u03b2')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L207"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "1b4338af4cd61c689baa91592e7b68b018533c4a593f6564e60ea1ad0a0dba3b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 211,
        "start_column": 53,
        "end_line": 212,
        "end_column": 90
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' \u2022 \u03b3')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L211"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "366c72122992ef7b7c258f5f206745bb38e23eaad348c08eee3950d3e5b704c0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 215,
        "start_column": 66,
        "end_line": 233,
        "end_column": 24
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nk a b n : \u2115\n\u22a2 1 \u2264 n \u2192 k \u2264 n - 1 \u2192 1 \u2264 a \u2192 1 \u2264 b \u2192 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (n - 1) \u2022 (\u2191a + b \u2022 \u03b2') ^ k)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L215"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "35e3fe64bdcd4e6fbb752d80cfc172e70dad199f9b5bc2bfe5fab82b9200b27e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 236,
        "start_column": 57,
        "end_line": 242,
        "end_column": 42
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nu : K\nn k a l : \u2115\nhnk : a * l \u2264 n * k\nH : IsIntegral \u2124 (\u2191(c\u2081 K \u03b1' \u03b2' \u03b3') * u)\n\u22a2 IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (n * k) \u2022 u ^ (a * l))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "93f29c361b9b73dd0d783c3328ac218b9e7a9432fa122b8f722dd62ff33785ef"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 254,
        "start_column": 68,
        "end_line": 262,
        "end_column": 46
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n  let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n  IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (m K * q) \u2022 \u03b1' ^ (a * l))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "d1363095a50f95b2cc7b6a1b6a9d3f4de949bbbc075450317d1157f668fc344f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 268,
        "start_column": 69,
        "end_line": 276,
        "end_column": 46
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n\u22a2 let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n  let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n  IsIntegral \u2124 (c\u2081 K \u03b1' \u03b2' \u03b3' ^ (m K * q) \u2022 \u03b3' ^ (b * l))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L268"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "c011666d8e666abda88d275f2b81a85a6f6c83521f23ae4d6e23996abf13e3b5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 300,
        "start_column": 79,
        "end_line": 319,
        "end_column": 78
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 IsIntegral \u2124 (c_coeffs K \u03b1' \u03b2' \u03b3' q \u2022 sys_coeffs K \u03b1' \u03b2' \u03b3' q t u)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "d5c8bc5585a23a6471f75969b5daea48d42a5d7458bc49a1ea15ec1cbff0b585"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 321,
        "start_column": 39,
        "end_line": 328,
        "end_column": 70
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\n\u22a2 c\u2081 K \u03b1' \u03b2' \u03b3' \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L321"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "d832f45faf8f50eec176d9e16c18ac027b7f9cc1f4f913784e54b4d7e04c3f32"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 401,
        "start_column": 50,
        "end_line": 431,
        "end_column": 62
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 A K \u03b1' \u03b2' \u03b3' q hq0 h2mq \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L401"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "d01e6e6dfb0f065ca7bf952f556d29cea0a552fdef3c984f5d3feeb4f07971c1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 479,
        "start_column": 75,
        "end_line": 615,
        "end_column": 87
      },
      "debug_info": {
        "goal": "K : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 \u2200 (k : Fin (m K * n K q)) (l : Fin (q * q)),\n    house ((algebraMap (\ud835\udcde K) K) (A K \u03b1' \u03b2' \u03b3' q hq0 h2mq k l)) \u2264\n      c\u2083 K \u03b1' \u03b2' \u03b3' ^ \u2191(n K q) * \u2191(n K q) ^ ((\u2191(n K q) - 1) / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "ae737324da9d0f55492252deb14bd683500fa3078f27b22e557a7d3483d7cf44"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 952,
        "start_column": 2,
        "end_line": 952,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt\u271d\u00b9 : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nk : \u2115\nhR : R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d\u00b9 = 0\nt\u271d : Fin (q * q)\nthis : \u2200 (x : \u2102), iteratedDeriv k (fun x => R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d x) x = 0\nderiv_eq :\n  (iteratedDeriv k fun x => R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d x) = fun x =>\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * x) * \u03c1 \u03b1 \u03b2 q t ^ k\nderiv_eq_0 : iteratedDeriv k (fun x => R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\u271d x) 0 = 0\nt : Fin (q * q)\nht : t \u2208 Finset.univ\n\u22a2 \u03c1 \u03b1 \u03b2 q t ^ \u2191t\u271d = \u03c1 \u03b1 \u03b2 q t ^ k",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L952"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T00:24:25+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "47cbde8585d015e794b3eb6da2f33867ae98bed76e06e60ae8c249c0d25f3067"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1066,
        "start_column": 85,
        "end_line": 1135,
        "end_column": 61
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let l := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n  let k := \u2191(finProdFinEquiv.symm.toFun u).2;\n  l < n K q \u2192 iteratedDeriv k (R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) \u2191l = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1066"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "77b03331ed0667a80745bf92eb0c3595fc26b66a001b7b0b1d9a67c59182e47f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1324,
        "start_column": 2,
        "end_line": 1324,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115\u221e := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : k < n K q\nhk : iteratedDeriv k R \u2191l = 0\nhderiv : \u2115\n\u22a2 _root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq = \u2191hderiv \u2192 \u2203 b, \u2191(n K q) = \u2191b \u2227 b \u2264 hderiv",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1324"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "dfea1401180bbd6b04f9f896062df57ade88f6e5615da66a279e63b1d483187d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1328,
        "start_column": 15,
        "end_line": 1328,
        "end_column": 20
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  r \u2265 \u2191(n K q)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1328"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T00:20:02+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "ec1ef39785ae00bc49cfe473f7af1f01e97d1f5f7b223ddb2989a80c2b32ad12"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "6fc59efd5a9e18196ac02e7927d9a90472e8728b",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1335,
        "start_column": 56,
        "end_line": 1335,
        "end_column": 61
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let R := R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t;\n  \u2203 l\u2080, iteratedDeriv r.toNat R \u2191\u2191l\u2080 \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6fc59efd5a9e18196ac02e7927d9a90472e8728b/Mathlib/NumberTheory/h7.lean#L1335"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-24T13:22:17.874346+00:00"
      },
      "id": "a67eb09dfbfdc759f080f0854a6ede2056b67ba2d20e00e725966f4a534e50ba"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_Brooks",
        "commit": "fa6694e531e2ec92868126c9489503a913613caa",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean",
        "start_line": 364,
        "start_column": 4,
        "end_line": 364,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nG : SimpleGraph \u03b1\ninst\u271d : G.LocallyFinite\nhodd : \u2200 (u : \u03b1) (w : G.Walk u u), \u00acOdd w.length\nhbd : \u2200 (v : \u03b1), G.degree v \u2264 2\nn : \u2115\nih : \u2200 m < n, \u2200 (s : Finset \u03b1), #s = m \u2192 G.PartColorable 2 \u2191s\ns : Finset \u03b1\nhn : #s = n\nhd : \u2200 v \u2208 s, G.degreeIn (\u2191s) v = 2\nhbd' : \u2200 v \u2208 s, G.degree v = 2\nhin : \u2200 {v : \u03b1}, v \u2208 s \u2192 \u2200 {w : \u03b1}, G.Adj v w \u2192 w \u2208 s\nhem : \u00ac\u00acs.Nonempty\nv : \u03b1\nhv : v \u2208 s\nC : G.PartColoring 2 \u2191(s.erase v)\nh : 1 < G.degree v\nx y : \u03b1\nhvx : G.Adj v x\nhvy : G.Adj v y\nhxy : x \u2260 y\nhxs : x \u2208 s\nhys : y \u2208 s\n\u22a2 Nonempty ((\u22a4.induce \u2191(s.erase v)).spanningCoe.Walk x y)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/fa6694e531e2ec92868126c9489503a913613caa/Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean#L364"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-04-23T22:36:17+01:00",
        "inclusion_date": "2025-04-24T13:26:10.715315+00:00"
      },
      "id": "3ab8bf47158fbfc8f8b17f8efd720653ea33144f48b971027da26d3b3fdff3b1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "jt496_Brooks",
        "commit": "fa6694e531e2ec92868126c9489503a913613caa",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean",
        "start_line": 367,
        "start_column": 4,
        "end_line": 367,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nG : SimpleGraph \u03b1\ninst\u271d : G.LocallyFinite\nhodd : \u2200 (u : \u03b1) (w : G.Walk u u), \u00acOdd w.length\nhbd : \u2200 (v : \u03b1), G.degree v \u2264 2\nn : \u2115\nih : \u2200 m < n, \u2200 (s : Finset \u03b1), #s = m \u2192 G.PartColorable 2 \u2191s\ns : Finset \u03b1\nhn : #s = n\nhd : \u2200 v \u2208 s, G.degreeIn (\u2191s) v = 2\nhbd' : \u2200 v \u2208 s, G.degree v = 2\nhin : \u2200 {v : \u03b1}, v \u2208 s \u2192 \u2200 {w : \u03b1}, G.Adj v w \u2192 w \u2208 s\nhem : \u00ac\u00acs.Nonempty\nv : \u03b1\nhv : v \u2208 s\nC : G.PartColoring 2 \u2191(s.erase v)\nh : 1 < G.degree v\nx y : \u03b1\nhvx : G.Adj v x\nhvy : G.Adj v y\nhxy : x \u2260 y\nhxs : x \u2208 s\nhys : y \u2208 s\nhw : Nonempty ((\u22a4.induce \u2191(s.erase v)).spanningCoe.Walk x y)\nw : (\u22a4.induce \u2191(s.erase v)).spanningCoe.Walk x y\n\u22a2 C x = C y",
        "url": "https://github.com/leanprover-community/mathlib4/blob/fa6694e531e2ec92868126c9489503a913613caa/Mathlib/Combinatorics/SimpleGraph/Brooks/Brooks.lean#L367"
      },
      "metadata": {
        "blame_email_hash": "8580f8c44a06",
        "blame_date": "2025-04-23T22:36:17+01:00",
        "inclusion_date": "2025-04-24T13:26:10.715315+00:00"
      },
      "id": "ecd9f5524f3852bb39247b81a47f86f60eb6effdce5a2e6186ba1f1cb02db6b7"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "Amice_TransForm",
        "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
        "start_line": 58,
        "start_column": 51,
        "end_line": 58,
        "end_column": 56
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2074 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u00b3 : CommRing S\ninst\u271d\u00b2 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b9 : AddCommGroup M\ninst\u271d : Module R M\nf : S \u2192\u2097[R] M\nn : \u2115\n\u22a2 (J ^ n \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I ^ n \u2022 \u22a4)).toAddSubmonoid",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "c738381ff48f",
        "blame_date": "2025-04-25T12:37:49+08:00",
        "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
      },
      "id": "5ebd3caf93db2da7520a546132bc405cc889f1163d9a9e130bd4e651b6971b2e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "Amice_TransForm",
        "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
        "start_line": 73,
        "start_column": 5,
        "end_line": 73,
        "end_column": 10
      },
      "debug_info": {
        "goal": "case mk\nR : Type u_1\ninst\u271d\u2076 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u2075 : CommRing S\ninst\u271d\u2074 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\nN : Submodule R M\nP : Type u_4\ninst\u271d\u00b9 : AddCommGroup P\ninst\u271d : Module R P\nf : S \u2192\u2097[R] M\nhp : (J \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I \u2022 \u22a4)).toAddSubmonoid\nm n : \u2115\nhmn : m \u2264 n\na1 : \u2115 \u2192 S\na2 : \u2200 {m n : \u2115}, m \u2264 n \u2192 a1 m \u2261 a1 n [SMOD J ^ m \u2022 \u22a4]\n\u22a2 f (a1 m) \u2261 f (a1 n) [SMOD I ^ m \u2022 \u22a4]",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L73"
      },
      "metadata": {
        "blame_email_hash": "c738381ff48f",
        "blame_date": "2025-04-25T12:37:49+08:00",
        "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
      },
      "id": "35830cb4f81c62f28435a1ce92bb52181f57955ae5bfc0cacd424470ed3f1d51"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "Amice_TransForm",
        "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
        "start_line": 79,
        "start_column": 4,
        "end_line": 79,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2076 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u2075 : CommRing S\ninst\u271d\u2074 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\nN : Submodule R M\nP : Type u_4\ninst\u271d\u00b9 : AddCommGroup P\ninst\u271d : Module R P\nf : S \u2192\u2097[R] M\nhp : (J \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I \u2022 \u22a4)).toAddSubmonoid\nr : R\na : AdicCauchySequence J S\n\u22a2 \u27e8fun n => f (\u2191(r \u2022 a) n), \u22ef\u27e9 = (RingHom.id R) r \u2022 \u27e8fun n => f (\u2191a n), \u22ef\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "c738381ff48f",
        "blame_date": "2025-04-25T12:37:49+08:00",
        "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
      },
      "id": "688d771fcc8e0c2799acd6adafa4a5d81e5a84baee582d3404ca2cd0ae999495"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "Amice_TransForm",
        "commit": "c6c3f9e572bc88f861160d230d9573a09cff1a7a",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/RingTheory/AdicCompletion/Lemma.lean",
        "start_line": 92,
        "start_column": 5,
        "end_line": 92,
        "end_column": 10
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2076 : CommRing R\nI : Ideal R\nS : Type u_2\ninst\u271d\u2075 : CommRing S\ninst\u271d\u2074 : Algebra R S\nJ : Ideal S\nM : Type u_3\ninst\u271d\u00b3 : AddCommGroup M\ninst\u271d\u00b2 : Module R M\nN : Submodule R M\nP : Type u_4\ninst\u271d\u00b9 : AddCommGroup P\ninst\u271d : Module R P\nf : S \u2192\u2097[R] M\nhp : (J \u2022 \u22a4).toAddSubmonoid \u2264 (Submodule.comap f (I \u2022 \u22a4)).toAddSubmonoid\nm n : \u2115\nhmn : m \u2264 n\n\u22a2 transitionMap I M hmn \u2218\u2097 (fun n => AdicCompletion.ReduceModIdeal I J f n \u2218\u2097 \u2191R (eval J S n)) n =\n    (fun n => AdicCompletion.ReduceModIdeal I J f n \u2218\u2097 \u2191R (eval J S n)) m",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c6c3f9e572bc88f861160d230d9573a09cff1a7a/Mathlib/RingTheory/AdicCompletion/Lemma.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "c738381ff48f",
        "blame_date": "2025-04-25T12:37:49+08:00",
        "inclusion_date": "2025-04-25T12:50:08.264685+00:00"
      },
      "id": "067cc77c6f4186563fc6e9508d0dbf4cf1b02a40a238ac95ab5c31fc19a712ae"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 121,
        "start_column": 4,
        "end_line": 121,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k : \u2115\nf : \u2102 \u2192 \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhfdev : \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z\nz : \u2102\nthis : AnalyticAt \u2102 (deriv^[k] f) z\n\u22a2 \u22ef.order = \u22ef.order - 1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "974a7c0aaab5803e0f855aa6df727fe443a1c0ddecdd13ad6172c16d1b3c58ae"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 143,
        "start_column": 4,
        "end_line": 143,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp.intro\nk n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nH1 : \u2200 k < n, iteratedDeriv k f z = 0\nH2 : iteratedDeriv k f z \u2260 0\n\u22a2 \u2203 g, AnalyticAt \u2102 g z \u2227 g z \u2260 0 \u2227 \u2200\u1da0 (z_1 : \u2102) in nhds z, f z_1 = (z_1 - z) ^ n \u2022 g z_1",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "bbd71e621f4691ed6e86d072de459f2209e85d7606e2e474dc8d8e5256441347"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 121,
        "start_column": 4,
        "end_line": 121,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nk n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\n\u22a2 \u22ef.order = \u2191n \u2192 (\u2200 k < n, iteratedDeriv k f z = 0) \u2227 iteratedDeriv k f z \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "39dac7c29ccf55e27f827bb987fad16f0d0558896b879c6b83575c54dc7beec8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 601,
        "start_column": 8,
        "end_line": 601,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081.h\u2080.h\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (n K q - 1 + m K * q + m K * q) \u2264 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3') ^ (1 + 2 * m K * (2 * m K).sqrt)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L601"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T16:41:00+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "a2010e55f0fc9d95f3369bfe1bb23f25e052fa9e8f83f7616f040f264e670fd5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 649,
        "start_column": 8,
        "end_line": 649,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house (\u2191a + \u2191b * \u03b2') ^ k \u2264 \u2191(2 * m K).sqrt * (1 + house \u03b2')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L649"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "d26362c67415833caa283073d72482209afd93033779922f7cf32075e4a17c54"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 618,
        "start_column": 8,
        "end_line": 618,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b1' ^ (a * l) \u2264 house \u03b1' ^ (2 * m K ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L618"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "67965c499b4b59373330846a16df20d64195480f8c26c80ce608472b105e6ebd"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 672,
        "start_column": 8,
        "end_line": 672,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 house \u03b3' ^ (b * l) \u2264 house \u03b3' ^ (2 * m K ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L672"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-10T17:49:33+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "65fd28cd7a128221504f4596acd36677f7539d05a39e8fc5af97b73b1777aae9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1170,
        "start_column": 2,
        "end_line": 1170,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nhl : l < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\nh0 :\n  \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0\nh1 :\n  \u2191(\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) =\n    \u2211 x, \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u * \u2191(\u22ef.choose x)\n\u22a2 \u2211 i,\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq i) * sys_coeffs K \u03b1' \u03b2' \u03b3' q i u) =\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1170"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "f3d59fe1e180fbf3ecbada3f4f95b59b9ce4ac8e6331f86db48a4321df777b20"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1153,
        "start_column": 92,
        "end_line": 1153,
        "end_column": 97
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nhl : l < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\n\u22a2 \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1153"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "01cc0c6bbc8f49cfe6b66f37e8ddc4d7d729091767059d7be353e0e1e1a06720"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1335,
        "start_column": 2,
        "end_line": 1335,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 \u22ef.order \u2260 \u22a4",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1335"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "36b362a3935c50c79feb58fcdb833b6933ce146939318ca90d093102b329cc7d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1369,
        "start_column": 4,
        "end_line": 1369,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hf\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nhk : \u2115\n\u22a2 \u2200 (z : \u2102), AnalyticAt \u2102 (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1369"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "a850bbc0594a29c42e906cba30fe52e887b03ade002e9a245010b41445768dee"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1370,
        "start_column": 4,
        "end_line": 1370,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nhk : \u2115\n\u22a2 \u2200 k < n K q, iteratedDeriv k (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) \u2191\u2191u = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1370"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "80061ab3443b23a955ba8080eaa322ff82a5fa9cf487c43ffe4ba57900933782"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1411,
        "start_column": 15,
        "end_line": 1411,
        "end_column": 20
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  r \u2264 n K q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L1411"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T17:54:44+02:00",
        "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
      },
      "id": "4a4aaec7bf9148a6eb2a49a561a5e4ea6bf76f2e2a9a4c16ec54c34f9a4d5e44"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1388,
        "start_column": 4,
        "end_line": 1388,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nthis : (\u2200 k < n K q, iteratedDeriv k R \u2191l = 0) \u2227 iteratedDeriv k R \u2191l \u2260 0 \u2194 AnalyticAt.order \u22ef = \u2191(n K q)\n\u22a2 \u2203 l\u2080, iteratedDeriv r R \u2191\u2191l\u2080 \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1388"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "1ffb1ffb9ac2903622ea8d22ee7e1f9063946ff833700204bb3713cd1cadfe45"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1390,
        "start_column": 4,
        "end_line": 1390,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\n\u22a2 \u22ef.order \u2260 \u22a4",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1390"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "263103f521125b2e0ef2ecc7803e249d917fd903671940c60318d02afa208679"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1516,
        "start_column": 2,
        "end_line": 1516,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nH :\n  \u2211 t,\n      \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n        sys_coeffs' \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t u =\n    0\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1516"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-01T02:10:10+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "b46da180a996ee46d20a3baeb5684dd76e6cb91a95e95f34768fc1b99f7fd4f8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1443,
        "start_column": 2,
        "end_line": 1443,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 IsIntegral \u2124\n    (|c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| \u2022\n      \u2211 t,\n        \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n          let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n          let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n          let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n          let l\u2080 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n          (\u2191a + b \u2022 \u03b2') ^ r * \u03b1' ^ (a * l\u2080) * \u03b3' ^ (b * l\u2080))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1443"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-21T01:11:30+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "b593100b9e1851c41ccce07880a962877d494eab0cd1eb195a619a00e9b5fe13"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1478,
        "start_column": 2,
        "end_line": 1478,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nH : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\n\u22a2 \u2016(Algebra.norm \u2124)\n        (RingOfIntegers.restrict\n          (fun x =>\n            \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) *\n              rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\n          \u22ef \u2124)\u2016 =\n    \u2191((Algebra.norm \u2124) \u2191c\u03c1) * \u2191((Algebra.norm \u2124) \u03c1)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1478"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-23T18:11:52+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "dd8dc1ff1d36b4941a3d43a9265b21107dc4225282f33092e2d26b45abf113b3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1520,
        "start_column": 6,
        "end_line": 1520,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 _root_.c\u2081 K \u03b1' \u03b2' \u03b3' ^ (h K * r + h K * 2 * m K * q) < (_root_.c\u2081 K \u03b1' \u03b2' \u03b3' ^ (h K * (2 * m K * q))) ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1520"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "54a1faac48316eeb1f48cb12ed2339a0cb892de7648fdcd223c353e21810738a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1526,
        "start_column": 8,
        "end_line": 1526,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 1 < (\u2191|c' K \u03b1' * c' K \u03b2' * c' K \u03b3'| ^ (\u2191(h K) * (2 * \u2191(m K) * \u2191q))) ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1526"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-23T18:11:52+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "9f9de7c5b728f5e01c3ed3050559aada062f4292bcbd41098141a52c2e1ea933"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1565,
        "start_column": 6,
        "end_line": 1565,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_2.hb\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 0 < \u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1565"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "30c19372c58642202832eb9f851a602ad699d59dd14a467887b50f1d6688f258"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1586,
        "start_column": 4,
        "end_line": 1586,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (Algebra.norm \u2124) \u2191c\u03c1 = c\u03c1 ^ Module.finrank \u211a K\n\u22a2 \u2191c\u2081 ^ (-\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)) < \u2191|(Algebra.norm \u2124) \u03c1|",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1586"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "59e661125fb0db0e8b74d286843806bf14469775c5e5236ecfda3bb70855b7f0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1588,
        "start_column": 2,
        "end_line": 1588,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case calc.step\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 |\u2191((Algebra.norm \u2124) \u03c1)| < \u2016(Algebra.norm \u211a) \u03c1\u2016",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1588"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "54f92dafbc5b02600153c3bb9c244c4a8eb0d4f684ecde1ae00cbe9e5190f669"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1656,
        "start_column": 8,
        "end_line": 1656,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 house\n        ((\u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun i).2 + 1) \u2022 \u03b2') ^\n            _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq *\n          \u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun i).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) *\n      house (\u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1))) \u2264\n    house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1656"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T03:28:14+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "f45a3036ef640fad5c0ec782304aa831f484e829e975941153dc319742582043"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1662,
        "start_column": 4,
        "end_line": 1662,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_5\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 \u2211 t,\n      c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) *\n        (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) \u2264\n    (\u2211 t, house (sys_coeffs' \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t u)) * \u2191\u2191t *\n          (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))) *\n        (c\u2086 * \u2191q) ^ r *\n      c\u2087 ^ \u2191q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1662"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T17:54:44+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "f76553ac20bef15a4846ed3825e07faaa91bd26d424f08f2caa8fe7e6b651dfb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1663,
        "start_column": 4,
        "end_line": 1663,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_6\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 (\u2211 t, house (sys_coeffs' \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t u)) * \u2191\u2191t *\n          (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))) *\n        (c\u2086 * \u2191q) ^ r *\n      c\u2087 ^ \u2191q \u2264\n    c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1663"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T17:54:44+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "a0b788c999a838a3b26ff55400dd939b24436f89a6e873377ffb7564471b20a9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1970,
        "start_column": 8,
        "end_line": 1970,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case hb.ha.h.h\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nz : \u2102\nhz : \u2016z\u2016 < \u2191(m K) * (1 + \u2191r / \u2191q) \u2227 \u00acz = \u2191\u2191l\u2080\nx : \u2102\nHX : x = \u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1970"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "0ca68db265e4fb03d3128ca719ffaafc4a9d4ed6ecd61b1a3a3e9ff18a181392"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1971,
        "start_column": 6,
        "end_line": 1971,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case hb.hb\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nz : \u2102\nhz : z \u2208 Metric.ball 0 (\u2191(m K) * (1 + \u2191r / \u2191q)) \\ {\u2191\u2191l\u2080}\n\u22a2 Differentiable \u2102 fun y =>\n    \u220f k \u2208 Finset.range (m K) \\ {\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)},\n      ((\u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) - \u2191k) / (y - \u2191k)) ^\n        _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1971"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T21:06:47+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "b26c918ca0352ff89d1a561ddb4b78b7c289dc50520a5a52938ef5b4c69edca0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2000,
        "start_column": 10,
        "end_line": 2000,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case hb.ha\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : \u2191\u2191l\u2080 < \u2191(m K)\n\u22a2 0 < \u2191r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2000"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T00:20:02+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "655e148f911cd5022e82f8b9bf0f09a1e975b31440cf3b3dc43d11983f11da63"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1739,
        "start_column": 4,
        "end_line": 1739,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hc.h.a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nx : \u2102\nhx : \u2016x\u2016 \u2264 \u2191(m K) * (1 + \u2191r / \u2191q)\n\u22a2 \u2016x\u2016 < \u2191(m K) * (1 + \u2191(_root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) / \u2191q) \u2227\n    \u00acx = \u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1739"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "f629bd0c5117a0168b69f7b19787c0b8d52b1ed0dc67580b5c9bce5d843f5e9c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2028,
        "start_column": 4,
        "end_line": 2028,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u22a2 \u03c3 \u03c1 = Complex.log \u03b1 ^ (-\u2191r) * S \u2191\u2191l\u2080",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2028"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "29934e6308a55a7b4c42ef76a62735111d29a52ef09815f7d710551690229e1f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1792,
        "start_column": 6,
        "end_line": 1792,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house ((algebraMap (\ud835\udcde K) K) (_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t)) \u2264\n    _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))\n\u22a2 \u2016\u03c3 \u2191(_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq i)\u2016 \u2264\n    _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1792"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T15:36:55+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "b7202115fc58575cc8505cea5217696688c051733c76e2f860028c9dbc16f533"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2084,
        "start_column": 8,
        "end_line": 2084,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_3.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * \u2191(m K) * (1 + \u2191r / \u2191q)) * \u2016\u03b1\u2016 \u2264 c\u2089 ^ (r + q)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2084"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T17:31:30+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "54cddcd4e0d5449198379fb7a271f776859c74254d37f8cac961438e97833631"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2103,
        "start_column": 16,
        "end_line": 2103,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 0 \u2264 \u2191r / \u2191q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2103"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-16T17:08:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "156c64579d4cc4f8e4357c05119f9fef79ab10500bde0ffa0183e430c3093d74"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1860,
        "start_column": 4,
        "end_line": 1860,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q ^ 2 * (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1860"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "a411c3a1fec72bb567c11a1524eb69cbe558f9eade42e99aaf0bb6b2f5e15e98"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2070,
        "start_column": 63,
        "end_line": 2070,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 \u2200 (i : Fin (q * q)), \u2016cexp (_root_.\u03c1 \u03b1 \u03b2 q i * z)\u2016 \u2264 Real.exp ((\u2191q + \u2191q * \u2016\u03b2\u2016) * \u2191(m K) * (1 + \u2191r / \u2191q)) * \u2016\u03b1\u2016",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2070"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T16:59:45+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "1372e7f4eb13d1835f98789c7f890f1d9927614f5ffbf1ef600d8833bbbfeeed"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1969,
        "start_column": 6,
        "end_line": 1969,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_3.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2016R z\u2016 * \u20161 / (z - \u2191l\u2080) ^ r\u2016 * \u2016\u220f k \u2208 Finset.range (m K) \\ {l\u2080}, ((\u2191l\u2080 - \u2191k) / (z - \u2191k)) ^ r\u2016 \u2264\n    c\u2081\u2080 ^ r * \u2191r ^ ((r + 3) / 2) * c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1969"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-16T17:08:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "2481f13071e73b61168db2adfa2acfc10ccfca0e48ebbf49c1accb6733b2654b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1976,
        "start_column": 4,
        "end_line": 1976,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r.factorial * (c\u2081\u2080 ^ r * \u2191r ^ ((r + 3) / 2) * c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)) \u2264 c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L1976"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T00:20:02+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "bbca8b0b7f95e832e93e677c6565ce6720b9d096f59525d3e71ed1f817291425"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2293,
        "start_column": 52,
        "end_line": 2293,
        "end_column": 57
      },
      "debug_info": {
        "goal": "\u03b3 \u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nh\u03b3 : \u03b3 = \u03b1 ^ \u03b2\n\u22a2 let R := R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t;\n  let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let l\u2080 := l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let S := S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  let \u03c1 := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq;\n  let \u03b7 := \u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  \u03c3 \u03c1 = \u2191(2 * Real.pi)\u207b\u00b9 * \u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191\u2191l\u2080)\u207b\u00b9 * S z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2293"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "e6278ab7825de93afaec3b5d12ed2d825cef69bb025872ab7a02e9b418f60da6"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2320,
        "start_column": 4,
        "end_line": 2320,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2016(2 * Real.pi)\u207b\u00b9\u2016 * \u2016\u222e (z : \u2102) in C(0, \u2191(m K) * (1 + \u2191r / \u2191q)), (z - \u2191\u2191l\u2080)\u207b\u00b9 * S z\u2016 \u2264\n    \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2320"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "a2fa0b45f5fac184eb644741448c35c31595b6165bf2a6671a0a1c46255d415c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2321,
        "start_column": 4,
        "end_line": 2321,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2016Complex.log \u03b1\u2016 ^ (-\u2191r) * \u2191(m K) * (1 + \u2191r / \u2191q) * c\u2081\u2082 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2) * \u2191q / (\u2191(m K) * \u2191r) \u2264\n    c\u2081\u2083 ^ r * \u2191r ^ (r * (3 - m K) / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2321"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "ee41fadab2d2dc89da2deb35b40fb259b4f791136993fd32773530bb5f00a218"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2336,
        "start_column": 6,
        "end_line": 2336,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2336"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T15:36:55+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "6af829454970d83833881dd0dacc1004117a2ef656d2b9b885fe31465e57893f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2036,
        "start_column": 4,
        "end_line": 2036,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2036"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "885b3b7e6246c31c2d3b48ff7559ca8893f3eb38303373b0b04733167307eed0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2038,
        "start_column": 4,
        "end_line": 2038,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 c\u2081\u2084 ^ r * \u2191r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) =\n    c\u2081\u2084 ^ r * \u2191r ^ ((\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2038"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-23T18:11:52+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "df6868359a5e390049436aa0c0e0cc2191a8161356534e10e0da7193aace38ac"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2047,
        "start_column": 2,
        "end_line": 2047,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.left\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq \u2265 n K q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2047"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "136683fe6640e0431e0e6d7ee16913a93593e676af553f8c7cf06f354df25545"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2049,
        "start_column": 2,
        "end_line": 2049,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.right\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 \u2191(r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) ^\n      ((r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq - 3 * h K) / 2) \u2265\n    c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2049"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T02:58:34+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "79f5fc4859edfd3e96dcb24a0859844733ce4323c76f61facda4d02bb9f6655c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2062,
        "start_column": 4,
        "end_line": 2062,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r ^ (r / 2 - 3 * h K / 2) < c\u2081\u2084 ^ r * c\u2085 K \u03b1' \u03b2' \u03b3' q ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2062"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "4bb5e9e9d181535b0b3f59de7f571517026ac5c88fec800c6398994a027c53bf"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "e6ee3438876611142fd0c7aa2dc6abce306726d0",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2077,
        "start_column": 2,
        "end_line": 2077,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro.intro.intro.intro.intro\n\u03b1 \u03b2 : \u2102\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nh\u03b3 : IsAlgebraic \u211a (\u03b1 ^ \u03b2)\nK : Type\nhK : Field K\nhNK : NumberField K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\nmain :\n  \u2200 (q : \u2115),\n    Fin (m K * n K q) \u2192\n      Fin (q * q) \u2192 0 < q \u2192 2 * m K \u2223 q ^ 2 \u2192 \u2203 r \u2265 n K q, \u2191r ^ ((r - 3 * h K) / 2) \u2265 c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r\nuse5 :\n  \u2200 (q : \u2115) (u : Fin (m K * n K q)) (t : Fin (q * q)) (hq0 : 0 < q) (h2mq : 2 * m K \u2223 q ^ 2),\n    let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n    let l\u2080 := l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n    let S := S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n    \u2191r ^ (r / 2 - 3 * h K / 2) < c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/e6ee3438876611142fd0c7aa2dc6abce306726d0/Mathlib/NumberTheory/h7.lean#L2077"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-04-25T12:56:52.386588+00:00"
      },
      "id": "9b03a2bd21fccca8c157ae1bf1f4e126ab60462d675743af7183b4bbdefb7395"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Balloon.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03c6 : Formula \u2115\nM : Model\ninst\u271d : IsStrictOrder M.World M.Rel\nx : M.World\nh : \u00acx \u22a7 \u25a1\u03c6\n\u22a2 \u2203 y, x \u227a y \u2227 \u00acy \u22a7 \u03c6 \u2227 y \u22a7 \u25a1\u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/Kripke/Balloon.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-04-26T09:19:50+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "0c099c59504e71b41f15ba6f99326db35364c1d59006ff66a919cdfb9c2be314"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-normal-subgroup",
        "commit": "7efc0494a3f9ffa13d2d91a1a08147e152e16198",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Orthochronous.lean",
        "start_line": 206,
        "start_column": 4,
        "end_line": 206,
        "end_column": 9
      },
      "debug_info": {
        "goal": "d : \u2115\n\u039b : \u2191(\ud835\udcdb d)\nh_inv : orthchroRep \u039b\u207b\u00b9 = (orthchroRep \u039b)\u207b\u00b9\nh_orth : \u00acIsOrthochronous \u039b\nh\u039b_neg_1 : orthchroRep \u039b = Additive.toMul 1\n\u22a2 Additive.toMul 1 ^ (-1) = Additive.toMul 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/7efc0494a3f9ffa13d2d91a1a08147e152e16198/PhysLean/Relativity/Lorentz/Group/Orthochronous.lean#L206"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-04-25T22:31:36+10:00",
        "inclusion_date": "2025-04-25T13:23:47.451861+00:00"
      },
      "id": "82cab58c5640390839077e906aeb2d41195fb2dc376f64deee531c795a3a7a3b"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-normal-subgroup",
        "commit": "7efc0494a3f9ffa13d2d91a1a08147e152e16198",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 58,
        "start_column": 14,
        "end_line": 58,
        "end_column": 19
      },
      "debug_info": {
        "goal": "d : \u2115\n\u039b O : \u2191(\ud835\udcdb d)\nhO : IsOrthochronous O\nh\u039b : IsOrthochronous \u039b\n\u22a2 IsOrthochronous (\u039b * O * \u039b\u207b\u00b9)",
        "url": "https://github.com/HEPLean/PhysLean/blob/7efc0494a3f9ffa13d2d91a1a08147e152e16198/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-04-25T23:07:18+10:00",
        "inclusion_date": "2025-04-25T13:23:47.451861+00:00"
      },
      "id": "54857a656da9dc2637c63410a22a059314f33cdc1634c493940940cd45ec81ff"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-normal-subgroup",
        "commit": "7efc0494a3f9ffa13d2d91a1a08147e152e16198",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 59,
        "start_column": 14,
        "end_line": 59,
        "end_column": 19
      },
      "debug_info": {
        "goal": "d : \u2115\n\u039b O : \u2191(\ud835\udcdb d)\nhO : IsOrthochronous O\nh\u039b : \u00acIsOrthochronous \u039b\n\u22a2 IsOrthochronous (\u039b * O * \u039b\u207b\u00b9)",
        "url": "https://github.com/HEPLean/PhysLean/blob/7efc0494a3f9ffa13d2d91a1a08147e152e16198/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-04-25T22:31:36+10:00",
        "inclusion_date": "2025-04-25T13:23:47.451861+00:00"
      },
      "id": "07360f171b5f050ee560707a280cd644dd538f50cbf288a838b33a200e9aed60"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 162,
        "start_column": 60,
        "end_line": 162,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u00bb = 1 \u2022 1 + Nat.rawCast 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "3e73ea66dc72bdb85506f47a4a61f55d8f848317d1ad0f0b59db9e1e294be3eb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 163,
        "start_column": 25,
        "end_line": 163,
        "end_column": 30
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$a\u00bb $a\u271d : \u00ab$A\u00bb\n\u22a2 \u00ab$a\u00bb = $a\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L163"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "79fd4a7061657af5982a0065d004d1068dc38de3e72637483590fc5463b805bc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 285,
        "start_column": 31,
        "end_line": 285,
        "end_column": 36
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u00bb : Type v\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u00bb : CommSemiring \u00ab$R\u00bb\n\u00ab$sRA\u00bb : Algebra \u00ab$R\u00bb \u00ab$A\u00bb\n$r\u271d : \u00ab$R\u00bb\n$a\u271d : \u00ab$A\u00bb\n\u00ab$n\u00bb : \u2115\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$pa\u00bb : $a\u271d = \u2191\u00ab$n\u00bb * \u00ab$a\u00bb\n$expr\u271d : \u00ab$R\u00bb\n\u00ab$pr'\u00bb : $r\u271d = $expr\u271d\n\u00ab$r\u00bb : \u00ab$R\u00bb\n\u00ab$pr\u00bb : $expr\u271d * \u2191\u00ab$n\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u271d \u2022 $a\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L285"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "9cb0a255d75f77b1ed12710e068bfdd121bb69ac79c8e5645ddabe273810c759"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 327,
        "start_column": 54,
        "end_line": 327,
        "end_column": 59
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d \u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$R\u2081\u00bb : Type w := \u00ab$R\u2082\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 $r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n$r\u2081'\u271d \u00ab$r\u2081'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2081'\u00bb : $r\u2081'\u271d = \u00ab$r\u2081'\u00bb\n\u00ab$r\u2082'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082'\u00bb : \u00ab$r\u2082\u00bb = \u00ab$r\u2082'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb + \u00ab$r\u2082'\u00bb = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L327"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "c41558a93128b8d42d5ec663bb1321f82091cd9b9f748a971fd3d8c91149677a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 339,
        "start_column": 53,
        "end_line": 339,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082\u00bb : \u00ab$r\u2082\u00bb = $expr\u271d\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 1 + Nat.rawCast 0 + $expr\u271d = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2082\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L339"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "38d93f8c987b0bd1ca9604ac5477590e4ef15aaf46ac5353baed1d6b225e6d6a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 350,
        "start_column": 53,
        "end_line": 350,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u00ab$u\u00bb \u00ab$v\u00bb \u00ab$w\u00bb : Level\n\u00ab$A\u00bb : Type u\n\u00ab$R\u2081\u00bb : Type v\n\u00ab$R\u2082\u00bb : Type w\n\u00ab$sA\u00bb : CommSemiring \u00ab$A\u00bb\n\u00ab$sR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$sRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$sR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$sRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n$r\u2081\u271d\u00b9 : \u00ab$R\u2081\u00bb\n$r\u2082\u271d\u00b9 : \u00ab$R\u2082\u00bb\n$a\u2081\u271d $a\u2082\u271d : \u00ab$A\u00bb\n$r\u2082\u271d : \u00ab$R\u2082\u00bb\n$r\u2081\u271d \u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u2082\u00bb : \u00ab$A\u00bb\n\u00ab$pra\u2082\u00bb : $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u2082\u00bb\n\u00ab$a\u2081\u00bb : \u00ab$A\u00bb := \u00ab$a\u2082\u00bb\n\u00ab$pra\u2081\u00bb : $r\u2081\u271d \u2022 $a\u2081\u271d = \u00ab$r\u2081\u00bb \u2022 \u00ab$a\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n$expr\u271d : \u00ab$R\u2081\u00bb\n\u00ab$pr\u2081\u00bb : \u00ab$r\u2081\u00bb = $expr\u271d\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 1 + Nat.rawCast 0 + $expr\u271d = \u00ab$r\u00bb\n\u22a2 $r\u2081\u271d \u2022 $a\u2081\u271d + $r\u2082\u271d \u2022 $a\u2082\u271d = \u00ab$r\u00bb \u2022 \u00ab$a\u2081\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L350"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "615b85ce20348b7db69790997369ea18935333141092218ce11b3c694d0af33f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 507,
        "start_column": 37,
        "end_line": 507,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb \u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$R\u2081\u00bb : Type u\u2082 := \u00ab$R\u2082\u00bb\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n$r\u2081'\u271d \u00ab$r\u2082'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082'\u00bb : \u00ab$r\u2082\u00bb = \u00ab$r\u2082'\u00bb\n\u00ab$r\u2081'\u00bb : \u00ab$R\u2082\u00bb := \u00ab$r\u2081\u00bb\n\u00ab$pr\u2081'\u00bb : $r\u2081'\u271d = \u00ab$r\u2081'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081'\u00bb * \u00ab$r\u2082'\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L507"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-08T17:33:25+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "3ac5707ea2567ae38fa216b3247478e017c5c611efcf6858b24c57082e48a466"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 519,
        "start_column": 38,
        "end_line": 519,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb : Level\n\u00ab$R\u2081\u00bb : Type u\u2081\n\u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$_i\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb := \u00ab$_i\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2081\u00bb \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$r\u2082'\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u2082'\u00bb : \u00ab$r\u2082\u00bb = \u00ab$r\u2082'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082'\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L519"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "9ac0a2c4ba67793806bd3a51e572c62f30ec0221a884accb1d73b35dbaf6308c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "arend/algebra",
        "commit": "6706af18f127b0a3c0e8442a9af50d9257bb7703",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Mathlib/Tactic/Algebra.lean",
        "start_line": 530,
        "start_column": 38,
        "end_line": 530,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\u00ab$v\u00bb : Level\n\u00ab$A\u00bb : Type v\n\u00ab$iA\u00bb : Semiring \u00ab$A\u00bb\n\u00ab$u\u2081\u00bb : Level\n\u00ab$R\u2081\u00bb : Type u\u2081\n\u00ab$iR\u2081\u00bb : CommSemiring \u00ab$R\u2081\u00bb\n\u00ab$iRA\u2081\u00bb : Algebra \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$u\u2082\u00bb : Level\n\u00ab$R\u2082\u00bb : Type u\u2082\n\u00ab$r\u2081\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$r\u2082\u00bb : \u00ab$R\u2082\u00bb\n\u00ab$a\u00bb : \u00ab$A\u00bb\n\u00ab$_i\u2081\u00bb : CommSemiring \u00ab$R\u2082\u00bb\n\u00ab$_i\u2083\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb\n\u00ab$iR\u2082\u00bb : CommSemiring \u00ab$R\u2082\u00bb := \u00ab$_i\u2081\u00bb\n\u00ab$iRA\u2082\u00bb : Algebra \u00ab$R\u2082\u00bb \u00ab$A\u00bb\n\u00ab$_i\u2084\u00bb : IsScalarTower \u00ab$R\u2082\u00bb \u00ab$R\u2081\u00bb \u00ab$A\u00bb\n\u00ab$r\u2081'\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u2081'\u00bb : \u00ab$r\u2081\u00bb = \u00ab$r\u2081'\u00bb\n\u00ab$r\u00bb : \u00ab$R\u2081\u00bb\n\u00ab$pr\u00bb : \u00ab$r\u2082\u00bb \u2022 \u00ab$r\u2081'\u00bb = \u00ab$r\u00bb\n\u22a2 \u00ab$r\u2081\u00bb \u2022 \u00ab$r\u2082\u00bb \u2022 \u00ab$a\u00bb = \u00ab$r\u00bb \u2022 \u00ab$a\u00bb",
        "url": "https://github.com/leanprover-community/mathlib4/blob/6706af18f127b0a3c0e8442a9af50d9257bb7703/Mathlib/Tactic/Algebra.lean#L530"
      },
      "metadata": {
        "blame_email_hash": "677e25bc67b0",
        "blame_date": "2025-04-25T17:49:22+02:00",
        "inclusion_date": "2025-04-25T23:03:15.027137+00:00"
      },
      "id": "eddefc05c612826bd4abb6b6c341a52be7f105fa2cf77b54664a3024abecc6a8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 147,
        "start_column": 6,
        "end_line": 147,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mpr.left\nk\u271d n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nH : \u22ef.order = \u2191n\nk : \u2115\nhk : k < n\n\u22a2 iteratedDeriv k f z = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T21:06:47+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "e2b5c6167edd0a521b3975eb8d43279ec5c0c063e691cd1a1f61d4faa8f05dd2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 149,
        "start_column": 6,
        "end_line": 149,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mpr.right\nk n : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nH\u271d : \u22ef.order = \u2191n\nH : iteratedDeriv k f z = 0\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T21:36:24+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "04b32cae50445b796e20b288512b472e2b5e3d1d899a0198b9a9d569865f5edc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.h.right\nn : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nho : \u2200 (z : \u2102), \u22ef.order \u2260 \u22a4\nhd : \u2200 k < n, iteratedDeriv k f z = 0\n\u22a2 iteratedDeriv ?m.28578 f z \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T21:36:24+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "900f84a0465fb56815ea89dff1d685e6752b5f043f3a0d109e5e32e4024e1ed8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 637,
        "start_column": 10,
        "end_line": 637,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081.h\u2080.h.h.left\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 1 \u2264 \u2191(c\u2081 K \u03b1' \u03b2' \u03b3')",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L637"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-25T13:29:53+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "cfce1fda9f71865b52216cbf03edcfc53ad93b73465c94a0e5b1f5b1f128177d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 638,
        "start_column": 10,
        "end_line": 638,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2081.h\u2081.h\u2080.h.h.right\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\n\u22a2 n K q - 1 + m K * q + m K * q \u2264 1 + 2 * m K * (2 * m K).sqrt",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-25T13:29:53+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "71973db3eb1438f896a7812d6c02cec61b27922e8f4ce35da9fc5fdfa27c5f58"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 659,
        "start_column": 8,
        "end_line": 659,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_2.h.h\u2081.h\u2082\nK : Type\ninst\u271d\u00b9 : Field K\n\u03b1' \u03b2' \u03b3' : K\ninst\u271d : NumberField K\nq : \u2115\nu\u271d : Fin (m K * n K q)\nt\u271d : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + \u2191(n K q) * (1 / 2) = (\u2191(n K q) - 1) / 2\nthis : house \u03b1' ^ (\u2191a * \u2191l) \u2264 house \u03b1' ^ (2 * \u2191(m K) ^ 2) \u2192 house \u03b1' ^ (a * l) \u2264 house \u03b1' ^ (2 * m K ^ 2)\n\u22a2 house \u03b1' ^ (\u2191a * \u2191l) \u2264 house \u03b1' ^ (2 * \u2191(m K) ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L659"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "75b64b74b39799023d9bc3d498fe6952257bd2f3f6608a6b9a7ce068cb592b30"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1209,
        "start_column": 2,
        "end_line": 1209,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115\nhl : k < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\nh0 :\n  \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0\nh1 :\n  \u2191(\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) =\n    \u2211 x, \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u * \u2191(\u22ef.choose x)\n\u22a2 \u2211 x,\n      \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) *\n        (cexp (\u03c1 \u03b1 \u03b2 q x * \u2191l) * \u03c1 \u03b1 \u03b2 q x ^ k * Complex.log \u03b1 ^ (-\u2191k)) =\n    0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1209"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "f79d4594d2f0c4f23c5a35aa3494c55117db56e2743b999b496d7f62786e3e0a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1192,
        "start_column": 92,
        "end_line": 1192,
        "end_column": 97
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115\nhl : k < n K q\nthis\u271d :\n  Complex.log \u03b1 ^ (-\u2191k) *\n        \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k =\n      Complex.log \u03b1 ^ (-\u2191k) * 0 \u2194\n    \u2211 t, \u03c3 \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) * cexp (\u03c1 \u03b1 \u03b2 q t * \u2191l) * \u03c1 \u03b1 \u03b2 q t ^ k = 0\nhMt0\u271d :\n  \u2200 (x : Fin (m K * n K q)),\n    (let i := x;\n      \u2211 i_1,\n        (fun j => (fun i j => \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q j i, \u22ef\u27e9) i j) i_1 * \u22ef.choose i_1) =\n      0 x\nhMt0 : \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0\nthis :\n  \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) = 0 \u2194\n    \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) *\n        \u2211 x, \u03c3 (\u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u x hq0 h2mq x) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u) =\n      \u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * 0\n\u22a2 \u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x = 0 \u2194\n    (algebraMap (\ud835\udcde K) K) (\u2211 x, \u27e8\u2191(c_coeffs K \u03b1' \u03b2' \u03b3' q) * sys_coeffs K \u03b1' \u03b2' \u03b3' q x u, \u22ef\u27e9 * \u22ef.choose x) = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1192"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "77af6e957b3a40db3e67eb0eb6a8f420d31bb89da9ebb5946d37df8c325521e0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1374,
        "start_column": 2,
        "end_line": 1374,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 _root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq \u2260 \u22a4",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1374"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "62f945d463239e0c65d5572d112634e897b866c3b0083b332831ee37b126b031"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1413,
        "start_column": 4,
        "end_line": 1413,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case ho\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk\u271d : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nk : \u2115\nz : \u2102\n\u22a2 AnalyticAt.order \u22ef \u2260 \u22a4",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1413"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T16:31:01+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "5ad75a110624c08e0d398795abc987064edeef159ab72121d77ae158603008a2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1418,
        "start_column": 4,
        "end_line": 1418,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk\u271d\u00b9 : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\norder : \u2200 k < n K q, iteratedDeriv k R \u2191l = 0\nk\u271d k : \u2115\nhk : k < n K q\nthis :\n  iteratedDeriv k (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t)\n      \u2191(\u2191(finProdFinEquiv.symm.toFun u).1 + 1) =\n    0\n\u22a2 iteratedDeriv k (_root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t) \u2191\u2191u = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1418"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "11994db8f0ff69402ce679c4455d33ff5b271450ed3814d0022b3110d00b9e7c"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1442,
        "start_column": 4,
        "end_line": 1442,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (_root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\nthis : (\u2200 k < n K q, iteratedDeriv k R \u2191l = 0) \u2227 iteratedDeriv k R \u2191l \u2260 0 \u2194 AnalyticAt.order \u22ef = \u2191(n K q)\n\u22a2 \u2203 l\u2080, iteratedDeriv r R \u2191\u2191l\u2080 \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1442"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "9a9e9e7acdfb72d12e642de29aebdf2183cd6587b7fb711adb94d31190f3ed6f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1444,
        "start_column": 4,
        "end_line": 1444,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\no : \u2115 := (_root_.order \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq).toNat\nl : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1\nk : \u2115 := \u2191(finProdFinEquiv.symm.toFun u).2\n\u22a2 \u22ef.order \u2260 \u22a4",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1444"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T01:59:03+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "218b0a4b81163260c05095e8e52b414f05c3b86169bf6f7719dcbd58a4638bf5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1539,
        "start_column": 4,
        "end_line": 1539,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inl\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nH1 :\n  |c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| =\n    c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)\n\u22a2 IsIntegral \u2124\n    ((c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)) \u2022\n      \u2211 t,\n        \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n          let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n          let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n          let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n          let l\u2080 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n          (\u2191a + b \u2022 \u03b2') ^ r * \u03b1' ^ (a * l\u2080) * \u03b3' ^ (b * l\u2080))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1539"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "d53cbfe7e16025bca442b1fded51d777c71a9c6c7474ae00d5dfc646b1b4dd58"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1540,
        "start_column": 4,
        "end_line": 1540,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nH2 :\n  |c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| =\n    -(c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q))\n\u22a2 IsIntegral \u2124\n    (|c\u2081 K \u03b1' \u03b2' \u03b3' ^ r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq * c\u2081 K \u03b1' \u03b2' \u03b3' ^ (2 * m K * q)| \u2022\n      \u2211 t,\n        \u2191(\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t) *\n          let a := \u2191(finProdFinEquiv.symm.toFun t).1 + 1;\n          let b := \u2191(finProdFinEquiv.symm.toFun t).2 + 1;\n          let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n          let l\u2080 := \u2191(finProdFinEquiv.symm.toFun u).1 + 1;\n          (\u2191a + b \u2022 \u03b2') ^ r * \u03b1' ^ (a * l\u2080) * \u03b3' ^ (b * l\u2080))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1540"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "4df317c633fbd333c7dff4624a1727092335207c5d0d946fa98d218ba7daedc2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1582,
        "start_column": 8,
        "end_line": 1582,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis\u271d :\n  (Algebra.norm \u211a) \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) =\n    \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) ^ Module.finrank \u211a K\nthis : \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016 \u2260 0\nh0 : 0 < |\u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)|\n\u22a2 1 \u2264 |\u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)|",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1582"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T16:31:01+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "b6e592fe562298ea6eabe7cda96577937e119c22689f87c5760b86ff68857c3d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1601,
        "start_column": 6,
        "end_line": 1601,
        "end_column": 11
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis\u271d :\n  (Algebra.norm \u211a) \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) =\n    \u2191(_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) ^ Module.finrank \u211a K\nthis : \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016 \u2260 0\nh0 : 0 < \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\u2016\nh1 : 1 \u2264 \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\u2016 ^ Module.finrank \u211a K\nh2 : 0 < \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\n\u22a2 1 \u2264 \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1601"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T16:31:01+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "f21f8b92e0dcfa5840e836e0e243eca2637b2f05cd1d67355871b229d28746f5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1698,
        "start_column": 6,
        "end_line": 1698,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case calc_2\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\nthis : \u2191(h K) * \u2191r + \u2191(h K) * (2 * \u2191(m K) * \u2191q) = \u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q\n\u22a2 \u2191c\u2081 ^ (\u2191(h K) * \u2191r + \u2191(h K) * 2 * \u2191(m K) * \u2191q) < c\u2085 ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1698"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "11549f249c125eb18e492b1f9755175d13b30c51ac54ba5bc7f51c42b6db92b2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1707,
        "start_column": 8,
        "end_line": 1707,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 r \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1707"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T16:31:01+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "3751d35ea33c3eb7cdaa941e35fa781075839bfd89f38f0bef3adc677e06f378"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1712,
        "start_column": 10,
        "end_line": 1712,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case ha\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 1 < \u2191c\u2081",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1712"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T16:31:01+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "aa3a59de8790f06f59a94d7538009911e4cee8cc3fd088009ed44bffc32b9dce"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1713,
        "start_column": 10,
        "end_line": 1713,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 h K * (r + 2 * m K * q) \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1713"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T16:31:01+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "2b12bdb8040cf3fddcdbdff470e9073538cb5cc3dc35b8907e3e2611aae9413d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1720,
        "start_column": 4,
        "end_line": 1720,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_3\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2081 : \u2124 := _root_.c\u2081 K \u03b1' \u03b2' \u03b3'\nc1\u03c1 : \ud835\udcde K := _root_.c1\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u03c1 : \u2124 := _root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2085 : \u211d := _root_.c\u2085 K \u03b1' \u03b2' \u03b3' q\nh1 :\n  1 \u2264\n    \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016 *\n      \u2016(Algebra.norm \u211a) (rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq)\u2016\nh2 : \u2016_root_.c\u03c1 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq ^ Module.finrank \u211a K\u2016\u207b\u00b9 \u2264 \u2016(Algebra.norm \u211a) \u03c1\u2016\n\u22a2 (\u2191c\u2081 ^ (\u2191(h K) * (\u2191r + 2 * \u2191(m K) * \u2191q)))\u207b\u00b9 <\n    (|\u2191(_root_.c\u2081 K \u03b1' \u03b2' \u03b3')| ^\n        ((_root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq + 2 * m K * q) * Module.finrank \u211a K))\u207b\u00b9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1720"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-13T00:29:22+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "f94dd0ab6a857ac72cc0c6c5f0a1ca20482bc3c351ae9b1c38b430b631357271"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1822,
        "start_column": 12,
        "end_line": 1822,
        "end_column": 17
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house (\u2191a + b \u2022 \u03b2') ^ r * (house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) =\n    house \u03b3' ^ (b * l\u2080) * (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080))\n\u22a2 house \u03b3' ^ ((\u2191(finProdFinEquiv.symm.toFun i).2 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1)) \u2264 house \u03b3' ^ (b * l\u2080)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1822"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "dcecc88c94aa6df6ea127df3db8e22d40736dcb3c1d3079bc0c8e4303a6a1544"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1828,
        "start_column": 16,
        "end_line": 1828,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house (\u2191a + b \u2022 \u03b2') ^ r * (house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) =\n    house \u03b3' ^ (b * l\u2080) * (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080))\n\u22a2 house (\u2191(\u2191(finProdFinEquiv.symm.toFun i).1 + 1) + (\u2191(finProdFinEquiv.symm.toFun i).2 + 1) \u2022 \u03b2') ^\n      _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq \u2264\n    house (\u2191a + b \u2022 \u03b2') ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1828"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "c78cbfb38ddbd58110c2ba9c22bb1e80d4ad658553af72b037b5a9a68d740bef"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1831,
        "start_column": 16,
        "end_line": 1831,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nthis :\n  house (\u2191a + b \u2022 \u03b2') ^ r * (house \u03b1' ^ (a * l\u2080) * house \u03b3' ^ (b * l\u2080)) =\n    house \u03b3' ^ (b * l\u2080) * (house (\u2191a + b \u2022 \u03b2') ^ r * house \u03b1' ^ (a * l\u2080))\n\u22a2 house \u03b1' ^ ((\u2191(finProdFinEquiv.symm.toFun i).1 + 1) * (\u2191(finProdFinEquiv.symm.toFun u).1 + 1)) \u2264 house \u03b1' ^ (a * l\u2080)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1831"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "a2408f2fea1c8bbf2c3dabcc0853271caadf4604db09e1c215d6a3f58965aa10"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1849,
        "start_column": 8,
        "end_line": 1849,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_5.h.h\u2082.h\u2081\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 house (\u2191a + \u2191b * \u03b2') ^ r * house \u03b1' ^ (a * l\u2080) \u2264 \u2191(2 * m K).sqrt * (1 + house \u03b2') * house \u03b1' ^ (2 * m K ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1849"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "dd3090648456bfd6f12c517eddb4bb563e32ebb7f17bc2bdc95c383043ec4406"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1850,
        "start_column": 8,
        "end_line": 1850,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_5.h.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\n\u22a2 house \u03b3' ^ (b * l\u2080) \u2264 house \u03b3' ^ (2 * m K ^ 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1850"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "359971b903035b7dd97a3417921de294878fbacf6227715d0d99aa9be5a5f98b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1879,
        "start_column": 8,
        "end_line": 1879,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_6.h\u2082.h\u2081\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 c\u2084 ^ n K q \u2264 c\u2084 ^ n K q * (c\u2086 * \u2191q) ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1879"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "1d35a7f2e3697c6d9f5a589da332a3f13cc1899ad76f01961462a678076d18aa"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1880,
        "start_column": 8,
        "end_line": 1880,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case calc_6.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 \u2191(2 * m K).sqrt * (1 + house \u03b2') * house \u03b1' ^ (2 * m K ^ 2) * house \u03b3' ^ (2 * m K ^ 2) \u2264 c\u2087 ^ q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1880"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "916762fff7b772851ca3b241dad90ef9d77891af93a5be765b43ffe281462ab0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1898,
        "start_column": 10,
        "end_line": 1898,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case calc_6.h\u2082.b0.hb.ha\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 0 \u2264 c\u2086 * \u2191q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1898"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T18:53:41+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "2a49ed29c8e6b1a84633226de546bae6b78b3f8ced3e1e2014a4b5b7d7934433"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1916,
        "start_column": 4,
        "end_line": 1916,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_7\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\na : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).1 + 1\nb : \u2115 := \u2191(finProdFinEquiv.symm.toFun t).2 + 1\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\n\u22a2 \u2191q * \u2191q * (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * (c\u2086 * \u2191q) ^ r * c\u2087 ^ \u2191q) \u2264 c\u2088 ^ r * \u2191r ^ (r + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1916"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-24T17:54:44+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "5f9647afcde7108edab559024147f7fe8224a07067496b9b3767fca105bb4e55"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1936,
        "start_column": 82,
        "end_line": 1936,
        "end_column": 87
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nl : \u2115\nhl : l \u2208 Finset.range (m K)\n\u22a2 let R := R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t;\n  let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  \u2203 R', (\u2200 (z : \u2102), AnalyticAt \u2102 R' z) \u2227 \u2200 (x : \u2102), R x = (x - \u2191l) ^ r * R' x",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1936"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T19:46:37+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "a9ebb7871613f3612f000d59f2c588669cae9ec29e58c49ad2cff2e96e48f9d1"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2011,
        "start_column": 4,
        "end_line": 2011,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case hc.h.a\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nx : \u2102\nhx : \u2016x\u2016 = \u2191(m K) * (1 + \u2191r / \u2191q) \u2228 \u2016x\u2016 < \u2191(m K) * (1 + \u2191r / \u2191q)\n\u22a2 \u2016x\u2016 < \u2191(m K) * (1 + \u2191(_root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq) / \u2191q) \u2227\n    \u00acx = \u2191\u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2011"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "6b13b3c854d4ddb93db08593d27b8eef389ca0cd09594ddafcb1c755b2c00fc2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2135,
        "start_column": 4,
        "end_line": 2135,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\n\u22a2 \u2191q * \u2191q * (c\u2084 ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1)) * c\u2089 ^ (r + q)) \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2135"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "09ca44a1939561fb34d8edec4d2f73cebd6b91b5dd0c9d99473062c9fadb6bdb"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2066,
        "start_column": 80,
        "end_line": 2066,
        "end_column": 85
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u03c1 : K := rho \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq\n\u03b7 : Fin (q * q) \u2192 \ud835\udcde K := _root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nc\u2084 : \u211d := _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q\ni : Fin (q * q)\nhi : i \u2208 Finset.univ\nlemma82 :\n  house ((algebraMap (\ud835\udcde K) K) (_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t)) \u2264\n    _root_.c\u2084 K hd \u03b1' \u03b2' \u03b3' q ^ \u2191(n K q) * \u2191(n K q) ^ (1 / 2 * (n K q + 1))\n\u22a2 house ((algebraMap (\ud835\udcde K) K) (_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq t)) =\n    \u2016\u03c3 \u2191(_root_.\u03b7 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u i hq0 h2mq i)\u2016",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2066"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T21:06:47+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "52331d703d4045b654d5d0d5cdfaca60819e362952ca0d8019122d7d4dfbed27"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2250,
        "start_column": 10,
        "end_line": 2250,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case calc_3.h\u2082.h\u2082\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u20161 / (z - \u2191l\u2080) ^ r\u2016 * \u2016\u220f k \u2208 Finset.range (m K) \\ {l\u2080}, ((\u2191l\u2080 - \u2191k) / (z - \u2191k)) ^ r\u2016 \u2264 c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2250"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T21:06:47+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "836e29fb94b891e4af1e08a1133adba0083af7f4b1588866ce6fea157283d6a8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2254,
        "start_column": 10,
        "end_line": 2254,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case calc_3.h\u2082.b0\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 0 \u2264 c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2254"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-26T21:06:47+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "607e823d917c30e7e4f0e9152733320b00495cea4e81000d0950e3ed9b9bea60"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2261,
        "start_column": 4,
        "end_line": 2261,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_4\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nz : \u2102\nR : \u2102 \u2192 \u2102 := _root_.R \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u hq0 h2mq t\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : \u2115 := \u2191(_root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq)\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r.factorial * (c\u2081\u2080 ^ r * \u2191r ^ (1 / 2 * (r + 3)) * c\u2081\u2081 ^ r * (\u2191q / \u2191r) ^ (m K * r)) \u2264\n    c\u2081\u2082 ^ r * ((3 - \u2191(m K)) / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2261"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-14T00:20:02+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "fe51ccc6bafaa41aef0fb7af3df3bd24ae1def0a211c162e618baa408cfa5ad8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2341,
        "start_column": 4,
        "end_line": 2341,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nthis : (\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2 = -\u2191r / 2 + 3 * \u2191(h K) / 2\n\u22a2 \u2191((Algebra.norm \u211a) \u03c1) \u2264 c\u2081\u2084 ^ r * \u2191r ^ ((\u2191(h K) - 1) * (\u2191r + 3 / 2) + (3 - \u2191(m K)) * \u2191r * 1 / 2 + 3 / 2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2341"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "e06cf6470f3905ded890206b1d9b3b40f1e05c3284d226cdd0a7e46c4f329f3e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "12ff4a4ba58e36b294e134f248f4567b8e146a71",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2328,
        "start_column": 2,
        "end_line": 2328,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nthis :\n  let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  r \u2264 n K q\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  \u2191r ^ ((r - 3 * h K) / 2) \u2265 c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/12ff4a4ba58e36b294e134f248f4567b8e146a71/Mathlib/NumberTheory/h7.lean#L2328"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T02:58:34+02:00",
        "inclusion_date": "2025-04-27T23:05:27.527049+00:00"
      },
      "id": "68757e366f0e63d62f6041bf5f063121483908b561ca92fc4e7741372f9e204a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2366,
        "start_column": 4,
        "end_line": 2366,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case calc_1\n\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nr : \u2115 := _root_.r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nl\u2080 : Fin (m K) := _root_.l\u2080 \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\nS : \u2102 \u2192 \u2102 := _root_.S \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq\n\u22a2 \u2191r ^ ((r - 3 * h K) / 2) < c\u2081\u2084 ^ r * c\u2085 K \u03b1' \u03b2' \u03b3' q ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2366"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-09T15:43:20+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "96f2f74d7469d72a7fefee58c6e8770fde342432790db5d1ccdc39b70e46375a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2389,
        "start_column": 6,
        "end_line": 2389,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_1\n\u03b1 \u03b2 : \u2102\nh\u03b1 : IsAlgebraic \u211a \u03b1\nh\u03b2 : IsAlgebraic \u211a \u03b2\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nh\u03b3 : IsAlgebraic \u211a (\u03b1 ^ \u03b2)\nK : Type\nhK : Field K\nhNK : NumberField K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\nq : \u2115 := 5\nt : Fin (q * q) := sorry\nhq0 : 0 < q\nm : \u2115 := _root_.m K\nu : Fin (m * n K q) := sorry\n\u22a2 2 * m \u2223 q",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2389"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-27T19:46:37+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "17e14cfff76b18b9bf4cc358221d59ead8d8807de3ad5e715380a4a6dd70322c"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "2dbc9fa07763e1cc9ab295138ccd44accf9836df",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 \u2191(restricted d) = connectedComponent 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/2dbc9fa07763e1cc9ab295138ccd44accf9836df/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-05T23:34:56.673364+00:00"
      },
      "id": "d423a3a69947e84ef4b30c8cce205a385382b038d2985eddc62508a96c43620b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "master",
        "commit": "d279b56adead908de8bd086ea46b82895cf4f12c",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "AesopTest/205.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : R x a\nh\u2083 : R y b\nfwd : R b y\nfwd_1 : R a x\nfwd_2 : R b b\nfwd_3 : R y y\nfwd_4 : R a a\nfwd_5 : R x x\n\u22a2 False",
        "url": "https://github.com/leanprover-community/aesop/blob/d279b56adead908de8bd086ea46b82895cf4f12c/AesopTest/205.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2025-04-29T23:07:06+02:00",
        "inclusion_date": "2025-04-30T23:33:22.583043+00:00"
      },
      "id": "2ed3ed49a5906744d12cce67d1175d136b7f420f696980938c3b66e07db8e8de"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 33,
        "start_column": 4,
        "end_line": 33,
        "end_column": 9
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nn : \u2115\n\u22a2 ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "61468eff8f4b3cece5acfa98ee0d843a7bab84d7c3dd88a1f436f57760c0c80f"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nn : \u2115\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "20a88a2290f650ce1e00833b608aab2fa8b178c78217cb2e14b13060e8c02067"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 37,
        "start_column": 4,
        "end_line": 37,
        "end_column": 9
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nn : \u2115\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "618d6119e547df62960ccc97b94d017d2b6a73862f0cf56dcc923a7637d734c5"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro\nSmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), X * (1 + c\u2082 * \u03b5) \u2264 \u2191n \u2192 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\n\u22a2 \u2016\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X) -\n        (Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "3fc7a152c5908133484f94b64ce58f4f2fb4c29fd393bc73d415417185f0e660"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 19,
        "start_column": 79,
        "end_line": 19,
        "end_column": 84
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u22a2 \u2203 c, 0 < c \u2227 \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L19"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "b363b987ceccf38ca60878a229e160f787bdb1fa4215d478703850cbc3e22b63"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 23,
        "start_column": 77,
        "end_line": 23,
        "end_column": 82
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\n\u22a2 \u2203 c, 0 < c \u2227 \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "81a5931186b7089ecc923f2bcce571ac124b4c3d375738b37019d4e3ec254ca5"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 27,
        "start_column": 23,
        "end_line": 27,
        "end_column": 28
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\n\u22a2 3 < C",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "749fcac967a87863022ac7518945a1d6ee983b5589975a8dc2c5f5e5436e8a51"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest.lean",
        "start_line": 39,
        "start_column": 41,
        "end_line": 39,
        "end_column": 46
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nn : \u2115\nn_le : \u2191n \u2264 X * (1 - c\u2081 * \u03b5)\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "0a0be4d96cb334fe6525368247db72f13928050638ba279728a83f5cc3c16bfb"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 375,
        "start_column": 6,
        "end_line": 375,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case pos\nSmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nn : \u2115\nn_eq_zero : n = 0\n\u22a2 MellinConvolution (fun x => if 0 < x \u2227 x \u2264 1 then 1 else 0) (DeltaSpike SmoothingF \u03b5) 0 \u2264 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L375"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "59b93f9c8b285d516300f9de8c1eca5400edfb5e8fb048949dbcfac4d0e73b5f"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 384,
        "start_column": 4,
        "end_line": 384,
        "end_column": 9
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nn : \u2115\n\u22a2 0 < \u2191n / X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L384"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "80c21e5189d2656cedc678502a479a68e690ec751569b87cc824bbf76681bcb6"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 388,
        "start_column": 4,
        "end_line": 388,
        "end_column": 9
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nn : \u2115\nn_le : \u2191n \u2264 X * (1 - c\u2081 * \u03b5)\nthis : 0 < \u2191n / X \u2192 \u2191n / X \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\n\u22a2 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L388"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-04-30T17:09:22-04:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "d0e2307b143a14a564d71f68a634c071e051164957f205b4c2786be3bd339b4c"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "bdfdc5bcc975251e09e84be8c8aac7e3fae21234",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 395,
        "start_column": 2,
        "end_line": 395,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro.intro.intro.intro\nSmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d c\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC : \u211d := c\u2081 + c\u2082 + 3\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nvonManBnd : \u2200 (n : \u2115), ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n\nsmooth1BddAbove : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), X * (1 + c\u2082 * \u03b5) \u2264 \u2191n \u2192 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/bdfdc5bcc975251e09e84be8c8aac7e3fae21234/PrimeNumberTheoremAnd/MediumPNT.lean#L395"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-04-30T23:15:27.302039+00:00"
      },
      "id": "730c0bd201cf36d97991b55dd8e2794c3e455ea3796cdd60a8cb8b7cbd4fb4e2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Canada1998P5.lean",
        "start_line": 35,
        "start_column": 2,
        "end_line": 35,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nhm : 0 < m\na b : \u2115\nhab : a \u2264 b\n\u22a2 a ^ 2 + b ^ 2 = m ^ 2 * (a * b + 1) \u2194 \u2203 n, \u2191a = Canada1998P5.A m hm n \u2227 \u2191b = Canada1998P5.A m hm (n + 1)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Canada1998P5.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-06-16T22:18:26-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "62239788952adcb79ba570f27343552d8b045f99c302abe08c70693cd087595b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2004P6.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 n \u2208 Imo2004P6.SolutionSet \u2194 0 < n \u2227 \u2203 k, Imo2004P6.Alternating (n * k)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2004P6.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-30T13:21:06-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0d37a6e0abbd4257ed354cb0884c8d49150b82de67a073d1f22fd19fc890c330"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1972P4.lean",
        "start_line": 37,
        "start_column": 43,
        "end_line": 37,
        "end_column": 48
      },
      "debug_info": {
        "goal": "a b c d e : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d \u2227 0 < e\n\u22a2 (a ^ 2 - c * e) * (b ^ 2 - c * e) \u2264 0 \u2227\n      (b ^ 2 - d * a) * (c ^ 2 - d * a) \u2264 0 \u2227\n        (c ^ 2 - e * b) * (d ^ 2 - e * b) \u2264 0 \u2227\n          (d ^ 2 - a * c) * (e ^ 2 - a * c) \u2264 0 \u2227 (e ^ 2 - b * d) * (a ^ 2 - b * d) \u2264 0 \u2194\n    (a, b, c, d, e) \u2208 Imo1972P4.solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1972P4.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "06d7320773ba8f6ef7a6782d69ea04acd90f9d9a7eeefe043e6912c5e8a70769"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa1993P3.lean",
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {c | \u2200 (f : \u2191(Set.Icc 0 1) \u2192 \u211d), Usa1993P3.valid f \u2227 \u2200 (x : \u2191(Set.Icc 0 1)), f x \u2264 c * \u2191\u2191x} Usa1993P3.min_c",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1993P3.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-17T17:28:05-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "28d760fa62555434491d075d5aa4a8a81be808e4f7714beb97b452b62886e851"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1988P3.lean",
        "start_line": 37,
        "start_column": 28,
        "end_line": 37,
        "end_column": 33
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : f 1 = 1\nh\u2081 : f 3 = 3\nh\u2082 : \u2200 (n : \u2115), f (2 * n) = f n\nh\u2083 : \u2200 (n : \u2115), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh\u2084 : \u2200 (n : \u2115), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset \u2191{n | 0 < n \u2227 n \u2264 1988 \u2227 f n = n}\n\u22a2 A.card = Imo1988P3.solution",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1988P3.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "c922387043817c95c505704c1b52596dd60566c149ef567f05c02de89b1cab43"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1994P4.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2124\n\u22a2 (m, n) \u2208 Imo1994P4.SolutionSet \u2194 0 < m \u2227 0 < n \u2227 m * n - 1 \u2223 n ^ 3 + 1",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1994P4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-23T19:59:15-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "2d80a8ce00d2f6defbe0c92adc7c5223c87e194b77b3820fc639be7ebbc8e221"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1990P3.lean",
        "start_line": 30,
        "start_column": 4,
        "end_line": 30,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nn : \u2115\nhn : 1 < n\nhnd : n ^ 2 \u2223 2 ^ n + 1\n\u22a2 n \u2208 Imo1990P3.solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1990P3.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-01T16:38:24-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "d583d5989070b4993e563f7d353b32dc929bc17e06ebcdd778cac8b967927ab8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1999P4.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x p : \u2115\n\u22a2 (x, p) \u2208 Imo1999P4.SolutionSet \u2194 0 < x \u2227 Nat.Prime p \u2227 x ^ (p - 1) \u2223 (p - 1) ^ x + 1",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1999P4.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-01T11:05:51-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "bfb9ac1b9509511ca9ee7caeabdfbd5015795e934863698e39cbf8454367f63c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa1999P1.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nc : Finset (Usa1999P1.checkerboard n)\nha : failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)\nhb : \u2200 x \u2208 c, \u2200 y \u2208 c, \u2203 p, List.Chain' (Usa1999P1.adjacent n) p \u2227 p.head? = some x \u2227 p.getLast? = some y\n\u22a2 n ^ 2 \u2264 c.card * 3 + 2",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1999P1.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-12T15:42:10-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "85b4909a02996bd4bb85848c10febd7adfe12dba9bf00ea1b79860f937c284cd"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1998P6.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115+ \u2192 \u2115+\nh : \u2200 (s t : \u2115+), f (t ^ 2 * f s) = s * f t ^ 2\n\u22a2 IsLeast {n | n = \u2191(f 1998)} \u2191Imo1998P6.solution",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1998P6.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T10:49:10-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "b265c8d3788e1194e6a9536ffd4015bfb6d42b6c6686619c896e5889b38a9d28"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2014P4.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B C P Q M N : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nacuteA : EuclideanGeometry.angle C A B < Real.pi / 2\nacuteB : EuclideanGeometry.angle A B C < Real.pi / 2\nacuteC : EuclideanGeometry.angle B C A < Real.pi / 2\nhP : Sbtw \u211d P B C\nhQ : Sbtw \u211d Q B C\nhPAB : EuclideanGeometry.angle P A B = EuclideanGeometry.angle B C A\nhCAQ : EuclideanGeometry.angle C A Q = EuclideanGeometry.angle A B C\nhM : M \u2208 affineSpan \u211d {A, M}\nhN : Q \u2208 affineSpan \u211d {A, N}\nhPAM : P = midpoint \u211d A M\nhQAN : Q = midpoint \u211d A N\n\u22a2 let ABC := { points := ![A, B, C], independent := hABC };\n  let D := \u2191(affineSpan \u211d {B, M}) \u2229 \u2191(affineSpan \u211d {C, N});\n  D.Nonempty \u2227 D \u2286 Metric.sphere (Affine.Simplex.circumsphere ABC).center (Affine.Simplex.circumsphere ABC).radius",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2014P4.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-17T13:26:17-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "1dca87dc53dbe7789a871a999935f5923c9abc2b047c636ad86b17aa396f9e04"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1961P1.lean",
        "start_line": 44,
        "start_column": 54,
        "end_line": 44,
        "end_column": 59
      },
      "debug_info": {
        "goal": "a b x y z : \u211d\n\u22a2 (x, y, z) \u2208 Imo1961P1.xyz_of_ab a b \u2194 Imo1961P1.IsSolution a b x y z",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1961P1.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-15T21:26:42-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "1cba6f5cab23298e6fb113dea3597bcdbbe84f22b335a2e401fda57cd6d28109"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1961P1.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 (a, b) \u2208 Imo1961P1.ab_that_make_xyz_positive_distinct \u2194\n    \u2200 (x y z : \u211d), Imo1961P1.IsSolution a b x y z \u2192 0 < x \u2227 0 < y \u2227 0 < z \u2227 [x, y, z].Nodup",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1961P1.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-15T21:26:42-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "fbb923603d7cd7ea703f2f6804fa8f3dc10570ca3d1a02b814cb408dc3541731"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2023P2.lean",
        "start_line": 93,
        "start_column": 28,
        "end_line": 93,
        "end_column": 33
      },
      "debug_info": {
        "goal": "V : Type u_1\nPt : Type u_2\ninst\u271d\u2074 : NormedAddCommGroup V\ninst\u271d\u00b3 : InnerProductSpace \u211d V\ninst\u271d\u00b2 : MetricSpace Pt\ninst\u271d\u00b9 : NormedAddTorsor V Pt\nhd2 : Fact (finrank \u211d V = 2)\ninst\u271d : Oriented \u211d V (Fin 2)\nA B C D E L S P : Pt\n\u03a9 \u03c9 : Sphere Pt\nperp_A_BC prll_D_BC tang_P_\u03c9 : AffineSubspace \u211d Pt\nh_acute_ABC : @acute V Pt inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 A B C\nh_AB_lt_BC : dist A B < dist A C\nh_\u03a9 : {A, B, C} \u2286 Metric.sphere \u03a9.center \u03a9.radius\nh_S_\u03a9 : dist S C = dist S B \u2227 S \u2208 Metric.sphere \u03a9.center \u03a9.radius\nh_S_A : (oangle C B S).sign = (oangle C B A).sign\nh_perp_A_BC : @perp_to V Pt inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 perp_A_BC (affineSpan \u211d {B, C}) \u2227 A \u2208 perp_A_BC\nh_D : D \u2208 \u2191perp_A_BC \u2229 \u2191(affineSpan \u211d {B, S})\nh_E : E \u2208 \u2191perp_A_BC \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_E_ne_A : E \u2260 A\nh_prll_D_BC : D \u2208 prll_D_BC \u2227 prll_D_BC.Parallel (affineSpan \u211d {B, C})\nh_L : L \u2208 \u2191prll_D_BC \u2229 \u2191(affineSpan \u211d {B, E})\nh_\u03c9 : {B, D, L} \u2286 Metric.sphere \u03c9.center \u03c9.radius\nh_P : P \u2208 Metric.sphere \u03c9.center \u03c9.radius \u2229 Metric.sphere \u03a9.center \u03a9.radius\nh_P_ne_B : P \u2260 B\nh_tang_P_\u03c9 : @is_tangent V Pt inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 tang_P_\u03c9 \u03c9 \u2227 P \u2208 tang_P_\u03c9\n\u22a2 \u2203 X \u2208 \u2191tang_P_\u03c9 \u2229 \u2191(affineSpan \u211d {B, S}), angle B A X = angle X A C \u2227 angle B A X < Real.pi / 2",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P2.lean#L93"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2024-06-30T13:54:06-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "34df4f8f8aa5f2ddcfd37152c10166b9d2d145594119fd7a377614107b756d84"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2003P1.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Finset \u2115\nhA : A \u2286 Imo2003P1.S\n\u22a2 \u2203 t, \u2200 (i j : Fin 100), i \u2260 j \u2192 Disjoint {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t i) = x} {x | \u2203 x_1 \u2208 A, x_1 + \u2191(t j) = x}",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2003P1.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-14T21:07:17-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "5c0eb630f160e8dd535d84ba0fd2c3550d6a332cf9a7d413eb9a9df944fb1ab4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2001P1.lean",
        "start_line": 55,
        "start_column": 6,
        "end_line": 55,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.right\nf : Fin 8 \u2192 Finset (Fin 23) :=\n  fun x =>\n    @Usa2001P1.usa2001_p1.match_1 (fun x => Finset (Fin 23)) x (fun _ => {1, 2, 3, 4, 5, 6})\n      (fun _ => {1, 7, 8, 9, 10, 11}) (fun _ => {1, 12, 13, 14, 15, 16}) (fun _ => {2, 7, 12, 17, 18, 19})\n      (fun _ => {3, 8, 13, 17, 20, 21}) (fun _ => {4, 9, 14, 17, 22, 23}) (fun _ => {5, 10, 15, 18, 20, 22}) fun _ =>\n      {6, 11, 16, 19, 21, 23}\nx y : Fin Usa2001P1.min_colors\ni j : Fin 8\nhij : i \u2260 j\nhx : x \u2208 f i\nhy : y \u2208 f i\n\u22a2 \u00ac(x \u2208 f j \u2227 y \u2208 f j)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2001P1.lean#L55"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-12-05T14:18:02-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "e00370def1eb4fc72ccb3202b29fdf24dfb3e7f5aa05706b263cac03bf23b14c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2001P1.lean",
        "start_line": 56,
        "start_column": 4,
        "end_line": 56,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case right\n\u22a2 Usa2001P1.min_colors \u2208 lowerBounds Usa2001P1.possible_num_colors",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2001P1.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-20T22:49:53-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "c011faeba3578a6b7e88e78ceb737f6b134f946f3f42ebc487d9fb1290ed3b93"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P2.lean",
        "start_line": 38,
        "start_column": 41,
        "end_line": 38,
        "end_column": 46
      },
      "debug_info": {
        "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : angle D A B = angle A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := angle D A C\nthis : angle D A C = angle D C A\ny : \u211d := angle C A B\n\u22a2 angle D A B = x + y",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P2.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-14T20:53:40-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "da2e893bb5d81b5e16b625ad14a665c5e871730695196605e98d0a744545a916"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P2.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B C D E M : EuclideanSpace \u211d (Fin 2)\nH1 : dist D A = dist D C\nH2 : angle D A B = angle A B C\nH3 : M = midpoint \u211d B C\nx : \u211d := angle D A C\nthis\u271d : angle D A C = angle D C A\ny : \u211d := angle C A B\nthis : angle A B C = x + y\n\u22a2 angle B E C = angle D A C",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P2.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-06-28T19:13:25-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "119629d6955ce8c582bf16782ebb26a613353218691af3cac112bf3ab90c7e07"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1996P3.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\n\u22a2 f \u2208 Imo1996P3.SolutionSet \u2194 \u2200 (m n : \u2115), f (m + f n) = f (f m) + f n",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1996P3.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T13:27:20-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "3686f68a257c6dbb16f13e785874ec08c7038e3f825e693bb40e473e917f7fd7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2009P6.lean",
        "start_line": 205,
        "start_column": 8,
        "end_line": 205,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := Imo2009P6.extendPerm n' n p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) \u2264 x)\nh35 : n' \u2264 n\n\u22a2 \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-27T11:09:42-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "960db7ea904455842b2aded2ace1bec04e3ecac90ebfe6db67f3612259178502"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2009P6.lean",
        "start_line": 229,
        "start_column": 8,
        "end_line": 229,
        "end_column": 13
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u2124\nainj : Function.Injective a\napos : \u2200 (i : Fin n), 0 < a i\nasorted : \u2200 (i j : Fin n), i < j \u2192 a i < a j\nM : Finset \u2124\nMpos : \u2200 m \u2208 M, 0 < m\nMcard : M.card \u2264 n - 1\nx : \u2124 := \u2211 i \u2208 {x | \u2191x < n - 1}, a i\nh1 : x \u2209 M\ny : \u2124\nhy1 : x < y\nhy2 : y \u2208 M\nM' : Finset \u2124 := {z \u2208 M | z \u2264 x}\nhyM' : y \u2209 M'\nh3 : M'.card \u2264 n - 2\nhM : \u2211 i, a i \u2209 M\nh7 : M'.card > 0\nn' : \u2115 := n - 1\na' : Fin n' \u2192 \u2124 := fun i => a \u27e8\u2191i, \u22ef\u27e9\nainj' : Function.Injective a'\napos' : \u2200 (i : Fin n'), 0 < a' i\nasorted' : \u2200 (i j : Fin n'), i < j \u2192 a' i < a' j\nMpos' : \u2200 m \u2208 M', 0 < m\nhM' : \u2211 i, a' i \u2209 M'\np' : Equiv.Perm (Fin n')\nhp : \u2200 (i : Fin n'), \u2211 j \u2208 {x | x \u2264 i}, a' (p' j) \u2209 M'\np : Equiv.Perm (Fin n) := Imo2009P6.extendPerm n' n p' \u22ef\ni : Fin n\nh30 : \u2191i < n'\ni' : Fin n' := \u27e8\u2191i, h30\u27e9\nh31 : \u00ac(\u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2208 M \u2227 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x)\nh35 : n' \u2264 n\nh33 : \u2211 j \u2208 {x | x \u2264 i'}, a' (p' j) = \u2211 j \u2208 {x | x \u2264 i}, a (p j)\n\u22a2 \u2211 j \u2208 {x | x \u2264 i}, a (p j) \u2264 x",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2009P6.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-25T14:14:36-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "04f41604a60097c7e0c98bb076f08111750a897f1f85c234332f06ecb897ba1c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa1998P4.lean",
        "start_line": 66,
        "start_column": 6,
        "end_line": 66,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h\ns : Usa1998P4.chessboard\n\u22a2 @List.foldl Usa1998P4.coloring Usa1998P4.Rectangle Usa1998P4.recolor_rect Usa1998P4.start_coloring\n      (List.map (fun x => Usa1998P4.Rectangle.mk (2 * x) 0 1 98) (List.range 49) ++\n        List.map (fun y => Usa1998P4.Rectangle.mk 0 (2 * y) 98 1) (List.range 49))\n      s =\n    0",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1998P4.lean#L66"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-14T08:31:05-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "fdddbf2c2209dff5be2e8419b11a85b506f1333b24547d18b9aaa51e1311b01b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa1998P4.lean",
        "start_line": 71,
        "start_column": 4,
        "end_line": 71,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case right.intro.intro\nn : \u2115\nrs : List Usa1998P4.Rectangle\nhrs : Usa1998P4.all_same_color (List.foldl Usa1998P4.recolor_rect Usa1998P4.start_coloring rs)\nhrsl : rs.length = n\n\u22a2 Usa1998P4.min_clicks \u2264 n",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa1998P4.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-07-12T20:46:44-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "5b0aeb1c99ad0e573f9ce87febb4222250063a3e645661c2bc2364319d4f2baf"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1998P4.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\n\u22a2 0 < a \u2227 0 < b \u2227 a * b ^ 2 + b + 7 \u2223 a ^ 2 * b + a + b \u2194 (a, b) \u2208 Imo1998P4.solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1998P4.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T10:45:18-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "c5477ddb59e814506590de180d989dd839a84ce0c0cb7abbf611e853695d1687"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1971P5.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\n\u22a2 \u2203 S, S.Finite \u2227 \u2200 s \u2208 S, Nat.card \u2191(@setOf Imo1971P5.Pt fun t => dist s t = 1) = m",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1971P5.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-22T17:20:29-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "5dcc081a306952e28f929a146119ca29c3a69bc91dc42770d7d08655ac6f51fc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2010P3.lean",
        "start_line": 36,
        "start_column": 38,
        "end_line": 36,
        "end_column": 43
      },
      "debug_info": {
        "goal": "case h\ng : Imo2010P3.PosInt \u2192 Imo2010P3.PosInt\nc : Imo2010P3.PosInt\nhc : \u2200 (x : Imo2010P3.PosInt), g x = x + c\nm n : Imo2010P3.PosInt\n\u22a2 (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2010P3.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-01-21T08:16:08-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a79061c2831b745cd433c8e3d58d7d903e1775531058b3c594fd20b77e49ab4d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2016P4.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {b | \u2203 a, Imo2016P4.Fragrant {p | \u2203 i < b, \u2191p = Imo2016P4.P (a + 1 + \u2191i)}} Imo2016P4.Solution",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2016P4.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-11T08:43:20-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0969fe155595fd380bde077dcb42469020538524cbe6f2166cce7c6dbde73539"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2018P2.lean",
        "start_line": 36,
        "start_column": 4,
        "end_line": 36,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nn : \u2115\n\u22a2 (3 \u2264 n \u2227 \u2203 a, \u2200 (i : ZMod n), a i * a (i + 1) = a (i + 2)) \u2192 n \u2208 Imo2018P2.solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P2.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-05T08:47:40-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "d9963c9b701ff9c65cd742dbef78e01972681a7c5c790c9a15762ad5d10aabf4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1998P3.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\n\u22a2 k \u2208 Imo1998P3.solution_set \u2194 \u2203 n, (n ^ 2).divisors.card = k * n.divisors.card",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1998P3.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T10:57:30-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "93a257de69208582ccd8e599b0c675ca863c3c03369fb42307c749214edcd323"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2003P2.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2124\n\u22a2 (a, b) \u2208 Imo2003P2.solution_set \u2194 0 < a \u2227 a < b \u2227 \u2203 c, 0 < c \u2227 c * (2 * a * b ^ 2 - b ^ 3 + 1) = a ^ 2",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2003P2.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-09T08:45:13-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "06689949c3c1072e5ecec297fd0f9db995331b106e5674faef46d36b535aa1c2"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 121,
        "start_column": 40,
        "end_line": 121,
        "end_column": 45
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\n\u22a2 \u2200 (i : Fin n), 0 < c i",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:45:19-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "2cd0e906beecb131552ab5e41e40aa62405a2a4fcd538f4938566bfc8a9e8d5a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 122,
        "start_column": 39,
        "end_line": 122,
        "end_column": 44
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\n\u22a2 \u2211 i, c i = k",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L122"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T13:45:19-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a7713b6989c1203e6c2b7005c93db7bd7ec5c6633c7da91ae6543fc715cb0ea6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 132,
        "start_column": 40,
        "end_line": 132,
        "end_column": 45
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9\n\u22a2 \u2191y < n",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "000b33c6b202045b15ff7a080b1bd482e8973c6dfa4a4e469454cdfda102e691"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 134,
        "start_column": 21,
        "end_line": 134,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 i \u2208 {j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191y', \u22ef\u27e9}",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "58ed65445c283c2ac86726a2ac1a0d1f2885fb2190749f0a180480f11aef3329"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 134,
        "start_column": 57,
        "end_line": 134,
        "end_column": 62
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9\ny' : Fin n := \u27e8\u2191y, \u22ef\u27e9\nys : { s // Even s.card } := cs y'\n\u22a2 \u2191y + n < 2 * n",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "64c96dbed995571a209ceee3474633c4a88fa86ff0377bf2ee0cc16730e417bf"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 136,
        "start_column": 21,
        "end_line": 136,
        "end_column": 26
      },
      "debug_info": {
        "goal": "n k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\ncs : S\ng1 : Fin k \u2192 Fin (2 * n) :=\n  fun i =>\n    let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n    let y' := \u27e8\u2191y, \u22ef\u27e9;\n    let ys := cs y';\n    if ?m.23757 \u2208 \u2191ys then ?m.23786 else y\nhg1 : Imo2008P5.NSequence n k g1 := sorry\n\u22a2 \u27e8g1, hg1\u27e9 \u2208 {g | Imo2008P5.\u03c8 n k g = f}",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-22T23:33:30-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "765b12bfa4d6cd7cd9d5379a23e5d5153663873fba82d34a32e52cf8d24559e6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 147,
        "start_column": 4,
        "end_line": 147,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.e_a\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | Imo2008P5.\u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := sorry;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\na : Fin n\n\u22a2 (Finset.filter\n        (Membership.mem {j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191a, \u22ef\u27e9})\n        Finset.univ).card =\n    c a",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L147"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-05-02T10:48:28-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "631748d080a14c9c065875f64dddb34c198186dafee26ed41faec42b81c62f11"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 167,
        "start_column": 6,
        "end_line": 167,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case left\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | Imo2008P5.\u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := sorry;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\nx y : S\nhxy : p x = p y\n\u22a2 x = y",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "2c0da09ba8cf90c4b6b11afa6287e02c2bbe032d2c65426fab38300603228c5e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2008P5.lean",
        "start_line": 169,
        "start_column": 6,
        "end_line": 169,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case right.mk\nn k : \u2115\nhn : 0 < n\nhnk : n \u2264 k\nhe : Even (k - n)\nf : { b // Imo2008P5.MSequence n k b }\nc : Fin n \u2192 \u2115 :=\n  fun i => Nat.card \u2191{j | @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f j = \u27e8\u2191i, \u22ef\u27e9}\nhcp : \u2200 (i : Fin n), 0 < c i\nhc : \u2211 i, c i = k\nS : Type := (i : Fin n) \u2192 { s // Even s.card }\np : S \u2192 \u2191{g | Imo2008P5.\u03c8 n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := @Subtype.val (Imo2008P5.Sequence n k) (fun b => Imo2008P5.MSequence n k b) f \u27e8\u2191i, \u22ef\u27e9;\n      let y' := \u27e8\u2191y, \u22ef\u27e9;\n      let ys := cs y';\n      if \u27e8i, \u22ef\u27e9 \u2208 \u2191ys then \u27e8\u2191y + n, \u22ef\u27e9 else y;\n    let hg1 := sorry;\n    let hgg := \u22ef;\n    \u27e8\u27e8g1, hg1\u27e9, hgg\u27e9\nScard : Fintype.card S = \u220f i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\ng : { f // Imo2008P5.NSequence n k f }\nhg : g \u2208 {g | Imo2008P5.\u03c8 n k g = f}\n\u22a2 \u2203 a, p a = \u27e8g, hg\u27e9",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2008P5.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-26T16:45:32-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "b9db34d9a50da13d6ff56ff981ab94b89e2809984cb437af2365607420083cca"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2017P5.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "c : \u211d\n\u22a2 c \u2208 Usa2017P5.solution_set \u2194\n    0 < c \u2227\n      \u2203 l,\n        (Set.range l).Finite \u2227\n          (\u2200 (p : \u2124 \u00d7 \u2124), 0 < l p) \u2227\n            \u2200 {p1 p2 : \u2124 \u00d7 \u2124}, p1 \u2260 p2 \u2192 l p1 = l p2 \u2192 Usa2017P5.dist \u2191(l p1) \u2191(l p2) \u2264 c ^ l p1",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2017P5.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-16T15:48:13-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "dd8bf9ae880d1c508bc1be1794bb1230798f3ebe4add4aca5c3923d7a5d896e6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2004P2.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : Polynomial \u211d\n\u22a2 P \u2208 Imo2004P2.SolutionSet \u2194\n    \u2200 (a b c : \u211d),\n      a * b + b * c + c * a = 0 \u2192\n        Polynomial.eval (a - b) P + Polynomial.eval (b - c) P + Polynomial.eval (c - a) P =\n          2 * Polynomial.eval (a + b + c) P",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2004P2.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-06T15:22:50-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "80c640e02f114faed894494f0033e2d3304ae89691540614b1954942fd92ca12"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1976P4.lean",
        "start_line": 28,
        "start_column": 2,
        "end_line": 28,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {n | \u2203 s, \u2211 i \u2208 s, i = 1976 \u2227 \u220f i \u2208 s, i = n} Imo1976P4.solution",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1976P4.lean#L28"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-26T10:31:58-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "9e381b03b5f12ef13d3580c4780b829e06de3edf314fbb05c93c4b9074e43666"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1979P5.lean",
        "start_line": 33,
        "start_column": 76,
        "end_line": 33,
        "end_column": 81
      },
      "debug_info": {
        "goal": "a : \u211d\n\u22a2 (\u2203 x1 x2 x3 x4 x5,\n      x1 \u2265 0 \u2227\n        x2 \u2265 0 \u2227\n          x3 \u2265 0 \u2227\n            x4 \u2265 0 \u2227\n              x5 \u2265 0 \u2227\n                x1 + 2 * x2 + 3 * x3 + 4 * x4 + 5 * x5 = a \u2227\n                  x1 + 2 ^ 3 * x2 + 3 ^ 3 * x3 + 4 ^ 3 * x4 + 5 ^ 3 * x5 = a ^ 2 \u2227\n                    x1 + 2 ^ 5 * x2 + 3 ^ 5 * x3 + 4 ^ 5 * x4 + 5 ^ 5 * x5 = a ^ 3) \u2194\n    a \u2208 Imo1979P5.solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1979P5.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "ac4e63ce9fc18cff0f8951a36e815792d72e8a90b25fa3a72dd9f1b0b188d52d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2022P3.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nhk : 0 < k\nS : Finset \u2115\nhS : \u2200 p \u2208 S, Odd p \u2227 Nat.Prime p\np\u2081 p\u2082 : Fin S.card \u2243 { x // x \u2208 S }\nhp\u2081 : Imo2022P3.Condition k S p\u2081\nhp\u2082 : Imo2022P3.Condition k S p\u2082\n\u22a2 (\u2203 i, \u2200 (j : Fin S.card), p\u2082 j = p\u2081 (j + i)) \u2228 \u2203 i, \u2200 (j : Fin S.card), p\u2082 j = p\u2081 (j.rev + i)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2022P3.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-04-15T08:25:26-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "58564f03d4b48fdb2e8633ee02aeb13f8e3a7c824899ef60d59d75937fcbde07"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2018P3.lean",
        "start_line": 69,
        "start_column": 2,
        "end_line": 69,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nt : Imo2018P3.antipascal_triangle 2018\nht :\n  \u2200 (n : \u2115),\n    1 \u2264 n \u2192\n      n \u2264 \u2211 i \u2208 Finset.range 2018, (i + 1) \u2192\n        \u2203 r \u2264 2018, \u2203 c < r, Imo2018P3.antipascal_triangle.f 2018 t (Imo2018P3.Coords.mk r c) = n\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2018P3.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-09-16T20:32:12-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0a642c5bf7192175912fe79083962a301f55ea5f77c25243d03afb48b7cf37c1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1995P4.lean",
        "start_line": 33,
        "start_column": 89,
        "end_line": 33,
        "end_column": 94
      },
      "debug_info": {
        "goal": "x : \u2115 \u2192 \u211d\nh : x 0 = x 1995\nh1 : \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i\n\u22a2 x 0 \u2264 Imo1995P4.solution \u2227\n    \u2203 x,\n      x 0 = Imo1995P4.solution \u2227\n        x 0 = x 1995 \u2227 \u2200 (i : \u2115), 0 < i \u2227 i \u2264 1995 \u2192 x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1995P4.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "f07f9af73ff30aa936e22a53a43f0ad6d07bd818151dccd2f470136ce35388c1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2024P2.lean",
        "start_line": 42,
        "start_column": 5,
        "end_line": 42,
        "end_column": 10
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 IsLeast {k | \u2203 S, Usa2024P2.Good S \u2227 k = {z | Usa2024P2.InAtLeastKSubsets S k z}.ncard} Usa2024P2.solution",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2024P2.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-29T08:54:06-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "205cd064853d6ddc55ceae96e63d7165d464d3d4d4c13a69b3050016b7a72a65"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2023P1.lean",
        "start_line": 34,
        "start_column": 4,
        "end_line": 34,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mp\nx : \u2115\n\u22a2 x \u2208 Imo2023P1.solution_set \u2192 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 Imo2023P1.P n}",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P1.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-23T06:07:49-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0c863d81da80821970098bf2284700653ea3c00041830438a5ea9efce69cfa79"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2023P1.lean",
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mpr\nx : \u2115\n\u22a2 x \u2208 {n | 1 < n \u2227 \u00acNat.Prime n \u2227 Imo2023P1.P n} \u2192 x \u2208 Imo2023P1.solution_set",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P1.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-23T06:07:49-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "bf3d5520a0b705b6ba8a5a1b10b15e39b64b1ce9aff00c18ee012453cbb7e69b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2023P5.lean",
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P5.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-23T09:39:50-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "da17bb5f8e326e4691ef4141395366a69a7294bd16efb584116cf68d090082fb"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1971P3.lean",
        "start_line": 23,
        "start_column": 63,
        "end_line": 23,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u22a2 {x | @Imo1971P3.imo1971_p3.match_1 (fun x => Prop) x fun n m => (2 ^ n - 3).Coprime (2 ^ m - 3)}.Infinite",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1971P3.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "3e39b2ceda3e",
        "blame_date": "2024-06-06T17:35:14+08:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "686aa0ddb41525961186d888c3a794750d5cc9a06031b74333e6f670b168c772"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2020P3.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nc : Fin (4 * n) \u2192 Fin n\nh : \u2200 (i : Fin n), {j | c j = i}.card = 4\n\u22a2 \u2203 S, \u2211 i \u2208 S, (\u2191i + 1) = \u2211 i \u2208 S\u1d9c, (\u2191i + 1) \u2227 \u2200 (i : Fin n), {j \u2208 S | c j = i}.card = 2",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2020P3.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2025-04-08T13:09:24-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "1495e7e9604ab2a6dc2b4220efa14f82b0c7144a51c2d2ebea48920a7cc85189"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2001P1.lean",
        "start_line": 45,
        "start_column": 2,
        "end_line": 45,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2))\n\u22a2 EuclideanGeometry.oangle (Affine.Simplex.circumcenter t) (t.points 2) (t.points 1) =\n    \u2191Real.pi - EuclideanGeometry.oangle (t.points 1) (t.points 0) (t.points 2)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2001P1.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-29T20:28:24-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "abf0e9fad9c30853ced1c05c1a8550e1271cc54d2406600ab43e9234581f9865"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2001P1.lean",
        "start_line": 60,
        "start_column": 2,
        "end_line": 60,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A B C : EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A, B, C]\nhAcuteA : EuclideanGeometry.angle C A B < Real.pi / 2\nhAcuteB : EuclideanGeometry.angle A B C < Real.pi / 2\nhAcuteC : EuclideanGeometry.angle B C A < Real.pi / 2\nhAB : EuclideanGeometry.angle A B C + Real.pi / 6 \u2264 EuclideanGeometry.angle B C A\nABC : Affine.Triangle \u211d (EuclideanSpace \u211d (Fin 2)) := { points := ![A, B, C], independent := hABC }\nP : \u21a5(affineSpan \u211d {B, C}) := (EuclideanGeometry.orthogonalProjection (affineSpan \u211d {B, C})) A\n\u22a2 EuclideanGeometry.angle C A B + EuclideanGeometry.angle C (Affine.Simplex.circumcenter ABC) \u2191P < Real.pi / 2",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2001P1.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-29T13:45:33-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "7ebd8c1a310b4b1e5fe9ccb621d0de3de80124b36b92493cfc1f6c519a69feb0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2017P1.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a0 : \u2115\n\u22a2 a0 \u2208 Imo2017P1.solution_set \u2194 \u2203 A, {n | Imo2017P1.a a0 n = A}.Infinite",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2017P1.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-02T09:41:34-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "b538d36813a7723d94874a93530d54ab5dc043d00b5c4eff5e0fcd678ac2d2a4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2020P5.lean",
        "start_line": 40,
        "start_column": 2,
        "end_line": 40,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 n \u2208 Imo2020P5.SolutionSet \u2194\n    1 < n \u2227\n      \u2200 (\u03b1 : Type) [inst : Fintype \u03b1],\n        Fintype.card \u03b1 = n \u2192\n          \u2200 (f : \u03b1 \u2192 \u2115+),\n            (Pairwise fun a b => \u2203 s, s.Nonempty \u2227 Imo2020P5.geometric_mean \u03b1 f s = (\u2191\u2191(f a) + \u2191\u2191(f b)) / 2) \u2192\n              \u2203 y, \u2200 (a : \u03b1), f a = y",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2020P5.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-04-18T17:13:51-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "65524507396cac3a8c9c20b41db808917dd21eef60626d5afaca98aac58520d4"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1963P4.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x\u2081 x\u2082 x\u2083 x\u2084 x\u2085 y : \u211d\n\u22a2 (x\u2081, x\u2082, x\u2083, x\u2084, x\u2085) \u2208 Imo1963P4.SolutionSet y \u2194\n    x\u2085 + x\u2082 = y * x\u2081 \u2227 x\u2081 + x\u2083 = y * x\u2082 \u2227 x\u2082 + x\u2084 = y * x\u2083 \u2227 x\u2083 + x\u2085 = y * x\u2084 \u2227 x\u2084 + x\u2081 = y * x\u2085",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1963P4.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-06-09T08:58:13-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "03eb17f854be2c077cec9b9eb112dbaff77aeb372133f4260d9b0026069a0a2d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "7fa4d04405ae2fa12eb7f42aefb81b46658860cae748956675f0bd13e87f1936"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "eb884893785d00f90b94e22318cb4e18afebf5a9982415b56b4130e13de67cf1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "214d02108b64f6ebeeae39c5db0602bf7ad9fd3afb491d48c8bf1926264217bc"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "786f1d5b55132d39c7953c6ab29c051f58f562332bf72babe46b0ea1be74342f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0e8f1c6fdf64c167123d70cd124751719e4438f44c6eea7ddbf8d60cdf2f4927"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "9388c5f03b61b5b1934be60245aedf2f4ce4fab9a15964e64920db069b55ab7c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 : 1 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "3d9332e1bcd05e8639317bc9b471d29a06f168dbc1849695ab66927aafef84c8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab1\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 1\nhi2 hj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e81, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e81, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 1, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "00d81dd3604412ea9a5198a5a0deaeaf5c60ae242fdde1ae393ce00e8b5d558c"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "1f57a661e645574114d484a8053c9c612ac691de4c7d244a6821e71c76d1851a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a27fd7b82911f1a2ff814324902cad528f523e2afe8b2a9742d56768fd45dd8b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "8d246aa53168e2ccac124cca93fc789b7644176953a0e73b4f67209630255d9d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "4285331821303b180870865dd1df6e40d5f210bcfec13118847c09a19d23bab8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "c9f38b6409e57a8c63ef1e7e9492ad533fe01ddcdb30eddcb29b23e0363b8137"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "31456050b3d6174498a4ed90717ffd1a8bd87c4774aa1a8cbe85420fdf230106"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "54a0fda5e3ef596c3871e382db84d12c893a2fdb7bd3c1d9721fe5c50b295098"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab2\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 2\nhi2 : 2 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e82, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e82, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 2, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "9cd9c7cf7f86a95092ddfa8d96503c62d9048f44daad953f2bc4c119f269ef65"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "dde89fc3a49a78d8f0e98e0f3d58a380823656f46c53b73c75f662a3afb41dbe"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "7ed89cd8723d21bdb5753c314572433f309e75106bba509159c9bfa2f1a19a81"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "9c5422af6fe3a3c5bedde6643bc8b6fb60911e93f70f5197b0d417f560c1d124"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "7432413018a3b81161529fda51ddcc1815a0c2dbab7b483ad28a07df61849f28"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "3fd72f9b68eeedf55f063fbfbcc5a16269cbdb532de7d8d3a4d3393dcf84cadb"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "c35a41f95a4bf65630c5281cfb3a4c388ad9668707be6ca2d493e35565d0b4c7"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "3d35a10b9111ec37e6dede994caee4134afc2049b068a7220191400945a14af3"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab3\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 3\nhi2 : 3 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e83, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e83, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 3, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "bb12283c8f211f980b352c8dfa279fd0639033dd728a3a0389274e84e0b13891"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "4676ab1a5f1849c942a21e00a6bae72b615d01d4f2b97fa65c6ac9d804d3e0ce"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "90623d3c010b4b4c9726911f41f2bc8ce300c9b9ecd7727febf8774d5e4003c8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "5099181ffca329a6edff3ac4ab845dcc0607e4ff483bb4f5603af4ed776b06c1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a2c4111a16103d0dc720f042fd3c2c954428ea2e2552fcc3f62c5d59e6102734"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a7b07ee25be433997eb57b2d011ce06e19d91b529909b268d44f80620eadfc10"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "4106b5cb353e76d5ce56b9977a1a6a5034741ae0beda61a467c22126c94f9306"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "bf15f5f22ba8a0c612e916f33a13d231a57e7aab64521a312e52fc7e16392df9"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab4\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 4\nhi2 : 4 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e84, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e84, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 4, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "4328edce4676964f567a93b90780f6d052ccd3197d560138b7785ddb2bae0462"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "539bac83d353b4b7e9d73537cf6e900dd92c229e99c05faa01a2b4a9285e29cd"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "b0623ab6506e7d8f4719cc2611a04135292f3cea09fd46adfdd133f501bbe98f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "52f671a8ed4f5c77712a8c3f71ae283cf16c9b0e1b1beb8bf5691ebe4d95b1d3"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "dd2b704fef4e950d4c2729754621310e270e390532e72dbaf37270807ea63ba1"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "560f4e149f3400431ea460cc4a3959f43d960ae374239dd38242c59f91da1716"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "dd5ccbd55863eeaf8cb005bd7a1b0cf52f9d8fd9080c0742eb1c03703e645dcd"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "6bc9c3992f635c38622bd0c28cc324d0879f30ae38d5d761bd811c0f593a8fa6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab5\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 5\nhi2 : 5 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e85, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e85, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 5, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "86b7658b4a55f83849fa0640e5f711400ea76bdada3d3c2374f566e9ec1dd68f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "385007c0195978c43635cba4b5b0bf100779155e5a6ed5a36373abb73279ec35"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "7c4cd985be08903496473638c02dc5ba045d4dbb0506cefec5b104103cc6ab73"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "bb2803f3c22248baadfc99f55c66134d48e7d26770f924e65c5df18d5a1c3e4f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "e60abf3d87713cac237b40a35eb6c4deeaadb8624aa5ef857cb6d9ce9f429657"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "0a929940ebbd410291eafe9506117f457b9b7eb3c0856715993229e27f54cf27"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "33a5151fd22695127a8c64779d5be7ba86f659415415015941eec1fb036879db"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a029c4a53bfd94af51fcf3d258b474a0729ea02b829e5a860b421b3c9d260fe8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab6\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 6\nhi2 : 6 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e86, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e86, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 6, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "a8317cc633b564534a7cc20cb810a91ce2a5598376979236d75f3bed7e36874b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "2b7639a93f2a659e2442bb4f300d692ab6b3c77b3e116a80a587e5ea6bfcc799"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "86c885e174a39f29e263108b5ff788b97f71e599efddabb39d7c2322b9719119"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "784caa1b7e1c4920fb8dc88ffbc42f8766a058dd651d518c3b24c67faedd4450"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "1711d69df1b2e585e3081f5d73826b00044d4342cf221c3594844a50da6cdaf3"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "be2ead8fd8f9e3117d1443d924bf06683d8fb141d9d4e773d647a7320b078375"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "37772baf505ab3399a2a81339b42bc885e3f37026ad4d2adc80853425ce8bb0e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "662423477a65e6ba4384d2cda0c4d8f4a63d26804a098899664278bf234f9a82"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab7\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 7\nhi2 : 7 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e87, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e87, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 7, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "aa2a1899d4b888596e87cef69b2b4806f5a1227e22462996e2ba0626f56d838b"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab1\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 1\nhj2 : 1 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e81, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e81, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e81, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 1 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "9c6f9202b6327f27282ce2fdf23c3029f19b0e63c0b83ff15937266cb546e56e"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab2\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 2\nhj2 : 2 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e82, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e82, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 2 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "b744236855ecfedfbab92b7b893b7acfdd4265003b4973648ab37a0a6f957c9f"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab3\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 3\nhj2 : 3 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e83, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e83, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e83, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 3 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "aebea48fb035d228fe037095b5c8737bc739addb57267ee6bd7244a7fd3df7d6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab4\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 4\nhj2 : 4 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e84, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e84, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e84, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 4 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "1b35f6e80f94895fc20cd665d5540af41bf38c1b060e6b641138b5c8672b67f6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab5\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 5\nhj2 : 5 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e85, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e85, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e85, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 5 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "af31b962d50b62f5f2c039aad80625c58731dde801de7c854b96fabeb2298943"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab6\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 6\nhj2 : 6 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e86, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e86, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e86, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 6 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "1a8e2e72e77b2bafe9432d92134e45674fd0ed90b4ca400b897ee07f7d1a2f3a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab7\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 7\nhj2 : 7 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e87, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e87, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e87, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 7 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "884d701512e3f98be8e7a0f49db07a56259682a698ef0e5a72edcd4b4bdcb754"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Bulgaria1998P1.lean",
        "start_line": 76,
        "start_column": 44,
        "end_line": 76,
        "end_column": 49
      },
      "debug_info": {
        "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.\u00ab8\u00bb.\u00ab8\u00bb\ni j : \u2115\nhi1 : 1 \u2264 8\nhi2 : 8 \u2264 8\nhj1 : 1 \u2264 8\nhj2 : 8 \u2264 8\nhij1 : \u27e88, \u22ef\u27e9 < \u27e88, \u22ef\u27e9\nhij2 : 2 * \u2191\u27e88, \u22ef\u27e9 - \u2191\u27e88, \u22ef\u27e9 \u2208 Set.Icc 1 8\nhc1 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0\nhc2 :\n  (@Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e88, \u22ef\u27e9 (fun property => 0) (fun property => 1)\n      (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0) (fun property => 1)\n      (fun property => 0) fun x => 0) =\n    @Bulgaria1998P1.coloring_of_eight.match_1 8 (fun x => Fin 2) \u27e82 * 8 - 8, hij2\u27e9 (fun property => 0)\n      (fun property => 1) (fun property => 0) (fun property => 1) (fun property => 1) (fun property => 0)\n      (fun property => 1) (fun property => 0) fun x => 0\n\u22a2 False",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Bulgaria1998P1.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-12-02T21:25:12-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "d8a8178c7b7394f439003151e463b2abc3e4f0f22fb1e4accb948448a04aeda0"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1991P6.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u211d\nha : 1 < a\n\u22a2 Imo1991P6.Bounded (Imo1991P6.solution a ha) \u2227\n    \u2200 (i j : \u2115), i \u2260 j \u2192 1 \u2264 |Imo1991P6.solution a ha i - Imo1991P6.solution a ha j| * |\u2191i - \u2191j|",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1991P6.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-20T21:26:57-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "e91770fa90c2cee6e3e004c4fc0fdb1c32491a15daf466e9339c44e6b00ce8f8"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2015P2.lean",
        "start_line": 32,
        "start_column": 2,
        "end_line": 32,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2124\n\u22a2 (a, b, c) \u2208 Imo2012P2.SolutionSet \u2194\n    0 < a \u2227\n      0 < b \u2227\n        0 < c \u2227\n          Imo2012P2.is_power_of_two (a * b - c) \u2227\n            Imo2012P2.is_power_of_two (b * c - a) \u2227 Imo2012P2.is_power_of_two (c * a - b)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2015P2.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-07T18:22:25-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "35eab0f186c17f22e32ad5edbd0e4906ddedc164a1deec4059b29382fe8497a6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1993P5.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 if Imo1993P5.DoesExist = true then \u2203 f, Imo1993P5.Good f else \u00ac\u2203 f, Imo1993P5.Good f",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1993P5.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-03-24T13:48:13-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "9b6783112a6f43ca1e58ef9cd980497326d63d213254ac8afb1b07609ce75fec"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2007P1.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na x : Fin n \u2192 \u211d\nh : Monotone x\n\u22a2 (\u2a06 i, Imo2007P1.d n a i) / 2 \u2264 \u2a06 i, |x i - a i|",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2007P1.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-27T11:23:45-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "8a88f093c19caf79e9993bda58e8bf7416810b3a0b84d13e0a389a27db984d7a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2007P1.lean",
        "start_line": 38,
        "start_column": 2,
        "end_line": 38,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\na : Fin n \u2192 \u211d\n\u22a2 \u2203 x, Monotone x \u2227 (\u2a06 i, Imo2007P1.d n a i) / 2 = \u2a06 i, |x i - a i|",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2007P1.lean#L38"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-11-27T11:23:45-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "509c1c599712a5e3f0a75208832ff808ec0529c889484da60c402c38579186d6"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo2023P3.lean",
        "start_line": 39,
        "start_column": 2,
        "end_line": 39,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nhk : 2 \u2264 k\na : \u2115+ \u2192 \u2115+\n\u22a2 a \u2208 Imo2023P3.SolutionSet k hk \u2194\n    \u2203 P,\n      P.Monic \u2227\n        P.degree = \u2191k \u2227\n          (\u2200 n \u2264 k, 0 \u2264 P.coeff n) \u2227\n            \u2200 (n : \u2115+), Polynomial.eval (\u2191\u2191(a n)) P = \u2191\u2191(\u220f i \u2208 Finset.range k, a \u27e8\u2191n + i + 1, \u22ef\u27e9)",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo2023P3.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2023-10-24T09:05:23-04:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "ecd1c5490538fcf6aa9a473b1b0ff2a320120f374a44a89168761efe3eada74a"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Imo1970P6.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : Fin 100 \u2192 Imo1970P6.Pt\nhP :\n  \u2200 (a b c : Fin 100),\n    [a, b, c].Nodup \u2192\n      \u00acCollinear \u211d\n          (@insert Imo1970P6.Pt (Set Imo1970P6.Pt) Set.instInsert (P c)\n            (@insert Imo1970P6.Pt (Set Imo1970P6.Pt) Set.instInsert (P b)\n              (@singleton Imo1970P6.Pt (Set Imo1970P6.Pt) Set.instSingletonSet (P c))))\n\u22a2 let cardAll := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points};\n  let cardAcute := Nat.card \u2191{t | \u2203 a b c, ![P a, P b, P c] = t.points \u2227 Imo1970P6.AcuteTriangle t};\n  \u2191cardAcute / \u2191cardAll \u2264 7 / 10",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Imo1970P6.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-21T09:27:31-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "af05279998937241ac9c8d7db4395a2887623e68f8a31c2938699cde582fdf4d"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/Usa2000P5.lean",
        "start_line": 42,
        "start_column": 2,
        "end_line": 42,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : ZMod 3 \u2192 EuclideanSpace \u211d (Fin 2)\nhABC : AffineIndependent \u211d ![A 0, A 1, A 2]\n\u03c9 : Fin 7 \u2192 Imo2000P5.Circle\nhTangent : (i : Fin 7) \u2192 i < 6 \u2192 Imo2000P5.ExternallyTangent (\u03c9 i) (\u03c9 (i + 1))\nhA : \u2200 i < 7, A \u2191i \u2208 \u03c9 \u2191i \u2227 A (\u2191i + 1) \u2208 \u03c9 \u2191i\n\u22a2 \u03c9 0 = \u03c9 6",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/Usa2000P5.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-02-16T09:11:27-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "e447cc2a0ee7ea0a7cfb408ed795197a07e730bd683967731ca2a0ac2df99a65"
    },
    {
      "repo": {
        "remote": "https://github.com/dwrensha/compfiles",
        "branch": "main",
        "commit": "6c69425afca4d916a1e7b9f1114b8188cb1e6064",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Compfiles/CIIM2022P6.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nhn : 0 < n\n\u22a2 CIIM2022P6.d (n + 1).factorial \u2264 2 * CIIM2022P6.d n.factorial",
        "url": "https://github.com/dwrensha/compfiles/blob/6c69425afca4d916a1e7b9f1114b8188cb1e6064/Compfiles/CIIM2022P6.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "acdd9d7e744e",
        "blame_date": "2024-01-16T20:57:01-05:00",
        "inclusion_date": "2025-05-01T23:15:00.543460+00:00"
      },
      "id": "16502eed517718f7464629202da48b2bc9103106e5c4d717361844dace5b13d0"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/LinearizedMetricCarleson.lean",
        "start_line": 30,
        "start_column": 2,
        "end_line": 30,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (\u0398 X)\n\u03b8 : \u0398 X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => linearizedNontangentialOperator (\u21d1Q) \u03b8 K x1 x2) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, linearizedCarlesonOperator (\u21d1Q) K f x \u2264 \u2191(C1_0_3 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/LinearizedMetricCarleson.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-07-30T10:31:30+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "d3cf32af796d3ec4b490ab475c07fe75e273a3747f793fb861dca6775397f436"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TileStructure.lean",
        "start_line": 527,
        "start_column": 70,
        "end_line": 527,
        "end_column": 75
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d\u00b2 : PseudoMetricSpace X\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d :\n  @TileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d CompatibleFunctions.toFunctionDistances Q (defaultD a)\n    (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 :\n  Set\n    (@\ud835\udd13 \u211d Real.instRCLike X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n      CompatibleFunctions.toFunctionDistances Q\n      (@TileStructure.toPreTileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d CompatibleFunctions.toFunctionDistances\n        Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X) inst\u271d))\n\u22a2 IsAntichain (fun x1 x2 => x1 \u2264 x2)\n      (@image\n        (@\ud835\udd13 \u211d Real.instRCLike X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d (defaultD a) (default\u03ba a) (defaultS X)\n          (cancelPt X) CompatibleFunctions.toFunctionDistances Q\n          (@TileStructure.toPreTileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d\n            CompatibleFunctions.toFunctionDistances Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X) inst\u271d))\n        (@TileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d) (@toTileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d) \ud835\udd04) \u2194\n    \u2200\n      (p p' :\n        @\ud835\udd13 \u211d Real.instRCLike X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n          CompatibleFunctions.toFunctionDistances Q\n          (@TileStructure.toPreTileStructure X (\u2191(defaultA a)) inst\u271d\u00b2 PreProofData.d\n            CompatibleFunctions.toFunctionDistances Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X) inst\u271d)),\n      p \u2208 \ud835\udd04 \u2192\n        p' \u2208 \ud835\udd04 \u2192\n          p \u2260 p' \u2192\n            Disjoint\n              (@TileLike.toTile X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d\n                (@toTileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d p))\n              (@TileLike.toTile X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d\n                (@toTileLike X inst\u271d\u00b2 a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b9 inst\u271d p'))",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TileStructure.lean#L527"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-07-03T17:09:05+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "6a7e7862670fb0910a59cbc8d75ee99e926f26cb38f64547787bd3e32ce7f264"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/MetricCarleson.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d\u00b9 : IsCancellative X (default\u03c4 a)\ninst\u271d : IsOneSidedKernel a K\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C1_0_2 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/MetricCarleson.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-06-16T22:39:23+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "786af9c15ac3d2293864369a81f21a3ce97dae459a724ded010c57374b33eb5d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 58,
        "start_column": 2,
        "end_line": 58,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nx : \u211d\n\u22a2 partialFourierSum n (partialFourierSum n f) x = partialFourierSum n f x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "9aca71792a194665c76a322c52d5a5f3fafe062026d4ba2a6379269fc792cbd6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 68,
        "start_column": 2,
        "end_line": 68,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * Real.pi)\n\u22a2 \u222b (x : \u211d) in 0 ..2 * Real.pi, (starRingEnd \u2102) (partialFourierSum n f x) * g x =\n    \u222b (x : \u211d) in 0 ..2 * Real.pi, (starRingEnd \u2102) (f x) * partialFourierSum n g x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "2968ba41b49e62ebdc805848a735bbe99a948ee4c75cd6c6bd2a337293a7870c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 134,
        "start_column": 2,
        "end_line": 134,
        "end_column": 7
      },
      "debug_info": {
        "goal": "g : \u211d \u2192 \u2102\nn : \u2115\nhmg : Measurable g\nhg : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * Real.pi)\n\u22a2 (fun p => eLpNorm ((Ioc 0 (2 * Real.pi)).indicator (approxHilbertTransform n g)) p volume) \u2264 fun p =>\n    eLpNorm ((Ioc 0 (2 * Real.pi)).indicator g) p volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "e712234ab3b4c30a4bee534a3e55d0c9d2384ee4e6b2afea9b9f9fc2e359b6bc"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u2102\nn : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nhg\u271d : MemLp g \u22a4 volume\nperiodic_g : Function.Periodic g (2 * Real.pi)\nr : \u211d\nhr : r \u2208 Ioo 0 Real.pi\nhg : \u2200 (x : \u211d), \u2016g x\u2016 \u2264 niceKernel r x\n\u22a2 eLpNorm ((Ioc 0 (2 * Real.pi)).indicator fun x => \u222b (y : \u211d) in 0 ..2 * Real.pi, f y * g (x - y)) 2 volume \u2264\n    2 ^ 5 * eLpNorm ((Ioc 0 (2 * Real.pi)).indicator f) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "81c1f61308e6d30043eca44bd33d2356bfd1027cfca80f4309334d0b1e401527"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 Function.Periodic (dirichletApprox n) (2 * Real.pi)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "6d79499180841cdedd6e9d91b82efe89066dea7bcfab05f64c502180444ee088"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 182,
        "start_column": 2,
        "end_line": 182,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nn : \u2115\nx : \u211d\n\u22a2 approxHilbertTransform n f x = \u2191(2 * Real.pi)\u207b\u00b9 * \u222b (y : \u211d) in 0 ..2 * Real.pi, f y * dirichletApprox n (x - y)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "ba8e1a50167e5cf75e5cbe77a078855970b1269ef5eec2e3a10b5e411751be7a"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Classical/HilbertStrongType.lean",
        "start_line": 192,
        "start_column": 2,
        "end_line": 192,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u2102\nn\u271d : \u2115\nhf : MemLp f \u22a4 volume\nperiodic_f : Function.Periodic f (2 * Real.pi)\nr : \u211d\nhr : r \u2208 Ioo 0 1\nn : \u2115\nhn : n = \u2308r\u207b\u00b9\u2309\u208a\nx : \u211d\n\u22a2 dist (dirichletApprox n x) ({y | \u2016y\u2016 \u2208 Ioo r 1}.indicator 1 \u2191x) \u2264 2 ^ 5 * niceKernel r x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Classical/HilbertStrongType.lean#L192"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-23T00:03:48+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "55ac3cde87fa6d61192160e4197ed2fe58e5068ee723ebef378cde678048a59d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 384,
        "start_column": 33,
        "end_line": 384,
        "end_column": 38
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : NNReal\ninst\u271d\u00b9\u00b9 : MetricSpace X\ninst\u271d\u00b9\u2070 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2079 : \u03bc.IsDoubling A\ninst\u271d\u2078 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2077 : BorelSpace X\ninst\u271d\u2076 : NormedSpace \u211d E\ninst\u271d\u2075 : MeasurableSpace E\ninst\u271d\u2074 : BorelSpace E\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\nh\ud835\udcd1 : \ud835\udcd1.Countable\nR : \u211d\nhR : \u2200 i \u2208 \ud835\udcd1, r i \u2264 R\np : NNReal\nhp : 1 < p\n\u22a2 \u2200 (f : X \u2192 E), MemLp f (\u2191p) \u03bc \u2192 \u2200\u1d50 (x : X) \u2202\u03bc, @MB X E inst\u271d\u00b9\u00b9 inst\u271d\u00b9\u2070 inst\u271d\u2078 \u03b9 \u03bc \ud835\udcd1 c r f x \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/HardyLittlewood.lean#L384"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-20T18:21:24+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "d4c8fc650a9b7a40118943bff64a43103098ddf793a04bef86aed392a794d888"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 415,
        "start_column": 33,
        "end_line": 415,
        "end_column": 38
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : NNReal\ninst\u271d\u2078 : MetricSpace X\ninst\u271d\u2077 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u2076 : \u03bc.IsDoubling A\ninst\u271d\u2075 : NormedAddCommGroup E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\ninst\u271d\u2074 : BorelSpace X\ninst\u271d\u00b3 : IsFiniteMeasureOnCompacts \u03bc\ninst\u271d\u00b2 : ProperSpace X\ninst\u271d\u00b9 : Nonempty X\ninst\u271d : \u03bc.IsOpenPosMeasure\np\u2081 p\u2082 : NNReal\nh\ud835\udcd1 : \ud835\udcd1.Countable\nR : \u211d\nhR : \u2200 i \u2208 \ud835\udcd1, r i \u2264 R\nhp\u2081 : 1 \u2264 p\u2081\nhp\u2081\u2082 : p\u2081 < p\u2082\n\u22a2 \u2200 (f : X \u2192 E), MemLp f (\u2191p\u2082) \u03bc \u2192 \u2200\u1d50 (x : X) \u2202\u03bc, @maximalFunction X E inst\u271d\u2078 inst\u271d\u2077 inst\u271d\u2075 \u03b9 \u03bc \ud835\udcd1 c r (\u2191p\u2081) f x \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/HardyLittlewood.lean#L415"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-04-15T15:45:33+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "ecd7c9bd9bb9b1bc7d06a3c32c9ec7ea16605076f1e34fa9de9f653cf9ac6ca6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 578,
        "start_column": 2,
        "end_line": 578,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d : NormedAddCommGroup E\nf : X \u2192 E\n\u03b9 : Type u_3\n\ud835\udcd1 : Set \u03b9\nc : \u03b9 \u2192 X\nr : \u03b9 \u2192 \u211d\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (@MB X E inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \u03b9 \u03bc \ud835\udcd1 c r f)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/HardyLittlewood.lean#L578"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "e7f5b17012d88e564720427d5474796600925a03c355f3621a0c7cd07ef18a6f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/HardyLittlewood.lean",
        "start_line": 785,
        "start_column": 2,
        "end_line": 785,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\nE : Type u_2\nA : NNReal\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : MeasurableSpace X\n\u03bc : Measure X\ninst\u271d\u00b2 : \u03bc.IsDoubling A\ninst\u271d\u00b9 : NormedAddCommGroup E\nf : X \u2192 E\ninst\u271d : ProperSpace X\nhf : LocallyIntegrable f \u03bc\n\u22a2 LowerSemicontinuous (@globalMaximalFunction X E A inst\u271d\u2074 inst\u271d\u00b3 \u03bc inst\u271d\u00b9 inst\u271d inst\u271d\u00b2 1 f)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/HardyLittlewood.lean#L785"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-06-20T19:02:09+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "910e0652c999db95cd130a748c49cadae2f2fa894cac813d4ddadc7708b36305"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_4_4 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/Forests.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "3d346c491182110d8689eec382c57cf7d27232e1bb2bf2f6bd7c71f708454c54"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_4_4 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081) \u2229 \u2191(\ud835\udcd8 u\u2082)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/Forests.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "5c14639f4779c44bbd84f97da8f442a52f1c618cb54283f688e1e4e27573b8ee"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 257,
        "start_column": 2,
        "end_line": 257,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn j : \u2115\nt : Forest X n\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhg : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm\n      (\u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j},\n        adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f)\n      2 volume \u2264\n    \u2191(TileStructure.Forest.C7_7_2_1 a n) * eLpNorm f 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/Forests.lean#L257"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "625ed0af995f43b6058c14cd81de03330cfaf87abda135d76bfe243c035b317e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn j : \u2115\nt : Forest X n\nu : \ud835\udd13 X\nf : X \u2192 \u2102\nhj : j < 2 ^ n\nhf : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 eLpNorm\n      ((\u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j}, F.indicator)\n        (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f))\n      2 volume \u2264\n    \u2191(TileStructure.Forest.C7_7_2_2 a n) * dens\u2082 (\u22c3 u \u2208 t, (fun x => t.\ud835\udd17 x) u) ^ 2\u207b\u00b9 * eLpNorm f 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/Forests.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "c0bf6eae4b246d60e9b9f53e3072fbb6734574949a1eaeac1749be38337678bc"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 280,
        "start_column": 2,
        "end_line": 280,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn j j' : \u2115\nt : Forest X n\nf\u2081 f\u2082 : X \u2192 \u2102\nhjj' : j < j'\nhj' : j' < 2 ^ n\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nh3f\u2081 : \u2200 (x : X), \u2016f\u2081 x\u2016 \u2264 G.indicator 1 x\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\nh3f\u2082 : \u2200 (x : X), \u2016f\u2082 x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2191\u2016\u222b (x : X),\n          (\u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j},\n              adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2081 x) *\n            \u2211 u \u2208 {p | p \u2208 @TileStructure.Forest.rowDecomp X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t j'},\n              adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u) f\u2082 x\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_7_3 a n) * eLpNorm f\u2081 2 volume * eLpNorm f\u2082 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/Forests.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "361c79135e4948f9294041d864f8ad2919540d500ce9838cb7c1b3965a45de89"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/Forests.lean",
        "start_line": 352,
        "start_column": 2,
        "end_line": 352,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\n\ud835\udd09 : Forest X n\nf g : X \u2192 \u2102\nhf : Measurable f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nh2g : Bornology.IsBounded (support g)\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 u \u2208 {p | p \u2208 \ud835\udd09}, carlesonSum ((fun x => \ud835\udd09.\ud835\udd17 x) u) f x\u2016\u208a \u2264\n    \u2191(C2_0_4 (\u2191a) q n) * dens\u2082 (\u22c3 u \u2208 \ud835\udd09, (fun x => \ud835\udd09.\ud835\udd17 x) u) ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume * eLpNorm g 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/Forests.lean#L352"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "dc8f5122f288ec556d4dff620518687cc107fa8f1a5ca4e95e552eaf37563bf5"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/RemainingTiles.lean",
        "start_line": 372,
        "start_column": 2,
        "end_line": 372,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf : Bornology.IsBounded (range f)\nh2f : HasCompactSupport f\nh3f : AEStronglyMeasurable f volume\n\u22a2 eLpNorm\n      (approxOnCube (@TileStructure.Forest.\ud835\udcd9\u2086 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081) fun x =>\n        \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016)\n      2 volume \u2264\n    \u2191(TileStructure.Forest.C7_6_2 a n) *\n      eLpNorm ((\u2191(\ud835\udcd8 u\u2081)).indicator fun x => MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/RemainingTiles.lean#L372"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "1d760e34a7b2fbfeda911657ac3db4b38c166f0497164121867203c86d110498"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/RemainingTiles.lean",
        "start_line": 387,
        "start_column": 2,
        "end_line": 387,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2191\u2016\u222b (x : X),\n          adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n            (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \\ t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u208a \u2264\n    \u2191(TileStructure.Forest.C7_4_6 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/RemainingTiles.lean#L387"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "dd32c2584af53462304aa0a6f43285dcaa7b9c37508c2aea7b4a7fae07f85a15"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/AlmostOrthogonality.lean",
        "start_line": 313,
        "start_column": 26,
        "end_line": 313,
        "end_column": 31
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu : \ud835\udd13 X\nf : X \u2192 \u2102\nhu : u \u2208 t\nhf : BoundedCompactSupport f\nh2f : \u2200 (x : X), \u2016f x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2200\u1d50 (x : X), @TileStructure.Forest.adjointBoundaryOperator X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u f x \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/AlmostOrthogonality.lean#L313"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-04-15T15:45:33+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "a51ca4bda6d9f1017c5f25ce17fdfc27762daaa428890cf9710cfb01b8f0d7ae"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/LargeSeparation.lean",
        "start_line": 1480,
        "start_column": 2,
        "end_line": 1480,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 @TileStructure.Forest.\ud835\udcd9\u2085 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081 u\u2082\nhf : BoundedCompactSupport f\n\u22a2 \u2191(\u2a06 x \u2208 ball (c J) (8 * \u2191(defaultD a) ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) f x\u2016\u208a) \u2264\n    \u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191(defaultD a) ^ s J),\n      \u2191\u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f x\u2016\u208a +\n        \u2191(TileStructure.Forest.C7_5_10 a) * \u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f x\u2016) x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/LargeSeparation.lean#L1480"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "2c5c21b3e9613b1fb422be3be536defc9ed1e6ceaaef2cb039f033e827e2eed4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/LargeSeparation.lean",
        "start_line": 1498,
        "start_column": 2,
        "end_line": 1498,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 : X \u2192 \u2102\nJ : Grid X\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhJ : J \u2208 @TileStructure.Forest.\ud835\udcd9\u2085 X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 HolderOnWith\n    (TileStructure.Forest.C7_5_4 a *\n        ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191(defaultD a) ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) f\u2081 x\u2016\u208a) +\n          (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2081 x\u2016) x).toNNReal) *\n      ((\u2a05 x \u2208 ball (c J) (8\u207b\u00b9 * \u2191(defaultD a) ^ s J), \u2016adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082) f\u2082 x\u2016\u208a) +\n        (\u2a05 x \u2208 J, MB volume \ud835\udcd1 c\ud835\udcd1 r\ud835\udcd1 (fun x => \u2016f\u2082 x\u2016) x).toNNReal))\n    (nn\u03c4 X) (@TileStructure.Forest.holderFunction X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d n t u\u2081 u\u2082 f\u2081 f\u2082 J)\n    (ball (c J) (8 * \u2191(defaultD a) ^ s J))",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/LargeSeparation.lean#L1498"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "2bab963a99e816925efa490531b0ddcc2e7520e19a807d37a61996b446eca6e6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ForestOperator/LargeSeparation.lean",
        "start_line": 1607,
        "start_column": 2,
        "end_line": 1607,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\nn : \u2115\nt : Forest X n\nu\u2081 u\u2082 : \ud835\udd13 X\nf\u2081 f\u2082 g\u2081 g\u2082 : X \u2192 \u2102\nhu\u2081 : u\u2081 \u2208 t\nhu\u2082 : u\u2082 \u2208 t\nhu : u\u2081 \u2260 u\u2082\nh2u : \ud835\udcd8 u\u2081 \u2264 \ud835\udcd8 u\u2082\nhf\u2081 : Bornology.IsBounded (range f\u2081)\nh2f\u2081 : HasCompactSupport f\u2081\nhf\u2082 : Bornology.IsBounded (range f\u2082)\nh2f\u2082 : HasCompactSupport f\u2082\n\u22a2 \u2016\u222b (x : X),\n        adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2081) g\u2081 x *\n          (starRingEnd \u2102) (adjointCarlesonSum ((fun x => t.\ud835\udd17 x) u\u2082 \u2229 t.\ud835\udd16\u2080 u\u2081 u\u2082) g\u2082 x)\u2016\u2091 \u2264\n    \u2191(TileStructure.Forest.C7_4_5 a n) *\n        eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2081 g\u2081) x) 2 volume *\n      eLpNorm (fun x => (\u2191(\ud835\udcd8 u\u2081)).indicator (t.adjointBoundaryOperator u\u2082 g\u2082) x) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ForestOperator/LargeSeparation.lean#L1607"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-09-27T15:17:13+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "2eb1e02985960e5248f91d8b5bf03b18a15dbfcb728f16c23a284022db0b6efe"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 344,
        "start_column": 83,
        "end_line": 344,
        "end_column": 88
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\n\u03d1 : \u0398 X\nN : \u2115\n\u22a2 \u2211 p \u2208 @Antichain.\ud835\udd04_aux X a q K \u03c3\u2081 \u03c3\u2082 F G inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d \ud835\udd04 \u03d1 N, volume (E p \u2229 G) \u2264\n    \u2191(Antichain.C_6_3_4 a N) * dens\u2081 \u2191\ud835\udd04 * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p))",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainTileCount.lean#L344"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2024-11-16T17:32:56+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "14c29d8f0b2ec92981ac9f7e414c13671fc5281c326d5a2b0e1b831511498566"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainTileCount.lean",
        "start_line": 358,
        "start_column": 2,
        "end_line": 358,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 \ud835\udd04' : Finset (\ud835\udd13 X)\nh_le : \ud835\udd04' \u2286 \ud835\udd04\n\u03d1 : \u0398 X\n\u22a2 eLpNorm\n      (\u2211 \ud835\udd2d \u2208 \ud835\udd04',\n        (1 + dist_{\ud835\udd20 \ud835\udd2d ,\u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d / 4} (\ud835\udcac \ud835\udd2d) \u03d1) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) \u2022 (E \ud835\udd2d).indicator 1 *\n          G.indicator 1)\n      (\u2191(Antichain.p a)) volume \u2264\n    \u2191(Antichain.C_6_1_6 a) * dens\u2081 \u2191\ud835\udd04 ^ (1 / \u2191(Antichain.p a)) * volume (\u22c3 p \u2208 \ud835\udd04, \u2191(\ud835\udcd8 p)) ^ (1 / \u2191(Antichain.p a))",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainTileCount.lean#L358"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-28T18:13:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "d774f00a4a869f9e1d57b08ceb359e604a2fd4538ae4b9c806c1c83a49cac233"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 329,
        "start_column": 6,
        "end_line": 329,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x2 =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) f x2).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\nx\u271d : X\n\u22a2 3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2 = \u2191(3 * (2 * nnq X / (nnq X + 1)) - 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L329"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "eb89839d72f2b32e0e0571c0e857f8c66c49de2b85c9254aa27b3187c0420bd3"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 334,
        "start_column": 6,
        "end_line": 334,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\nthis :\n  HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)\nhh :\n  eLpNorm\n      (fun x2 =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) f x2).toReal)\n      2 volume \u2264\n    \u2191(CMB (2 ^ a) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n          (\u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)))\u207b\u00b9) *\n      eLpNorm f 2 volume\n\u22a2 \u2191(2 ^ (2 * a)) * (3 * (\u2191(2 * nnq X) / \u2191(nnq X + 1)) - 2) / (2 * (\u2191(2 * nnq X) / \u2191(nnq X + 1)) - 2) =\n    \u2191(CMB (\u2191(2 ^ a)) (2 / (2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))) ^\n        \u2191(2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2))\u207b\u00b9)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "346833534cba36e3efbdf927be5fc63471bd7e24e215517fcad979f99c8dcda8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 312,
        "start_column": 6,
        "end_line": 312,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\np\u2081 : NNReal := 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\nhp\u2081 : p\u2081 = 2 * (2 * nnq X / (nnq X + 1)) / (3 * (2 * nnq X / (nnq X + 1)) - 2)\naux : 0 < 3 * (2 * nnq X / (nnq X + 1)) - 2\nhp\u2081_ge : 1 \u2264 p\u2081\nhp\u2081_lt : p\u2081 < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < \u22a4\n\u22a2 HasStrongType (fun f x => maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) (\u2191p\u2081) f x) 2 2 volume\n    volume \u2191(C2_0_6 (2 ^ a) p\u2081 2)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "64bb6741cc57ca8e8e2c453801f922fde93d33655a6b9c73f10b767100c675dd"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 379,
        "start_column": 86,
        "end_line": 379,
        "end_column": 91
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\n\u22a2 (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L379"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "ab07b88fbb72e92a4e01c21d8437b08570698c4dbdefe8e812007416872d045c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 385,
        "start_column": 4,
        "end_line": 385,
        "end_column": 9
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L385"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-07T15:59:11+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "45574dd1eb4ced1c3826cf74502c2f51686b39f4a6071e64fe1436a6af65fbba"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 420,
        "start_column": 6,
        "end_line": 420,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\n\u22a2 \u2191\u2016\u222b (x : X), (starRingEnd \u2102) (g x) * \u2211 p \u2208 \ud835\udd04, carlesonOn p f x\u2016\u208a \u2264\n    eLpNorm g 2 volume * eLpNorm (\u2211 p \u2208 \ud835\udd04, carlesonOn p f) 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L420"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2024-08-09T16:06:25+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "03ab84b1771ff48d0f8183fb6d6cdd4ac9ab4e053d3ed7a59cb87a6058fc4aee"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 434,
        "start_column": 8,
        "end_line": 434,
        "end_column": 13
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\nh2 : 2 ^ (107 * a ^ 3) = \u2191\u20162 ^ (107 * a ^ 3)\u2016\u208a\nz : X\n\u22a2 MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f z \u2260 \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L434"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2024-08-09T16:06:25+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "a135062e6af3cc084f39b50c54d2d4d34369dfe284ee6ac2bd7162bf29b12f30"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 449,
        "start_column": 6,
        "end_line": 449,
        "end_column": 11
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Finset (\ud835\udd13 X)\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \u2191\ud835\udd04\nha : 4 \u2264 a\nf : X \u2192 \u2102\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhfm : Measurable f\ng : X \u2192 \u2102\nhg : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq X\nh1q' : 1 \u2264 2 * nnq X / (nnq X + 1)\nhqq' : 2 * nnq X / (nnq X + 1) \u2264 nnq X\nhq'_inv : (2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 \u2264 3 * (nnq X - 1)\u207b\u00b9\nhMB_le :\n  (MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) fun x => \u2016f x\u2016) \u2264\n    maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n      (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) fun x =>\n      \u2016f x\u2016 * (dens\u2082 \u2191\ud835\udd04).toReal ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9)\nhMB_le' :\n  eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    eLpNorm\n        (fun x =>\n          \u2191\u2191(maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n                  (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens\u2082 \u2191\ud835\udd04\nh_div_le_div :\n  (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) / (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2) \u2264\n    2 ^ 2 / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1)\nhMBp\u2081_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d)\n            (2 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) / (3 * (2 * \u2191(nnq X) / (\u2191(nnq X) + 1)) - 2)) f x).toReal)\n      2 volume \u2264\n    2 ^ (2 * a + 2) / (2 * \u2191(nnq X) / (\u2191(nnq X) + 1) - 1) * eLpNorm f 2 volume\n\u22a2 eLpNorm (fun x => \u2191\u2191(MB volume (\u2191\ud835\udd04) \ud835\udd20 (fun \ud835\udd2d => 8 * \u2191(defaultD a) ^ \ud835\udd30 \ud835\udd2d) f x).toNNReal) 2 volume \u2264\n    2 ^ (2 * a + 2) *\n      (\u2191(2 * nnq X / (nnq X + 1) - 1)\u207b\u00b9 * (dens\u2082 \u2191\ud835\udd04 ^ ((2 * \u2191(nnq X) / (\u2191(nnq X) + 1))\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume))",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L449"
      },
      "metadata": {
        "blame_email_hash": "b2f50b2f722a",
        "blame_date": "2024-08-09T16:06:25+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "d3ecfbdb60744b7cde75040f44619730fd26f76a49f0bc8e8ae0ac1ef78e3dbd"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/AntichainOperator.lean",
        "start_line": 499,
        "start_column": 51,
        "end_line": 499,
        "end_column": 56
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\n\ud835\udd04 : Set (\ud835\udd13 X)\nf g : X \u2192 \u2102\nhf : Measurable f\nhf1 : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nh\ud835\udd04 : IsAntichain (fun x1 x2 => x1 \u2264 x2) \ud835\udd04\n\u22a2 \u2016\u222b (x : X), (starRingEnd \u2102) (g x) * carlesonSum \ud835\udd04 f x\u2016\u2091 \u2264\n    \u2191(C_2_0_3 (\u2191a) (nnq X)) * dens\u2081 \ud835\udd04 ^ ((q - 1) / (8 * \u2191a ^ 4)) * dens\u2082 \ud835\udd04 ^ (q\u207b\u00b9 - 2\u207b\u00b9) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/AntichainOperator.lean#L499"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-01-09T16:08:11+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "a935b2a7f1ca718a3ce022cfb1ccecdf3d9778d63c768ff86446704eb9330f99"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 359,
        "start_column": 2,
        "end_line": 359,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\n\u22a2 \u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 \u2264\n    \u2191(Tile.C_6_1_5 a) * (1 + \u2191(nndist_{\ud835\udd20 p' ,\u2191(defaultD a) ^ \ud835\udd30 p' / 4} (\ud835\udcac p') (\ud835\udcac p))) ^ (-1 / (2 * \u2191a ^ 2 + \u2191a ^ 3)) /\n        volume \u2191(\ud835\udcd8 p) *\n      \u222b\u207b (y : X) in E p', \u2016g y\u2016\u2091 * \u222b\u207b (y : X) in E p, \u2016g y\u2016\u2091",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/TileCorrelation.lean#L359"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "c1c7bb58b2b806473b0b0431852a3e4a455ed6e2b84f6326974e23ebb7fbad3b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 370,
        "start_column": 2,
        "end_line": 370,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nX : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191(defaultD a) ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0\n\u22a2 \u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191(defaultD a) ^ \ud835\udd30 p)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/TileCorrelation.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "edb7db7b567d233a72b3b32f6e0a6291ef4de6d488a5ccd93efc58766ec4b390"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/Antichain/TileCorrelation.lean",
        "start_line": 368,
        "start_column": 84,
        "end_line": 368,
        "end_column": 89
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\nq : \u211d\nK : X \u2192 X \u2192 \u2102\n\u03c3\u2081 \u03c3\u2082 : X \u2192 \u2124\nF G : Set X\ninst\u271d\u00b2 : MetricSpace X\ninst\u271d\u00b9 : ProofData a q K \u03c3\u2081 \u03c3\u2082 F G\ninst\u271d : TileStructure Q (defaultD a) (default\u03ba a) (defaultS X) (cancelPt X)\np p' : \ud835\udd13 X\nhle : \ud835\udd30 p' \u2264 \ud835\udd30 p\ng : X \u2192 \u2102\nhg : Measurable g\nhg1 : \u2200 (x : X), \u2016g x\u2016 \u2264 G.indicator 1 x\nhpp' : \u00ac\u2191(\ud835\udcd8 p) \u2286 ball (\ud835\udd20 p) (15 * \u2191(defaultD a) ^ \ud835\udd30 p)\nh0 : \u00ac\u2016\u222b (y : X), adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y)\u2016\u2091 = 0\n\u22a2 \u2203 y, adjointCarleson p' g y * (starRingEnd \u2102) (adjointCarleson p g y) \u2260 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/Antichain/TileCorrelation.lean#L368"
      },
      "metadata": {
        "blame_email_hash": "44a80a4a9c95",
        "blame_date": "2024-10-31T20:12:54+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "789cb63cb2be9ccc94896c65f8e78d09f4f10a0a8cbdaf0be4000868a3d9ac7c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 709,
        "start_column": 2,
        "end_line": 709,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n\u22a2 HasStrongType (@simpleNontangentialOperator X a inst\u271d\u2074 inst\u271d\u00b3 K r) 2 2 volume volume \u2191(C10_1_6 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L709"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "b94f7b687654cbb0474ca6ed7bf8ad14a99aa357d89ecb270db6bb0561a9a07c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 717,
        "start_column": 2,
        "end_line": 717,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nhr : 0 \u2264 r\n\u22a2 HasStrongType (@simpleNontangentialOperator X a inst\u271d\u2074 inst\u271d\u00b3 K r) 2 2 volume volume \u2191(C10_1_6 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L717"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "30e969fe4ad5e5122bf958d86a3157ded843ebe0ba6f5a2a41ba845e42e83f80"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/NontangentialOperator.lean",
        "start_line": 750,
        "start_column": 2,
        "end_line": 750,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\ng : X \u2192 \u2102\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (@simpleNontangentialOperator X a inst\u271d\u2074 inst\u271d\u00b3 K 0) 2 2 volume volume \u2191(C10_1_6 a)\n\u22a2 HasStrongType (nontangentialOperator K) 2 2 volume volume \u2191(C10_0_2 a)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L750"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T15:28:23+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "cd2ec47f38116b55f77cd4700e3b7d6aa7ce3b0f2fed4357074f77ce756e09be"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/MainTheorem.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhq : q \u2208 Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : \u2200 r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume \u2191(C_Ts \u2191a)\nf : X \u2192 \u2102\nhmf : Measurable f\nhf : \u2200 (x : X), \u2016f x\u2016 \u2264 F.indicator 1 x\n\u22a2 \u222b\u207b (x : X) in G, carlesonOperator K f x \u2264 \u2191(C10_0_1 a q) * volume G ^ (\u2191q')\u207b\u00b9 * volume F ^ (\u2191q)\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "51de32668791cfa2a18193ff58fcad259c62ec3c221dd07deb92e77785766551"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 49,
        "start_column": 2,
        "end_line": 49,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nf : X \u2192 \u2102\nhf : BoundedFiniteSupport f volume\n\u22a2 \u2200\u1d50 (x : X),\n    \u2203 c r,\n      Tendsto (fun i => \u2a0d (y : X) in ball (c i) (r i), f y) atTop (nhds (f x)) \u2227\n        Tendsto r atTop (nhdsWithin 0 (Ioi 0)) \u2227 \u2200 (i : \u2115), x \u2208 ball (c i) (r i)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L49"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "c5c60871bc04b86d64f60e7626d503c0290f661454b3c39600412d70486820df"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nh : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 volume univ < \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "f31d17d3e6b57ec0c415f0250372ad41617fce13813241a17b2c0fbfe8cf0e37"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 87,
        "start_column": 2,
        "end_line": 87,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 IsOpen (globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1) \u2227 globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1 \u2260 univ",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "18baf56b46c431046e1c08aa829d438bc69e2c00b734eb755228a522181cbb6e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 134,
        "start_column": 2,
        "end_line": 134,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\ny : X\nhy : \u03b1 < globalMaximalFunction volume 1 f y\n\u22a2 {i | y \u2208 @czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i}.Finite",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "69ddbafa50315cfaf20dfa6d440cd3c71d267a7846795cfe800570243094f83d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 142,
        "start_column": 2,
        "end_line": 142,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\ni : \u2115\n\u22a2 @czBall X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i \u2286 @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "5c9ea839e7ff4acd87ab8e435fdede362b51544d4785a5d45d5128b8db0922f9"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 150,
        "start_column": 2,
        "end_line": 150,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 univ.PairwiseDisjoint fun i => @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L150"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-01-27T19:00:57+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "b55c08434be49e29e11d07dce4d820f1f4dada31e1c1e16c9a93163a125068ee"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nx : X\ni j : \u2115\nhi : x \u2208 @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i\nhj : x \u2208 @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX j\n\u22a2 i = j",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "680a80968809c43207bdb3293f49edfe54dfaa89c009f64bfa0355ce9eca5bb9"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 159,
        "start_column": 2,
        "end_line": 159,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 \u22c3 i, @czPartition X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i = globalMaximalFunction volume 1 f \u207b\u00b9' Ioi \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L159"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "737fae822fdfc6de422ad1a918991f0900fb593ae7145e5f92bdd5a583f00381"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\n\u03c4 C r R : \u211d\nq q' : NNReal\nF G : Set X\nK : X \u2192 X \u2192 \u2102\nx\u271d x' : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1\nx : X\n\u22a2 \u2211\u1da0 (i : \u2115), @czRemainder' X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i x =\n    @czRemainder X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T17:21:05+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "015a5fcb667cd26ebd006ab4c9177928f4127961d66ef4eadc78ee1736612acf"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 202,
        "start_column": 2,
        "end_line": 202,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\n\u22a2 Measurable (@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "85f383a1b28ebff169c53008abc39e2f9fc451727c7e90483ac9ee6bfd1e131b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 213,
        "start_column": 2,
        "end_line": 213,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "6616302028931bd56942460ccea90d9a0dcff333240a8a4cd24f6a0a683dc829"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 219,
        "start_column": 2,
        "end_line": 219,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2200\u1d50 (x : X), \u2016@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x\u2016\u2091 \u2264 2 ^ (3 * a) * \u03b1",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "89bdf9de72f5d2145dafd4fcf1bb76f50612be33a5b29ca5b1d783b69b4baeb4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 224,
        "start_column": 2,
        "end_line": 224,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (@czApproximation X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) 1 volume \u2264 eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "4b3a8da0737a8386a2e30acbef78453be1300575a8d162b95a7911d26537f8d8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 230,
        "start_column": 2,
        "end_line": 230,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 support (@czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) \u2286\n    @czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "48f2cd10274ccf8cc2aebae94d0acc6508187e6828a2db02488cc2d2d600106e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 236,
        "start_column": 2,
        "end_line": 236,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 \u222b (x : X), @czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i x = 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "25c2cee53bad1d6bb4439bb69612951088af8b67c5152c11512ee20317c99aa5"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 241,
        "start_column": 2,
        "end_line": 241,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u222b (x : X), @czRemainder X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1 x = 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "2038b86da762326555d2e8ec8a62dd29152e34e690cf8815f8c084d578aeff32"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\ni : \u2115\n\u22a2 eLpNorm (@czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) 1 volume \u2264\n    2 ^ (2 * a + 1) * \u03b1 * volume (@czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "672480db8c049d5bf8274698022a6275408e8903a722b6d649bc24c80f0d2199"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 253,
        "start_column": 2,
        "end_line": 253,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (@czRemainder X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) 1 volume \u2264 2 ^ (2 * a + 1) * \u03b1 * volume univ",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "9b45198cfd74f1d66fa417cd8b95c7e1a9afe121bc9cd2a98e51a8018d448e07"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 259,
        "start_column": 2,
        "end_line": 259,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), volume (@czBall3 X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "cacf3ff481138cb17c8929d201fcd56fd9689983d5d46953bef1810d2ef2729f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 volume univ \u2264 2 ^ (4 * a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "4e25670b812ea23a50bd7ed1531bea4940398422424ba2519213873a60284cd6"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 271,
        "start_column": 2,
        "end_line": 271,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 \u2211' (i : \u2115), eLpNorm (@czRemainder' X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX i) 1 volume \u2264 2 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L271"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "937ab37dde753a039e9c08a55d311b4244ce8f183803e1a97774687eb69a50cf"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 277,
        "start_column": 2,
        "end_line": 277,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nhX : \u00ac@GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\nh\u03b1 : 0 < \u03b1\n\u22a2 eLpNorm (@czRemainder X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) 1 volume \u2264 2 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L277"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "41b5ad07b3b3acedd034529c2dfd9c303f268e70434755d2dc2fd3be83879597"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 296,
        "start_column": 2,
        "end_line": 296,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\n\u22a2 distribution (czOperator K r (@czApproximation X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)) (\u03b1 / 2) volume \u2264\n    \u2191(C10_2_6 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L296"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "7a500497cadd531d30111ffe12a6ea7556eac4f2df3e1cc3d09f9e9e72529899"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 312,
        "start_column": 2,
        "end_line": 312,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\nx : X\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhx : x \u2208 (@\u03a9 X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)\u1d9c\nhX : @GeneralCase X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1\n\u22a2 \u2016czOperator K r (@czRemainder X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1) x\u2016\u2091 \u2264\n    3 * @czOperatorBound X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX x + \u03b1 / 8",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "6664314dd991fbe10e4fdca44460b1768efc27a59c6696d380c7e5041eefb67f"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 322,
        "start_column": 2,
        "end_line": 322,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u00b3 : MetricSpace X\ninst\u271d\u00b2 : DoublingMeasure X \u2191(defaultA a)\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : @GeneralCase X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1\n\u22a2 volume\n      ((@\u03a9 X a inst\u271d\u00b3 inst\u271d\u00b2 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)\u1d9c \u2229\n        @czOperatorBound X a inst\u271d\u00b3 inst\u271d\u00b2 f \u03b1 inst\u271d\u00b9 inst\u271d ha hf hX \u207b\u00b9' Ioi (\u03b1 / 8)) \u2264\n    \u2191(C10_2_8 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L322"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "a5103ba22bd8c023773be134473f43a1c58a714855cebc9f13a0bb88856c3f79"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean",
        "start_line": 333,
        "start_column": 2,
        "end_line": 333,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\na : \u2115\ninst\u271d\u2074 : MetricSpace X\ninst\u271d\u00b3 : DoublingMeasure X \u2191(defaultA a)\nr : \u211d\nK : X \u2192 X \u2192 \u2102\ninst\u271d\u00b2 : IsTwoSidedKernel a K\nf : X \u2192 \u2102\n\u03b1 : ENNReal\ninst\u271d\u00b9 : CompatibleFunctions \u211d X (defaultA a)\ninst\u271d : IsCancellative X (default\u03c4 a)\nha : 4 \u2264 a\nhf : BoundedFiniteSupport f volume\nh\u03b1 : \u2a0d\u207b (x : X), \u2016f x\u2016\u2091 / \u2191(c10_0_3 a) < \u03b1\nhX : @GeneralCase X a inst\u271d\u2074 inst\u271d\u00b3 f \u03b1\n\u22a2 distribution (czOperator K r (@czRemainder X a inst\u271d\u2074 inst\u271d\u00b3 f inst\u271d\u00b9 inst\u271d ha hf \u03b1)) (\u03b1 / 2) volume \u2264\n    \u2191(C10_2_9 a) / \u03b1 * eLpNorm f 1 volume",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L333"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-02-26T16:50:03+01:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "57fc537e6a3fe21f1a159f413beec133b60e5e36fb54a1eaf77fb1c8514c37b4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/MeasureTheory/Integral/MeanInequalities.lean",
        "start_line": 253,
        "start_column": 8,
        "end_line": 253,
        "end_column": 13
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u\ud835\udd5c\nG : Type uG\ninst\u271d\u00b9\u2075 : MeasurableSpace G\n\u03bc : Measure G\nE : Type uE\nE' : Type uE'\nF\u271d : Type uF\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E'\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup F\u271d\ninst\u271d\u00b9\u00b9 : NontriviallyNormedField \ud835\udd5c\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E\ninst\u271d\u2079 : NormedSpace \ud835\udd5c E'\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\u271d\ninst\u271d\u2077 : NormedSpace \u211d F\u271d\nL : E \u2192L[\ud835\udd5c] E' \u2192L[\ud835\udd5c] F\u271d\ninst\u271d\u2076 : AddCommGroup G\ninst\u271d\u2075 : TopologicalSpace G\ninst\u271d\u2074 : IsTopologicalAddGroup G\ninst\u271d\u00b3 : BorelSpace G\ninst\u271d\u00b2 : \u03bc.IsAddHaarMeasure\ninst\u271d\u00b9 : LocallyCompactSpace G\ninst\u271d : SecondCountableTopology G\np q r : \u211d\nhp : 1 \u2264 p\nhq : 1 \u2264 q\nhr : 1 \u2264 r\nhpqr : p\u207b\u00b9 + q\u207b\u00b9 = r\u207b\u00b9 + 1\nf : G \u2192 E\ng : G \u2192 E'\nhf : AEMeasurable (fun x => \u2016f x\u2016\u2091) \u03bc\nhg : \u2200 (x : G), AEMeasurable (fun x_1 => \u2016g (x - x_1)\u2016\u2091) \u03bc\nc : \u211d\nhL : \u2200 (x y : G), \u2016(L (f x)) (g y)\u2016 \u2264 c * \u2016f x\u2016 * \u2016g y\u2016\nx : G\nhc : 0 < c\n\u03bc0 : \u03bc \u2260 0\nF : Fin 3 \u2192 G \u2192 ENNReal :=\n  fun i =>\n    @ENNReal.enorm_convolution_le_eLpNorm_mul_eLpNorm_mul_eLpNorm_aux.match_1 (fun i => G \u2192 ENNReal) i\n      (fun _ y => (\u2016f y\u2016\u2091 ^ p * \u2016g (x - y)\u2016\u2091 ^ q) ^ (1 / r)) (fun _ y => \u2016f y\u2016\u2091 ^ ((r - p) / r)) fun _ y =>\n      \u2016g (x - y)\u2016\u2091 ^ ((r - q) / r)\nP : Fin 3 \u2192 ENNReal :=\n  ![ENNReal.ofReal r, ENNReal.ofReal (p * r) / ENNReal.ofReal (r - p), ENNReal.ofReal (q * r) / ENNReal.ofReal (r - q)]\np0 : 0 < p\nq0 : 0 < q\nr0 : 0 < r\nrp0 : 0 \u2264 r - p\nrq0 : 0 \u2264 r - q\nae_meas_g : AEMeasurable (fun x_1 => \u2016g (x - x_1)\u2016\u2091) \u03bc\nthis\u271d : AEMeasurable (fun a => \u2016f a\u2016\u2091 ^ p * \u2016g (x - a)\u2016\u2091 ^ q) \u03bc\nae_meas : \u2200 i \u2208 univ, AEMeasurable (F i) \u03bc\nthis : AddLECancellable (ENNReal.ofReal r)\u207b\u00b9\n\u22a2 (ENNReal.ofReal r)\u207b\u00b9 +\n        (![ENNReal.ofReal p * ((ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9) * ENNReal.ofReal r) /\n                (ENNReal.ofReal r - ENNReal.ofReal p * (ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9)),\n              ENNReal.ofReal q * ENNReal.ofReal r /\n                ((ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9) * ENNReal.ofReal r -\n                  ENNReal.ofReal q * (ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9))]\n            0)\u207b\u00b9 +\n      (ENNReal.ofReal r / (ENNReal.ofReal q * ENNReal.ofReal r) -\n        ENNReal.ofReal q / (ENNReal.ofReal q * ENNReal.ofReal r)) =\n    ENNReal.ofReal p\u207b\u00b9 + ENNReal.ofReal q\u207b\u00b9 - ENNReal.ofReal r\u207b\u00b9",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/MeasureTheory/Integral/MeanInequalities.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-04-15T16:19:39+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "9df1af1529938174a9b64d55ca23b2d08313505e70d46ca2888e7d04fd73c161"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "stable",
        "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "BatteriesTest/lintsimp.lean",
        "start_line": 37,
        "start_column": 64,
        "end_line": 37,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d : Mul \u03b1\na x y : @MulOpposite \u03b1\n\u22a2 @SemiconjBy \u03b1 inst\u271d (@MulOpposite.unop \u03b1 a) (@MulOpposite.unop \u03b1 y) (@MulOpposite.unop \u03b1 x) \u2194\n    @SemiconjBy (@MulOpposite \u03b1) (@MulOpposite.instMul \u03b1 inst\u271d) a x y",
        "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/lintsimp.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "8a7dcd08b95f",
        "blame_date": "2022-12-18T15:51:52-05:00",
        "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
      },
      "id": "8c97efe8b6b78a37aeb9648f7cc088e7895a2eb09a177173e82f01c2c8c2a23b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/batteries",
        "branch": "stable",
        "commit": "03f2a887b40b4a6d05ac7b76cbfdc104909489ca",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "BatteriesTest/conv_equals.lean",
        "start_line": 22,
        "start_column": 2,
        "end_line": 22,
        "end_column": 7
      },
      "debug_info": {
        "goal": "P : (Nat \u2192 Nat) \u2192 Prop\n\u22a2 P fun n => 0",
        "url": "https://github.com/leanprover-community/batteries/blob/03f2a887b40b4a6d05ac7b76cbfdc104909489ca/BatteriesTest/conv_equals.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "1e9dd229978a",
        "blame_date": "2023-08-19T05:19:41+02:00",
        "inclusion_date": "2025-05-01T23:49:39.107115+00:00"
      },
      "id": "725c37df7e9430c9b9f5277210ad3611572faf0a460a5ecbc70ef45f0d4d9ce8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.fst \u03b1 \u03b2 p = @MyProd.fst \u03b1 \u03b2 q",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "36b41a76fa6543b00894b7391ee882fd60478180700921bf089cd90b28368f27"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 30,
        "start_column": 12,
        "end_line": 30,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 \u03b2\n\u22a2 @MyProd.snd \u03b1 \u03b2 p = @MyProd.snd \u03b1 \u03b2 q",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "9634d5697a64573874bc9eef27765b5d86af89853130cd62d312ae4278547b51"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) p = @MyProd.fst \u03b1 (@MyProd \u03b2 \u03b3) q",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "77c9139ad8f360fe033b9d21bd20fcf1e8832385d216b76e19a600221b5f99a5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.fst\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.fst \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "21d843812d13606346e7f018861a8b5197834bb467f9ed9ac43942ffc6793ed4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 46,
        "start_column": 12,
        "end_line": 46,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd.snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd \u03b1 (@MyProd \u03b2 \u03b3)\n\u22a2 @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) p) = @MyProd.snd \u03b2 \u03b3 (@MyProd.snd \u03b1 (@MyProd \u03b2 \u03b3) q)",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "bea1800be121aa6fa28dddd1f1b0c13ed5961fad581be509f955b11689639935"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case fst.h\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\nx : \u03b1\n\u22a2 @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 p x = @MyProd.fst (\u03b1 \u2192 \u03b2) \u03b3 q x",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "65a165c020def5e269e3a70736887a6fd94bae2f0be8d7c6ae3238c1f204f386"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/ExtScript.lean",
        "start_line": 61,
        "start_column": 12,
        "end_line": 61,
        "end_column": 17
      },
      "debug_info": {
        "goal": "case snd\n\u03b1 \u03b2 \u03b3 \u03b4 \u03b9 : Type\np q : @MyProd (\u03b1 \u2192 \u03b2) \u03b3\n\u22a2 @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 p = @MyProd.snd (\u03b1 \u2192 \u03b2) \u03b3 q",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/ExtScript.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-06-07T02:10:37+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "d801f6b766eab033a8c3238314ac58e8c4369c0b4225dd54a7fbf6dadca52247"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/205.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nx y a b : \u03b1\nh\u2082 : @R \u03b1 x a\nh\u2083 : @R \u03b1 y b\nfwd : @R \u03b1 b y\nfwd_1 : @R \u03b1 a x\nfwd_2 : @R \u03b1 b b\nfwd_3 : @R \u03b1 y y\nfwd_4 : @R \u03b1 a a\nfwd_5 : @R \u03b1 x x\n\u22a2 False",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/205.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2025-04-29T23:07:06+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "6b02fc6ff14bb6448a6bda9647f578eef79725fa77ed21652d354cd2f4f851b2"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/SplitScript.lean",
        "start_line": 26,
        "start_column": 12,
        "end_line": 26,
        "end_column": 17
      },
      "debug_info": {
        "goal": "P A B : Prop\nh : P\n\u22a2 A",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/SplitScript.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-05-31T19:36:28+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "5ba1c057099dac08fa4cb887818b840a7ca57bb64e4b28e1b2f5d5a190f273f4"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/aesop",
        "branch": "stable",
        "commit": "5d50b08dedd7d69b3d9b3176e0d58a23af228884",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "AesopTest/SplitScript.lean",
        "start_line": 26,
        "start_column": 12,
        "end_line": 26,
        "end_column": 17
      },
      "debug_info": {
        "goal": "P A B : Prop\nh : \u00acP\n\u22a2 B",
        "url": "https://github.com/leanprover-community/aesop/blob/5d50b08dedd7d69b3d9b3176e0d58a23af228884/AesopTest/SplitScript.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "555bc3b21621",
        "blame_date": "2024-05-31T19:36:28+02:00",
        "inclusion_date": "2025-05-01T23:50:48.655763+00:00"
      },
      "id": "e5feedc27a584eafef9ed09d3b0b36e41c46c38c800a8c7ea9ef58e610bd38b9"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 163,
        "start_column": 16,
        "end_line": 163,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : SliceModel F I I'\n\u22a2 \u2191(J.prod I') \u2218 Prod.map id (SliceModel.map F I I') =\n    \u21d1(let sdf := SliceModel.equiv I I';\n        sorry) \u2218\n      (fun x => (x, 0)) \u2218 \u2191(J.prod I)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L163"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "814d3a8b928dabdf39c01e5c4ec1377cbfe9e710e951667d3e3f1f01eea473ad"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 170,
        "start_column": 16,
        "end_line": 170,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : SliceModel F I I'\n\u22a2 \u2191(I'.prod J) \u2218 Prod.map (SliceModel.map F I I') id = \u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(I.prod J)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "bf49e3e021d28131568b0aa182195db805c9be942272fb4e55996db41e91c92a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 177,
        "start_column": 6,
        "end_line": 177,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case hg\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : (E \u00d7 F) \u2243L[\ud835\udd5c] E'\n\u22a2 IsEmbedding \u21d1h",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "47f21005d8901dce8d8620173f53b538f2c5c4ddb5362c1203c0af24e235d60e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 182,
        "start_column": 16,
        "end_line": 182,
        "end_column": 21
      },
      "debug_info": {
        "goal": "case h.snd\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : (E \u00d7 F) \u2243L[\ud835\udd5c] E'\nthis : IsEmbedding Prod.swap\nx : E\n\u22a2 (x, 0).2 = ((Prod.swap \u2218 Prod.mk 0) x).2",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "60a357a25e1d59a7f3821b4f8ca522585eb4d2c3398beae4914da7cb8f79ebae"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 178,
        "start_column": 43,
        "end_line": 178,
        "end_column": 48
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : (E \u00d7 F) \u2243L[\ud835\udd5c] E'\n\u22a2 IsEmbedding Prod.swap",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "53416d5a0e7aab0cf0db5f64d3bf98a0befcf3357b509efbaf1ef9d18f6a5fa8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 220,
        "start_column": 4,
        "end_line": 220,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn m : \u2115\ninst\u271d : NeZero n\nx' : EuclideanSpace \u211d (Fin n)\ni\u271d : Fin (n + m)\n\u22a2 (\u2191(\ud835\udce1 n + m) \u2218 sorry) x' i\u271d = (\u21d1sorry \u2218 (fun x => (x, 0)) \u2218 \u2191(\ud835\udce1 n)) x' i\u271d",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L220"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "df20fa94d4c4ec740002708f961cc2334be79e7bdb6f76a966630004910acfdc"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 217,
        "start_column": 10,
        "end_line": 217,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn m : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding sorry",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "78c5218d5fb367b32dd90a108e905f3b9df1395d776407c0be9fb4462822fb6d"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 229,
        "start_column": 4,
        "end_line": 229,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2079 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2078 : NormedAddCommGroup E\ninst\u271d\u00b9\u2077 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2076 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2075 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u2074 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b3 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b2 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u00b9 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u00b9\u2070 : NormedAddCommGroup F\ninst\u271d\u2079 : NormedSpace \ud835\udd5c F\ninst\u271d\u2078 : NormedAddCommGroup F'\ninst\u271d\u2077 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2076 : TopologicalSpace H\ninst\u271d\u2075 : TopologicalSpace H'\ninst\u271d\u2074 : TopologicalSpace H''\ninst\u271d\u00b3 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b2 : TopologicalSpace M'\ninst\u271d\u00b9 : ChartedSpace H' M'\nn\u271d : WithTop \u2115\u221e\nn : \u2115\ninst\u271d : NeZero n\n\u22a2 IsEmbedding fun x =>\n    match x with\n    | \u27e8x, hx\u27e9 => \u27e8x, \u22ef\u27e9",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "c8bf09d7458fda1376ab7e89fabb30222c7f108ea38aab7ce8c0a240892a303b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "MR-slicemodels",
        "commit": "c7eef3587d7b97113595c31ec6bd1755e4f8d18d",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Mathlib/Geometry/Manifold/SliceModel.lean",
        "start_line": 244,
        "start_column": 4,
        "end_line": 244,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h\n\ud835\udd5c : Type u_1\ninst\u271d\u00b9\u2078 : NontriviallyNormedField \ud835\udd5c\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\nE''' : Type u_5\ninst\u271d\u00b9\u2077 : NormedAddCommGroup E\ninst\u271d\u00b9\u2076 : NormedSpace \ud835\udd5c E\ninst\u271d\u00b9\u2075 : NormedAddCommGroup E'\ninst\u271d\u00b9\u2074 : NormedSpace \ud835\udd5c E'\ninst\u271d\u00b9\u00b3 : NormedAddCommGroup E''\ninst\u271d\u00b9\u00b2 : NormedSpace \ud835\udd5c E''\ninst\u271d\u00b9\u00b9 : NormedAddCommGroup E'''\ninst\u271d\u00b9\u2070 : NormedSpace \ud835\udd5c E'''\nF : Type u_6\nF' : Type u_7\ninst\u271d\u2079 : NormedAddCommGroup F\ninst\u271d\u2078 : NormedSpace \ud835\udd5c F\ninst\u271d\u2077 : NormedAddCommGroup F'\ninst\u271d\u2076 : NormedSpace \ud835\udd5c F'\nH : Type u_8\nH' : Type u_9\nH'' : Type u_10\nH''' : Type u_11\ninst\u271d\u2075 : TopologicalSpace H\ninst\u271d\u2074 : TopologicalSpace H'\ninst\u271d\u00b3 : TopologicalSpace H''\ninst\u271d\u00b2 : TopologicalSpace H'''\nI : ModelWithCorners \ud835\udd5c E H\nI' : ModelWithCorners \ud835\udd5c E' H'\nI'' : ModelWithCorners \ud835\udd5c E'' H''\nJ : ModelWithCorners \ud835\udd5c E''' H'''\nM : Type u_12\nM' : Type u_13\ninst\u271d\u00b9 : TopologicalSpace M'\ninst\u271d : ChartedSpace H' M'\nn : WithTop \u2115\u221e\nh : SliceModel F I I'\nh' : SliceModel F' I' I''\nx : H\n\u22a2 \u2191I'' (SliceModel.map F' I' I'' (SliceModel.map F I I' x)) =\n    (SliceModel.equiv I' I'')\n      ((SliceModel.equiv I I') ((ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F').symm (\u2191I x, 0)).1,\n        ((ContinuousLinearEquiv.prodAssoc \ud835\udd5c E F F').symm (\u2191I x, 0)).2)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c7eef3587d7b97113595c31ec6bd1755e4f8d18d/Mathlib/Geometry/Manifold/SliceModel.lean#L244"
      },
      "metadata": {
        "blame_email_hash": "13ebe891461f",
        "blame_date": "2025-05-02T14:30:37+02:00",
        "inclusion_date": "2025-05-02T23:05:35.456545+00:00"
      },
      "id": "dcea907543fd8b6879691087b29b8e358794a81077cb8a9cf8d8f9242fd029e3"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "mrb/de-simp_insert_eq_of_mem",
        "commit": "c9c09db16e82581f07b2fcc072020f093f0278e6",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Mathlib/Data/Matroid/Loop.lean",
        "start_line": 729,
        "start_column": 2,
        "end_line": 729,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1\u271d : Type u_1\nM\u271d : Matroid \u03b1\u271d\ne\u271d : \u03b1\u271d\n\u03b1 : Type u_1\nM : Matroid \u03b1\ne : \u03b1\nR : Set \u03b1\nhRE : R \u2286 M.E\nheR : e \u2208 R\n\u22a2 (\u2200 \u2983C : Set \u03b1\u2984, M.IsCircuit C \u2227 C \u2286 R \u2192 e \u2209 C) \u2194 (\u00ac\u2203 C \u2286 insert e R, M.IsCircuit C \u2227 e \u2208 C) \u2227 e \u2208 R",
        "url": "https://github.com/leanprover-community/mathlib4/blob/c9c09db16e82581f07b2fcc072020f093f0278e6/Mathlib/Data/Matroid/Loop.lean#L729"
      },
      "metadata": {
        "blame_email_hash": "31f40fef96e9",
        "blame_date": "2025-05-02T11:58:03-04:00",
        "inclusion_date": "2025-05-02T23:14:21.935003+00:00"
      },
      "id": "69602fd0e6d294def6c9731a40fd7a12cc5b789174226dd6964bee5b5310b2ee"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/ConsistentTableau.lean",
        "start_line": 397,
        "start_column": 6,
        "end_line": 397,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.a\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\n\u03c6 : Formula \u03b1\ninst\u271d\u00b2 : Entailment.Int \ud835\udce2\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Encodable \u03b1\n\u0393 : List (Formula \u03b1)\nh : \u0393 \u22a2[\ud835\udce2]! \u03c6\nt : SaturatedConsistentTableau \ud835\udce2\nht : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191t).1\n\u22a2 \u2191\u0393.toFinset *\u22a2[\ud835\udce2]! \u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/ConsistentTableau.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "9c092025afa3606c2ecc64a7b8db4c1602feabaf2d6b57315e35e679963853fb"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/ConsistentTableau.lean",
        "start_line": 402,
        "start_column": 4,
        "end_line": 402,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\n\u03c6 : Formula \u03b1\ninst\u271d\u00b2 : Entailment.Int \ud835\udce2\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Encodable \u03b1\n\u0393 : List (Formula \u03b1)\nh : \u2200 (t : SaturatedConsistentTableau \ud835\udce2), (\u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191t).1) \u2192 \u03c6 \u2208 (\u2191t).1\n\u22a2 \u0393 \u22a2[\ud835\udce2]! \u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/ConsistentTableau.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "44ad3ce1ee23ed23487172dd17814fa2c6b3e343a5c0073d57441c2bc097279a"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 109,
        "start_column": 54,
        "end_line": 109,
        "end_column": 59
      },
      "debug_info": {
        "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 : List (Formula \u2115)\nhC : \ud835\udce2 \u22a2! \u22c0\u0393 \u279d \u22c1\u0394\n\u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u22a2 \ud835\udce2 \u22a2! \u22c0\u0393x \u22cf \u223c\u22c0\u0393yz \u279d \u22c1\u0394y \u22ce \u22c1\u0394z",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "28b4efba1ac1d4fb767266aae64bca65b83047effda7f04fd580074e3301b55a"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 114,
        "start_column": 48,
        "end_line": 114,
        "end_column": 53
      },
      "debug_info": {
        "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b3yz : Formula \u2115\ne\u03b3yz : \u22c0\u0393yz = \u03b3yz\n\u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nhC : \ud835\udce2 \u22a2! \u03b3x \u22cf \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z\n\u22a2 \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L114"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "2303383c9bcf589809a17c926a7c6a3db60e74f6a8b9baeb12a8d5c0724f00f8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 120,
        "start_column": 8,
        "end_line": 120,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case left\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393\nhC : \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u22c0List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 \u279d \u03b4y \u22ce \u03b4z\n\u22a2 \u223c\u22c0List.filter (fun x => decide (\u2203 x_1, (\u223cx_1 \u2208 (\u2191y).1 \u2227 \u223cx_1 \u2208 (\u2191z).1) \u2227 \u223cx_1 = x)) \u0393 \u2208 (\u2191y).1",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L120"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "3e285f1d91b03c7850eb9ad5800c4a6b241cb68f1c3a5a136322bdcc0c66fd77"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 121,
        "start_column": 8,
        "end_line": 121,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case right\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393\nhC : \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u22c0List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 \u279d \u03b4y \u22ce \u03b4z\n\u22a2 \u223c\u22c0List.filter (fun x => decide (\u2203 x_1, (\u223cx_1 \u2208 (\u2191y).1 \u2227 \u223cx_1 \u2208 (\u2191z).1) \u2227 \u223cx_1 = x)) \u0393 \u2208 (\u2191z).1",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "5def01e84effe39570ceccd6e89211e950831613966f4cf8f27769571bdff6ba"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 128,
        "start_column": 65,
        "end_line": 128,
        "end_column": 70
      },
      "debug_info": {
        "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\n\u0393 \u0394 \u0393x \u0393yz : List (Formula \u2115)\ne\u0393yz : List.filter (fun x => decide (x \u2208 N\u0393yz)) \u0393 = \u0393yz\nh\u0393 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 \u0393x \u2228 \u03c6 \u2208 \u0393yz\n\u0394y : List (Formula \u2115)\ne\u0394y : List.filter (fun x => decide (x \u2208 (\u2191y).2)) \u0394 = \u0394y\n\u0394z : List (Formula \u2115)\ne\u0394z : List.filter (fun x => decide (x \u2208 (\u2191z).2)) \u0394 = \u0394z\nh\u0394 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u0394y \u2228 \u03c6 \u2208 \u0394z\n\u03b3x \u03b3yz : Formula \u2115\ne\u03b3yz : \u22c0\u0393yz = \u03b3yz\n\u03b4y : Formula \u2115\ne\u03b4y : \u22c1\u0394y = \u03b4y\n\u03b4z : Formula \u2115\ne\u03b4z : \u22c1\u0394z = \u03b4z\nhC : \ud835\udce2 \u22a2! \u03b3x \u279d \u223c\u03b3yz \u279d \u03b4y \u22ce \u03b4z\nthis\u271d\u00b2 : \u223c\u03b3yz \u2208 (\u2191y).1 \u2227 \u223c\u03b3yz \u2208 (\u2191z).1\nthis\u271d\u00b9 : \u03b4y \u2208 (\u2191y).2\nthis\u271d : \u03b4z \u2208 (\u2191z).2\nthis : [\u03b3x] \u22a2[\ud835\udce2]! (\u223c\u03b3yz \u279d \u03b4y) \u22ce (\u223c\u03b3yz \u279d \u03b4z)\n\u22a2 \u2200 \u03c6 \u2208 [\u03b3x], \u03c6 \u2208 (\u2191x).1",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "620ddb443a0493cf2382093b51adc37058e566862fd81592b475be370eae5c0d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 156,
        "start_column": 30,
        "end_line": 156,
        "end_column": 35
      },
      "debug_info": {
        "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u0393 \u0394 : List (Formula \u2115)\nh\u2081 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191y).1 \u222a (\u2191v).1\nh\u2082 : \u2200 \u03c6 \u2208 \u0394, \u03c6 \u2208 \u2205\nh\u2083 : \u00ac\ud835\udce2 \u22ac \u22c0\u0393 \u279d \u22c1\u0394\n\u22a2 \u0394 = []",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L156"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T12:58:06+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "cdd58161271c1be85cb930ab83e86864d1925c72e8c09672ef277237f22c870b"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 166,
        "start_column": 14,
        "end_line": 166,
        "end_column": 19
      },
      "debug_info": {
        "goal": "case inl\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u0393 : List (Formula \u2115)\nh\u2081 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191y).1 \u222a (\u2191v).1\nh\u2082 : \u2200 \u03c6 \u2208 [], \u03c6 \u2208 \u2205\nh\u2083 : insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} *\u22a2[\ud835\udce2]! \u22c0\u0393 \u279d \u22a5\n\u03c6 : Formula \u2115\nh\u03c6 : \u03c6 \u2208 \u0393\nh : \u03c6 \u2208 (\u2191y).1\n\u22a2 { ctx := insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} } \u22a2! \u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L166"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T14:26:29+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "56031a893fb8342e82d69a6770023bab9b2e3d81c00da78d5aa1493053ca43d8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 167,
        "start_column": 14,
        "end_line": 167,
        "end_column": 19
      },
      "debug_info": {
        "goal": "case inr\nS : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u0393 : List (Formula \u2115)\nh\u2081 : \u2200 \u03c6 \u2208 \u0393, \u03c6 \u2208 (\u2191y).1 \u222a (\u2191v).1\nh\u2082 : \u2200 \u03c6 \u2208 [], \u03c6 \u2208 \u2205\nh\u2083 : insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} *\u22a2[\ud835\udce2]! \u22c0\u0393 \u279d \u22a5\n\u03c6 : Formula \u2115\nh\u03c6 : \u03c6 \u2208 \u0393\nh : \u03c6 \u2208 (\u2191v).1\n\u22a2 { ctx := insert (\u22c0List.filter (fun x => decide (x \u2208 (\u2191v).1)) \u0393) {x | x \u2208 \u0393 \u2227 x \u2208 (\u2191y).1} } \u22a2! \u03c6",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T12:58:06+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "2c83e7a30e9459b1daca8d80de0baf0996082c71f79fad517d28a18c89c663a6"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "Kriesel-Putnam",
        "commit": "490341480f0e44083c37c61c3bcaec14e989e23a",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean",
        "start_line": 171,
        "start_column": 62,
        "end_line": 171,
        "end_column": 67
      },
      "debug_info": {
        "goal": "S : Type u_1\ninst\u271d\u00b3 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : Consistent \ud835\udce2\ninst\u271d\u00b9 : Entailment.Int \ud835\udce2\ninst\u271d : HasAxiomKrieselPutnam \ud835\udce2\nx y z : (canonicalFrame \ud835\udce2).World\nRxy : (canonicalFrame \ud835\udce2).Rel x y\nRxz : (canonicalFrame \ud835\udce2).Rel x z\nnRyz : \u00ac(canonicalFrame \ud835\udce2).Rel y z\nnRzy : \u00ac(canonicalFrame \ud835\udce2).Rel z y\nN\u0393yz : Set (Formula \u2115) := (fun x => \u223cx) '' {\u03c6 | \u223c\u03c6 \u2208 (\u2191y).1 \u2229 (\u2191z).1}\nu : SaturatedConsistentTableau \ud835\udce2\nhu\u2081 : ((\u2191x).1 \u222a N\u0393yz, (\u2191y).2 \u222a (\u2191z).2).1 \u2286 (\u2191u).1\nhu\u2082 : (\u2191y).2 \u2286 (\u2191u).2 \u2227 (\u2191z).2 \u2286 (\u2191u).2\nv : (canonicalFrame \ud835\udce2).World\nRuv : (canonicalFrame \ud835\udce2).Rel u v\nhC :\n  \u2200 (w : (canonicalFrame \ud835\udce2).World),\n    (canonicalFrame \ud835\udce2).Rel v w \u2192 \u00ac(canonicalFrame \ud835\udce2).Rel y w \u2227 \u00ac(canonicalFrame \ud835\udce2).Rel z w\n\u03b3\u2081 : Formula \u2115\nh\u03b3\u2081\u2081 : \u03b3\u2081 \u2208 (\u2191v).1\nh\u03b3\u2081\u2082 : \u223c\u03b3\u2081 \u2208 (\u2191y).1\n\u22a2 \u2203 \u03b3\u2082 \u2208 (\u2191v).1, \u223c\u03b3\u2082 \u2208 (\u2191z).1",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/490341480f0e44083c37c61c3bcaec14e989e23a/Foundation/Propositional/Kripke/AxiomKrieselPutnam.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-02T12:58:06+09:00",
        "inclusion_date": "2025-05-02T23:27:09.700517+00:00"
      },
      "id": "faed874edb2e6a0dc5b5794b048b0ed8c7aaea4b89eb091329590c9fb6bfc6e3"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "b6afdbee9516862a93891034ab6415399391c13b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u\na b : @Set \u03b1\nh : \u2200 (x : \u03b1), x \u2208 a \u2194 x \u2208 b\n\u22a2 a = b",
        "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Ext.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
      },
      "id": "9ce4208411687707e6675450229e36b225a150d2708f7fc9bfb0688f6e948a7e"
    },
    {
      "repo": {
        "remote": "https://github.com/lean-ja/lean-by-example",
        "branch": "main",
        "commit": "b6afdbee9516862a93891034ab6415399391c13b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanByExample/Tactic/Ext.lean",
        "start_line": 95,
        "start_column": 2,
        "end_line": 95,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\np q : Foo\nhx : Foo.x p = Foo.x q\nhy : Foo.y p = Foo.y q\n\u22a2 p = q",
        "url": "https://github.com/lean-ja/lean-by-example/blob/b6afdbee9516862a93891034ab6415399391c13b/LeanByExample/Tactic/Ext.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "a84937a2d49e",
        "blame_date": "2025-01-08T20:05:37+09:00",
        "inclusion_date": "2025-05-03T23:41:02.950758+00:00"
      },
      "id": "18ec047e1602cf9c1668a447d4b827b2f619b1b2ecda7ee7272cea0e8ae4f0f2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/02Iff.lean",
        "start_line": 81,
        "start_column": 2,
        "end_line": 81,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q r : Prop\n\u22a2 (p \u2192 q) \u2192 (p \u2192 q \u2192 r) \u2192 p \u2192 r",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/02Iff.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "723e9973d1207e400c7b9604eb69238cd827fd7e244e6171fe4f4f61faddceca"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 : X\nh : @Tutorial.isInf X inst\u271d s x\u2080\n\u22a2 x\u2080 \u2208 lowerBounds s",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ae6913b8ce14eb25564c8650d1ba37f2a51d9ab667ace148affb596f8d0d04ca"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 50,
        "start_column": 2,
        "end_line": 50,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type u_1\ninst\u271d : PartialOrder X\ns : Set X\nx\u2080 x\u2081 : X\nhx\u2080 : @Tutorial.isInf X inst\u271d s x\u2080\nhx\u2081 : @Tutorial.isInf X inst\u271d s x\u2081\n\u22a2 x\u2080 = x\u2081",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "6af199a745a1561e7130abf05c36371ed55adfa32b17a1327896a5ccb9411dee"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 157,
        "start_column": 2,
        "end_line": 157,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : Tutorial.CompleteLattice X inst\u271d\u00b9\ns t : Set X\nh : s \u2286 t\n\u22a2 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d t \u2264 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d s",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L157"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "015446a052cd5e6b587e32126a1088a2af18e3370fb047b28453d6310ca0f030"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 163,
        "start_column": 2,
        "end_line": 163,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : Tutorial.CompleteLattice X inst\u271d\u00b9\nx x' : X\n\u22a2 x \u2264 x' \u2194 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d {x, x'} = x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L163"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "b9adeae94c1b991971b0e53477e91a36b2c319a0c3053ed30024446ffb9b8c53"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 170,
        "start_column": 2,
        "end_line": 170,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\ninst\u271d : Tutorial.CompleteLattice X inst\u271d\u00b9\nx : X\n\u22a2 Tutorial.CompleteLattice.I X inst\u271d\u00b9 inst\u271d {x' | x \u2264 x'} = x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "7fe4f583343c9db74028efc215641854e61b731902f95848b98e32673f8cfc19"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 378,
        "start_column": 2,
        "end_line": 378,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X Y : Type\nf : X \u2192 Y\nt : Set (Tutorial.Topology X)\n\u22a2 Tutorial.push X Y f\n      (Tutorial.CompleteLattice.S (Tutorial.Topology X) (Tutorial.instPartialOrderTopology X)\n        (Tutorial.instCompleteLatticeTopology X) t) =\n    Tutorial.CompleteLattice.S (Tutorial.Topology Y) (Tutorial.instPartialOrderTopology Y)\n      (Tutorial.instCompleteLatticeTopology Y)\n      (@Set.image (Tutorial.Topology X) (Tutorial.Topology Y) (Tutorial.push X Y f) t)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L378"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T08:05:37+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "3bfb290809bf1b0240f181199fd2738adb99c64a90ee9089e87f319b7d1bb817"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 390,
        "start_column": 2,
        "end_line": 390,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nX : \u03b9 \u2192 Type\nT : (i : \u03b9) \u2192 Tutorial.Topology (X i)\nZ : Type\nTZ : Tutorial.Topology Z\nf : Z \u2192 (i : \u03b9) \u2192 X i\n\u22a2 Tutorial.Continuous Z ((i : \u03b9) \u2192 X i) TZ (Tutorial.ProductTopology \u03b9 X T) f \u2194\n    (i : \u03b9) \u2192 Tutorial.Continuous Z (X i) TZ (@T i) fun z => f z i",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L390"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "6758a37935307cd95eae964a26262cc8b3582f8809942a7d477d5cd35e8410af"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 415,
        "start_column": 4,
        "end_line": 415,
        "end_column": 9
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d : Group G\ns : Set (Tutorial.Subgroups.Subgroup G inst\u271d)\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L415"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "15be317652470e60bd02bb8ac7d0d59a4681dc08a4af2a9b38c7f2b5e2bad044"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 448,
        "start_column": 4,
        "end_line": 448,
        "end_column": 9
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Tutorial.Subgroups.Subgroup G' inst\u271d\n\u22a2 1 \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L448"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "1be9e1691bab72cce79ba590dcc6c91edb83c724df7fd89bb5163c51251f0153"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 451,
        "start_column": 4,
        "end_line": 451,
        "end_column": 9
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Tutorial.Subgroups.Subgroup G' inst\u271d\n\u22a2 \u2200 \u2983x y : G\u2984,\n    x \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H' \u2192\n      y \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H' \u2192\n        x * y \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L451"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "f51ceeab9aadb620cb909113280da81045a988e7904d1cbfb1c14ab1d3b55298"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 454,
        "start_column": 4,
        "end_line": 454,
        "end_column": 9
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\nH' : Tutorial.Subgroups.Subgroup G' inst\u271d\n\u22a2 \u2200 \u2983x : G\u2984,\n    x \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H' \u2192\n      x\u207b\u00b9 \u2208 \u21d1f \u207b\u00b9' Tutorial.Subgroups.Subgroup.carrier G' inst\u271d H'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L454"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ba693aa91797eab9e87b238d710525f18355607ef0f8c86612b5cfc2fc4df504"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 480,
        "start_column": 2,
        "end_line": 480,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl l' : X \u2192 Y\nr : Y \u2192 X\nh : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l r\nh' : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l' r\n\u22a2 l = l'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L480"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "93bf46d62e127be285c517646d63c7bde8d27a69d42ced2d33dfb131dbd81fb4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 484,
        "start_column": 2,
        "end_line": 484,
        "end_column": 7
      },
      "debug_info": {
        "goal": "X : Type\ninst\u271d\u00b9 : PartialOrder X\nY : Type\ninst\u271d : PartialOrder Y\nl : X \u2192 Y\nr r' : Y \u2192 X\nh : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l r\nh' : @Tutorial.adjunction X Y inst\u271d\u00b9 inst\u271d l r'\n\u22a2 r = r'",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L484"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ddefdfd85cd70de05cae3a9cf0d6cddc48ca77ac74512aced28122daab928c27"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean",
        "start_line": 504,
        "start_column": 2,
        "end_line": 504,
        "end_column": 7
      },
      "debug_info": {
        "goal": "G : Type\ninst\u271d\u00b9 : Group G\nG' : Type\ninst\u271d : Group G'\nf : G \u2192* G'\n\u22a2 @Function.comp (Set G) (Tutorial.Subgroups.Subgroup G inst\u271d\u00b9) (Tutorial.Subgroups.Subgroup G' inst\u271d)\n      (Tutorial.Subgroups.push G inst\u271d\u00b9 G' inst\u271d f) (Tutorial.Subgroups.generate G inst\u271d\u00b9) =\n    @Function.comp (Set G) (Set G') (Tutorial.Subgroups.Subgroup G' inst\u271d) (Tutorial.Subgroups.generate G' inst\u271d)\n      (Set.image \u21d1f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L504"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-11T14:40:50+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "39970974bb21412e82bf3bb17e8ae1126814b4fdd7902dd4bcb19535688ea816"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 70,
        "start_column": 2,
        "end_line": 70,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhA : MeasurableSet A\nhB : MeasurableSet B\n\u22a2 IndepSet \u03a9 inst\u271d\u00b9 A B\u1d9c \u2194 IndepSet \u03a9 inst\u271d\u00b9 A B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ea1406fab17594d46002d0c39b5d9b918b257608f9bd96a8808a3e56d932037b"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 83,
        "start_column": 2,
        "end_line": 83,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA : Set \u03a9\nh : IndepSet \u03a9 inst\u271d\u00b9 A A\n\u22a2 volume A = 0 \u2228 volume A = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L83"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ea7d390ddf1fddecb4a4de28e827aa91d9601bddb25d207745774b996ace3f13"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhA : volume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "6f7eb4c882a831d1bd330423800487f3b31cca58a3426d0a58c2feda09ed9d43"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 108,
        "start_column": 2,
        "end_line": 108,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "378e564a6648c5a6314ba19ce58977504295fdf030c261a0dcd53fcb986a1841"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 122,
        "start_column": 4,
        "end_line": 122,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case pos\n\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B \u2260 0\nh : volume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L122"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T19:47:14+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "64063a45f9760cef64c5231abb4e46e10043bc74766a4e12fd78020c3b6ac0cb"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 123,
        "start_column": 2,
        "end_line": 123,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case neg\n\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nhB : volume B \u2260 0\nh : \u00acvolume A = 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L123"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "e42bff92f7d188a4e0ad6bf163a2799eb4eb0ffc2e5f64b741d69d5c0155ed99"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 132,
        "start_column": 2,
        "end_line": 132,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A * condProb \u03a9 inst\u271d\u00b9 B A / volume B",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "085803ca5d185d250f064cd28e330ad04becceed7d12411a05b083522c376c90"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/Probability.lean",
        "start_line": 135,
        "start_column": 2,
        "end_line": 135,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03a9 : Type\ninst\u271d\u00b9 : MeasureSpace \u03a9\ninst\u271d : IsProbabilityMeasure volume\nA B : Set \u03a9\nh : IndepSet \u03a9 inst\u271d\u00b9 B A\nhB : volume B \u2260 0\n\u22a2 condProb \u03a9 inst\u271d\u00b9 A B = volume A",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/Probability.lean#L135"
      },
      "metadata": {
        "blame_email_hash": "369c5f9cb018",
        "blame_date": "2025-03-07T14:30:17+01:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "f83319b81169d2b6d9ddfc87c2a7b674993cee61a86a4662d3b9d3228da633f0"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 87,
        "start_column": 2,
        "end_line": 87,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl : \u211d\nh : Topics.seq_limit u l\nhl : l > 0\n\u22a2 \u2203 N, \u2200 n \u2265 N, u n \u2265 l / 2",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ccd140dac34d2cd961fb6f6b53f075ce2e4dc62b73b9ae617d9f29ff3a2c5bf1"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean",
        "start_line": 210,
        "start_column": 2,
        "end_line": 210,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211d\nl a : \u211d\nhl : Topics.seq_limit u l\nha : Topics.cluster_point u a\n\u22a2 a = l",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L210"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2023-05-09T00:00:04+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "09f91f79cad0ca5316462bc63aea6414c82d58b586160edfceafb7067804151c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean",
        "start_line": 64,
        "start_column": 2,
        "end_line": 64,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03c6 : ClassicalPropositionalLogic.Variable \u2192 Prop\nA B : ClassicalPropositionalLogic.Formula\n\u22a2 ClassicalPropositionalLogic.IsTrue \u03c6 (ClassicalPropositionalLogic.equiv A B) \u2194\n    (ClassicalPropositionalLogic.IsTrue \u03c6 A \u2194 ClassicalPropositionalLogic.IsTrue \u03c6 B)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "56c8fb43eb9941957cadbfbc34788a174506ce541f19a738432b8791ffe41429"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 68,
        "start_column": 4,
        "end_line": 68,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 g (f 1) = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L68"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "b994596a6ae48101a6da21ddd152921bac8658c6567593b8fb4626f9514a9fa2"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 70,
        "start_column": 4,
        "end_line": 70,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 \u2200 (x y : R), g (f (x * y)) = g (f x) * g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "0f165a57bb4557ab8cb4d92b911df876c337580e17a89f8e6c139cb8b0d508bf"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 72,
        "start_column": 4,
        "end_line": 72,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 g (f 0) = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L72"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "34a352bb7d416e4579fb10948384052a2cb22182038dc1432e8d41f2123dbd50"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 74,
        "start_column": 4,
        "end_line": 74,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2192+* T\nf : R \u2192+* S\n\u22a2 \u2200 (x y : R), g (f (x + y)) = g (f x) + g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "52312c1fc15da56f9a39776cfcfb80eb2662b68c750f95411644d03a97d1f019"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 94,
        "start_column": 4,
        "end_line": 94,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 LeftInverse (fun x => f.symm (g.symm x)) fun x => g (f x)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "44c574b124515f4c4c1ca84b175284c00eea5bd28cc7749e5606fe734d3a2ce4"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 96,
        "start_column": 4,
        "end_line": 96,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 RightInverse (fun x => f.symm (g.symm x)) fun x => g (f x)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L96"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "7d495260cb8cee9b53ee10d267ea144455f2f09f654b475682a43edc5b7d6eeb"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 100,
        "start_column": 4,
        "end_line": 100,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 \u2200 (x y : R), g (f (x * y)) = g (f x) * g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L100"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "da1bbe20d246d11b58088dd69bda815f9f66e1c915fe0fe5c7d101f2d8391803"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 98,
        "start_column": 4,
        "end_line": 98,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\nS : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : CommRing S\nT : Type u_3\ninst\u271d : CommRing T\ng : S \u2243+* T\nf : R \u2243+* S\n\u22a2 \u2200 (x y : R), g (f (x + y)) = g (f x) + g (f y)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "a0ff146d16911404176d49e1fe46130914abe0370fcc182135138c3bcc5ca46f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 138,
        "start_column": 4,
        "end_line": 138,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 {a b : R}, a \u2208 \u2191I \u2229 \u2191J \u2192 b \u2208 \u2191I \u2229 \u2191J \u2192 a + b \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "533a206bc753af7019a75d95539753a6b2c09b0e057fe40490638e7fe425770f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 140,
        "start_column": 4,
        "end_line": 140,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 0 \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L140"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "7dcb8bca4550bd8fb87da2b6fe2318dff898792e9193415ad4fef993c6df50f7"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 142,
        "start_column": 4,
        "end_line": 142,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.15406\ninst\u271d : CommRing R\nI J : Ideal R\n\u22a2 \u2200 (c : R) {x : R}, x \u2208 \u2191I \u2229 \u2191J \u2192 c \u2022 x \u2208 \u2191I \u2229 \u2191J",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L142"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ffcec77361c454ee1776ff391dda60a25e7cb2da2b49d721658a41b50062e81f"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 191,
        "start_column": 4,
        "end_line": 191,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type ?u.18803\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.18809\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 x \u2208 ker f \u2192 f x = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "1ec7d2fda45ef6811101287159cdf20578c85c19236111d9df864f1c3e5b3616"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R\n\u22a2 (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) ((Ideal.Quotient.mk (ker f)) x) = f x",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "0a6a7ef76ea317f7fc17a570721d2b2fbd10a43dff0890cec3191c9a0ed8fcac"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 220,
        "start_column": 2,
        "end_line": 220,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nR : Type u_1\ninst\u271d\u00b9 : CommRing R\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\nx : R \u29f8 ker f\nx' : R\nhx : (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) ((Ideal.Quotient.mk (ker f)) x') = 0\nhx' : (Ideal.Quotient.mk (ker f)) x' = x\n\u22a2 (Ideal.Quotient.mk (ker f)) x' = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L220"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "f949f1d3c98f5cf5335db64208d4ad60b0b4de85bb7293ae98634d9165a83aca"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 256,
        "start_column": 6,
        "end_line": 256,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 LeftInverse (fun x => (Ideal.Quotient.mk (ker f)) (surjInv hf x)) \u21d1(@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "74d6db50892f6b62f2b5014a4194b68b776205a9ab2fbb003b1b120ad445f62e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 245,
        "start_column": 6,
        "end_line": 245,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x * y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x * (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L245"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "b09d6fd615dc1fb6910c141bb9559e4dccac5fc84f8509c2b0d7d05d91ddd38c"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 247,
        "start_column": 6,
        "end_line": 247,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type ?u.25702\ninst\u271d\u00b9 : CommRing R\nS : Type ?u.25708\ninst\u271d : CommRing S\nf : R \u2192+* S\nhf : Surjective \u21d1f\n\u22a2 \u2200 (x y : R \u29f8 ker f),\n    (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) (x + y) =\n      (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) x + (@GlimpseOfLean.kerLift R inst\u271d\u00b9 S inst\u271d f) y",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "3f54b2da96f46fe1d5be9a3c0aa343f59c76284372e84f5326230571c93b9c63"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 293,
        "start_column": 8,
        "end_line": 293,
        "end_column": 13
      },
      "debug_info": {
        "goal": "R : Type ?u.27608\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 \u2200 a \u2208 \u2a05 i, I i, (Pi.ringHom fun i => Quotient.mk (I i)) a = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L293"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "de993a4776c20c764cf5fd825b849b27f5b2b91f66f96e12380f5b9c37ff9ae8"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 308,
        "start_column": 2,
        "end_line": 308,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : \u03b9 \u2192 Ideal R\n\u22a2 Injective \u21d1(@Ideal.chineseMap R inst\u271d \u03b9 I)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L308"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "051df5cc2f1f38ea9921b6084b5b7b49458362b7560d796c94cfcac40f5e7613"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 346,
        "start_column": 6,
        "end_line": 346,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case empty\nR : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : Ideal R\nJ : \u03b9 \u2192 Ideal R\n\u22a2 (\u2200 j \u2208 \u2205, I + J j = 1) \u2192 I + \u2a05 j \u2208 \u2205, J j = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L346"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "b9c91f4a5d083f6be8456bc9d0b02589e43f328b0635a15b509aebbe474f7881"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 351,
        "start_column": 6,
        "end_line": 351,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case insert\nR : Type u_1\ninst\u271d : CommRing R\n\u03b9 : Type\nI : Ideal R\nJ : \u03b9 \u2192 Ideal R\ni : \u03b9\ns : Finset \u03b9\na\u271d : i \u2209 s\nh : \u2200 j \u2208 insert i s, I + J j = 1\nK : Ideal R := \u2a05 j \u2208 s, J j\nhs : (\u2200 j \u2208 s, I + J j = 1) \u2192 I + K = 1\n\u22a2 1 \u2264 I + min K (J i)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L351"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "6afa93fccf9f394a70105f0d6ca31d87f7c86a26741fa5d4ff314264dfe8bc6e"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 370,
        "start_column": 6,
        "end_line": 370,
        "end_column": 11
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ni : \u03b9\n\u22a2 \u2200 j \u2208 {i}\u1d9c, I i + I j = 1",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L370"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "6f20b0ff65e7946808174472385c05091a333a7608eb85faa9a8bb7b87ef9d99"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 371,
        "start_column": 4,
        "end_line": 371,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ni : \u03b9\nhI' : \u2200 j \u2208 {i}\u1d9c, I i + I j = 1\n\u22a2 \u2203 e, (Quotient.mk (I i)) e = 1 \u2227 \u2200 (j : \u03b9), j \u2260 i \u2192 (Quotient.mk (I j)) e = 0",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L371"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "ed03e5795f0796c6f913e162683705fafcd0ac7798f79ea422a5271637f4b3cf"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/RingTheory.lean",
        "start_line": 373,
        "start_column": 2,
        "end_line": 373,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\n\u03b9 : Type\ninst\u271d : Fintype \u03b9\nI : \u03b9 \u2192 Ideal R\nhI : \u2200 (i j : \u03b9), i \u2260 j \u2192 I i + I j = 1\ng : (i : \u03b9) \u2192 R \u29f8 I i\nf : \u03b9 \u2192 R\nhf : \u2200 (i : \u03b9), (Quotient.mk (I i)) (f i) = g i\ne : \u03b9 \u2192 R\nhe : \u2200 (i : \u03b9), (Quotient.mk (I i)) (e i) = 1 \u2227 \u2200 (j : \u03b9), j \u2260 i \u2192 (Quotient.mk (I j)) (e i) = 0\n\u22a2 \u2203 a, (@Ideal.chineseMap R inst\u271d\u00b9 \u03b9 I) a = g",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/RingTheory.lean#L373"
      },
      "metadata": {
        "blame_email_hash": "c28576c1d1dd",
        "blame_date": "2025-04-20T11:35:58+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "1c4105859623036341fdee56b70525551d0b6915dcb25ee960dfae7e5f8d8e90"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\n\u03c6 : IntuitionisticPropositionalLogic.Variable \u2192 H\n\u22a2 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 IntuitionisticPropositionalLogic.top = \u22a4",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "6fb846972214087877865d9d9f6841119fa27e34a9232107144294910661530d"
    },
    {
      "repo": {
        "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
        "branch": "master",
        "commit": "984733b141fe69311aa9fbbaf86b538e85b38a7f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean",
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7
      },
      "debug_info": {
        "goal": "H : Type u_1\ninst\u271d : HeytingAlgebra H\n\u03c6 : IntuitionisticPropositionalLogic.Variable \u2192 H\nA B : IntuitionisticPropositionalLogic.Formula\n\u22a2 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 (IntuitionisticPropositionalLogic.equiv A B) =\n    min (@IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 A \u21e8 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 B)\n      (@IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 B \u21e8 @IntuitionisticPropositionalLogic.eval H inst\u271d \u03c6 A)",
        "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/984733b141fe69311aa9fbbaf86b538e85b38a7f/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2023-07-08T19:51:30+02:00",
        "inclusion_date": "2025-05-20T03:05:36.205834+00:00"
      },
      "id": "026ef2f25a352b06f1432ecd8c3d9bd4959f873df5171a647d8c50cdbb349e4d"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 50,
        "start_column": 77,
        "end_line": 50,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264 4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "29778f1152b52f56e471415ff435d1178960d2b494e0bf5056a34dbea0e71309"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 52,
        "start_column": 77,
        "end_line": 52,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191i \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "4353ed325cd0df36555a1d92cf39ee1f05f229f1bfeb095cd1e7f893188bf0f6"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 54,
        "start_column": 77,
        "end_line": 54,
        "end_column": 82
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) : \u2211 i, \u2211 j, (-\u2191\u2191i - \u2191\u2191j) \u2022 Y (i, j)|\u2211 i, \u2211 j, Y (i, j)] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-09-30T22:19:50+00:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "861ef26a6b180dd0b4b9f8b5b1c5d8854478cb6dbf9bc9f02bfebb75167de635"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 58,
        "start_column": 74,
        "end_line": 58,
        "end_column": 79
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, Y (i, j)] \u2264 (2 * \u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "6f463354723a3967221a993ee20ea4665655cd9d78414eebf560f95abe779f2e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 61,
        "start_column": 94,
        "end_line": 61,
        "end_column": 99
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\nm : \u211d\n\u22a2 H[\u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 (8 * \u2191p.m ^ 2 - 16 * \u2191p.m + 1) * multiTau p \u03a9 h\u03a9 X + m\u207b\u00b9 * \u2211 i, H[X i]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L61"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "7c3aed8cd9f21af426a0736f8e83b96ac5b62959ecf090c1e817aaa56108a19a"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 64,
        "start_column": 60,
        "end_line": 64,
        "end_column": 65
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 I[\u2211 i, \u2211 j, Y (i, j) : \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j)] \u2264 2 * (\u2191p.m - 1) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "9a1404b34047e0b9ec6a3b821d265bb88ed85de064e916d5f4491245acc7039e"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 67,
        "start_column": 88,
        "end_line": 67,
        "end_column": 93
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Fin p.m \u2192 Type u\nh\u03a9 : (i : Fin p.m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin p.m) \u2192 \u03a9 i \u2192 G\n\u03a9' : Type u\nY : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh\u03a9' : MeasureSpace \u03a9'\ninst\u271d : IsFiniteMeasure volume\n\u22a2 \u2211 i, d[X i # \u2211 i, \u2211 j, \u2191\u2191j \u2022 Y (i, j) | \u2211 i, \u2211 j, Y (i, j)] \u2264 8 * (\u2191p.m ^ 3 - \u2191p.m ^ 2) * multiTau p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T08:58:11-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "3b64a719e1e86892effa18eeda8b3877db4e52f6ef4fc22e290a8abb403731f6"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/TorsionEndgame.lean",
        "start_line": 89,
        "start_column": 54,
        "end_line": 89,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2074 : AddCommGroup G\ninst\u271d\u00b3 : Fintype G\ninst\u271d\u00b2 : MeasurableSpace G\ninst\u271d\u00b9 : MeasurableSingletonClass G\nm : \u2115\nhm : m \u2265 2\nhtorsion : \u2200 (x : G), m \u2022 x = 0\n\u03a9 : Type u_2\ninst\u271d : MeasureSpace \u03a9\nX : \u03a9 \u2192 G\n\u22a2 \u2203 H \u03a9' m\u03a9 U, IsUniform (\u2191H) U volume \u2227 d[X # U] \u2264 64 * \u2191m ^ 3 * d[X # X]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/TorsionEndgame.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-28T21:28:18-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "df6a04c325e2991b626b1aad360148be2b60cc867ac78ea434655d13412adadd"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/BoundingMutual.lean",
        "start_line": 36,
        "start_column": 79,
        "end_line": 36,
        "end_column": 84
      },
      "debug_info": {
        "goal": "G \u03a9\u2092 : Type u\ninst\u271d\u00b2 : MeasureableFinGroup G\ninst\u271d\u00b9 : MeasureSpace \u03a9\u2092\np : multiRefPackage G \u03a9\u2092\n\u03a9 : Type u\nh\u03a9 : MeasureSpace \u03a9\nX : Fin p.m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\nh_min : multiTauMinimizes p (fun x => \u03a9) (fun x => h\u03a9) X\n\u03a9' : Type u_1\ninst\u271d : MeasureSpace \u03a9'\nX' : Fin p.m \u00d7 Fin p.m \u2192 \u03a9' \u2192 G\nh_indep' : iIndepFun X' volume\nhperm : \u2200 (j : Fin p.m), \u2203 e, IdentDistrib (fun \u03c9 i => X' (i, j) \u03c9) (fun \u03c9 i => X (e i) \u03c9) volume volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X' (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X' (i, j) \u03c9|fun \u03c9 => \u2211 i, \u2211 j, X' (i, j) \u03c9] \u2264\n    4 * \u2191p.m ^ 2 * p.\u03b7 * D[X ; fun x => h\u03a9]",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/BoundingMutual.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "760c97c8db36acdc50f51b10867203a8a1409cd24c60a939e37c5186ba4967ef"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 181,
        "start_column": 65,
        "end_line": 181,
        "end_column": 70
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\n\u22a2 Nat.card (G \u2192+ ZMod 2) = Nat.card G",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "0b0a333097173f6020e721a4295e35b9b92d2dec9e21abe2d182fd2bd4db8136"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 183,
        "start_column": 114,
        "end_line": 183,
        "end_column": 119
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nx : G\nhx : x \u2260 0\n\u22a2 Nat.card \u2191{\u03c6 | \u03c6 x = 1} = Nat.card G / 2",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L183"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "6ae7f947eec4b094d53ce34549c2a563d41d7fbd8a79fae4df113fdc5cce1795"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 185,
        "start_column": 114,
        "end_line": 185,
        "end_column": 119
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Fintype G\ninst\u271d : Module (ZMod 2) G\nA : Set G\n\u22a2 \u2203 \u03c6, Nat.card \u2191{x | x \u2208 A \u2227 \u03c6 x = 1} \u2265 (Nat.card \u2191A - 1) / 2",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "92edd06e600f29493199f46c43a85e8ecd63e24d686770fb100b4846983f3094"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/ApproxHomPFR.lean",
        "start_line": 189,
        "start_column": 99,
        "end_line": 189,
        "end_column": 104
      },
      "debug_info": {
        "goal": "G : Type u_1\nG' : Type u_2\ninst\u271d\u2075 : AddCommGroup G\ninst\u271d\u2074 : Fintype G\ninst\u271d\u00b3 : AddCommGroup G'\ninst\u271d\u00b2 : Fintype G'\ninst\u271d\u00b9 : Module (ZMod 2) G\ninst\u271d : Module (ZMod 2) G'\nf : G \u2192 G'\nK : \u211d\nhK : K > 0\nhf : \u2191(Nat.card G) ^ 2 / K \u2264 \u2191(Nat.card \u2191{x | f (x.1 + x.2) = f x.1 + f x.2})\n\u22a2 \u2203 \u03c6'', \u2191(Nat.card \u2191{x | f x = \u03c6'' x}) \u2265 (\u2191(Nat.card G) / (2 ^ 144 * K ^ 122) - 1) / 2",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/ApproxHomPFR.lean#L189"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-01T23:21:54-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "9de863cf20878ce35c49c24c84ebaa31d77e094ad8451d897059fe9415571343"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 760,
        "start_column": 62,
        "end_line": 760,
        "end_column": 67
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X = H[\u2211 i, X i] - (\u2211 i, H[X i]) / \u2191m",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MoreRuzsaDist.lean#L760"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-22T09:31:46-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "85f23dba03df424ce1af5162c60259cae9aa3eec53d348b0590552a3f8665f87"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 857,
        "start_column": 106,
        "end_line": 857,
        "end_column": 111
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 (\u2211 j, \u2211 k, if j = k then 0 else d[X j # -X k]) \u2264 \u2191m * (\u2191m - 1) * @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2025-05-02T00:15:47-07:00",
        "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
      },
      "id": "2be0150aa78fedfb57d79b8a6097182c5778adf8bbc131f71c5c788fcd941297"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "edb386dbe041ce9e19ad76d90c5e7fa14608a181",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 862,
        "start_column": 69,
        "end_line": 862,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\n\u22a2 \u2211 j, d[X j # X j] \u2264 2 * \u2191m * @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/edb386dbe041ce9e19ad76d90c5e7fa14608a181/PFR/MoreRuzsaDist.lean#L862"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-05-03T00:49:01.282024+00:00"
      },
      "id": "c83fb055cd784ff0218908ad23362ac82e97ab295d73eaa278d25927a75b71c9"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "50207839e14910becf24aa4ef12b8b72223d0043",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1047,
        "start_column": 108,
        "end_line": 1047,
        "end_column": 113
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Fin m \u2192 Type u_9\nh\u03a9 : (i : Fin m) \u2192 MeasureSpace (\u03a9 i)\nX : (i : Fin m) \u2192 \u03a9 i \u2192 G\nhidenT : \u2200 (j k : Fin m), IdentDistrib (X j) (X k) volume volume\n\u22a2 \u2200 (i : Fin m), @multiDist G hG inst\u271d\u00b2 m \u03a9 h\u03a9 X \u2264 \u2191m * d[X i # X i]",
        "url": "https://github.com/teorth/pfr/blob/50207839e14910becf24aa4ef12b8b72223d0043/PFR/MoreRuzsaDist.lean#L1047"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-05-25T23:12:46.682441+00:00"
      },
      "id": "b089476b28cb4d588046e3aabc24f3c3f23b86cab3fdfab7c899f0b273b914da"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "018c619cf93d489a688e485cafd43f5545ddd99e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 1165,
        "start_column": 82,
        "end_line": 1165,
        "end_column": 87
      },
      "debug_info": {
        "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : MeasurableSingletonClass G\ninst\u271d : Countable G\nm : \u2115\nhm : m \u2265 2\n\u03a9 : Type u_9\nh\u03a9 : MeasureSpace \u03a9\nX : Fin m \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 d[\u2211 i, X i # \u2211 i, X i] \u2264 2 * @multiDist G hG inst\u271d\u00b2 m (fun x => \u03a9) (fun x => h\u03a9) X",
        "url": "https://github.com/teorth/pfr/blob/018c619cf93d489a688e485cafd43f5545ddd99e/PFR/MoreRuzsaDist.lean#L1165"
      },
      "metadata": {
        "blame_email_hash": "7d87c0724495",
        "blame_date": "2025-03-07T08:53:46+01:00",
        "inclusion_date": "2025-05-26T23:04:41.163198+00:00"
      },
      "id": "b1d15c92fcf249647ae1963a74809dd64695bde853bfdc48ac27a037a74f2fac"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MoreRuzsaDist.lean",
        "start_line": 2070,
        "start_column": 54,
        "end_line": 2070,
        "end_column": 59
      },
      "debug_info": {
        "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst\u271d\u00b3 : MeasurableSingletonClass G\ninst\u271d\u00b2 : AddCommGroup G\ninst\u271d\u00b9 : Countable G\ninst\u271d : Fintype G\nm : \u2115\nhm : m \u2265 1\n\u03a9 : Type u_8\nh\u03a9 : MeasureSpace \u03a9\nX : Fin (m + 1) \u00d7 Fin (m + 1) \u2192 \u03a9 \u2192 G\nh_indep : iIndepFun X volume\n\u22a2 I[fun \u03c9 j => \u2211 i, X (i, j) \u03c9 : fun \u03c9 i => \u2211 j, X (i, j) \u03c9|\u2211 p, X p] \u2264\n    (\u2211 j,\n          ((@multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, j)) -\n            @condMultiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) G inst\u271d (fun i => X (i, j)) fun i =>\n              \u2211 k \u2208 Finset.Ici j, X (i, k)) +\n        @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => X (i, \u2191m)) -\n      @multiDist G hG inst\u271d\u00b2 (m + 1) (fun x => \u03a9) (fun x => h\u03a9) fun i => \u2211 j, X (i, j)",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MoreRuzsaDist.lean#L2070"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-17T18:26:36+00:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "1b142d902a81e04c62336cb7e4aa8b888fd1f6c73d3c44ccc48c28f49d023db0"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 54,
        "start_column": 111,
        "end_line": 54,
        "end_column": 116
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u2074 : @MeasureableFinGroup G\ninst\u271d\u00b3 : TopologicalSpace G\ninst\u271d\u00b2 : DiscreteTopology G\ninst\u271d\u00b9 : BorelSpace G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u2074 inst\u271d\n\u22a2 Continuous fun \u03bc =>\n    @multiTau G \u03a9\u2080 inst\u271d\u2074 inst\u271d p (fun x => G)\n      (fun i =>\n        { toMeasurableSpace := @MeasureableFinGroup.toMeasurableSpace ((fun x => G) i) inst\u271d\u2074, volume := \u2191(\u03bc i) })\n      fun x => id",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MultiTauFunctional.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-06-29T09:57:28-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "ae632f5cfb1c738e56ffe7ec61dc56af7d7ed60409e2d817bc0c52075bc50c1f"
    },
    {
      "repo": {
        "remote": "https://github.com/teorth/pfr",
        "branch": "master",
        "commit": "49109e15a296831048024601c14d33399c526b38",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PFR/MultiTauFunctional.lean",
        "start_line": 57,
        "start_column": 222,
        "end_line": 57,
        "end_column": 227
      },
      "debug_info": {
        "goal": "G \u03a9\u2080 : Type u\ninst\u271d\u00b9 : @MeasureableFinGroup G\ninst\u271d : MeasureSpace \u03a9\u2080\np : @multiRefPackage G \u03a9\u2080 inst\u271d\u00b9 inst\u271d\n\u22a2 \u2203 \u03a9 h\u03a9 X, @multiTauMinimizes G \u03a9\u2080 inst\u271d\u00b9 inst\u271d p \u03a9 h\u03a9 X",
        "url": "https://github.com/teorth/pfr/blob/49109e15a296831048024601c14d33399c526b38/PFR/MultiTauFunctional.lean#L57"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-08-18T19:14:43-07:00",
        "inclusion_date": "2025-06-01T03:03:10.481677+00:00"
      },
      "id": "fecf7ffa2e403ebfd3a9e6fd155fa2576c144c6d152c674e23d4c38bac773bb0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
        "start_line": 193,
        "start_column": 4,
        "end_line": 193,
        "end_column": 9
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\n\u22a2 R \u2260 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-02T15:31:06-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "92a89578ba62daebb8f59b14a7114e2d70fd31c48488c31eceb352bbb22686d4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
        "start_line": 206,
        "start_column": 4,
        "end_line": 206,
        "end_column": 9
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\n\u22a2 (eval (\u2191f) (((MvPolynomial.finSuccEquiv F 1).trans (mapAlgEquiv MvPolynomial.finOneEquiv)) Q)).comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L206"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-02T15:31:06-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "6660ac7c6b48ea61b4c1c71c2304529ce6a910bc5fa9583c0c0d6e44bb3be33d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
        "start_line": 210,
        "start_column": 66,
        "end_line": 210,
        "end_column": 71
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\nhRComp :\n  R.comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\nnext :\n  MvPolynomial.X 0 ^ r \u2223\n    MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q\n\u22a2 X ^ r \u2223\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L210"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-02T15:31:06-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "c3e8884a66f204529f7c258f9aad99cd24d31c28ad730c13c6a7de238982fce0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
        "start_line": 213,
        "start_column": 67,
        "end_line": 213,
        "end_column": 72
      },
      "debug_info": {
        "goal": "F : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\nhRComp :\n  R.comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\nnext' :\n  r \u2264\n    MvPolynomial.degreeOf 0\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\n\u22a2 MvPolynomial.X 0 ^ r \u2223\n    MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L213"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-02T15:31:06-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "3bfc360cb284651e5fb0c9daf77e125d4c915d3ef2c118bdcc4865e8f449a165"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "list-decoding",
        "commit": "476b9868d4b252e80dfb25fb543009c5bacdec06",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/ListDecoding.lean",
        "start_line": 217,
        "start_column": 2,
        "end_line": 217,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case mk.intro\nF : Type u_1\ninst\u271d\u00b2 : Field F\ninst\u271d\u00b9 : Fintype F\ninst\u271d : DecidableEq F\nn : \u2115\ny : Fin n \u2192 F\n\u03b1 : Fin n \u21aa F\nk : \u2115\ni : Fin n\nr d : \u2115\nf : \u21a5(degreeLE F \u2191k)\nh : eval (\u03b1 i) \u2191f = y i\nQ : MvPolynomial (Fin 2) F\nleft\u271d : MvPolynomial.weightedTotalDegree' (one_k k) Q < \u2191d\nhQ2 :\n  \u2200 (i : Fin n),\n    ((MvPolynomial.comp (fun i_1 => MvPolynomial.X i_1 + MvPolynomial.C (![\u03b1 i, y i] i_1)) Q).support.inf fun s =>\n        (Finsupp.weight (one_k k)) s) \u2265\n      \u2191r\nfbar : F[X] := (\u2191f).comp (X + C (\u03b1 i)) - C (y i)\nfbarZeroAtZero : eval 0 fbar = 0\nR : F[X]\nhR : eval (\u2191f) (MvPolynomial.finTwoEquiv Q) = R\nrNotZero : R \u2260 0\nhRComp :\n  R.comp (X + C (\u03b1 i)) =\n    MvPolynomial.finOneEquiv\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)\n\u22a2 r \u2264\n    MvPolynomial.degreeOf 0\n      (MvPolynomial.comp ![MvPolynomial.X 0 + MvPolynomial.C (\u03b1 i), MvPolynomial.finOneEquiv.invFun (fbar + C (y i))] Q)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/476b9868d4b252e80dfb25fb543009c5bacdec06/ArkLib/Data/CodingTheory/ListDecoding.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-02T15:31:06-04:00",
        "inclusion_date": "2025-05-03T00:57:24.002271+00:00"
      },
      "id": "288d8c60ada288d87f7bb5634c7d44c2e11a4acdc3aaf7f08b833498fd7b65f4"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d : Fintype \u03b1\ns : Multiset \u2115\nhs : s.card = card \u03b1\nh\u2080 : 0 \u2209 s\n\u22a2 s.sum = 2 * card \u03b1 - 2 \u2194 \u2203 G x, @GraphTheory.ES1.degreeSequence \u03b1 inst\u271d G x = s",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "773bfe75ea4ebaa1c7db39f49c61b97bfac5033baa3ae89e038324592c090d4b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 128,
        "start_column": 2,
        "end_line": 128,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : Fintype \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\n\u22a2 \u2203 H x, \u2200 (a : \u03b1), @GraphTheory.ES1.averageDegree \u03b1 inst\u271d\u00b9 G inst\u271d / 2 \u2264 \u2191(H.degree a)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "1f53139f70a8c9eb5c1a110c7856de76b35483a639c6d3e2a5d29a24a3ba39b1"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 181,
        "start_column": 2,
        "end_line": 181,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\ninst\u271d\u00b9 : DecidableEq \u03b1\nG : SimpleGraph \u03b1\ninst\u271d : DecidableRel G.Adj\ns : Finset \u03b1\n\u22a2 \u2203 u v,\n    Disjoint u v \u2227\n      u \u222a v = s \u2227\n        (\u2200 a \u2208 u, Even (Cardinal.mk { x // x \u2208 {b \u2208 u | G.Adj a b} })) \u2227\n          \u2200 a \u2208 v, Even (Cardinal.mk { x // x \u2208 {b \u2208 v | G.Adj a b} })",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "d07ac9e2d487028361fb512693da01d66fe24c1a3601085dcf4d7ea43f2fb9e2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_2\n\u03b2 : Type u_3\ninst\u271d : Finite \u03b1\ng : \u03b2 \u21aa \u03b1\nf : \u03b2 \u2192 \u03b1 \u2192 \u03b1\nhf : @GraphTheory.ES1.IsLatin \u03b2 \u03b1 \u03b1 f\n\u22a2 \u2203 f', f' \u2218 \u21d1g = f \u2227 @GraphTheory.ES1.IsLatin \u03b2 \u03b1 \u03b1 f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "75dd0f53536fd214567670dd32665c495e9d7468d069a5a97ab2f0c327bbdbef"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 214,
        "start_column": 2,
        "end_line": 214,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 r, (\u2200 (A : Finset \u2115), \u2191A.card \u2264 Cardinal.mk \u2191(Rel.image r \u2191A)) \u2227 \u2200 (f : \u2115 \u2192 \u2115), Injective f \u2192 \u2203 n, \u00acr n (f n)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "85eb6df5be9336683335e47a382d40651da56dda7a8838d196dfb48f0427b04e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5,\n    0 < \u03b5 \u2227\n      \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1],\n        \u2203 x,\n          \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d),\n            \u03b5 * \u221a\u2191(card \u03b1) \u2264\n              @GraphTheory.ES1.distortion \u03b1 (\u211d \u00d7 \u211d) MetricSpace.toPseudoMetricSpace Prod.pseudoMetricSpaceMax f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "ea266cfd4589d381caafdb0e1689939afbc9544ac4ca21d7995152aaedadb6b2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GraphTheory/ExampleSheet1.lean",
        "start_line": 252,
        "start_column": 2,
        "end_line": 252,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 \u03b5,\n    0 < \u03b5 \u2227\n      \u2200 (\u03b1 : Type u_5) [inst : Fintype \u03b1],\n        \u2203 x,\n          \u2200 (f : \u03b1 \u2192 \u211d \u00d7 \u211d),\n            \u03b5 * \u2191(card \u03b1) \u2264\n              @GraphTheory.ES1.distortion \u03b1 (\u211d \u00d7 \u211d) MetricSpace.toPseudoMetricSpace Prod.pseudoMetricSpaceMax f",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "52ea077843b02736953a7a9226253d9c781b2323f944dddcc682f6a418ff235b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean",
        "start_line": 46,
        "start_column": 75,
        "end_line": 46,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d : MeasurableSpace \u03a9\nG : \u03a9 \u2192 SimpleGraph \u03b1\np : NNReal\n\u03bc : Measure \u03a9\nhG : @IsBinomialRandomGraph \u03b1 \u03a9 inst\u271d G p \u03bc\n\u22a2 iIndepFun (fun e \u03c9 => e \u2208 (G \u03c9).edgeSet) \u03bc",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-06T17:45:28+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "2382a1c673ef57523f9d84ca5fe1eacbbeec7feea69d3c36cff3299c65902332"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 117,
        "start_column": 8,
        "end_line": 117,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => X \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "9f84c030c5ed4b3bc17c5be7f141730a397a3d41b0729d5a3207c1060999785e"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 118,
        "start_column": 8,
        "end_line": 118,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_1.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ni : \u03b1\n\u22a2 MeasurableSet fun \u03c9 => Y \u03c9 i",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "8f77b0dc5b6b682bd558cb282a467f0d17d4919a0c79197577d6ef815f63f21b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 126,
        "start_column": 8,
        "end_line": 126,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_1\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "4de90409ccd6c97c111093d95f46ae51e45ee43d79031552f8e095010a99c1e9"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 127,
        "start_column": 8,
        "end_line": 127,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case refine_2.refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\ni : \u03b1\nhi : i \u2208 s\n\u22a2 MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "32acd3ef4e072e96f075eaf9d7c28db58f4279d702f3339d807d9c7cd1510b66"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 128,
        "start_column": 6,
        "end_line": 128,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | Y \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "d7977f9cd25cdd5cbeeff217972506946e96b87da8ad3a7d80816cc2dce0b2e2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 129,
        "start_column": 6,
        "end_line": 129,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 \u2200 i \u2208 s, MeasurableSet {\u03c9 | X \u03c9 i}",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "6e0036d42d7e282f80b05dd02a1aea8f2ea12ea7458cb0d905897e72aa2e6cc1"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 130,
        "start_column": 6,
        "end_line": 130,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.hs\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | X \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "bddfb485dbdc14453e6dc1fd17677cb9155386920b568505c91dfa622bb8b676"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 131,
        "start_column": 6,
        "end_line": 131,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2.ht\n\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\ns : Finset \u03b1\n\u22a2 MeasurableSet (\u22c2 i \u2208 s, {\u03c9 | Y \u03c9 i})",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "55bea96dd46e0aad8fde61776a4c1dff00d5c09020c25c2c463f35a43629607b"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean",
        "start_line": 132,
        "start_column": 11,
        "end_line": 132,
        "end_column": 16
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03a9 : Type u_2\ninst\u271d\u00b9 : MeasurableSpace \u03a9\nX Y : \u03a9 \u2192 Set \u03b1\n\u03bc : Measure \u03a9\np q : NNReal\nhX : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 X p \u03bc\nhY : @ProbabilityTheory.IsBernoulliSeq \u03b1 \u03a9 inst\u271d\u00b9 Y q \u03bc\ninst\u271d : IsProbabilityMeasure \u03bc\nh : IndepFun X Y \u03bc\na : \u03b1\n\u22a2 Measure.map (fun \u03c9 => a \u2208 X \u03c9 \u2229 Y \u03c9) \u03bc = (PMF.bernoulli' (p * q) \u22ef).toMeasure",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "08e7aabe53f0f4a6fd17d36278cde6d2c9e766f1cfcd7e320786797358d1861f"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 31,
        "start_column": 2,
        "end_line": 31,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 NNReal\nhp : (fun n => \u2191(p n)) =o[atTop] fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H.IsContained (G n \u03c9)}) atTop (nhds 0)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "b664d7f10e7f913ef07bc493e880412c8c007ea8a4d09a96f235041ef8329ff1"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\n\u03b2 : Type u_2\n\u03a9 : Type u_3\ninst\u271d\u2074 : Fintype \u03b2\nG : \u2115 \u2192 \u03a9 \u2192 SimpleGraph \u03b1\nH : SimpleGraph \u03b2\ninst\u271d\u00b3 : Fintype \u2191H.edgeSet\ninst\u271d\u00b2 : (n : \u2115) \u2192 (\u03c9 : \u03a9) \u2192 DecidableRel (G n \u03c9).Adj\ninst\u271d\u00b9 : MeasurableSpace \u03a9\n\u03bc : Measure \u03a9\ninst\u271d : IsProbabilityMeasure \u03bc\np : \u2115 \u2192 NNReal\nhp : (fun n => \u2191n ^ (-\u2191H.maxEdgeSubdensity\u207b\u00b9)) =o[atTop] fun n => \u2191(p n)\n\u22a2 Tendsto (fun n => \u03bc {\u03c9 | H.IsContained (G n \u03c9)}) atTop (nhds 1)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "ec0911bc19004c778c9b1f2f9a08675446ca7f04cb4928852cfeb2ce7723c839"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean",
        "start_line": 97,
        "start_column": 72,
        "end_line": 97,
        "end_column": 77
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b9 : DecidableEq \u03b1\ninst\u271d : Fintype \u03b1\n\ud835\udc9c \u212c : Finset (Finset \u03b1)\n\u22a2 2 ^ Fintype.card \u03b1 * card (@Finset.certificator (Finset \u03b1) booleanAlgebra \ud835\udc9c \u212c) \u2264 \ud835\udc9c.card * \u212c.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-10-21T08:29:20+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "969ebf676d633a993ac8d68d81eadec3fcadee27c718e2e85e5169bcb81c7ddb"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case insert.intro.intro.intro.intro.intro\n\u03b9 : Type u_1\nE : Type u_2\ninst\u271d\u00b2 : NormedAddCommGroup E\ninst\u271d\u00b9 : NormedSpace \u211d E\ns\u271d : Finset \u03b9\nf : \u03b9 \u2192 E\nr : \u211d\ninst\u271d : DecidableEq \u03b9\nhr : 0 < r\ni : \u03b9\ns : Finset \u03b9\nhi : i \u2209 s\nhf : \u2200 i_1 \u2208 insert i s, r \u2264 \u2016f i_1\u2016\nP : Finpartition s.powerset\nhP : P.parts.card = s.card.choose (s.card / 2)\nhs : \u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 s\nhPr : \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)\ng : E \u2192L[\u211d] \u211d\nhg : \u2016g\u2016 = 1\nhgf : g (f i) = \u2191\u2016f i\u2016\nt : Finset (Finset \u03b9) \u2192 Finset \u03b9\nht : \u2200 \ud835\udc9c \u2208 P.parts, t \ud835\udc9c \u2208 \ud835\udc9c \u2227 \u2200 x' \u2208 \ud835\udc9c, g (\u2211 i \u2208 x', f i) \u2264 g (\u2211 i \u2208 t \ud835\udc9c, f i)\n\u22a2 \u2203 P,\n    P.parts.card = (insert i s).card.choose ((insert i s).card / 2) \u2227\n      (\u2200 \ud835\udc9c \u2208 P.parts, \u2200 t \u2208 \ud835\udc9c, t \u2286 insert i s) \u2227\n        \u2200 \ud835\udc9c \u2208 P.parts, (\u2191\ud835\udc9c).Pairwise fun u v => r \u2264 dist (\u2211 i \u2208 u, f i) (\u2211 i \u2208 v, f i)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2023-09-10T12:10:37-07:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "4500202979049bb5fd3639c41e44a2cae928a4ae026025b28f7b2c11810e5b87"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 25,
        "start_column": 60,
        "end_line": 25,
        "end_column": 65
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b9 : Fintype n\ninst\u271d : DecidableEq n\nC\u2080 : \u211d\nhC\u2080 : \u2191(Fintype.card n) < C\u2080\nK : \u211d\n\u22a2 \u2203 \u03b4,\n    \u2200 (A : Finset (GL n \u2102)),\n      IsApproximateSubgroup K \u2191A \u2192 (\u2200 a \u2208 A, \u2016\u2191a\u2016 \u2264 C\u2080) \u2192 \u2203 \u03b3 \u2208 A ^ 2, \u03b4 * \u2191A.card \u2264 \u2191{x \u2208 A ^ 4 | Commute \u03b3 x}.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "278e2b75e714598dd7a1e35761c2fa540b256a2b76721a0690bdd635827801af"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 30,
        "start_column": 30,
        "end_line": 30,
        "end_column": 35
      },
      "debug_info": {
        "goal": "K C\u2080 : \u211d\n\u22a2 \u2203 C > 0,\n    \u2200 (A : Set (Matrix.SpecialLinearGroup (Fin 2) \u2102)),\n      IsApproximateSubgroup K A \u2192 \u2203 Z, \u2203 (_ : \u2200 x \u2208 Z, \u2200 y \u2208 Z, Commute x y), \u2203 F, F.card \u2264 C \u2227 A \u2286 \u2191F * \u2191Z",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "1ae325fc686decd8244353239286efae7060d11e1a787fd5f2dd536431e621a2"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/GrowthInGroups/Lecture4.lean",
        "start_line": 41,
        "start_column": 69,
        "end_line": 41,
        "end_column": 74
      },
      "debug_info": {
        "goal": "C : \u211d\nG : Type u_2\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nS : Finset G\nhSsymm : S\u207b\u00b9 = S\nhSgen : \u2191(Subgroup.closure \u2191S) = Set.univ\nd : \u2115\nhS : \u2200 (n : \u2115), \u2191(S ^ n).card \u2264 C * \u2191n ^ d\n\u22a2 IsVirtuallyNilpotent G",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2024-11-16T11:30:19+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "33853d42ff5c22695b4ae2a63aba907c8866ac0d13d30336c643da8ae50ba83c"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 24,
        "start_column": 6,
        "end_line": 24,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case refine_2\n\u03b9 : Type u_2\nG : \u03b9 \u2192 Type u_3\ninst\u271d\u00b9 : Fintype \u03b9\ninst\u271d : (i : \u03b9) \u2192 Group (G i)\nA : (i : \u03b9) \u2192 Set (G i)\nK : \u03b9 \u2192 \u211d\nhA : \u2200 (i : \u03b9), IsApproximateSubgroup (K i) (A i)\nF : (i : \u03b9) \u2192 Finset (G i)\nhF : \u2200 (i : \u03b9), \u2191(F i).card \u2264 K i\nhFS : \u2200 (i : \u03b9), A i ^ 2 \u2286 \u2191(F i) \u2022 A i\n\u22a2 Set.univ.pi A ^ 2 \u2286 \u2191(Fintype.piFinset F) \u2022 Set.univ.pi A",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "fd9f3ea475f380a8ca5fc33c7832c9655dd2fa83971b90c81aeeaaa4410174e9"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 42,
        "start_column": 64,
        "end_line": 42,
        "end_column": 69
      },
      "debug_info": {
        "goal": "case h\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\na\u271d : G\n\u22a2 a\u271d \u2208 A\u207b\u00b9 * A \u2192\n    (\u2191A.card / (2 * K) \u2264 \u2191((MulOpposite.op a\u271d)\u207b\u00b9 \u2022 A \u2229 A).card \u2194 \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op a\u271d \u2022 A \u2229 A).card)",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "ed5374a72538be657bdb30f9aee9c12c1c6b0e7ae358e55ae5e8ea9831d63896"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 59,
        "start_column": 4,
        "end_line": 59,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(S ^ 2).card \u2264 16 * K ^ 12 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "6403ae5cb8f7824ca49c665eb38faea9a0f7b059f3983f6373010bf4a9e882e8"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 60,
        "start_column": 4,
        "end_line": 60,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2203 a \u2208 A, \u2191A.card / (2 * K) \u2264 \u2191(A \u2229 MulOpposite.op a \u2022 S ^ 2).card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-03-05T14:51:44+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "d1b421071a637b90046f7acbb4c2c790a3c5fff888f6c2f8ec176b8c6f29d196"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 45,
        "start_column": 22,
        "end_line": 45,
        "end_column": 27
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\n\u22a2 \u2191(A\u207b\u00b9 * A).card \u2264 K ^ 2 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "2f7f57ff99126e525da5c1e5a07d092accb3f949a1798b89f48c26c07f0dec00"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 46,
        "start_column": 69,
        "end_line": 46,
        "end_column": 74
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\n\u22a2 \u2203 F \u2286 A, \u2191F.card \u2264 2 * K \u2227 A \u2286 S * F",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "30d80db1a716dd37c945c885dcdfeff73d4cf547579ee4e16a07fd2e790c4a82"
    },
    {
      "repo": {
        "remote": "https://github.com/YaelDillies/LeanCamCombi",
        "branch": "master",
        "commit": "b6312bee17293272af6bdcdb47b3ffe98fca46a4",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean",
        "start_line": 54,
        "start_column": 29,
        "end_line": 54,
        "end_column": 34
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u00b9 : Group G\nK : \u211d\ninst\u271d : DecidableEq G\nA : Finset G\nhA\u2080 : A.Nonempty\nhA : \u2191(A ^ 2).card \u2264 K * \u2191A.card\nhK : 1 \u2264 K\nS : Finset G := {g \u2208 A\u207b\u00b9 * A | \u2191A.card / (2 * K) \u2264 \u2191(MulOpposite.op g \u2022 A \u2229 A).card}\nhS\u2081 : 1 \u2208 S\nhS\u2080 : S.Nonempty\nhSA : S \u2286 A\u207b\u00b9 * A\nhSsymm : S\u207b\u00b9 = S\nhScard : \u2191S.card \u2264 K ^ 2 * \u2191A.card\nF : Finset G\nhFA : F \u2286 A\nhFcard : \u2191F.card \u2264 2 * K\nhASF : A \u2286 S * F\n\u22a2 \u2191(A * S ^ 3 * A\u207b\u00b9).card \u2264 8 * K ^ 11 * \u2191A.card",
        "url": "https://github.com/YaelDillies/LeanCamCombi/blob/b6312bee17293272af6bdcdb47b3ffe98fca46a4/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
      },
      "metadata": {
        "blame_email_hash": "97e8591fe714",
        "blame_date": "2025-01-24T23:15:34+00:00",
        "inclusion_date": "2025-05-03T01:06:01.858311+00:00"
      },
      "id": "21d5316672e78c734a2c6441eb233604ee9c4bed7322e55e0172056c4573353a"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "7682e673cea51b17d6e9e759a2a21b2acf3a290a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 80,
        "start_column": 4,
        "end_line": 80,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case h.mp.intro\nd : \u2115\nx : \u2191(\ud835\udcdb d)\n\u039b_proper : IsProper x\n\u039b_ortho : IsOrthochronous x\n\u22a2 x \u2208 connectedComponent 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/7682e673cea51b17d6e9e759a2a21b2acf3a290a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-04T19:41:34+10:00",
        "inclusion_date": "2025-05-04T23:30:06.471767+00:00"
      },
      "id": "24c4109385c5ed54c959387014aeca592beaae77b81d7a8a239ae47095d0cd66"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "da4ba9acf1845fe264b2bce14923f8e09fbabf28",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Smt/Reconstruct/BitVec/Bitblast.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "w : Nat\nx y : BitVec w\n\u22a2 (x = y) = (x.beq y = true)",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/da4ba9acf1845fe264b2bce14923f8e09fbabf28/Smt/Reconstruct/BitVec/Bitblast.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2024-05-08T17:36:04-07:00",
        "inclusion_date": "2025-05-10T00:11:57.827209+00:00"
      },
      "id": "f6c1d130ee14f50a4f87866070f1004701fda60e4c7c87acf7ac122959e2e079"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 626,
        "start_column": 2,
        "end_line": 626,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Rat\n\u22a2 0 \u2264 a \u2192 0 \u2264 b \u2192 0 \u2264 a * b",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L626"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "a9b895e369e7d35f6fc14cac0d071cf8fec58988fd8e694faf7ebffe81035ae4"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 629,
        "start_column": 2,
        "end_line": 629,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Rat\nhb : 0 \u2264 b\n\u22a2 a.abs = b \u2194 a = b \u2228 a = -b",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L629"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "53d7e28ad1b040684d8c870889a949396e63ce04cc8bca6fa9340fe20f17e60d"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 632,
        "start_column": 2,
        "end_line": 632,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : Rat\n\u22a2 0 \u2264 x.abs",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L632"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "b38f5b0dafcde2cac1b1d9d70f0102f7aac726d9b58a4b1855b5051060d9298c"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 635,
        "start_column": 2,
        "end_line": 635,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : Rat\nh : a \u2264 0\n\u22a2 a.abs = -a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L635"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "7a709f0c9989019b9a5de1dda3304164c454fa35d3661d334da648f0a996c47e"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "98b12d984f8c21a99abfb8b69f12fe243beaf7c6",
        "lean_version": "v4.16.0"
      },
      "location": {
        "path": "Smt/Reconstruct/Rat/Core.lean",
        "start_line": 638,
        "start_column": 2,
        "end_line": 638,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : Rat\nh : 0 \u2264 a\n\u22a2 a.abs = a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/98b12d984f8c21a99abfb8b69f12fe243beaf7c6/Smt/Reconstruct/Rat/Core.lean#L638"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2025-05-03T21:48:26-07:00",
        "inclusion_date": "2025-05-05T00:05:16.483689+00:00"
      },
      "id": "91357f31ec4ecdaef28d166db2e123b2398377f8b29fb39f3341ab6f8cb72287"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/Shift.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec 2\n\u22a2 x ++ y = zeroExtend 4 x <<< 2#2 ||| zeroExtend 4 y",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/Shift.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-08-05T17:11:15+02:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "10966eb3e5e3ab574d4d8098887b6d4905ac78eac95d16e1bd2d3e94afbafbfb"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/Shift.lean",
        "start_line": 13,
        "start_column": 2,
        "end_line": 13,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec 3\n\u22a2 x ++ y = zeroExtend 6 x <<< 3#2 ||| zeroExtend 6 y",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/Shift.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-08-05T17:11:15+02:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "af1c238a9c4a4867f4aac73b8df81f7800516e0e37fcb9d0d31c93d503972fff"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/XorComm.lean",
        "start_line": 5,
        "start_column": 2,
        "end_line": 5,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec 2\n\u22a2 x ^^^ y = y ^^^ x",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/XorComm.lean#L5"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "0fdae338de0f47f0a2a025dfc4c918ea4db52c7681734343316e257737edebc0"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/BitVec/XorComm.lean",
        "start_line": 9,
        "start_column": 2,
        "end_line": 9,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : BitVec (4 + 4)\n\u22a2 x ^^^ y = y ^^^ x",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/BitVec/XorComm.lean#L9"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "d3457d2e5b75a9849b2e40aa258c7a298792a74d0797661c455499ab22a2885a"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "5d35ecc273cb1f8344b23f6d23dd69f33601ed31",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/String/Contains.lean",
        "start_line": 5,
        "start_column": 2,
        "end_line": 5,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \"a\".contains 'a' = true",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/5d35ecc273cb1f8344b23f6d23dd69f33601ed31/Test/String/Contains.lean#L5"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2022-11-12T16:45:23-08:00",
        "inclusion_date": "2025-05-12T00:38:16.660582+00:00"
      },
      "id": "80d094f4e3c509afd0a796f85ff118e070893c7da20af85fedc39aa7fedc301d"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "da4ba9acf1845fe264b2bce14923f8e09fbabf28",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "Test/Int/DefineSort.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : MyInt\n\u22a2 a.add b = b.add a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/da4ba9acf1845fe264b2bce14923f8e09fbabf28/Test/Int/DefineSort.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-10T00:11:57.827209+00:00"
      },
      "id": "753ff24aee0686daae4c97acb6cfea1d7808833f7008cc688952fc7c1e7fbc13"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 7,
        "start_column": 2,
        "end_line": 7,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\n\u22a2 curryAdd a b = curryAdd b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L7"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "c3816f311a06b056280607cf44d7e694128a49d46908a9142cf27a506696e93b"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 13,
        "start_column": 2,
        "end_line": 13,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\n\u22a2 partCurryAdd a b = partCurryAdd b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "428f82440944a46de6f9d4428e03dc90a566488748b2621d6c9b9c1b4eb67a6f"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 20,
        "start_column": 2,
        "end_line": 20,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\npartCurryAdd' : Int \u2192 Int \u2192 Int := fun a => HAdd.hAdd a\n\u22a2 partCurryAdd' a b = partCurryAdd' b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "2f0e20ce24530f5768780759413afb347c84455200e92d0223d6b03297b7ad0a"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/Binders.lean",
        "start_line": 27,
        "start_column": 2,
        "end_line": 27,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : Int\n\u22a2 mismatchNamesAdd a b = mismatchNamesAdd b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/Binders.lean#L27"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "ac9133a1fe234f6c3ac92487eb1756784d8c4fc5bb11aa42e4000d948e148a4c"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Wiener.lean",
        "start_line": 2281,
        "start_column": 61,
        "end_line": 2281,
        "end_column": 66
      },
      "debug_info": {
        "goal": "A x : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (fourierIntegral \u03c8.toFun y).re \u2227 (fourierIntegral \u03c8.toFun y).im = 0\nhx : 1 \u2264 x\n\u22a2 \u2211' (n : \u2115), \u2191(f n) / \u2191n * fourierIntegral \u03c8.toFun (1 / (2 * Real.pi) * Real.log (\u2191n / x)) -\n      \u2191A * \u222b (u : \u211d) in Ici (-Real.log x), fourierIntegral \u03c8.toFun (u / (2 * Real.pi)) =\n    \u222b (t : \u211d), G (1 + \u2191t * I) * \u03c8.toFun t * \u2191x ^ (\u2191t * I)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/Wiener.lean#L2281"
      },
      "metadata": {
        "blame_email_hash": "d7f0e4a42bbb",
        "blame_date": "2024-04-04T12:17:01-07:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "aa9786e41982bd041e5eb95c9985be0060a17bcf17c461255d6d1460a106d8bb"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Wiener.lean",
        "start_line": 2303,
        "start_column": 90,
        "end_line": 2303,
        "end_column": 95
      },
      "debug_info": {
        "goal": "A : \u211d\nG : \u2102 \u2192 \u2102\nf : \u2115 \u2192 \u211d\nhpos : 0 \u2264 f\nhG : ContinuousOn G {s | 1 \u2264 s.re}\nhG' : EqOn G (fun s => LSeries (fun n => \u2191(f n)) s - \u2191A / (s - 1)) {s | 1 < s.re}\nhf : \u2200 (\u03c3' : \u211d), 1 < \u03c3' \u2192 Summable (nterm (fun n => \u2191(f n)) \u03c3')\n\u03c8 : CS 2 \u2102\nh\u03c8pos : \u2200 (y : \u211d), 0 \u2264 (fourierIntegral \u03c8.toFun y).re \u2227 (fourierIntegral \u03c8.toFun y).im = 0\n\u22a2 \u2203 B,\n    \u2200 (x : \u211d), 0 < x \u2192 \u2016\u2211' (n : \u2115), \u2191(f n) / \u2191n * fourierIntegral \u03c8.toFun (1 / (2 * Real.pi) * Real.log (\u2191n / x))\u2016 \u2264 B",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/Wiener.lean#L2303"
      },
      "metadata": {
        "blame_email_hash": "4d01d7c10d46",
        "blame_date": "2024-04-16T02:15:35+02:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "1ac82595f744a76fd670a9e7ef438f9a0cac19d425afa60bef87e30d74da4281"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 328,
        "start_column": 2,
        "end_line": 328,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\ndiffSmoothingF : ContDiff \u211d 1 SmoothingF\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\nX\u271d : \u211d\nC : \u211d := sorry\nCpos : 0 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
      },
      "id": "547cb82f89dc9254fd2b1a7d6f0897441e7a47917bd52aa4a2089f406b8210d5"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "main",
        "commit": "426b540a86d5b4a103cec5528e68168ea172da66",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 399,
        "start_column": 2,
        "end_line": 399,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191Real.pi * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) 2 (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u21912 + \u2191t * I)) =\n    MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X +\n      1 / (2 * \u2191Real.pi * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 2, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (2 + \u2191t * I))",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/426b540a86d5b4a103cec5528e68168ea172da66/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-10T12:59:29-05:00",
        "inclusion_date": "2025-05-05T23:13:10.176761+00:00"
      },
      "id": "2bcc3e23d1c11b18982ebf327c089aecd404207bd9d06e89303db303882ff3d1"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 579,
        "start_column": 2,
        "end_line": 579,
        "end_column": 7
      },
      "debug_info": {
        "goal": "c : \u211d := sorry\ncpos : 0 < c\nC : \u211d := sorry\nX\u2080 : \u211d := sorry\nX : \u211d\nX_ge_X\u2080 : X \u2265 X\u2080\n\u22a2 \u2016(ChebyshevPsi - id) X\u2016 \u2264 C * \u2016X * Real.exp (-c * Real.log X ^ (1 / 10))\u2016",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/MediumPNT.lean#L579"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2024-03-11T23:23:22-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "fa45b339aa0e7dcce091b6372bd54c246ca1778dd0551b28dc42d1fff013fa51"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 2575,
        "start_column": 81,
        "end_line": 2575,
        "end_column": 86
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, moebius n) =o[atTop] fun x => x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/Consequences.lean#L2575"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-02-06T17:41:08+01:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "6ba709359dbcf67a047700f6cb5305713bf9fffb112e3b67661f5b55a0a39f93"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 2611,
        "start_column": 2,
        "end_line": 2611,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, (-1) ^ cardFactors n) =o[atTop] fun x => x",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/Consequences.lean#L2611"
      },
      "metadata": {
        "blame_email_hash": "11451cd2f124",
        "blame_date": "2024-02-19T02:44:41-08:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "839ece4b6f43eef5cc2b6909605ee8ea3ff227bdfd58f7cbf910cf595734ddaa"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/Consequences.lean",
        "start_line": 2635,
        "start_column": 98,
        "end_line": 2635,
        "end_column": 103
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => \u2211 n \u2208 range \u230ax\u230b\u208a, \u2191(moebius n) / \u2191n) =o[atTop] fun x => 1",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/Consequences.lean#L2635"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-02-06T17:41:08+01:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "ad3d303bd5bc1cda1f0185bfbfce6d80f21788b3658c2a2672d949f216140b5f"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 80,
        "start_column": 17,
        "end_line": 80,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 (fun \u039b => (detRep \u039b, orthchroRep \u039b)) 1 = 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "2e2c7c3a1307d45d1001b0ebdb30cb17b1d3baec54560d83082145693fdf443e"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 81,
        "start_column": 17,
        "end_line": 81,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 \u2200 (x y : \u2191(\ud835\udcdb d)),\n    { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun (x * y) =\n      { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun x *\n        { toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef }.toFun y",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L81"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "7588f7276d887c00324384518933fec8207272f9c7a208947a556e5a958539d6"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 82,
        "start_column": 25,
        "end_line": 82,
        "end_column": 30
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Continuous (\u2191{ toFun := fun \u039b => (detRep \u039b, orthchroRep \u039b), map_one' := \u22ef, map_mul' := \u22ef }).toFun",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "eacaeefde0ba52f9a86c1f4e6eb3c99784af7c56f4374c44456593c1ebca59b3"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 84,
        "start_column": 71,
        "end_line": 84,
        "end_column": 76
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Continuous \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L84"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "ba38f1089e4eccedd5cb3b7b5edaf43689aee7bb6429cc4bf5cdc3fcffca50b1"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 85,
        "start_column": 66,
        "end_line": 85,
        "end_column": 71
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 IsOpenMap \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L85"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "63b3b337abefd97f65282d265245e436fb0187fe1234952457de0f349a784462"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 86,
        "start_column": 80,
        "end_line": 86,
        "end_column": 85
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Function.Injective \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "84f747345ff9a2c15db777b73471ed2f6d11d37688aa65264676fe17e7844973"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 87,
        "start_column": 75,
        "end_line": 87,
        "end_column": 80
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 lorentzMap.ker = restricted d",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "0e61819fc7bf07b91c0ff07e6ae7ff8187e051d6f5677b92b59b32dc0d86d0b1"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 88,
        "start_column": 91,
        "end_line": 88,
        "end_column": 96
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 IsConnected {(1, 1)}",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L88"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "649a47c8c592041dd67f4ee19107645c8b47c7b1034062e9657945b607cb7d73"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 89,
        "start_column": 95,
        "end_line": 89,
        "end_column": 100
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 {(1, 1)} \u2286 Set.range \u21d1lorentzMap",
        "url": "https://github.com/HEPLean/PhysLean/blob/188e11d9fb964b2bbd4dce99316d5fc0cfe0c07a/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L89"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-07T00:12:19.853100+00:00"
      },
      "id": "afcf669d7652eb3f0a4e213a6395fabebd05ae515cb1d085bf34b61c6c1fa9ed"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 112,
        "start_column": 6,
        "end_line": 112,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case inr.intro\nn : \u2115+\ns : Substitution \u2115\n\u22a2 Hilbert.BD n \u22a2! Axioms.BoundDepth (n + 1)\u27e6s\u27e7",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "32ab9cae3b00c6deb4b90041ee38b6d1052a39eee6b354ced2a5310e0169cc16"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 141,
        "start_column": 8,
        "end_line": 141,
        "end_column": 13
      },
      "debug_info": {
        "goal": "case h.left\nn : \u2115+\nF : Frame := Frame.mk (Fin (\u2191n + 1)) fun x y => x \u2264 y\nl : List F.World\nhl\u2081 : l.length = \u2191n + 1 + 1\nhl\u2082 : List.Chain' F.Rel l\n\u22a2 \u2203 i j, \u00aci = j \u2227 l[\u2191i] = l[\u2191j]",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "06f031db647e6454d5ad21f8ff1c9c191763ccf2a652124af63262963881d5d8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 148,
        "start_column": 10,
        "end_line": 148,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case h.refine_2\nn : \u2115+\nF : Frame := Frame.mk (Fin (\u2191n + 1)) fun x y => x \u2264 y\n\u22a2 List.Chain' F.Rel (List.finRange (\u2191n + 1))",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "60c2b21e5c770b0ea99a15e42f32f56e248d88734698bd3bed7e7b28d827ba0d"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 151,
        "start_column": 10,
        "end_line": 151,
        "end_column": 15
      },
      "debug_info": {
        "goal": "case h.refine_3\nn : \u2115+\nF : Frame := Frame.mk (Fin (\u2191n + 1)) fun x y => x \u2264 y\ni j : Fin (List.finRange (\u2191n + 1)).length\n\u22a2 (List.finRange (\u2191n + 1))[\u2191i] = (List.finRange (\u2191n + 1))[\u2191j] \u2192 i = j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "3a936b2cfa4336e003fd3abee05891ee74647fe88a5f9dc03ea96c966a53a355"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Logic/Sublogic.lean",
        "start_line": 154,
        "start_column": 2,
        "end_line": 154,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n m : \u2115+\nhnm : n < m\n\u22a2 Logic.BD m \u2282 Logic.BD n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Logic/Sublogic.lean#L154"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "962afbe4620783b46916014fac5fabbf95072cefa58066a1f204db88fd8288f9"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "ac2e14a982a125f06c7905a55dabf360bf7691ee",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 111,
        "start_column": 96,
        "end_line": 111,
        "end_column": 101
      },
      "debug_info": {
        "goal": "F : Frame\nn : \u2115+\n\u22a2 F \u22a7 Axioms.BoundDepth n \u2192 F.IsDepthLt \u2191n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/ac2e14a982a125f06c7905a55dabf360bf7691ee/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L111"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-06T23:18:05.763718+00:00"
      },
      "id": "1c66a8b4b34c4cb1bef31d893890ec68b9ea6b7bd30c23b786dd8c18989ba48e"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 239,
        "start_column": 6,
        "end_line": 239,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case h.right\nS : Type u_1\ninst\u271d\u00b2 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b9 : Consistent \ud835\udce2\ninst\u271d : Entailment.Int \ud835\udce2\nl : List (canonicalFrame \ud835\udce2).World\nhl\u2082 : l.head? = some (canonicalFrame \ud835\udce2).default\nhl\u2083 : List.Chain' (fun x1 x2 => x1 \u227a x2) l\nh : \ud835\udce2 \u22a2! Axioms.BoundDepth' 0\nhl\u2081 : l.length = 2\ni\u2080 : Fin l.length := \u27e80, \u22ef\u27e9\ni\u2081 : Fin l.length := \u27e81, \u22ef\u27e9\nx\u2080 x\u2081 : (canonicalFrame \ud835\udce2).World\n\u22a2 x\u2080 = x\u2081",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L239"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "d6679858d78e498f6fd0c05f190da089763d996859a3368f1e6ebfb1a952cbe3"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 254,
        "start_column": 4,
        "end_line": 254,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case intro.intro.succ\nS : Type u_1\ninst\u271d\u00b2 : Entailment (Formula \u2115) S\n\ud835\udce2 : S\ninst\u271d\u00b9 : Consistent \ud835\udce2\ninst\u271d : Entailment.Int \ud835\udce2\nl : List (canonicalFrame \ud835\udce2).World\nhl\u2082 : l.head? = some (canonicalFrame \ud835\udce2).default\nhl\u2083 : List.Chain' (fun x1 x2 => x1 \u227a x2) l\nn : \u2115\nih : \ud835\udce2 \u22a2! Axioms.BoundDepth' n \u2192 l.length = n + 2 \u2192 \u2203 i j, i \u2260 j \u2227 l.get i = l.get j\nh : \ud835\udce2 \u22a2! Axioms.BoundDepth' (n + 1)\nhl\u2081 : l.length = n + 1 + 2\n\u22a2 \u2203 i j, i \u2260 j \u2227 l.get i = l.get j",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L254"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T11:02:54+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "78b4eb6f22e818cbed8cc07f70961934dbb6ea9405cac71e812c798ab70f80dd"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/Hilbert/BD.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115+\n\u22a2 (canonicalFrame (Hilbert.BD n)).IsDepthLt \u2191n",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/Hilbert/BD.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-06T09:26:16+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "11c995f3cfb059b8e234f4a2414cb0ae450f65b8aa4f1b1f6d4c986c8b155454"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 91,
        "start_column": 2,
        "end_line": 91,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d : AddMonoid \ud835\udcd0\nA\u2080 A\u2081 A\u2080' A\u2081' : @QuasiENorm \ud835\udcd0 inst\u271d\nh\u2080 : A\u2080 \u2264 A\u2080'\nh\u2081 : A\u2081 \u2264 A\u2081'\n\u22a2 A\u2080 \u2293 A\u2081 \u2264 A\u2080' \u2293 A\u2081'",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:56:27+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "6c1197fd876a15c986458dc6b63012b3da9427d76f18824f4bafb15be37d592c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 109,
        "start_column": 4,
        "end_line": 109,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d\u00b9 : AddMonoid \ud835\udcd0\n\ud835\udcd1 : Type u_2\ninst\u271d : AddMonoid \ud835\udcd1\nA A\u2080\u271d A\u2081\u271d A' A\u2080' A\u2081' : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\nt\u271d s : ENNReal\nx\u271d y\u271d z : \ud835\udcd0\n\u03b8 : \u211d\nq : ENNReal\nB B\u2080 B\u2081 B' B\u2080' B\u2081' : @QuasiENorm \ud835\udcd1 inst\u271d\nC D : ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\nt : ENNReal\nx y : \ud835\udcd0\n\u22a2 \u2016x + y\u2016\u2091 \u2264 (@QuasiENorm.C \ud835\udcd0 inst\u271d\u00b9 A\u2080 + @QuasiENorm.C \ud835\udcd0 inst\u271d\u00b9 A\u2081) * (\u2016x\u2016\u2091 + \u2016y\u2016\u2091)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T17:00:28+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "7586490f32566e8773b8ae427be22ee92a4c820ca20bf2fd52e3d7130536905e"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 113,
        "start_column": 2,
        "end_line": 113,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d : AddMonoid \ud835\udcd0\nA\u2080 A\u2081 A\u2080' A\u2081' : @QuasiENorm \ud835\udcd0 inst\u271d\nt : ENNReal\nh\u2080 : A\u2080 \u2264 A\u2080'\nh\u2081 : A\u2081 \u2264 A\u2081'\n\u22a2 @QuasiENorm.skewedAdd \ud835\udcd0 inst\u271d A\u2080 A\u2081 t \u2264 @QuasiENorm.skewedAdd \ud835\udcd0 inst\u271d A\u2080' A\u2081' t",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L113"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:56:27+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "a84f8e17f6e1374d9779fdec751abc26249497a1ca9b2343d28f1cd43ba7369d"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 131,
        "start_column": 2,
        "end_line": 131,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d : AddMonoid \ud835\udcd0\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\nx : \ud835\udcd0\nhx : \u2016x\u2016\u2091 < \u22a4\n\u22a2 Monotone fun x_1 => @QuasiENorm.addNorm \ud835\udcd0 inst\u271d A\u2080 A\u2081 x_1 x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L131"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:04:52+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "62473aae005b4070ec8e9fd35cc0d3d60a1272418302d804aa578a1cfac5710b"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d : AddMonoid \ud835\udcd0\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\nx : \ud835\udcd0\nhx : \u2016x\u2016\u2091 < \u22a4\n\u22a2 ConcaveOn ENNReal univ fun x_1 => @QuasiENorm.addNorm \ud835\udcd0 inst\u271d A\u2080 A\u2081 x_1 x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:04:52+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "073775ac83c5da6a1b0acd54cbe6bc81531c51117ac3ec484b18ea6a3309faa8"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 143,
        "start_column": 2,
        "end_line": 143,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d : AddMonoid \ud835\udcd0\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\nt s : ENNReal\nx : \ud835\udcd0\nhx : \u2016x\u2016\u2091 < \u22a4\n\u22a2 @QuasiENorm.addNorm \ud835\udcd0 inst\u271d A\u2080 A\u2081 t x \u2264 max 1 (t / s) * @QuasiENorm.addNorm \ud835\udcd0 inst\u271d A\u2080 A\u2081 s x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L143"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:04:52+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "ad02500d3150a9f5efed406b1f7f19fc724fcf28ef62a6fcda162b406fafcd10"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 162,
        "start_column": 10,
        "end_line": 162,
        "end_column": 15
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d\u00b9 : AddMonoid \ud835\udcd0\n\ud835\udcd1 : Type u_2\ninst\u271d : AddMonoid \ud835\udcd1\nA A\u2080\u271d A\u2081\u271d A' A\u2080' A\u2081' : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\nt s : ENNReal\nx y z : \ud835\udcd0\n\u03b8\u271d : \u211d\nq\u271d : ENNReal\nB B\u2080 B\u2081 B' B\u2080' B\u2081' : @QuasiENorm \ud835\udcd1 inst\u271d\nC D : ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\n\u03b8 : \u211d\nq : ENNReal\n\u22a2 sorry < \u22a4",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:56:27+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "6b6079ec04573b4473c9bab5a68a3c7b42edf6d3298a0a4df145a05725e7f00c"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 163,
        "start_column": 16,
        "end_line": 163,
        "end_column": 21
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d\u00b9 : AddMonoid \ud835\udcd0\n\ud835\udcd1 : Type u_2\ninst\u271d : AddMonoid \ud835\udcd1\nA A\u2080\u271d A\u2081\u271d A' A\u2080' A\u2081' : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\nt s : ENNReal\nx y z : \ud835\udcd0\n\u03b8\u271d : \u211d\nq\u271d : ENNReal\nB B\u2080 B\u2081 B' B\u2080' B\u2081' : @QuasiENorm \ud835\udcd1 inst\u271d\nC D : ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\n\u03b8 : \u211d\nq : ENNReal\n\u22a2 \u20160\u2016\u2091 = 0",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L163"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:04:52+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "d4c8e087adefd657fb88b80cd07a770a34d4e646e0f1087532602fae3fbcd0d5"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 164,
        "start_column": 22,
        "end_line": 164,
        "end_column": 27
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d\u00b9 : AddMonoid \ud835\udcd0\n\ud835\udcd1 : Type u_2\ninst\u271d : AddMonoid \ud835\udcd1\nA A\u2080\u271d A\u2081\u271d A' A\u2080' A\u2081' : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\nt s : ENNReal\nx y z : \ud835\udcd0\n\u03b8\u271d : \u211d\nq\u271d : ENNReal\nB B\u2080 B\u2081 B' B\u2080' B\u2081' : @QuasiENorm \ud835\udcd1 inst\u271d\nC D : ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal \u2192 ENNReal\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\u00b9\n\u03b8 : \u211d\nq : ENNReal\n\u22a2 \u2200 (x y : \ud835\udcd0), \u2016x + y\u2016\u2091 \u2264 sorry * (\u2016x\u2016\u2091 + \u2016y\u2016\u2091)",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:56:27+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "807f3fc9f5a8449d4ad074ca3c10ee1288f7a4cef7487ac6e7e0d05da3fbb0e4"
    },
    {
      "repo": {
        "remote": "https://github.com/fpvandoorn/carleson",
        "branch": "abstract_interpolation",
        "commit": "2baedc53bad19fc5a36a4e4cd5d001e4532332bb",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Carleson/ToMathlib/RealInterpolation/Abstract.lean",
        "start_line": 242,
        "start_column": 2,
        "end_line": 242,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\ud835\udcd0 : Type u_1\ninst\u271d : AddMonoid \ud835\udcd0\nA\u2080 A\u2081 : @QuasiENorm \ud835\udcd0 inst\u271d\nt : ENNReal\nx : \ud835\udcd0\n\u03b8 : \u211d\nq : ENNReal\nhx : \u2016x\u2016\u2091 < \u22a4\n\u22a2 @QuasiENorm.addNorm \ud835\udcd0 inst\u271d A\u2080 A\u2081 t x \u2264 QuasiENorm.\u03b3KMethod' \u03b8 q * t ^ \u03b8 * @QuasiENorm.KNorm \ud835\udcd0 inst\u271d A\u2080 A\u2081 \u03b8 q x",
        "url": "https://github.com/fpvandoorn/carleson/blob/2baedc53bad19fc5a36a4e4cd5d001e4532332bb/Carleson/ToMathlib/RealInterpolation/Abstract.lean#L242"
      },
      "metadata": {
        "blame_email_hash": "0a77110e33df",
        "blame_date": "2025-05-06T18:04:52+02:00",
        "inclusion_date": "2025-05-06T23:54:27.836337+00:00"
      },
      "id": "a0da67f2a62499d6e2eaf13295d1b879b978717d0825dca5f48f0b286045122b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 18,
        "start_column": 15,
        "end_line": 18,
        "end_column": 20
      },
      "debug_info": {
        "goal": "b h v : \u211d\nh\u2080 : 0 < b \u2227 0 < h \u2227 0 < v\nh\u2081 : v = 1 / 3 * (b * h)\nh\u2082 : b = 30\nh\u2083 : h = 13 / 2\n\u22a2 v = 65",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "01aeddbe796dea8b1b951264313779e722786d5418d3414b2ef6ca99eea078d2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 22,
        "start_column": 33,
        "end_line": 22,
        "end_column": 38
      },
      "debug_info": {
        "goal": "x y : \u2124\n\u22a2 4 * x ^ 3 - 7 * y ^ 3 \u2260 2003",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1f539f08c5f607fdb8a49119bec04bc270d293cbd7d390c2001f51b0db0a307e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 26,
        "start_column": 87,
        "end_line": 26,
        "end_column": 92
      },
      "debug_info": {
        "goal": "x y z w : \u2115\nht : 1 < x \u2227 1 < y \u2227 1 < z\nhw : 0 \u2264 w\nh0 : Real.log \u2191w / Real.log \u2191x = 24\nh1 : Real.log \u2191w / Real.log \u2191y = 40\nh2 : Real.log \u2191w / Real.log (\u2191x * \u2191y * \u2191z) = 12\n\u22a2 Real.log \u2191w / Real.log \u2191z = 60",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a027be7e81853229c32b3a46f8185411d5a574d0e2c934336011e9fae08d46f2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 29,
        "start_column": 122,
        "end_line": 29,
        "end_column": 127
      },
      "debug_info": {
        "goal": "\u22a2 {x \u2208 Finset.range 10000 | \u00acEven x}.prod id = factorial 10000 / (2 ^ 5000 * factorial 5000)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4bf660b556825e0b6ba21af459d6296fe19ed5f65feab0b8400faec0945e7ea3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 36,
        "start_column": 5,
        "end_line": 36,
        "end_column": 10
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2081 : a * b = 180\nh\u2082 : 2 * (a + b) = 54\n\u22a2 a ^ 2 + b ^ 2 = 369",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3c5c215cbe1968cd4e68724a708907a14a9ddf5fe440ea07e45c948c12ed89d7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 39,
        "start_column": 54,
        "end_line": 39,
        "end_column": 59
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 x \u2208 Finset.range 10, (x + 1) ^ 2) % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4dce78662a54ac1a744d0f5e1c548b472b0a85978d65dea5cf4404e0db4f7b6e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 50,
        "start_column": 31,
        "end_line": 50,
        "end_column": 36
      },
      "debug_info": {
        "goal": "m n : \u211d\nk : \u2115\na : \u2115 \u2192 \u211d\ny : \u211d \u2192 \u211d\nh\u2080 : 0 < k\nh\u2081 : \u2200 (x : \u211d), y x = \u2211 i \u2208 Finset.range k, cos (a i + x) / 2 ^ i\nh\u2082 : y m = 0\nh\u2083 : y n = 0\n\u22a2 \u2203 t, m - n = \u2191t * Real.pi",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4f7d9183bdae4c94f35f4271609cb9cc3e92a2901779d061a44c1eb73dc3ebc6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 56,
        "start_column": 22,
        "end_line": 56,
        "end_column": 27
      },
      "debug_info": {
        "goal": "s t : \u211d\nh\u2080 : s = 9 - 2 * t\nh\u2081 : t = 3 * s + 1\n\u22a2 s = 1 \u2227 t = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L56"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c95deab0c4c9d50b50d62d2696fe8f5b354a6287d978c95ba2f9b78a703834cf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 63,
        "start_column": 25,
        "end_line": 63,
        "end_column": 30
      },
      "debug_info": {
        "goal": "\u03c3 : \u211d \u2243 \u211d\nh\u2080 : \u03c3.invFun 2 = 10\nh\u2081 : \u03c3.invFun 10 = 1\nh\u2082 : \u03c3.invFun 1 = 2\n\u22a2 \u03c3.toFun (\u03c3.toFun 10) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "eb6bc5786c5c4f42bbcd149e2236741fb1fd757ed6c1ad78a6470440387ac207"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 69,
        "start_column": 14,
        "end_line": 69,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n \u2264 9\nh\u2081 : 18 \u2223 374 * 10 + n\n\u22a2 n = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "89a70611571ec33b7d7fb7014686c68d18e0cd8a617976527e48a6f571354d6d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 77,
        "start_column": 70,
        "end_line": 77,
        "end_column": 75
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : c < a + b\nh\u2082 : b < a + c\nh\u2083 : a < b + c\n\u22a2 0 \u2264 a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8c673d2a35733f3ab54574bbafabfcc4a0e71319efe290f397681d49d214b9eb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 80,
        "start_column": 46,
        "end_line": 80,
        "end_column": 51
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.range 101, k) % 6 = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3c73d3cd14e8af60581214fcb33bdfbba3b09e96ecff5846684e29e6b8f2fc68"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 87,
        "start_column": 23,
        "end_line": 87,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : x \u2260 0\nh\u2081 : 2 * x = 5 * y\nh\u2082 : 7 * y = 10 * z\n\u22a2 z / x = 7 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f7467b46c78cab11b89d58052a8cf0be5ba40f4ced5dacb292936c578614e953"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 92,
        "start_column": 18,
        "end_line": 92,
        "end_column": 23
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 2 + 1 / (1 + 1 / (2 + 2 / (3 + x))) = 144 / 53\n\u22a2 x = 3 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L92"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "14d3a69dfd47ad6c5458e3b2a9226ec672f07de55ff2a98982ca72b504e1392d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 95,
        "start_column": 47,
        "end_line": 95,
        "end_column": 52
      },
      "debug_info": {
        "goal": "\u22a2 1 * 3 * 5 * 7 * 9 * 11 * 13 % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5949249aadb07bef1c3c53dec8d878bcdaf8e31e45d89e2adbcc089ec66ca961"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 98,
        "start_column": 106,
        "end_line": 98,
        "end_column": 111
      },
      "debug_info": {
        "goal": "\u22a2 (100 ^ 2 - 7 ^ 2) / (70 ^ 2 - 11 ^ 2) * ((70 - 11) * (70 + 11) / ((100 - 7) * (100 + 7))) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "04eab03a1be33059990279198a872d6e54dd5ac8a1d1e7459a1e19a3694ecacb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 103,
        "start_column": 28,
        "end_line": 103,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 + b ^ 2 = 1\n\u22a2 a * b + |a - b| \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3997787a8dcaba3aa9317df700d32412d6d0de1343be71daade5286d35394881"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 109,
        "start_column": 29,
        "end_line": 109,
        "end_column": 34
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (n : \u2115), 0 < f n\nh\u2081 : \u2200 (n : \u2115), 0 < n \u2192 f (f n) < f (n + 1)\n\u22a2 \u2200 (n : \u2115), 0 < n \u2192 f n = n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L109"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a3e529bb6de7280d2da2d5e43b594c5a2f4839eb60655d56b5057aea11ffd9b3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 115,
        "start_column": 37,
        "end_line": 115,
        "end_column": 42
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a = -1\nh\u2081 : b = 5\n\u22a2 -a - b ^ 2 + 3 * (a * b) = -39",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L115"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7d171653a23c557daf608fad371b9c993b6f708077f7639f4800e70db94d8c47"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 121,
        "start_column": 35,
        "end_line": 121,
        "end_column": 40
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : logb 2 (logb 16 \u2191n) = logb 4 (logb 4 \u2191n)\n\u22a2 (digits 10 n).sum = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e94be635857816fc6d6e4d151669c3023ba5174e71bf0e253ad6883527a9fbd3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 129,
        "start_column": 34,
        "end_line": 129,
        "end_column": 39
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 \u2264 1 + 2 * x\nh\u2081 : (1 - \u221a(1 + 2 * x)) ^ 2 \u2260 0\nh\u2082 : 4 * x ^ 2 / (1 - \u221a(1 + 2 * x)) ^ 2 < 2 * x + 9\nh\u2083 : x \u2260 0\n\u22a2 -(1 / 2) \u2264 x \u2227 x < 45 / 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f509d6a3dd0bdc713d96dba1ebe7de29cd8decf0d949a77901cfc7c0ca2af61f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 134,
        "start_column": 74,
        "end_line": 134,
        "end_column": 79
      },
      "debug_info": {
        "goal": "a : \u2115\nh\u2080 : a = \u2211 k \u2208 divisors 500, k\n\u22a2 \u2211 k \u2208 {x \u2208 a.divisors | Nat.Prime x}, k = 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L134"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ffa618ffacb49650ee29278fde2016b5517a4fef874be09d70c511ea6fd55e45"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 138,
        "start_column": 22,
        "end_line": 138,
        "end_column": 27
      },
      "debug_info": {
        "goal": "x y : \u2124\n\u22a2 x ^ 5 \u2260 y ^ 2 + 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L138"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "932b8e30ea51b31a29edc046bf4b589d2bc55e911abfe30aeebcd25a6d335a90"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 145,
        "start_column": 24,
        "end_line": 145,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : 9 * b = 20 * c\nh\u2082 : 7 * a = 4 * b\n\u22a2 63 * a = 80 * c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L145"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "90ab68bf4fca467318c10b53ff75716afc3a9099a04d45356a34ef4f29d2adc8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 148,
        "start_column": 79,
        "end_line": 148,
        "end_column": 84
      },
      "debug_info": {
        "goal": "\u22a2 cos (Real.pi / 7) - cos (2 * Real.pi / 7) + cos (3 * Real.pi / 7) = 1 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L148"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f30f55b9e4a3ad0a14a8f7d9e9b384057d17f1688106e93e57093e78557d5d75"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 161,
        "start_column": 22,
        "end_line": 161,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a b c : \u2115\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9\nh\u2081 : 1 \u2264 b \u2227 b \u2264 9\nh\u2082 : 1 \u2264 c \u2227 c \u2264 9\nh\u2083 : a \u2260 b\nh\u2084 : a \u2260 c\nh\u2085 : b \u2260 c\nh\u2086 : a + b = c\nh\u2087 : 10 * a + a - b = 2 * c\nh\u2088 : c * b = 10 * a + a + a\n\u22a2 a + b + c = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L161"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "56a7acef105972a799dd507b26c61e726667f90b1f803570daff61d333e96b36"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 169,
        "start_column": 28,
        "end_line": 169,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b c d : \u211a\nh\u2080 : 3 * a = b + c + d\nh\u2081 : 4 * b = a + c + d\nh\u2082 : 2 * c = a + b + d\nh\u2083 : 8 * a + 10 * b + 6 * c = 24\n\u22a2 \u2191d.den + d.num = 28",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b651a0954e442630dc29f306ac81add4f9e1353bb4a21c97278bbb70eaf49e43"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 173,
        "start_column": 26,
        "end_line": 173,
        "end_column": 31
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 12 \u2223 4 ^ (n + 1) + 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L173"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "72032c68da63e0803823f218159609ca988cb8e6c904e849a2cff7f4322f79ae"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 182,
        "start_column": 23,
        "end_line": 182,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x : \u211d\na b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 \u2264 x\nh\u2081 : 2 * x ^ 2 = 4 * x + 9\nh\u2082 : x = (\u2191a + \u221a\u2191b) / \u2191c\nh\u2083 : c = 2\n\u22a2 a + b + c = 26",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L182"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c5b5370281fe637ee7538cf300155847fa5e835ca6e324cc1ed766c09e6c5bad"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 187,
        "start_column": 16,
        "end_line": 187,
        "end_column": 21
      },
      "debug_info": {
        "goal": "x : \u2115\nh\u2080 : \u2191x + 4 / 100 * \u2191x = 598\n\u22a2 x = 575",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "74ac9394fbce8699caa5756c2c4a42c4fc3a3592d370e6d7ebbf17238da295ed"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 193,
        "start_column": 62,
        "end_line": 193,
        "end_column": 67
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : x ^ y ^ 2 = y ^ x\n\u22a2 (x, y) = (1, 1) \u2228 (x, y) = (16, 2) \u2228 (x, y) = (27, 3)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3409bb4d48e3aefa9933a8b78b8f7ee19d1c75f1c8d2ff99f7d67b4a529aca57"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 199,
        "start_column": 19,
        "end_line": 199,
        "end_column": 24
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : m.gcd n = 6\nh\u2081 : m.lcm n = 126\n\u22a2 60 \u2264 m + n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L199"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1531daf0763181018ade8a8777a6fb3cdd4ed44b3c49dec9a34af3e4aa794dc6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 206,
        "start_column": 15,
        "end_line": 206,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : x % 3 = 2\nh\u2081 : y % 5 = 4\nh\u2082 : x % 10 = y % 10\n\u22a2 14 \u2264 x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L206"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1fc99dea94f86a8a79a10f3303f33269d017fe9707d9dbc62c8ade51dac0259f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 212,
        "start_column": 24,
        "end_line": 212,
        "end_column": 29
      },
      "debug_info": {
        "goal": "n x : \u211d\nh\u2080 : n + x = 97\nh\u2081 : n + 5 * x = 265\n\u22a2 n + 2 * x = 139",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "563f9cc5785b91860b4b68ac5fbcbe5d8524a3927a7cf6878b046a9a08f1a137"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 217,
        "start_column": 17,
        "end_line": 217,
        "end_column": 22
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x / 50 = 40\n\u22a2 x = 2000",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "14107eaa18a08f35d65b8e4ae7ebec7d37e39da2dd08a89245baf95ab549d606"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 221,
        "start_column": 42,
        "end_line": 221,
        "end_column": 47
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 (x + 1) ^ 2 * x = x ^ 3 + 2 * x ^ 2 + x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L221"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "65ca7f297a40667a576f21a311a8194f407f53bb85158e8621aae7e7c7a0ac50"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 226,
        "start_column": 25,
        "end_line": 226,
        "end_column": 30
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 3 \u2264 n\n\u22a2 n.factorial < n ^ (n - 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L226"
      },
      "metadata": {
        "blame_email_hash": "4962457dacbf",
        "blame_date": "2025-02-20T22:39:08-06:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ed20a55e7a09c1ee979d3abdeedee8937ef6716729bbe3889c35a9157d3fad01"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 229,
        "start_column": 48,
        "end_line": 229,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u22a2 \u221a1000000 - 1000000 ^ (1 / 3) = 900",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "68ff0c37ae8244f9aef7c9abadb32f1e3cba80071142dc250c484666b133f26a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 234,
        "start_column": 21,
        "end_line": 234,
        "end_column": 26
      },
      "debug_info": {
        "goal": "s : \u2115\nh\u2080 : s = \u2211 k \u2208 Finset.Icc 2010 4018, k\n\u22a2 s % 2009 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f394e1d7b69238754eb6ac90ec3c8a82bd6cfa80b200bbb9bdf9a3260748571e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 237,
        "start_column": 73,
        "end_line": 237,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u22a2 \u00ac\u2200 (a b : \u2124), (\u2203 i j, a = 2 * i \u2227 b = 2 * j) \u2194 \u2203 k, a ^ 2 + b ^ 2 = 8 * k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L237"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "70177c5c615e7aae3c1563ee0b5870a5154d4233eb5c84dba68a59d579445c6a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 247,
        "start_column": 22,
        "end_line": 247,
        "end_column": 27
      },
      "debug_info": {
        "goal": "x y : \u211d\nf g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (t : \u211d), f t = t ^ 4\nh\u2081 : \u2200 (t : \u211d), g t = 5 * t ^ 2 - 6\nh\u2082 : f x = g x\nh\u2083 : f y = g y\nh\u2084 : x ^ 2 < y ^ 2\n\u22a2 y ^ 2 - x ^ 2 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "502ba68f75ff955a10b4726a7311fd52da08e741c8b76ab4a678a8102277e5bd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 250,
        "start_column": 73,
        "end_line": 250,
        "end_column": 78
      },
      "debug_info": {
        "goal": "\u22a2 {x \u2208 Finset.Icc 15 85 | 20 \u2223 x}.card = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L250"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6ddd05e77333d8d70af44d05108e5125c7917a919804de40df31cf643f6cf3a1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 253,
        "start_column": 65,
        "end_line": 253,
        "end_column": 70
      },
      "debug_info": {
        "goal": "\u22a2 (2000 + 2001 + 2002 + 2003 + 2004 + 2005 + 2006) % 7 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L253"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f71beff6d4814a3062115289e6f076e8fedff1591d813ca62a535abef38e7832"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 256,
        "start_column": 74,
        "end_line": 256,
        "end_column": 79
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 {x \u2208 Finset.Icc 1 49 | 3 \u2223 x}, k % 10 = 78",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9b0b82164a240873f694e288a322bfe3c4d7126663f512d0cc2fd8faf6e1d890"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 259,
        "start_column": 27,
        "end_line": 259,
        "end_column": 32
      },
      "debug_info": {
        "goal": "\u22a2 5 ^ 999999 % 7 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5dc9b18d42bdf9c036479d7e06ad127136b840285d9c89654d7c9580d623f7f4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 264,
        "start_column": 26,
        "end_line": 264,
        "end_column": 31
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 2010 \u2264 n \u2227 n \u2264 2019 \u2227 \u2203 m, m.divisors.card = 4 \u2227 \u2211 p \u2208 m.divisors, p = n\n\u22a2 \u2211 k \u2208 S, k = 2016",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L264"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5dbcd0e8fbbd3b7ceaf7b2971215a504fb3b6426e6127f370ba311d803033f08"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 272,
        "start_column": 35,
        "end_line": 272,
        "end_column": 40
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : 0 < a\nh\u2081 : 1 / a - \u2191\u230a1 / a\u230b = a ^ 2 - \u2191\u230aa ^ 2\u230b\nh\u2082 : 2 < a ^ 2\nh\u2083 : a ^ 2 < 3\n\u22a2 a ^ 12 - 144 * (1 / a) = 233",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L272"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e5587b8670391e816855bc6c3291c167a2e182ca53d6d0c7aee22d047cf10770"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 276,
        "start_column": 24,
        "end_line": 276,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a : \u211d\n\u22a2 a * (2 - a) \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7ca6169804abee3c51462b9cc6c2a604842b6dab6f2a7fe946d5f1d18c8f5635"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 285,
        "start_column": 30,
        "end_line": 285,
        "end_column": 35
      },
      "debug_info": {
        "goal": "a b c : \u211a\nm n : \u211d\nh\u2080 : 0 < m \u2227 0 < n\nh\u2081 : m ^ 3 = 2\nh\u2082 : n ^ 3 = 4\nh\u2083 : \u2191a + \u2191b * m + \u2191c * n = 0\n\u22a2 a = 0 \u2227 b = 0 \u2227 c = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L285"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0c63cb8e752a9941b88cb1895525d6c9859270607235803079d4ea82a568209d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 290,
        "start_column": 16,
        "end_line": 290,
        "end_column": 21
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 5 * x + 4\n\u22a2 f 1 = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b30db144c98992a390f7bdd4a632b22cde2209643c4386078d365a3c5e2b3c16"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 295,
        "start_column": 14,
        "end_line": 295,
        "end_column": 19
      },
      "debug_info": {
        "goal": "x y n : \u2115+\nh\u2080 : \u2191\u2191x / 4 + \u2191\u2191y / 6 = (\u2191\u2191x + \u2191\u2191y) / \u2191\u2191n\n\u22a2 n = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L295"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b460f0e3141596aa19c4fbb4a4896d518aff01917b563d445a93d982c6be67d5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 300,
        "start_column": 24,
        "end_line": 300,
        "end_column": 29
      },
      "debug_info": {
        "goal": "\u03c3 : \u211d \u2243 \u211d\nh : \u03c3.toFun 2 = \u03c3.invFun 2\n\u22a2 \u03c3.toFun (\u03c3.toFun 2) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L300"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cf34e4ea72102912c6de3beb14efcdcb0b0fb70cc0e7556ab51c8a767fab304d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 306,
        "start_column": 17,
        "end_line": 306,
        "end_column": 22
      },
      "debug_info": {
        "goal": "x : \u2124\nh\u2080 : x < 0\nh\u2081 : 24 * x % 1199 = 15\n\u22a2 x \u2264 -449",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L306"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5ffa39a832276faaca0e1520c2e7f6e1e3d727a096179a6cdd09d6c8149b3344"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 311,
        "start_column": 42,
        "end_line": 311,
        "end_column": 47
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 (21 * n + 4).gcd (14 * n + 3) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L311"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9caf6c96d70b3c6445fd0891a0da08f87c483d67c04c7ccebdd897272a08d5c5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 314,
        "start_column": 26,
        "end_line": 314,
        "end_column": 31
      },
      "debug_info": {
        "goal": "\u22a2 2 ^ 2010 % 10 = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L314"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "859077e36f0cebb115f5f0d90c2acc6a104a2640d72b1ad035b0bd277c089dc2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 322,
        "start_column": 24,
        "end_line": 322,
        "end_column": 29
      },
      "debug_info": {
        "goal": "m n : \u2115\nf : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (x : \u2115), f x = 4 ^ x + 6 ^ x + 9 ^ x\nh\u2081 : 0 < m \u2227 0 < n\nh\u2082 : m \u2264 n\n\u22a2 f (2 ^ m) \u2223 f (2 ^ n)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L322"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "dbf810f1d8475a11071c24cca804c125b570c564111f2dec97b0c4284667b20c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 328,
        "start_column": 55,
        "end_line": 328,
        "end_column": 60
      },
      "debug_info": {
        "goal": "p q r : \u2124\nh\u2080 : 1 < p \u2227 p < q \u2227 q < r\nh\u2081 : (p - 1) * (q - 1) * (r - 1) \u2223 p * q * r - 1\n\u22a2 (p, q, r) = (2, 4, 8) \u2228 (p, q, r) = (3, 5, 15)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L328"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6478074659c2546a8ff239bb08c4b51eb0e2a9db482311bb8d23e5059941890f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 336,
        "start_column": 21,
        "end_line": 336,
        "end_column": 26
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (m n : \u2115), 0 < m \u2227 0 < n \u2192 f (m + n) - f m - f n = 0 \u2228 f (m + n) - f m - f n = 1\nh\u2081 : f 2 = 0\nh\u2082 : 0 < f 3\nh\u2083 : f 9999 = 3333\n\u22a2 f 1982 = 660",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L336"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5756bcbea00109780016a74d0bfd8116fa03777a48397b99c7ebb010a5109b58"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 341,
        "start_column": 30,
        "end_line": 341,
        "end_column": 35
      },
      "debug_info": {
        "goal": "x y : \u2124\nh\u2080 : y ^ 2 + 3 * (x ^ 2 * y ^ 2) = 30 * x ^ 2 + 517\n\u22a2 3 * (x ^ 2 * y ^ 2) = 588",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L341"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a5117f50fe9ea118ea5ff79a558b797451cbc27959942df4124bf1db75692b30"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 347,
        "start_column": 24,
        "end_line": 347,
        "end_column": 29
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 2 * x - 3\nh\u2081 : \u2200 (x : \u211d), g x = x + 1\n\u22a2 g (f 5 - 1) = 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L347"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a94908ea3b5e2d6faf17f31b58444bb6df22d638513179d71e9939190ec8b67f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 356,
        "start_column": 56,
        "end_line": 356,
        "end_column": 61
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2080 : b = a ^ 2\nh\u2081 : a + b = 1\nh\u2082 : d = c ^ 2\nh\u2083 : c + d = 1\nh\u2084 : a \u2260 c\n\u22a2 \u221a((a - c) ^ 2 + (b - d) ^ 2) = \u221a10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L356"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1b3d49f63700d252f63bbb6fc8772d653693b1bd7fdfb1ee1150f764c0870fec"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 359,
        "start_column": 31,
        "end_line": 359,
        "end_column": 36
      },
      "debug_info": {
        "goal": "\u22a2 (29 ^ 13 - 5 ^ 13) % 7 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L359"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9e3300146887e79aea7e4eff5e3a0a7059f7c8dd8f8fbe988e12b749896432b1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 366,
        "start_column": 30,
        "end_line": 366,
        "end_column": 35
      },
      "debug_info": {
        "goal": "a b : NNReal\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a ^ 2 = 6 * b\nh\u2082 : a ^ 2 = 54 / b\n\u22a2 a = 3 * NNReal.sqrt 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L366"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "53f77dcaca809e31a0b7e3b526146fbf938fb1c157cd12a0aadf965118924f45"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 374,
        "start_column": 45,
        "end_line": 374,
        "end_column": 50
      },
      "debug_info": {
        "goal": "f g h : \u2115+ \u2192 \u2115\nh\u2080 : \u2200 (x : \u2115+), f x = 12 * \u2191x + 7\nh\u2081 : \u2200 (x : \u2115+), g x = 5 * \u2191x + 2\nh\u2082 : \u2200 (x : \u2115+), h x = (f x).gcd (g x)\nh\u2083 : Fintype \u2191(Set.range h)\n\u22a2 \u2211 k \u2208 (Set.range h).toFinset, k = 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L374"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6d7f7bb54f454ca8157d98b8aab3923860fed23f19678f2aa820427f2fb6f18c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 377,
        "start_column": 127,
        "end_line": 377,
        "end_column": 132
      },
      "debug_info": {
        "goal": "\u22a2 Real.log 80 / Real.log 2 / (Real.log 2 / Real.log 40) - Real.log 160 / Real.log 2 / (Real.log 2 / Real.log 20) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L377"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5e75bedf6609feefd63dbe1393c94445501c033eed254b93363afdc74aa05a7e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 383,
        "start_column": 28,
        "end_line": 383,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x : \u2124\nf : \u2124 \u2192 \u2124\nh0 : f x + f (x - 1) = x ^ 2\nh1 : f 19 = 94\n\u22a2 f 94 % 1000 = 561",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "90bfa3d9dbab5e35355925d088103e38a24cdbe323c13aca6954edb5a1d55b73"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 388,
        "start_column": 24,
        "end_line": 388,
        "end_column": 29
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 (x + 3) ^ 2 = 121\n\u22a2 \u2211 k \u2208 S, k = -6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L388"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cf5a3c3598696d0c7b23c12f272570091642bf831eab59d93338ccb69a7cd1da"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 394,
        "start_column": 14,
        "end_line": 394,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n \u2264 9\nh\u2081 : 11 \u2223 20 * 100 + 10 * n + 7\n\u22a2 n = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L394"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "112b5c471e4f0d5b8bcf61bf07b8a962cd88d54c18edacaea283042aa43198f1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 397,
        "start_column": 34,
        "end_line": 397,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 (129 ^ 34 + 96 ^ 38) % 11 = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L397"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "077739000d6692adb6bdf20ee324529317fc4175f1d02851276aecab3fcc589e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 404,
        "start_column": 22,
        "end_line": 404,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), a (n + 2) - a (n + 1) = a (n + 1) - a n\nh\u2081 : a 1 = 2 / 3\nh\u2082 : a 9 = 4 / 5\n\u22a2 a 5 = 11 / 15",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e221444159537c880c693a2e1e9fad75f18ecf2f331b09616d5d03936e64a974"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 411,
        "start_column": 15,
        "end_line": 411,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 10 \u2264 n\nh\u2081 : \u2203 x, x ^ 2 = n\nh\u2082 : \u2203 t, t ^ 3 = n\n\u22a2 64 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L411"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "18e0ae7d58a295519a37aea29662ba679e7a5fed0395b69bfeff4f4660615585"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 414,
        "start_column": 34,
        "end_line": 414,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 8 * 9 ^ 2 + 5 * 9 + 2 = 695",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L414"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4d2620a894fe22a26021211af861d7e5c7c67b0723a37dfd98a593f62c4e42eb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 417,
        "start_column": 19,
        "end_line": 417,
        "end_column": 24
      },
      "debug_info": {
        "goal": "\u22a2 54 % 6 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L417"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "991df38d953213f88d0d4b6ba1addf6512ebfbae6a14f7434403b767d821c9c5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 424,
        "start_column": 24,
        "end_line": 424,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u2115\nh\u2080 : a 1 = 1\nh\u2081 : a 2 = 1\nh\u2082 : \u2200 (n : \u2115), a (n + 2) = a (n + 1) + a n\n\u22a2 a 100 % 4 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L424"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "158c22ccd8e9c357605ae2a81b65f048e5d56cbd7f14e0c0b8d0373e6ac55f1b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 429,
        "start_column": 19,
        "end_line": 429,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 0 < n \u2227 (\u2191n + 1000) / 70 = \u2191\u230a\u221a\u2191n\u230b\n\u22a2 S.card = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L429"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "95a11f90e8e3dd06ea2be9ddd8f30212fdacd0e8d7a4d33625c9ace8a14b7b05"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 435,
        "start_column": 23,
        "end_line": 435,
        "end_column": 28
      },
      "debug_info": {
        "goal": "A M C : \u2115\nh\u2080 : A \u2264 9 \u2227 M \u2264 9 \u2227 C \u2264 9\nh\u2081 : ofDigits 10 [0, 1, C, M, A] + ofDigits 10 [2, 1, C, M, A] = 123422\n\u22a2 A + M + C = 14",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L435"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "71aa1144952e3a76262b2c7af15a1a8ed468a4474cc1180047d06a0161421746"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 443,
        "start_column": 26,
        "end_line": 443,
        "end_column": 31
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a % 10 = 2\nh\u2082 : b % 10 = 4\nh\u2083 : a.gcd b = 6\n\u22a2 108 \u2264 a.lcm b",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L443"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6d217f8204ff11ae1ca00bbc0f565cc76f5562e8779bd88743da4b02491ca670"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 446,
        "start_column": 60,
        "end_line": 446,
        "end_column": 65
      },
      "debug_info": {
        "goal": "\u22a2 |(3491 - 60) * (3491 + 60) - 3491 ^ 2| = 3600",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L446"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7071174a06c06b3d2d7c0465ba6c8733f39898d82f0d7aaa8a004e30fd80d034"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 452,
        "start_column": 96,
        "end_line": 452,
        "end_column": 101
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : 3 \u2264 a * b + b * c + c * a\n\u22a2 3 / \u221a2 \u2264 a / \u221a(a + b) + b / \u221a(b + c) + c / \u221a(c + a)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L452"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "88a578b13364b3967fe86a58f05f3d9a3ff5feb8781b528fb2894da0299837e3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 458,
        "start_column": 24,
        "end_line": 458,
        "end_column": 29
      },
      "debug_info": {
        "goal": "f z : \u2102\nh\u2080 : f + 3 * z = 11\nh\u2081 : 3 * (f - 1) - 5 * z = -68\n\u22a2 f = -10 \u2227 z = 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L458"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "99d32e65d09728ec7ee320e25f34e16437d7b62234ac259a7f89814751b798ea"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 463,
        "start_column": 19,
        "end_line": 463,
        "end_column": 24
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 3 * n % 11 = 2\n\u22a2 n % 11 = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L463"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "098ef2bf575bcc0ea7d5da6e4be301f637d9c54fed8ab02ecbbcc8d5f5490382"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 468,
        "start_column": 56,
        "end_line": 468,
        "end_column": 61
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u220f k \u2208 Finset.Icc 1 n, (1 + 1 / 2 ^ k) < 5 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L468"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ca92158e9e953428c357ace92de3552373b90454302a81d8aa58b20982df19cd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 473,
        "start_column": 34,
        "end_line": 473,
        "end_column": 39
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x ^ 2 + 8 * x + y ^ 2 - 6 * y = 0\n\u22a2 (x + 4) ^ 2 + (y - 3) ^ 2 = 5 ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L473"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "02ccd2ead352be5a178c381fd663dd98dd627614318dc24613aa4f4662522308"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 479,
        "start_column": 20,
        "end_line": 479,
        "end_column": 25
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : Nat.Prime (2 ^ n - 1)\n\u22a2 Nat.Prime n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "582a3d4c729ac09e81bb4859bbc903dba9d8e2822c8b736249d0ead8fbd8372a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 485,
        "start_column": 15,
        "end_line": 485,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x + y = 25\nh\u2081 : x - y = 11\n\u22a2 x = 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L485"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "756b044503b8e9361cfb9811f88f8f16a59ff9d2974f30b77894d1310d870457"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 488,
        "start_column": 58,
        "end_line": 488,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u22a2 (2 ^ 2014 + 2 ^ 2012) / (2 ^ 2014 - 2 ^ 2012) = 5 / 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L488"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "da2a45eeeada02dce54eb7f301ed288cde1f4050f34e05baedaf8b5aeafa6ca1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 494,
        "start_column": 44,
        "end_line": 494,
        "end_column": 49
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : Even n\nh\u2081 : (\u2191n - 2) ^ 2 + \u2191n ^ 2 + (\u2191n + 2) ^ 2 = 12296\n\u22a2 (n - 2) * n * (n + 2) / 8 = 32736",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L494"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "da4f3e60311e382ed6846f532bbd7f1130c637814c5b7bbfe8600d2b30576dbc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 502,
        "start_column": 17,
        "end_line": 502,
        "end_column": 22
      },
      "debug_info": {
        "goal": "r n : \u2115\nh\u2080 : r = 1342 % 13\nh\u2081 : 0 < n\nh\u2082 : 1342 \u2223 n\nh\u2083 : n % 13 < r\n\u22a2 6710 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L502"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "618d162e404a5cf52d7a7cc499495cabccc03cff4d6f522b1adf606e325657cd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 507,
        "start_column": 65,
        "end_line": 507,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u220f k \u2208 Finset.Icc 1 n, (1 + 1 / \u2191k ^ 3) \u2264 3 - 1 / \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L507"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "dc4e42c15e016be3d57053c8fa3a517b8269facdba871e471b91f554b1ec3a8e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 510,
        "start_column": 53,
        "end_line": 510,
        "end_column": 58
      },
      "debug_info": {
        "goal": "\u22a2 (\u220f k \u2208 Finset.range 6, (2 * k + 1)) % 10 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c7295bd78c6805ab79f0db21ec0ee87f328fc93f4658af1625362f1e522abcf6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 516,
        "start_column": 18,
        "end_line": 516,
        "end_column": 23
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 2 ^ a = 32\nh\u2081 : a ^ b = 125\n\u22a2 b ^ a = 243",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L516"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5b8647da2c4a8b4352d67a46f544095ff03de490755c2f6edbe29db6609f2af8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 524,
        "start_column": 31,
        "end_line": 524,
        "end_column": 36
      },
      "debug_info": {
        "goal": "a b c : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : b = a + 1\nh\u2082 : c = b + 1\nh\u2083 : a * b * c = 8 * (a + b + c)\n\u22a2 a ^ 2 + (b ^ 2 + c ^ 2) = 77",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L524"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6b87ffd0b1baff4b4fcbb5f8273e9f2262e213c7866556e85903b1e83368345a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 530,
        "start_column": 16,
        "end_line": 530,
        "end_column": 21
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 -1\nh\u2081 : (x - 9) / (x + 1) = 2\n\u22a2 x = -11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L530"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5db1f2d8183888a25782145d3e3098c7bb65c0249e892b6016dd4ac7d186892b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 536,
        "start_column": 15,
        "end_line": 536,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : 80325 \u2223 n.factorial\n\u22a2 17 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L536"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "20a91a2ab8754ced9e363d8044ce752f600863883e0fcd4140bec0010b4ebdbf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 541,
        "start_column": 38,
        "end_line": 541,
        "end_column": 43
      },
      "debug_info": {
        "goal": "a m c : \u2115\nh\u2080 : a + m + c = 12\n\u22a2 a * m * c + a * m + m * c + a * c \u2264 112",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L541"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b62c68e8b287fb4288e6670bf6bfc49ee1feb187ccdb047a9b7b6e76209f476d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 552,
        "start_column": 35,
        "end_line": 552,
        "end_column": 40
      },
      "debug_info": {
        "goal": "n A B C : \u2115\nh\u2080 : n = 3 ^ 17 + 3 ^ 10\nh\u2081 : 11 \u2223 n + 1\nh\u2082 : List.Pairwise (fun x1 x2 => x1 \u2260 x2) [A, B, C]\nh\u2083 : {A, B, C} \u2282 Finset.Icc 0 9\nh\u2084 : Odd A \u2227 Odd C\nh\u2085 : \u00ac3 \u2223 B\nh\u2086 : digits 10 n = [B, A, B, C, C, A, C, B, A]\n\u22a2 100 * A + 10 * B + C = 129",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L552"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3d070ee319e7755045c5188fe9c1c392827a58c964ce0b16fda0c82d58164f67"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 558,
        "start_column": 48,
        "end_line": 558,
        "end_column": 53
      },
      "debug_info": {
        "goal": "x : \u211d\nh : (11 ^ (1 / 4)) ^ (3 * x - 3) = 1 / 5\n\u22a2 (11 ^ (1 / 4)) ^ (6 * x + 2) = 121 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L558"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cb2293e44d8e97c29660b4b1bab44f5cc2543904c7e2b4df2e2acddd080c0356"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 564,
        "start_column": 15,
        "end_line": 564,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 3 * x + 4 * y - 12 * z = 10\nh\u2081 : -2 * x - 3 * y + 9 * z = -4\n\u22a2 x = 14",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L564"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "22cf50a5fa8464d5222371260eb21493744c8417f771f654e35ea57981d5a4e0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 575,
        "start_column": 89,
        "end_line": 575,
        "end_column": 94
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u2115\nh\u2080 : a 0 ^ 3 = 1\nh\u2081 : a 1 ^ 3 = 8\nh\u2082 : a 2 ^ 3 = 27\nh\u2083 : a 3 ^ 3 = 64\nh\u2084 : a 4 ^ 3 = 125\nh\u2085 : a 5 ^ 3 = 216\nh\u2086 : a 6 ^ 3 = 343\n\u22a2 \u2211 k \u2208 Finset.range 7, 6 * a k ^ 2 - 2 * \u2211 k \u2208 Finset.range 6, a k ^ 2 = 658",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L575"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "58dad76250199a45abcba8a3e857f657d12eabf9adbe993d93045c118838708c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 579,
        "start_column": 64,
        "end_line": 579,
        "end_column": 69
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, k ^ 3 = (\u2211 k \u2208 Finset.range n, k) ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L579"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6b84fa2dab3a1a35b62f203a3857612fcc0ec29ffe0cdf8d595b3f00ba00fc84"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 590,
        "start_column": 0,
        "end_line": 590,
        "end_column": 5
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115 \u2192 \u2115\ng : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (y : \u2115), f 0 y = y + 1\nh\u2081 : \u2200 (x : \u2115), f (x + 1) 0 = f x 1\nh\u2082 : \u2200 (x y : \u2115), f (x + 1) (y + 1) = f x (f (x + 1) y)\nh\u2083 : g 0 = 2\nh\u2084 : \u2200 (n : \u2115), g (n + 1) = 2 ^ g n\n\u22a2 f 4 1981 = g 1983 - 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L590"
      },
      "metadata": {
        "blame_email_hash": "e7ac978c7a81",
        "blame_date": "2025-04-24T19:32:39+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "94d00eaf5c1276b410b38a58d269d43f2dc9f9fc2b90c325154e95bad5651119"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 597,
        "start_column": 15,
        "end_line": 597,
        "end_column": 20
      },
      "debug_info": {
        "goal": "y : \u211d\nh\u2080 : 0 \u2264 19 + 3 * y\nh\u2081 : \u221a(19 + 3 * y) = 7\n\u22a2 y = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L597"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4a11b352da5f5a89df8a856e1acab1a3db68cd14b7e4c6f1cf0ffb8ab4d54df2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 603,
        "start_column": 15,
        "end_line": 603,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x : \u2115\nh\u2080 : x < 100\nh\u2081 : x * 9 % 100 = 1\n\u22a2 x = 89",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L603"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "af36f2a60f3660562ce129546d571291b34aed1c44a9503bd4085b43d8b47625"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 609,
        "start_column": 76,
        "end_line": 609,
        "end_column": 81
      },
      "debug_info": {
        "goal": "p : \u2115\nh\u2080 : Nat.Prime p\nh\u2081 : 7 \u2264 p\n\u22a2 \u2211 k \u2208 Finset.Icc 1 (p - 2), (\u2191k)\u207b\u00b9 * (\u2191k + 1)\u207b\u00b9 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L609"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "58c3842c8ada35f14f09969357b12564b259259efa4c58241c35042720124f67"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 615,
        "start_column": 49,
        "end_line": 615,
        "end_column": 54
      },
      "debug_info": {
        "goal": "m a : \u2115\nh\u2080 : 0 < m \u2227 0 < a\nh\u2081 : \u2191m / \u2191a = 3 / 4\n\u22a2 (84 * \u2191m + 70 * \u2191a) / (\u2191m + \u2191a) = 76",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L615"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b78e80e1f6662572c405df8468e3f3ce243b32b13b57552a15a03f75fc422706"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 622,
        "start_column": 42,
        "end_line": 622,
        "end_column": 47
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 \u2264 3 - x\nh\u2081 : 0 \u2264 x + 1\nh\u2082 : 1 / 2 < \u221a(3 - x) - \u221a(x + 1)\n\u22a2 -1 \u2264 x \u2227 x < 1 - \u221a31 / 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L622"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5a005875367e588b8896372beae9f1e454a5a53cbd5a11ffbd20336bc1e33bc3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 627,
        "start_column": 20,
        "end_line": 627,
        "end_column": 25
      },
      "debug_info": {
        "goal": "S : Finset \u2124\nh\u2080 : \u2200 (n : \u2124), n \u2208 S \u2194 |n - 2| \u2264 5 + 6 / 10\n\u22a2 S.card = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L627"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3e1e098724000466880c11d1a75a9dadebf8a934ea8513cd8b5815be53ca1b1e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 631,
        "start_column": 45,
        "end_line": 631,
        "end_column": 50
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 (x + 3) * (2 * x - 6) = 2 * x ^ 2 - 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L631"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9ac936079af69d4d25ea20748bb68752b35462281f1d57f506a0b1838c951d4b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 640,
        "start_column": 30,
        "end_line": 640,
        "end_column": 35
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2081 : 4 ^ a = 5\nh\u2082 : 5 ^ b = 6\nh\u2083 : 6 ^ c = 7\nh\u2084 : 7 ^ d = 8\n\u22a2 a * b * c * d = 3 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L640"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b1590372a9dc8baebafc22afcb4e265b07cd243187cffddd34cb75716261993f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 646,
        "start_column": 62,
        "end_line": 646,
        "end_column": 67
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : b \u2264 a\n\u22a2 (a + b) / 2 - \u221a(a * b) \u2264 (a - b) ^ 2 / (8 * b)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L646"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5bb92ac00f5ba54c3574d7e582e9e579cefb64bb61181e759a3e86f1b403362f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 651,
        "start_column": 23,
        "end_line": 651,
        "end_column": 28
      },
      "debug_info": {
        "goal": "a b : \u2124\nh\u2080 : \u2200 (x : \u211d), 10 * x ^ 2 - x - 24 = (\u2191a * x - 8) * (\u2191b * x + 3)\n\u22a2 a * b + b = 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L651"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3b85e3e02e6c28b15a6bdd7fbb68fbee6629221db3889b46342c85c8e810f8b9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 655,
        "start_column": 126,
        "end_line": 655,
        "end_column": 131
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.Icc 1 20, logb (5 ^ k) (3 ^ k ^ 2)) * \u2211 k \u2208 Finset.Icc 1 100, logb (9 ^ k) (25 ^ k) = 21000",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L655"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3f1ae95bb6eabb35f15e2b8fd51f0490930fc5f76270129d5ca5902df0f3e186"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 658,
        "start_column": 66,
        "end_line": 658,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 Finset.Icc 2 10000, 1 / \u221a\u2191k < 198",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L658"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "478c6889a27d6f87018b07a11f8981b2e8bd030058829de03f6ace4a6379d057"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 665,
        "start_column": 15,
        "end_line": 665,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\np : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (x : \u2115), p x = x ^ 2 - x + 41\nh\u2081 : 1 < (p n).gcd (p (n + 1))\n\u22a2 41 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L665"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cadf5d1902db2b9d3f5a7663515e65056326c01196eaaca3eebccd797a0d33e7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 670,
        "start_column": 21,
        "end_line": 670,
        "end_column": 26
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 1000 \u2264 n \u2227 n \u2264 9999 \u2227 (\u2200 d \u2208 digits 10 n, Even d) \u2227 5 \u2223 n\n\u22a2 S.card = 100",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L670"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "349223ccb2e5a051d3b210f5f1c4399867a0e43de00c92c8affaef5dccbb9125"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 675,
        "start_column": 85,
        "end_line": 675,
        "end_column": 90
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 9 \u2264 n\n\u22a2 \u2203 x, \u2191x ^ 2 = (\u2191(n + 2).factorial - \u2191(n + 1).factorial) / \u2191n.factorial",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L675"
      },
      "metadata": {
        "blame_email_hash": "f7c4d17dfbfb",
        "blame_date": "2024-10-28T15:45:30+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cdb40b25bef7db3d38174bd17f8dd666a27a510377d31177255c9fc925775c04"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 683,
        "start_column": 14,
        "end_line": 683,
        "end_column": 19
      },
      "debug_info": {
        "goal": "k : \u2115\nh\u2080 : 0 < k\nh\u2081 : \u2200 (n : \u2115), (6 * n + k).gcd (6 * n + 3) = 1\nh\u2082 : \u2200 (n : \u2115), (6 * n + k).gcd (6 * n + 2) = 1\nh\u2083 : \u2200 (n : \u2115), (6 * n + k).gcd (6 * n + 1) = 1\n\u22a2 5 \u2264 k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L683"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1f9512f25a4648867af7088576faecd35af255cf7d4b41e05a89edfdfe95d094"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 687,
        "start_column": 64,
        "end_line": 687,
        "end_column": 69
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 a b, Irrational a \u2227 Irrational b \u2227 \u00acIrrational (a ^ b)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L687"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0defea8d4e9051607356d894f38abca02dbe97a44eef95ecce5a31ec26b2da7d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 694,
        "start_column": 23,
        "end_line": 694,
        "end_column": 28
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 3 * x + y = 17\nh\u2081 : 5 * y + z = 14\nh\u2082 : 3 * x + 5 * z = 41\n\u22a2 x + y + z = 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L694"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9a2c56aee3345dbd5dd8d659fafc1bd288d16dc2e5139668fc6da7e3590b824e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 700,
        "start_column": 17,
        "end_line": 700,
        "end_column": 22
      },
      "debug_info": {
        "goal": "f : \u2124 \u2192 \u2124\nh\u2080 : \u2200 (n : \u2124), Odd n \u2192 f n = n ^ 2\nh\u2081 : \u2200 (n : \u2124), Even n \u2192 f n = n ^ 2 - 4 * n - 1\n\u22a2 f 4 = -1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L700"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "13092c896ad608aa0b2735f627834bd8c2ff68f97bb78e2c4b895f65714aeb47"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 705,
        "start_column": 20,
        "end_line": 705,
        "end_column": 25
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 2 * n % 47 = 15\n\u22a2 n % 47 = 31",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L705"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4a33a5a59dd077eea3354903d1fa40a53366002b4fad59efb327123d3be99f54"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 710,
        "start_column": 66,
        "end_line": 710,
        "end_column": 71
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\n\u22a2 9 / (x + y + z) \u2264 2 / (x + y) + 2 / (y + z) + 2 / (z + x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L710"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4a2bb7e1c955851875793c9eb29f84a25a37273e3dde4bda8eb0082b46b483de"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 715,
        "start_column": 16,
        "end_line": 715,
        "end_column": 21
      },
      "debug_info": {
        "goal": "b : ZMod (11 ^ 2)\nh\u2080 : b = 24\u207b\u00b9\n\u22a2 b = 116",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L715"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3118b1a88eef269f565e0a42062b52a80632c932ae507599e40de9a8952d8150"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 719,
        "start_column": 84,
        "end_line": 719,
        "end_column": 89
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 |a + b| / (1 + |a + b|) \u2264 |a| / (1 + |a|) + |b| / (1 + |b|)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L719"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4c48e272842ac935cf4d1ac508a414fef0ffa0dd9dcd0f487a6da73b421c4d32"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 729,
        "start_column": 14,
        "end_line": 729,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a b c d k m : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\nh\u2081 : Odd a \u2227 Odd b \u2227 Odd c \u2227 Odd d\nh\u2082 : a < b \u2227 b < c \u2227 c < d\nh\u2083 : a * d = b * c\nh\u2084 : a + d = 2 ^ k\nh\u2085 : b + c = 2 ^ m\n\u22a2 a = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L729"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c4b367679143dd34a1f06160db4ba36a046028ade8b6adf30e4e1967280139bf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 738,
        "start_column": 36,
        "end_line": 738,
        "end_column": 41
      },
      "debug_info": {
        "goal": "a b c d : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\nh\u2081 : d < c\nh\u2082 : c < b\nh\u2083 : b < a\nh\u2084 : a * c + b * d = (b + d + a - c) * (b + d + c - a)\n\u22a2 \u00acNat.Prime (a * b + c * d)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L738"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b818a968299e440a50936985057cf946f152079a9e188cc7a751b6a78e716f8e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 743,
        "start_column": 17,
        "end_line": 743,
        "end_column": 22
      },
      "debug_info": {
        "goal": "n : ZMod 1399\nh\u2081 : n = 160\u207b\u00b9\n\u22a2 n = 1058",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L743"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "149778fcd88e751f6fe27e903928b763c683e5862dbf382d8a6eed255fa14688"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 748,
        "start_column": 14,
        "end_line": 748,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : \u221a(4 + \u221a(16 + 16 * a)) + \u221a(1 + \u221a(1 + a)) = 6\n\u22a2 a = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L748"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f98b2eb7b05ae46ed03f620108014e6c59a0da11a4b407cb0b152636cddd047b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 753,
        "start_column": 103,
        "end_line": 753,
        "end_column": 108
      },
      "debug_info": {
        "goal": "n : \u211d\nh\u2080 : n = 1 / 3\n\u22a2 \u230a10 * n\u230b + \u230a100 * n\u230b + \u230a1000 * n\u230b + \u230a10000 * n\u230b = 3702",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L753"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4f75592dab901c1cbf3c4041e6d2d1267791ed42bcc840ad48e41bb571453963"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 758,
        "start_column": 28,
        "end_line": 758,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 + b ^ 2 = 1\n\u22a2 a * b + (a - b) \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L758"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "97b33af7db652b516792027cbbdfc2bf37fda980cc86736a6c126033456c4dfe"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 764,
        "start_column": 24,
        "end_line": 764,
        "end_column": 29
      },
      "debug_info": {
        "goal": "f : \u211a \u2192 \u211d\nh\u2080 : \u2200 x > 0, \u2200 y > 0, f (x * y) = f x + f y\nh\u2081 : \u2200 (p : \u2115), Nat.Prime p \u2192 f \u2191p = \u2191p\n\u22a2 f (25 / 11) < 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L764"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3567a4337b1b67b91a70f1733df454663408d7f7a9fb741e81a7eaa20f65793b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 770,
        "start_column": 18,
        "end_line": 770,
        "end_column": 23
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 3 * y = x\nh\u2081 : 2 * x + 5 * y = 11\n\u22a2 x + y = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L770"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "72c93628770b739c9c3c8812e4f5f5e7870bec0314a735f1b62487ab17a26adb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 776,
        "start_column": 22,
        "end_line": 776,
        "end_column": 27
      },
      "debug_info": {
        "goal": "p a : \u2115\nh\u2080 : 0 < a\nh\u2081 : Nat.Prime p\n\u22a2 p \u2223 a ^ p - a",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L776"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7b4087ff55da5f63fad923f3b4dbb070a7ec90dd0247f3d647a9b77004405ae7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 779,
        "start_column": 66,
        "end_line": 779,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 \u220f k \u2208 Finset.range 7, (2 ^ 2 ^ k + 3 ^ 2 ^ k) = 3 ^ 128 - 2 ^ 128",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L779"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a3b2ebf9c79f275e601af47f7d60be8a35147828a972cd49284e5c04a7d14d6c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 785,
        "start_column": 51,
        "end_line": 785,
        "end_column": 56
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u211a\nh\u2080 : \u2200 (n : \u2115), u (n + 1) = u n + 1\nh\u2081 : \u2211 k \u2208 Finset.range 98, u k.succ = 137\n\u22a2 \u2211 k \u2208 Finset.range 49, u (2 * k.succ) = 93",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L785"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2e37b4f436c7627c32a28061b363b32d73109e4b0af62a45ef553cbfb64dfbcf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 792,
        "start_column": 27,
        "end_line": 792,
        "end_column": 32
      },
      "debug_info": {
        "goal": "a b c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 3 + a * x ^ 2 + b * x + c\nh\u2081 : f \u207b\u00b9' {0} = {cos (2 * Real.pi / 7), cos (4 * Real.pi / 7), cos (6 * Real.pi / 7)}\n\u22a2 a * b * c = 1 / 32",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L792"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "dd4dbd56f9410a1f15aeacc1778d33f1054a9820e1918c6e86b1561aa174b201"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 795,
        "start_column": 23,
        "end_line": 795,
        "end_column": 28
      },
      "debug_info": {
        "goal": "\u22a2 5 ^ 30 % 7 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L795"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d1acd13a6222b60494e10a5ceb255a96e2cd1c18305a07a02da97c300fa121cd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 802,
        "start_column": 15,
        "end_line": 802,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : n.gcd 40 = 10\nh\u2082 : n.lcm 40 = 280\n\u22a2 n = 70",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L802"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "df951c5004b2b0e77a4ab13f0463e1f1097e60a1322415ee44af1306487a5b24"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 809,
        "start_column": 34,
        "end_line": 809,
        "end_column": 39
      },
      "debug_info": {
        "goal": "v i z : \u2102\nh\u2080 : v = i * z\nh\u2081 : v = 1 + Complex.I\nh\u2082 : z = 2 - Complex.I\n\u22a2 i = 1 / 5 + 3 / 5 * Complex.I",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L809"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e4baba66179079a93c63a0e944f5ea84c8123a6d85aaddd9f35569b1033912ec"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 815,
        "start_column": 15,
        "end_line": 815,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : (1 / 2 + 1 / 3 + 1 / 7 + 1 / \u2191n).den = 1\n\u22a2 n = 42",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L815"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "517d850a5a3dd71ce5805bf34ba867a23406319891fc20d195a8aeec561b4167"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 820,
        "start_column": 42,
        "end_line": 820,
        "end_column": 47
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u2203 m > n, \u2203 p, m * p \u2264 m + p",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L820"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ac24f7aeb25cb239d98d6c5ae7404f39e17ba3b09b00216b76ae03633cdedce9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 825,
        "start_column": 21,
        "end_line": 825,
        "end_column": 26
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (k : \u2115), k \u2208 S \u2194 0 < k \u2227 k * k \u2223 \u220f i \u2208 Finset.Icc 1 9, i.factorial\n\u22a2 S.card = 672",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L825"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4d9fe452bee5ab6415aadef64e52fe4da39b21319ce642623abb6ab776b5d3b3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 831,
        "start_column": 15,
        "end_line": 831,
        "end_column": 20
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : a \u2260 0\nh\u2081 : 8\u207b\u00b9 / 4\u207b\u00b9 - a\u207b\u00b9 = 1\n\u22a2 a = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L831"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8cc845ea81cdfceba7fa6e3fb1467e9c8a3670e83787e0fb7f7e1c5df369c4d6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 836,
        "start_column": 23,
        "end_line": 836,
        "end_column": 28
      },
      "debug_info": {
        "goal": "z : \u2102\nh\u2080 : 12 * Complex.normSq z = 2 * Complex.normSq (z + 2) + Complex.normSq (z ^ 2 + 1) + 31\n\u22a2 z + 6 / z = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L836"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1188968c6481018dc19bc997f80f38da08646ea6f2573228608fc9f2c1f53052"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 839,
        "start_column": 37,
        "end_line": 839,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u22a2 Real.log 27 / Real.log 3 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L839"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6600acdaa196e611dd7a45fb714e0e68b38404b06d66b5267f7759ae2a34208d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 842,
        "start_column": 21,
        "end_line": 842,
        "end_column": 26
      },
      "debug_info": {
        "goal": "\u22a2 1529 % 6 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L842"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "29027a493bed688450b2d26201522e4998fbb5ccf1b780b372917e52f6c37f68"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 845,
        "start_column": 20,
        "end_line": 845,
        "end_column": 25
      },
      "debug_info": {
        "goal": "\u22a2 91 ^ 2 = 8281",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L845"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3da4384a78bd15f1daa883806c2dafeb51f2712948c5fa2c5638cc9325c567ba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 853,
        "start_column": 53,
        "end_line": 853,
        "end_column": 58
      },
      "debug_info": {
        "goal": "d : \u2115 \u2192 \u2115\nh\u2080 : d 0 = 0\nh\u2081 : d 1 = 0\nh\u2082 : d 2 = 1\nh\u2083 : \u2200 n \u2265 3, d n = d (n - 1) + d (n - 3)\n\u22a2 Even (d 2021) \u2227 Odd (d 2022) \u2227 Even (d 2023)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L853"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "138057d99529ca786ceadd5f24141ef721c9b4ed1e232e0fc5e3e90c00290ffe"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 857,
        "start_column": 42,
        "end_line": 857,
        "end_column": 47
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2191n ^ (1 / \u2191n) < 2 - 1 / \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L857"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-14T11:12:57-04:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0a0c7026eb60205a79d57f4f74066d0f5b80710509069167b4a9206455d74ff8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 865,
        "start_column": 24,
        "end_line": 865,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : a * (b + c) = 152\nh\u2082 : b * (c + a) = 162\nh\u2083 : c * (a + b) = 170\n\u22a2 a * b * c = 720",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L865"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e9a1b4c6c936fe749adc41a83f00dda135ad09aae46ab05b9583f4c31110a4ed"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 871,
        "start_column": 23,
        "end_line": 871,
        "end_column": 28
      },
      "debug_info": {
        "goal": "a b c : \u2115\nh\u2080 : a \u2264 9 \u2227 b \u2264 9 \u2227 c \u2264 9\nh\u2081 : digits 10 (5 ^ 100 % 1000) = [c, b, a]\n\u22a2 a + b + c = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L871"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d349dcb7f38c26f1a63ce8dbf818d8df43a363558361afd9c4762e4967a5ea0f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 878,
        "start_column": 19,
        "end_line": 878,
        "end_column": 24
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : 0 < m \u2227 0 < n\nh\u2081 : m.gcd n = 8\nh\u2082 : m.lcm n = 112\n\u22a2 72 \u2264 m + n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L878"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "adda7d7237f3606afbc0a14b72e30b8ad8dd0e2d435aada8e3a38ebdfdb0bdad"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 882,
        "start_column": 45,
        "end_line": 882,
        "end_column": 50
      },
      "debug_info": {
        "goal": "t : \u211d\n\u22a2 (2 ^ t - 3 * t) * t / 4 ^ t \u2264 1 / 12",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L882"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8e48b1229655ebd86e73a005089fa5774e3dbb60a8a176d7476f7f1c8499689f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 886,
        "start_column": 44,
        "end_line": 886,
        "end_column": 49
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 x ^ 2 - 14 * x + 3 \u2265 7 ^ 2 - 14 * 7 + 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L886"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "eea9024f4ce6dd5bff454107f8a7a99bec6a32a0bd043ecb1757e70f6b6b3834"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 891,
        "start_column": 19,
        "end_line": 891,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 \u2264 x \u2227 x \u2264 2 * Real.pi \u2227 tan (2 * x) = cos (x / 2)\n\u22a2 S.card = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L891"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5299490aa04eac484217ed6efc0a960cc5e5648237560a02e6efdc75520a1f5c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 897,
        "start_column": 20,
        "end_line": 897,
        "end_column": 25
      },
      "debug_info": {
        "goal": "i m o : \u2115\nh\u2080 : i \u2260 m \u2227 m \u2260 o \u2227 o \u2260 i\nh\u2081 : i * m * o = 2001\n\u22a2 i + m + o \u2264 671",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L897"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d6f3743905e99363788136822f506a96dfa4cf9933b5e5c5d02ff93e0bc77485"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 902,
        "start_column": 19,
        "end_line": 902,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 \u2264 x \u2227 x \u2264 Real.pi \u2227 sin (Real.pi / 2 * cos x) = cos (Real.pi / 2 * sin x)\n\u22a2 S.card = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L902"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "480d62b079e2fb84e4e4939b9890e5373aeebf30e7f5cb06fde3aa63a3debc31"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 907,
        "start_column": 62,
        "end_line": 907,
        "end_column": 67
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\n\u22a2 a ^ 2 / b + b ^ 2 / c + c ^ 2 / d + d ^ 2 / a \u2265 a + b + c + d",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L907"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0a2300a232acfc195f14aaffeaa552d4c9e3d37df2759ef53ec3069cc84d3190"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 910,
        "start_column": 41,
        "end_line": 910,
        "end_column": 46
      },
      "debug_info": {
        "goal": "\u22a2 16 ^ 17 * 17 ^ 18 * 18 ^ 19 % 10 = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L910"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "56cbffbc50f85d7a571c9ed346cc65744918b2b201f6d217cb281769bc095334"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 916,
        "start_column": 15,
        "end_line": 916,
        "end_column": 20
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n < 101\nh\u2081 : 101 \u2223 123456 - n\n\u22a2 n = 34",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L916"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e9326c170173eea1c23ddd2b48fa17348fa0647db552a5289db8f2886fbbacd8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 923,
        "start_column": 14,
        "end_line": 923,
        "end_column": 19
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : 5 * x = y\nh\u2082 : \u2191x - 3 + (\u2191y - 3) = 30\n\u22a2 x = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L923"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "eea2ece0bbac5958d728687650114bf14618c1129d280ee69bb67effc9d28b2b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 930,
        "start_column": 35,
        "end_line": 930,
        "end_column": 40
      },
      "debug_info": {
        "goal": "x : \u211d\nn : \u2115\nh\u2080 : -1 < x\nh\u2081 : 0 < n\n\u22a2 1 + \u2191n * x \u2264 (1 + x) ^ n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L930"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "69193f7930fc4e66434e6e0ea810b9f5a986f760f193b9da808e699fe37c8a82"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 937,
        "start_column": 14,
        "end_line": 937,
        "end_column": 19
      },
      "debug_info": {
        "goal": "c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = c * x ^ 3 - 9 * x + 3\nh\u2081 : f 2 = 9\n\u22a2 c = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L937"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0bcc610042f1b1818aa2b91c6dc71be2e9a9ce8654a12b3dec1e418c0d717a9c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 941,
        "start_column": 51,
        "end_line": 941,
        "end_column": 56
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : x \u2260 1 \u2227 y \u2260 1\nh\u2081 : Real.log \u2191x / Real.log 2 = Real.log 16 / Real.log \u2191y\nh\u2082 : x * y = 64\n\u22a2 (Real.log (\u2191x / \u2191y) / Real.log 2) ^ 2 = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L941"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5c27588f0913aa945a1787b5afe684986c5dde4ef9667fb5ab432ebaa2747d2d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 945,
        "start_column": 33,
        "end_line": 945,
        "end_column": 38
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 11 \u2223 10 ^ n - (-1) ^ n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L945"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "83bb07aa90f0b0800f42927c6e81e72ceed66d4613a6fcd88a871746ed821f12"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 951,
        "start_column": 38,
        "end_line": 951,
        "end_column": 43
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nn : \u2115\nh\u2080 : \u2211 x \u2208 Finset.range n, a x = \u2191n\n\u22a2 \u220f x \u2208 Finset.range n, a x \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L951"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7dbeda2731bf4f112c594ae97d85e5a60f8ed1da36eb9084dfaf8d92d0086bf2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 957,
        "start_column": 77,
        "end_line": 957,
        "end_column": 82
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 NNReal \u2192 \u211d\nh\u2080 : \u2200 (x : NNReal), f 1 x = \u2191x\nh\u2081 : \u2200 (x : NNReal) (n : \u2115), f (n + 1) x = f n x * (f n x + 1 / \u2191n)\n\u22a2 \u2203! a, \u2200 (n : \u2115), 0 < n \u2192 0 < f n a \u2227 f n a < f (n + 1) a \u2227 f (n + 1) a < 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L957"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "37ffaba48ae54a3577fea572995a9c8f0294ba5847612c18f0f85ecbc1bfa1c6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 963,
        "start_column": 35,
        "end_line": 963,
        "end_column": 40
      },
      "debug_info": {
        "goal": "a b : \u2102\nh\u2080 : a ^ 3 - 8 = 0\nh\u2081 : b ^ 3 - 8 * b ^ 2 - 8 * b + 64 = 0\n\u22a2 \u2016a - b\u2016 \u2264 2 * \u221a21",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L963"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:45:32+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ad7866aefa13ad47903895f9a53fe5aa27dc4bd256565b25b481a11498c4ea3a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 969,
        "start_column": 24,
        "end_line": 969,
        "end_column": 29
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : (x + y) / 2 = 7\nh\u2081 : \u221a(x * y) = \u221a19\n\u22a2 x ^ 2 + y ^ 2 = 158",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L969"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "59415e5f29ae8358c375c86ccd2b72776c1eb30bc985fcc93525706a2c9276bc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 974,
        "start_column": 29,
        "end_line": 974,
        "end_column": 34
      },
      "debug_info": {
        "goal": "r : \u211d\nh\u2080 : r ^ (1 / 3) + 1 / r ^ (1 / 3) = 3\n\u22a2 r ^ 3 + 1 / r ^ 3 = 5778",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L974"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "83a2a164cbe290da54f65717998dd1b72c7e63018ece3903a9360130b2d7282c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 978,
        "start_column": 99,
        "end_line": 978,
        "end_column": 104
      },
      "debug_info": {
        "goal": "x : NNReal\n\u22a2 \u221a(60 * \u2191x) * \u221a(12 * \u2191x) * \u221a(63 * \u2191x) = 36 * \u2191x * \u221a(35 * \u2191x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L978"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ae21fa96c4d5608afb47e88dfc84a002deefd6e8312a12385a73781b6adffabd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 983,
        "start_column": 14,
        "end_line": 983,
        "end_column": 19
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 3 / 2 / 3 = x / 10\n\u22a2 x = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L983"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1345d7df7228916be251b4670729aa2032c49dff581ef8130c3a917a0e4350f5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 986,
        "start_column": 34,
        "end_line": 986,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 (239 + 174 + 83) % 10 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L986"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7784f895bfa7bd4d98885c51f5f65e265db8935f5ecccf5149bfa653e10e56ae"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 993,
        "start_column": 30,
        "end_line": 993,
        "end_column": 35
      },
      "debug_info": {
        "goal": "p q : \u2115\nh\u2080 : Nat.Prime p \u2227 Nat.Prime q\nh\u2081 : 4 \u2264 p \u2227 p \u2264 18\nh\u2082 : 4 \u2264 q \u2227 q \u2264 18\n\u22a2 p * q - (p + q) \u2260 194",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L993"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "eedd0d5338c18c23650dbe40433b8801c637256d5051f08e563935d75efa21dd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1000,
        "start_column": 22,
        "end_line": 1000,
        "end_column": 27
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115 \u2192 \u211d\nh\u2080 : \u2200 (x : \u2115), 0 < x \u2192 f x x = \u2191x\nh\u2081 : \u2200 (x y : \u2115), 0 < x \u2227 0 < y \u2192 f x y = f y x\nh\u2082 : \u2200 (x y : \u2115), 0 < x \u2227 0 < y \u2192 (\u2191x + \u2191y) * f x y = \u2191y * f x (x + y)\n\u22a2 f 14 52 = 364",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1000"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8b1534e0ebdbd4c463689ee5c00ec0e95db8f7b0c6fd569aa42e0ff94568c407"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1005,
        "start_column": 53,
        "end_line": 1005,
        "end_column": 58
      },
      "debug_info": {
        "goal": "a : \u211d\nh\u2080 : a = 8\n\u22a2 (16 * (a ^ 2) ^ (1 / 3)) ^ (1 / 3) = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-14T11:12:57-04:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8daa873c49ce4360a8e20875ac16594c68ed450050e6591e2f27e79ff3b958db"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1009,
        "start_column": 103,
        "end_line": 1009,
        "end_column": 108
      },
      "debug_info": {
        "goal": "f : \u2124 \u2192 \u2124\n\u22a2 (\u2200 (a b : \u2124), f (2 * a) + 2 * f b = f (f (a + b))) \u2194 \u2200 (z : \u2124), f z = 0 \u2228 \u2203 c, \u2200 (z : \u2124), f z = 2 * z + c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1009"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "eab5766c60ca17acd17adef4961a235af168cbc68ac0bb4df7cd2d9cc0c4dd88"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1015,
        "start_column": 22,
        "end_line": 1015,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 3 * a + 2 * b = 5\nh\u2081 : a + b = 2\n\u22a2 a = 1 \u2227 b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1015"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ea9c35f75ec8c672217471e4f235e9f68d26d7039c149b03dca7dd42f01b983f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1021,
        "start_column": 20,
        "end_line": 1021,
        "end_column": 25
      },
      "debug_info": {
        "goal": "f g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x + 1\nh\u2081 : \u2200 (x : \u211d), g x = x ^ 2 + 3\n\u22a2 f (g 2) = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1021"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b39797d44ea625169eb78de405f843145fda28b03ed21501ba6704748418a5e0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1027,
        "start_column": 25,
        "end_line": 1027,
        "end_column": 30
      },
      "debug_info": {
        "goal": "a d : \u211d\nh\u2080 : a + 6 * d = 30\nh\u2081 : a + 10 * d = 60\n\u22a2 a + 20 * d = 135",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1027"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c85a8c11ac2db08eefd973ec21e11b4e20e086fd84b09f5d45a6cc262d9dbeef"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1033,
        "start_column": 19,
        "end_line": 1033,
        "end_column": 24
      },
      "debug_info": {
        "goal": "f : \u2124 \u2192 \u2124\nh\u2080 : \u2200 (n : \u2124), 1000 \u2264 n \u2192 f n = n - 3\nh\u2081 : \u2200 n < 1000, f n = f (f (n + 5))\n\u22a2 f 84 = 997",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1033"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "535648b494d6d296eb7915ee2a2a2983bd01d016f0e127cea9cecbf3cac6a606"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1040,
        "start_column": 16,
        "end_line": 1040,
        "end_column": 21
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = a * x ^ 4 - b * x ^ 2 + x + 5\nh\u2082 : f (-3) = 2\n\u22a2 f 3 = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1040"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ec01f8bad4265ba0c3e86c1ec3018ddcf543bcef8f15d53d3cf72c22dd9481da"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1046,
        "start_column": 42,
        "end_line": 1046,
        "end_column": 47
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 + (18 * x + 30) - 2 * \u221a(x ^ 2 + (18 * x + 45))\nh\u2081 : Fintype \u2191(f \u207b\u00b9' {0})\n\u22a2 \u220f x \u2208 (f \u207b\u00b9' {0}).toFinset, x = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1046"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "56b5f946284e6aff5b1037ff5fdeb40637ada7dd5c769b49385c11e0e8cca1c6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1051,
        "start_column": 48,
        "end_line": 1051,
        "end_column": 53
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 (3 ^ 2 ^ n - 1) % 2 ^ (n + 3) = 2 ^ (n + 2)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1051"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4f2f6a57c78260c4e53aa886648e655dd8bc39035002aa065add8cd94dc6d2e9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1054,
        "start_column": 41,
        "end_line": 1054,
        "end_column": 46
      },
      "debug_info": {
        "goal": "\u22a2 1 * 3 ^ 3 + 2 * 3 ^ 2 + 2 * 3 + 2 = 53",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1054"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e1d421ebe070ed9e23406c86121fe7378d2d01cb558d92e4f41e59573de49a9e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1062,
        "start_column": 27,
        "end_line": 1062,
        "end_column": 32
      },
      "debug_info": {
        "goal": "a b c d : \u2115\nh\u2080 : a * b * c * d = factorial 8\nh\u2081 : a * b + a + b = 524\nh\u2082 : b * c + b + c = 146\nh\u2083 : c * d + c + d = 104\n\u22a2 \u2191a - \u2191d = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1062"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9318bd30ba154f54c4f944647469b3e25d94708b9fac4effcecde3b978687784"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1065,
        "start_column": 43,
        "end_line": 1065,
        "end_column": 48
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.Icc 1 12, k) % 4 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1065"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0f77c550ab611c3f1bff6f7f384fc30c4df4dd42ed06d63f5c516db1e76ba4e0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1070,
        "start_column": 67,
        "end_line": 1070,
        "end_column": 72
      },
      "debug_info": {
        "goal": "x : \u2124\nh\u2080 : x = 4\n\u22a2 (3 * x - 2) * (4 * x + 1) - (3 * x - 2) * (4 * x) + 1 = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1070"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "03493da99a76ea10125f4258feccdec21882d2b2c3b1746acc51fcce9f4f6a79"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1075,
        "start_column": 23,
        "end_line": 1075,
        "end_column": 28
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 |2 - x| = 3\n\u22a2 \u2211 k \u2208 S, k = 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1075"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "50fb4338633f7dec397db4022180f81c4d6beff063a8a287bf7ccacb7cb623c3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1081,
        "start_column": 17,
        "end_line": 1081,
        "end_column": 22
      },
      "debug_info": {
        "goal": "a d : \u211d\nh\u2080 : \u2211 k \u2208 Finset.range 5, (a + \u2191k * d) = 70\nh\u2081 : \u2211 k \u2208 Finset.range 10, (a + \u2191k * d) = 210\n\u22a2 a = 42 / 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1081"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d5314bba601126d46da8f7ec41eaa3ad7d49280e637786eea4bceb518b998221"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1084,
        "start_column": 34,
        "end_line": 1084,
        "end_column": 39
      },
      "debug_info": {
        "goal": "\u22a2 121 * 122 * 123 % 4 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1084"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "655f000007526052541420f703ee4a1fdcb304837611c4dc7fceec93f8d17bae"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1095,
        "start_column": 16,
        "end_line": 1095,
        "end_column": 21
      },
      "debug_info": {
        "goal": "x : \u211d\nn : \u2115\na : \u2115 \u2192 \u211d\nh\u2081 : \u2200 (m : \u2115), a (m + 1) - a m = a (m + 2) - a (m + 1)\nh\u2082 : a 1 = 2 * x - 3\nh\u2083 : a 2 = 5 * x - 11\nh\u2084 : a 3 = 3 * x + 1\nh\u2085 : a n = 2009\n\u22a2 n = 502",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1095"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2d1268ca3a03dc720daf17e3377ed55ad43b6fbbfc2a332eeecd0dbfbb73c8ef"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1100,
        "start_column": 22,
        "end_line": 1100,
        "end_column": 27
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2260 -2 \u2192 f x = 1 / (x + 2)\n\u22a2 f (f 1) = 3 / 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1100"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "98b1657a2f6108c18f2fa9bfd1b5233e16e829465a5d128b8ed3350758d255ba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1107,
        "start_column": 16,
        "end_line": 1107,
        "end_column": 21
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nf : \u2102 \u2192 \u2102\nh\u2080 : \u2200 (z : \u2102), f z = z ^ 6 - 10 * z ^ 5 + \u2191a * z ^ 4 + \u2191b * z ^ 3 + \u2191c * z ^ 2 + \u2191d * z + 16\nh\u2081 : \u2200 (z : \u2102), f z = 0 \u2192 z.im = 0 \u2227 0 < z.re \u2227 \u2191\u230az.re\u230b = z.re\n\u22a2 b = -88",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1107"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "47a14fc0a8aa02d14a608db3dbec4a81f4b27730b4733cf66dc7143db2062cad"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1113,
        "start_column": 22,
        "end_line": 1113,
        "end_column": 27
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 * b ^ 3 = 32 / 27\nh\u2081 : a / b ^ 3 = 27 / 4\n\u22a2 a + b = 8 / 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1113"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3addc301d2a924f88b27660e2cbaf613632f3f8438697848914613b52e545388"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1121,
        "start_column": 15,
        "end_line": 1121,
        "end_column": 20
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : Even m\nh\u2081 : Even n\nh\u2082 : m - n = 2\nh\u2083 : m * n = 288\n\u22a2 m = 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1121"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a947fa7123da3a800de07a41de7cae466726d556ca835880a787918646d47e68"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1129,
        "start_column": 28,
        "end_line": 1129,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a \u2260 b\nh\u2082 : |a - 1 / a| = 1\nh\u2083 : |b - 1 / b| = 1\n\u22a2 a + b = \u221a5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1129"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e34d551417099a8b59dfd28a24b1438331f99202bfe2a0d8d5081b6555eac665"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1137,
        "start_column": 82,
        "end_line": 1137,
        "end_column": 87
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : c < a + b\nh\u2082 : b < a + c\nh\u2083 : a < b + c\n\u22a2 a ^ 2 * (b + c - a) + b ^ 2 * (c + a - b) + c ^ 2 * (a + b - c) \u2264 3 * a * b * c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1137"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f2703702c5c1db0a93963ff58255f01169dae8e4cfae789db28439f7ba9524b8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1145,
        "start_column": 35,
        "end_line": 1145,
        "end_column": 40
      },
      "debug_info": {
        "goal": "k t m n : \u2115\nh\u2080 : Nat.Prime m \u2227 Nat.Prime n\nh\u2081 : t < k\nh\u2082 : k ^ 2 - m * k + n = 0\nh\u2083 : t ^ 2 - m * t + n = 0\n\u22a2 m ^ n + n ^ m + k ^ t + t ^ k = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1145"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "22b79c3e04d0f3aff084809144281bab1a10eb20830b97427a95f5e4d5f58353"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1152,
        "start_column": 28,
        "end_line": 1152,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : x + y = 17402\nh\u2081 : 10 \u2223 x\nh\u2082 : x / 10 = y\n\u22a2 \u2191x - \u2191y = 14238",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1152"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "790ce8d1faa3c5cafe626bada42ee1b7a853c23ac5d92f8f75db29236372f76b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1160,
        "start_column": 31,
        "end_line": 1160,
        "end_column": 36
      },
      "debug_info": {
        "goal": "a b : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), a (n + 1) = \u221a3 * a n - b n\nh\u2081 : \u2200 (n : \u2115), b (n + 1) = \u221a3 * b n + a n\nh\u2082 : a 100 = 2\nh\u2083 : b 100 = 4\n\u22a2 a 1 + b 1 = 1 / 2 ^ 98",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1160"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "29a45dee4fba7e689b952d6aab54cae1f269bf014dab3cbe4195dae5df4d572a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1167,
        "start_column": 66,
        "end_line": 1167,
        "end_column": 71
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : a \u2264 b \u2227 b \u2264 c\nh\u2081 : a + b + c = 2\nh\u2082 : a * b + b * c + c * a = 1\n\u22a2 0 \u2264 a \u2227 a \u2264 1 / 3 \u2227 1 / 3 \u2264 b \u2227 b \u2264 1 \u2227 1 \u2264 c \u2227 c \u2264 4 / 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1167"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "702f626764991067b1406e5fe4f0fafb5d7ef6c1ec56f3ec146870d1b87c1fa1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1170,
        "start_column": 21,
        "end_line": 1170,
        "end_column": 26
      },
      "debug_info": {
        "goal": "\u22a2 194 % 11 = 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1170"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "76bc0fe35ea0dc798c6347a1565ef92eb68300ebe724a8ecff1532dcdc88888f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1175,
        "start_column": 20,
        "end_line": 1175,
        "end_column": 25
      },
      "debug_info": {
        "goal": "S : Finset \u2124\nh\u2080 : \u2200 (x : \u2124), x \u2208 S \u2194 \u2191|x| < 3 * Real.pi\n\u22a2 S.card = 19",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1175"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c385d7b97876f0b8b053c4a06dd2c461084ba9b151aa13b3cda185147865e7c8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1182,
        "start_column": 42,
        "end_line": 1182,
        "end_column": 47
      },
      "debug_info": {
        "goal": "a b : \u211d\nn : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : 0 < n\n\u22a2 ((a + b) / 2) ^ n \u2264 (a ^ n + b ^ n) / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1182"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c611346d555b1cc747f3e8cd8dda18bec10a5ce4695336fca80d92b55b6cf7a0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1189,
        "start_column": 38,
        "end_line": 1189,
        "end_column": 43
      },
      "debug_info": {
        "goal": "a : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : 0 < a\nh\u2081 : \u2200 (x : \u211d), f (x + a) = 1 / 2 + \u221a(f x - f x ^ 2)\n\u22a2 \u2203 b > 0, \u2200 (x : \u211d), f (x + b) = f x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1189"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1235157b2114c9af5d7571671e7eae723427d2285663e46b450150270261c99d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1197,
        "start_column": 31,
        "end_line": 1197,
        "end_column": 36
      },
      "debug_info": {
        "goal": "a b x y : \u211d\nh\u2080 : a * x + b * y = 3\nh\u2081 : a * x ^ 2 + b * y ^ 2 = 7\nh\u2082 : a * x ^ 3 + b * y ^ 3 = 16\nh\u2083 : a * x ^ 4 + b * y ^ 4 = 42\n\u22a2 a * x ^ 5 + b * y ^ 5 = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1197"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5ef27decf6bbcab4dc0691cc0b89fdbc951a552be83ca8d0835ba26cab944a49"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1200,
        "start_column": 37,
        "end_line": 1200,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u22a2 (29 * 79 + 31 * 81) % 10 = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1200"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e34be962e90bebe94594b68ed36bb8a347cd8c2993c5cbf332969c44fff5b131"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1203,
        "start_column": 146,
        "end_line": 1203,
        "end_column": 151
      },
      "debug_info": {
        "goal": "\u22a2 \u221a(Real.log 6 / Real.log 2 + Real.log 6 / Real.log 3) = \u221a(Real.log 3 / Real.log 2) + \u221a(Real.log 2 / Real.log 3)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1203"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7b294b388843a95e222e798fa96561873e95786b0b015df2a604c3d99fa67563"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1208,
        "start_column": 19,
        "end_line": 1208,
        "end_column": 24
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 < x \u2227 x \u2264 2 * Real.pi \u2227 1 - 3 * sin x + 5 * cos (3 * x) = 0\n\u22a2 S.card = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1208"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6f455a05a5be1e22481c1ad6f3d16e1bc8103a4740a4abbcb4d3586c4fe0eea8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1214,
        "start_column": 19,
        "end_line": 1214,
        "end_column": 24
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9 \u2227 b \u2264 9\nh\u2081 : (10 * a + b) ^ 3 = 912673\n\u22a2 a + b = 16",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1214"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d7950ae447673afe38b6442da250abb7bee7c801a4b4a0ebd1fbf8fecc40a3b4"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1222,
        "start_column": 28,
        "end_line": 1222,
        "end_column": 33
      },
      "debug_info": {
        "goal": "a b : \u2124\nh\u2080 : Odd a\nh\u2081 : 4 \u2223 b\nh\u2082 : b \u2265 0\n\u22a2 (a ^ 2 + b ^ 2) % 8 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1222"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ac854573dd8890b4ff45052194160c291396ee21339a7792349263e58e26576f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1228,
        "start_column": 16,
        "end_line": 1228,
        "end_column": 21
      },
      "debug_info": {
        "goal": "b : \u2115\nh\u2080 : Nat.lcm 120 b = 3720\nh\u2081 : Nat.gcd 120 b = 8\n\u22a2 b = 248",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1228"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c181154356f1b13f94816c350d2f81f9513fcff6d0c400f9069aa165ade606cb"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1235,
        "start_column": 29,
        "end_line": 1235,
        "end_column": 34
      },
      "debug_info": {
        "goal": "m : \u211a\nh\u2080 : 0 < m\nh\u2081 : \u2211 k \u2208 Finset.Icc 1 35, sin (5 * \u2191k * Real.pi / 180) = tan (\u2191m * Real.pi / 180)\nh\u2082 : \u2191m.num / \u2191m.den < 90\n\u22a2 \u2191m.den + m.num = 177",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1235"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "38b1a12c75c33d7709d1a124d3b7665994a500ecea8311854cf3e2f46e8fed91"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1240,
        "start_column": 14,
        "end_line": 1240,
        "end_column": 19
      },
      "debug_info": {
        "goal": "y : \u211d\nh\u2080 : y + 6 + y = 2 * 12\n\u22a2 y = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1240"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c8425b7662d22af20acefa5c4aff316c909270bf3fe1410636b91ad8bc7a1d58"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1255,
        "start_column": 30,
        "end_line": 1255,
        "end_column": 35
      },
      "debug_info": {
        "goal": "x y z : \u211d\na : \u2115 \u2192 \u211d\nh\u2080 : 0 < a 0 \u2227 0 < a 4 \u2227 0 < a 8\nh\u2081 : a 1 < 0 \u2227 a 2 < 0\nh\u2082 : a 3 < 0 \u2227 a 5 < 0\nh\u2083 : a 6 < 0 \u2227 a 7 < 0\nh\u2084 : 0 < a 0 + a 1 + a 2\nh\u2085 : 0 < a 3 + a 4 + a 5\nh\u2086 : 0 < a 6 + a 7 + a 8\nh\u2087 : a 0 * x + a 1 * y + a 2 * z = 0\nh\u2088 : a 3 * x + a 4 * y + a 5 * z = 0\nh\u2089 : a 6 * x + a 7 * y + a 8 * z = 0\n\u22a2 x = 0 \u2227 y = 0 \u2227 z = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1255"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e4e4f91cb8f413103e2b8d6f706b98c1b1f1aef7b86b76ec5a678cd8328ee7b2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1264,
        "start_column": 15,
        "end_line": 1264,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x y : \u211d\nn : NNReal\nh\u2080 : x < 0 \u2227 y < 0\nh\u2081 : |y| = 6\nh\u2082 : \u221a((x - 8) ^ 2 + (y - 3) ^ 2) = 15\nh\u2083 : \u221a(x ^ 2 + y ^ 2) = \u221a\u2191n\n\u22a2 n = 52",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1264"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "de7698d62cbd6fcc1af6542bed726b0cce0861704ea62a262ac80a7f490ab136"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1267,
        "start_column": 48,
        "end_line": 1267,
        "end_column": 53
      },
      "debug_info": {
        "goal": "\u22a2 (\u2211 k \u2208 Finset.range 101, 2 ^ k) % 7 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1267"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "37dd5545c11ea2ce8ce0b0c9827e65fd344322acc56e7381c82f914966ac6da5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1271,
        "start_column": 91,
        "end_line": 1271,
        "end_column": 96
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u00ac5 \u2223 \u2211 k \u2208 Finset.range (n + 1), (2 * n + 1).choose (2 * k + 1) * 2 ^ (3 * k)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1271"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2b17cdba40a640e1913f242adbaf2778287bc0d301857d45c1b0589a13278808"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1278,
        "start_column": 28,
        "end_line": 1278,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x : \u211d\nm : \u211a\nh\u2080 : 1 / cos x + tan x = 22 / 7\nh\u2081 : 1 / sin x + 1 / tan x = \u2191m\n\u22a2 \u2191m.den + m.num = 44",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1278"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "caed895869840aeb02db7b6ee1cfe127094b4a01052a0e50af3b2c0420fe1d46"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1284,
        "start_column": 39,
        "end_line": 1284,
        "end_column": 44
      },
      "debug_info": {
        "goal": "m n p q : \u211d\nh\u2080 : p = 2 ^ m\nh\u2081 : q = 3 ^ n\n\u22a2 p ^ (2 * n) * q ^ m = 12 ^ (m * n)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1284"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f847d3ceb7a39a1b70aa35e05be44edd6147b57c1e5106470eaf2817ed506726"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1290,
        "start_column": 14,
        "end_line": 1290,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a : \u2115\nh\u2080 : Even a\nh\u2081 : \u2191(\u2211 k \u2208 Finset.range 8, (2 * k + 1)) - \u2191(\u2211 k \u2208 Finset.range 5, (a + 2 * k)) = 4\n\u22a2 a = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1290"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "652079b26cf424ccb6fe1fca235832956e0b51e6bf550b059154796d66586a5b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1295,
        "start_column": 22,
        "end_line": 1295,
        "end_column": 27
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : |x - 1| + |x| + |x + 1| = x + 2\n\u22a2 0 \u2264 x \u2227 x \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1295"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "40189736ec45b9711d132d2ef2b230c3e112a162306da19c385534dcd2933ee1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1304,
        "start_column": 15,
        "end_line": 1304,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 < x\nh\u2081 : x ^ 2 - 10 * x - 29 \u2260 0\nh\u2082 : x ^ 2 - 10 * x - 45 \u2260 0\nh\u2083 : x ^ 2 - 10 * x - 69 \u2260 0\nh\u2084 : 1 / (x ^ 2 - 10 * x - 29) + 1 / (x ^ 2 - 10 * x - 45) - 2 / (x ^ 2 - 10 * x - 69) = 0\n\u22a2 x = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1304"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b02a5bbc3cb19a609ac8c48d4e8b46492d2fb4d4ac3d51bbdfb2712be6db66f2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1311,
        "start_column": 20,
        "end_line": 1311,
        "end_column": 25
      },
      "debug_info": {
        "goal": "m n : \u2115\nh\u2080 : 1 < m\nh\u2081 : 1 < n\nh\u2082 : m * n = 2005\n\u22a2 m + n = 406",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1311"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "01899b8b32d0c6e704b0fed3e30e46e704e3809c540c5d1ffe48600b9a6f0fa0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1316,
        "start_column": 44,
        "end_line": 1316,
        "end_column": 49
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n = 11\n\u22a2 (1 / 4) ^ (n + 1) * 2 ^ (2 * n) = 1 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1316"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "dea10d9ed5191948fd181d1fc04aaef732cefd7efcbf18fcd3f5a2ab82180137"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1321,
        "start_column": 87,
        "end_line": 1321,
        "end_column": 92
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nh\u2080 : \u2211 x \u2208 Finset.range 100, a (x + 1) ^ 2 = 1\n\u22a2 \u2211 x \u2208 Finset.range 99, a (x + 1) ^ 2 * a (x + 2) + a 100 ^ 2 * a 1 < 12 / 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1321"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "05d7b720c125c16cb7a97c8816bf6f23e581b60b87046328518a717b6fd2a7b5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1329,
        "start_column": 18,
        "end_line": 1329,
        "end_column": 23
      },
      "debug_info": {
        "goal": "x y z : \u211d\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\nh\u2081 : x + 1 / y = 4\nh\u2082 : y + 1 / z = 1\nh\u2083 : z + 1 / x = 7 / 3\n\u22a2 x * y * z = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1329"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "97508ccbeae7b8a194b79407b227d32ddd587b3daec3e158636da801daf56a0d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1332,
        "start_column": 37,
        "end_line": 1332,
        "end_column": 42
      },
      "debug_info": {
        "goal": "\u22a2 (Complex.I / 2) ^ 2 = -(1 / 4)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1332"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e5395ac350129237d0a8de9948289b35b001b04d21ffe315fe83abeeba3d1284"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1340,
        "start_column": 17,
        "end_line": 1340,
        "end_column": 22
      },
      "debug_info": {
        "goal": "x p : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : 0 < p \u2227 p < 15\nh\u2081 : p \u2264 x \u2227 x \u2264 15\nh\u2082 : f x = |x - p| + |x - 15| + |x - p - 15|\n\u22a2 15 \u2264 f x",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1340"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3f2ecaad750bee9e53a0e623e5d5027809945a76da2cd1d5d62d451d2630e868"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1345,
        "start_column": 22,
        "end_line": 1345,
        "end_column": 27
      },
      "debug_info": {
        "goal": "s : \u211d \u2192 \u211d \u2192 \u211d\nh\u2080 : \u2200 (x y : \u211d), x \u2260 0 \u2192 y \u2260 0 \u2192 s x y = (1 / y - 1 / x) / (x - y)\n\u22a2 s 3 11 = 1 / 33",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1345"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "85be8f899128fa66a02d771a4e6bf131c92fa072c3f8e99e47eba6947ad9e552"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1352,
        "start_column": 34,
        "end_line": 1352,
        "end_column": 39
      },
      "debug_info": {
        "goal": "N : \u2115\nf : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), 0 < n \u2192 f n = \u2191n.divisors.card / \u2191n ^ (1 / 3)\nh\u2081 : \u2200 (n : \u2115), n \u2260 N \u2192 0 < n \u2192 f n < f N\n\u22a2 (digits 10 N).sum = 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1352"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "38a9c9571d661ba1ffbf4792349278bd4359dcd12da67ce6735a9fc0e15419f9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1359,
        "start_column": 29,
        "end_line": 1359,
        "end_column": 34
      },
      "debug_info": {
        "goal": "a : \u211a\nS : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 \u2191\u230ax\u230b * (x - \u2191\u230ax\u230b) = \u2191a * x ^ 2\nh\u2081 : \u2211 k \u2208 S, k = 420\n\u22a2 \u2191a.den + a.num = 929",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1359"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ae6b7fb90ee622e05f83a9995e1d2add10c23680e5164e3762872cbaa8df315f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1364,
        "start_column": 14,
        "end_line": 1364,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : \u00acNat.Prime (7 + 30 * n)\n\u22a2 6 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1364"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3026e1d11dbb46b973f030976f4571d9ee333cfb9660b16f130a7d22064a96f6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1371,
        "start_column": 76,
        "end_line": 1371,
        "end_column": 81
      },
      "debug_info": {
        "goal": "a b c d e f g : \u211d\nh\u2080 : a + 4 * b + 9 * c + 16 * d + 25 * e + 36 * f + 49 * g = 1\nh\u2081 : 4 * a + 9 * b + 16 * c + 25 * d + 36 * e + 49 * f + 64 * g = 12\nh\u2082 : 9 * a + 16 * b + 25 * c + 36 * d + 49 * e + 64 * f + 81 * g = 123\n\u22a2 16 * a + 25 * b + 36 * c + 49 * d + 64 * e + 81 * f + 100 * g = 334",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1371"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7a5eebaae23f05bd5fcc2b47ff982c7c4463c4a6b1ef761030565dccef78c09c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1378,
        "start_column": 17,
        "end_line": 1378,
        "end_column": 22
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 2 \u2264 n\nh\u2081 : \u2203 x, x ^ 3 = n\nh\u2082 : \u2203 t, t ^ 4 = n\n\u22a2 4096 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1378"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9fe06c5ff097965e411052e463276705309d899e0f2af6c5a4138e5efa82b7ca"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1384,
        "start_column": 18,
        "end_line": 1384,
        "end_column": 23
      },
      "debug_info": {
        "goal": "m b : \u211d\nh\u2080 : m * 7 + b = -1\nh\u2081 : m * -1 + b = 7\n\u22a2 m + b = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1384"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "682c431d702e06fb4d07a6755860efb006d92d359a4c88245b153058e4188875"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1390,
        "start_column": 14,
        "end_line": 1390,
        "end_column": 19
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : \u2203 k > 0, 2 ^ k = (a + b ^ 2) * (b + a ^ 2)\n\u22a2 a = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1390"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "439a0e5e90d492e8fa690cb4a7b36d81a487e0a263e7a9a9a0ae5843b55d89ab"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1395,
        "start_column": 15,
        "end_line": 1395,
        "end_column": 20
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 5 + 500 / 100 * 10 = 110 / 100 * x\n\u22a2 x = 50",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1395"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e6390ba3d70e963631e530a2c8d6c985fc391aed8f86e0ea2c563d00f85bf37c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1404,
        "start_column": 23,
        "end_line": 1404,
        "end_column": 28
      },
      "debug_info": {
        "goal": "k m n : \u2115\nt : \u211d\nh\u2080 : 0 < k \u2227 0 < m \u2227 0 < n\nh\u2081 : m.gcd n = 1\nh\u2082 : (1 + sin t) * (1 + cos t) = 5 / 4\nh\u2083 : (1 - sin t) * (1 - cos t) = \u2191m / \u2191n - \u221a\u2191k\n\u22a2 k + m + n = 27",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1404"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "20c37255dd7947d4e9c91138834f9d026a8e64735e630cb3365667c88d59ca51"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1409,
        "start_column": 24,
        "end_line": 1409,
        "end_column": 29
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n % 5 = 3\n\u22a2 2 * n % 5 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1409"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "38727672903dda6fa10f1df4447b5e25d513c147c736f532ddae4c9fc98562a0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1414,
        "start_column": 62,
        "end_line": 1414,
        "end_column": 67
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 0\n\u22a2 12 / (x * x) * (x ^ 4 / (14 * x)) * (35 / (3 * x)) = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1414"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0431a0c2922a9cb911257f10f1c99b49d6f0ae33710d8fdc3b9ac6a48efea67c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1420,
        "start_column": 46,
        "end_line": 1420,
        "end_column": 51
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : 3 \u2223 n\n\u22a2 (n + 4 + (n + 6) + (n + 8)) % 9 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1420"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "13f260714a57a1c4488df9bd50741de71ea372b832c05f61fff0dbd62d30892e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Test.lean",
        "start_line": 1427,
        "start_column": 24,
        "end_line": 1427,
        "end_column": 29
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 3 * a + b + c = -3\nh\u2081 : a + 3 * b + c = 9\nh\u2082 : a + b + 3 * c = 19\n\u22a2 a * b * c = -56",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Test.lean#L1427"
      },
      "metadata": {
        "blame_email_hash": "e15bc1876b03",
        "blame_date": "2024-05-20T00:36:27+08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "14b021e87df52345b4efc7ab4885492207319376f35eb6866fc310d929b0b83b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 15,
        "start_column": 2,
        "end_line": 15,
        "end_column": 7
      },
      "debug_info": {
        "goal": "z : \u2102\nh\u2080 : z = (1 + Complex.I) / \u2191\u221a2\n\u22a2 (\u2211 k \u2208 Finset.Icc 1 12, z ^ k ^ 2) * \u2211 k \u2208 Finset.Icc 1 12, 1 / z ^ k ^ 2 = 36",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L15"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-05T19:30:53-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "672b0d0a67e0f3453643a259b9d634dde11515b489493de3c94f9063055927b2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 18,
        "start_column": 2,
        "end_line": 18,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2124\nh\u2080 : 0 < y\nh\u2081 : y < x\nh\u2082 : x + y + x * y = 80\n\u22a2 x = 26",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4d136cf10100042e3991cf3d0277dc0e9078e693cd3b246a3fc564cbf4da08ce"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 22,
        "start_column": 2,
        "end_line": 22,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : y ^ 3 = 1\nh\u2082 : 6 * x ^ 2 = 2 * (6 * y ^ 2)\n\u22a2 x ^ 3 = 2 * \u221a2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L22"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b1f0dd6677b89ae48ca19da11e3b1de5812738d21019ef51ec077de321eea8f8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 29,
        "start_column": 2,
        "end_line": 29,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : logb 8 a + logb 4 (b ^ 2) = 5\nh\u2081 : logb 8 b + logb 4 (a ^ 2) = 7\n\u22a2 a * b = 512",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L29"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c186d8c5bfaf253ecc4aeec0ed29d093ae30f71e2320adcef50f48f40477d70e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 33,
        "start_column": 2,
        "end_line": 33,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m x : \u2124\nh\u2080 : 0 \u2264 x\nh\u2081 : 10 \u2264 m \u2227 m \u2264 99\nh\u2082 : 6 * x % m = 1\nh\u2083 : (x - 6 ^ 2) % m = 0\n\u22a2 m = 43",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9f97141fed4114843dae50b4cd350ca4a9b4ca9db99d96c068ad937854087a25"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 41,
        "start_column": 2,
        "end_line": 41,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k x : \u211d\nh\u2080 : x = (13 - \u221a131) / 4\nh\u2081 : 2 * ((13 - \u221a131) / 4) ^ 2 - 13 * ((13 - \u221a131) / 4) + k = 0\n\u22a2 13 * ((13 - \u221a131) / 4) - 2 * ((13 - \u221a131) / 4 * ((13 - \u221a131) / 4)) = 19 / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L41"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2025-01-21T09:55:27-05:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6d1442935876e28b5445c03db0c319baf455c6ce9ae6a5e0508788eba103af7f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 46,
        "start_column": 2,
        "end_line": 46,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u v : \u2115\nS : Set \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 0 < n \u2227 14 * n % 100 = 46\nh\u2081 : IsLeast S u\nh\u2082 : IsLeast (S \\ {u}) v\n\u22a2 (\u2191u + \u2191v) / 2 = 64",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L46"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "74d72fba695a091d5e3b3163049dca1f798baca365fabb014b0d763ce4398b9c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 53,
        "start_column": 2,
        "end_line": 53,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f (x + 3) = 3 * x ^ 2 + 7 * x + 4\nh\u2081 : \u2200 (x : \u211d), f x = a * x ^ 2 + b * x + c\n\u22a2 a + b + c = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L53"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T07:42:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5496325827336e92e11848b744914da4e71ef54984de63ff2dbacaa521b0b012"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 58,
        "start_column": 2,
        "end_line": 58,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211a\nh\u2080 : a 1 = 1\nh\u2081 : a 2 = 3 / 7\nh\u2082 : \u2200 (n : \u2115), a (n + 2) = a n * a (n + 1) / (2 * a n - a (n + 1))\n\u22a2 \u2191(a 2019).den + (a 2019).num = 8078",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L58"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T14:42:51-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "85d9f1fd3b74743e250190f471c7320d55b537c2e65e64a9baa492919e458f06"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 63,
        "start_column": 2,
        "end_line": 63,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : \u2200 (x : \u211d), x - 3 \u2260 0 \u2227 x - 5 \u2260 0 \u2192 4 * x / (x ^ 2 - 8 * x + 15) = a / (x - 3) + b / (x - 5)\n\u22a2 a = -6 \u2227 b = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L63"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T14:42:51-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f3ca44a6bdb4a89ec1db464244be1a28b0855c2593492be14a3c81180d24832c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 67,
        "start_column": 2,
        "end_line": 67,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, (2 * k + 3) = (n + 1) ^ 2 - 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L67"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-10-24T17:46:46-07:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "fa92155dc43e899b10d6e0d34a8d8f1613b9a8549bd1243ca3796fbcacf7205e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 71,
        "start_column": 2,
        "end_line": 71,
        "end_column": 7
      },
      "debug_info": {
        "goal": "r : \u211d\nh\u2080 : \u2211 k \u2208 Finset.Icc 19 91, \u230ar + \u2191k / 100\u230b = 546\n\u22a2 \u230a100 * r\u230b = 743",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L71"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "48fbf2376113766ba0a43934c61fccc423eab7a23d9100352fe5b7c83bd933dc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 79,
        "start_column": 2,
        "end_line": 79,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2124\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : \u00ac7 \u2223 a\nh\u2082 : \u00ac7 \u2223 b\nh\u2083 : \u00ac7 \u2223 a + b\nh\u2084 : 7 ^ 7 \u2223 (a + b) ^ 7 - a ^ 7 - b ^ 7\n\u22a2 19 \u2264 a + b",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L79"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b0681ff0e9ce85d11550554b473ad586a807faf3657408e9563d2a5fa892308b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 82,
        "start_column": 2,
        "end_line": 82,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u220f k \u2208 Finset.Icc 1 501, (4 * \u2191k + 4) / (4 * \u2191k) = 502",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L82"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "adbfa37b15a3bbaa0cd682db6945b66fe26f3ce63c8e9df5f95bac638528b563"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 87,
        "start_column": 2,
        "end_line": 87,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\n\u22a2 a * b * (a ^ 2 - b ^ 2) + b * c * (b ^ 2 - c ^ 2) + c * a * (c ^ 2 - a ^ 2) \u2264\n    9 * \u221a2 / 32 * (a ^ 2 + b ^ 2 + c ^ 2) ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L87"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-14T15:01:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a269ccb9329fdba56cf886a715e55bc59af69bfd2569501247f8dc6a5f194c3d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 94,
        "start_column": 2,
        "end_line": 94,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u00ac7 \u2223 2 ^ n + 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L94"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c8f2d6c0835de6e2bcbcb83cf42b9021aa185cce73375acae613d5ad4953dfd8"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 98,
        "start_column": 4,
        "end_line": 98,
        "end_column": 9
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (x : \u2115), x \u2208 S \u2194 0 < x \u2227 x < 1000 \u2227 x.divisors.card = 3\n\u22a2 S.card = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L98"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "67f8052b820552b6cbf163de0b9d36024390ca4bd9463dc15fdea490ffbc1b21"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 101,
        "start_column": 2,
        "end_line": 101,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {x | 30 * x \u2261 42 [MOD 47]} 39",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e56dff99832b49fee232bb29c564057ee7b0f8e5742ab4c6e39aa9119d3ef9e2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 104,
        "start_column": 2,
        "end_line": 104,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u2115\n\u22a2 \u2203 n, f (f n) \u2260 n + 1987",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L104"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6687af24521831f5db8f8a1f0663bda5e16eecadb6563f5c932a751f01217481"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n < 398\nh\u2081 : n * 7 % 398 = 1\n\u22a2 n = 57",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e00507151d1000eed0f3a020ff5c82508cf196786774c4696c6ab5bc0adb0814"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 127,
        "start_column": 2,
        "end_line": 127,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 \u2264 x\nh\u2081 : x \u2264 2 * Real.pi\nh\u2082 : 2 * cos x \u2264 |\u221a(1 + sin (2 * x)) - \u221a(1 - sin (2 * x))|\nh\u2083 : |\u221a(1 + sin (2 * x)) - \u221a(1 - sin (2 * x))| \u2264 \u221a2\n\u22a2 Real.pi / 4 \u2264 x \u2227 x \u2264 7 * Real.pi / 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L127"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "bcac4f7bb65a32ffad48c17fd268a98c77dd4e5e3034cc40bf4e1dfdffa185d6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 136,
        "start_column": 2,
        "end_line": 136,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2124\n\u22a2 a ^ 2 % 4 = 0 \u2228 a ^ 2 % 4 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L136"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6aafb17703d24685f23b42202db4a5f4867821576eaa6d20d9059d264bb6f54d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2102 \u2192 \u2102\nh\u2080 : \u2200 (x : \u2102), f (x / 3) = x ^ 2 + x + 1\nh\u2081 : Fintype \u2191(f \u207b\u00b9' {7})\n\u22a2 \u2211 y \u2208 (f \u207b\u00b9' {7}).toFinset, y / 3 = -1 / 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c4d4e75ad825bc1b3a53105ae27a2cdc2ed11fb7ce798a78d66d3f880c065d1a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 155,
        "start_column": 2,
        "end_line": 155,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x ^ 3 - (x + 1) * (x - 1) * x = 5\n\u22a2 x ^ 3 = 125",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L155"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "bd6152b956d43177c84f7f179e1ac25f702121187171f0ea7cb1907d390746d7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 162,
        "start_column": 2,
        "end_line": 162,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 \u221a\u2191n < 7 / 2 \u2227 2 < \u221a\u2191n\n\u22a2 S.card = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L162"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7cd7e437f9a18b9c56f60f0907829ce3488272cbf4e92b60712646ead69fb1ea"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 165,
        "start_column": 2,
        "end_line": 165,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 3 \u2223 n ^ 3 + 2 * n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "92e2544acc21dc144c7af38fa19959c5b92d2be5c6262fbc072455f94c3d118a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 169,
        "start_column": 2,
        "end_line": 169,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, 1 / ((\u2191k + 1) * (\u2191k + 2)) = \u2191n / (\u2191n + 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L169"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4454402c54d5ce777018a27d301e09ff0a3b2370e8d7c9beed292a034a92b665"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 172,
        "start_column": 2,
        "end_line": 172,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 n \u2223 36\n\u22a2 \u2211 k \u2208 S, k = 91",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L172"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "352ab6b50b56404cd29530c74ee4fc463d196445a5b1c34cc4ea0d4e63534452"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 176,
        "start_column": 2,
        "end_line": 176,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u03c3 : \u211d \u2243 \u211d\nh\u2080 : \u2200 (x : \u211d), \u03c3.toFun x = 5 * x - 12\nh\u2081 : \u03c3.toFun (x + 1) = \u03c3.invFun x\n\u22a2 x = 47 / 24",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L176"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "fe94dac0653cbd0df46318d8b3aba913d70642609146c6368d6a4f486f8279fc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : Nat.Prime a\nh\u2081 : Nat.Prime b\nh\u2082 : Nat.Prime (a + b)\nh\u2083 : Nat.Prime (a - b)\n\u22a2 Nat.Prime (a + b + (a - b + (a + b)))",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8d3e2bff0ecb709f76c5252c24326a2699cd34334f344ee9494461ffee2a706b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 184,
        "start_column": 2,
        "end_line": 184,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q r x : \u2102\nh\u2080 : (x - p) * (x - q) = (r - p) * (r - q)\nh\u2081 : x \u2260 r\n\u22a2 x = p + q - r",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L184"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "29409e2378a93b9e0177565661145983abad2844d5967ff3a1b4c8d6c4813fde"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 194,
        "start_column": 2,
        "end_line": 194,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z : \u2124\nh\u2080 : (x - y) ^ 2 + (y - z) ^ 2 + (z - x) ^ 2 = x * y * z\n\u22a2 x + y + z + 6 \u2223 x ^ 3 + y ^ 3 + z ^ 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L194"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d894ed275b840a4427ad823101744c70d8870d5da019bf07ed17b7621c491779"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 205,
        "start_column": 2,
        "end_line": 205,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Set \u211d\nh\u2080 : S = {x | cos x ^ 2 + cos (2 * x) ^ 2 + cos (3 * x) ^ 2 = 1}\n\u22a2 S =\n    {x |\n      \u2203 m,\n        x = Real.pi / 2 + \u2191m * Real.pi \u2228\n          x = Real.pi / 4 + \u2191m * Real.pi / 2 \u2228\n            x = Real.pi / 6 + \u2191m * Real.pi / 6 \u2228 x = 5 * Real.pi / 6 + \u2191m * Real.pi / 6}",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L205"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4f35e9ec0340361fe9a364c12f4b139e8ba8f26ed653edfb1098b00172a3c865"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 216,
        "start_column": 2,
        "end_line": 216,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 NNReal\nn : \u2115\nh\u2080 : (Finset.range n).prod a = 1\n\u22a2 (Finset.range n).sum a \u2265 \u2191n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L216"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "59820d9d2b4cc1062b7aa774b39decfddcae67ef14a8d4fde20da7b6d8897745"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 226,
        "start_column": 2,
        "end_line": 226,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u2115\nh\u2080 : 1 \u2264 x \u2227 x \u2264 100\nh\u2081 : 77 \u2223 \u2211 k \u2208 Finset.range 101, k - x\n\u22a2 x = 45",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L226"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1ea9959b586b7f9c790f410a4a56b378558fe4f1bed3aa9fb22ef8f1983a7b4c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 236,
        "start_column": 2,
        "end_line": 236,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x = 5\nh\u2081 : y = 2\n\u22a2 \u221a(x ^ 3 - 2 ^ y) = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ab7e984eee9db98309023d73b9dfe2389c44720d87e6ad932a0407ef2affd1c3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 243,
        "start_column": 2,
        "end_line": 243,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x + y = 13\nh\u2081 : x * y = 24\n\u22a2 \u221a(x ^ 2 + y ^ 2) = 11",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L243"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8a624093053cd3096cabbf8e86f83ee56d6ad49796082432a893a3179918650b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 247,
        "start_column": 2,
        "end_line": 247,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\nh\u2081 : \u2200 (x : \u211d), 24 * x ^ 2 - 19 * x - 35 = (a * x - 5) * (2 * (b * x) + c)\n\u22a2 a * b - 3 * c = -9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L247"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f46500b777c3453c8334da7e119f527626a149391d84d2e9c3245cd76b3ae1fe"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 258,
        "start_column": 2,
        "end_line": 258,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080\u271d : 0 < n\nh\u2080 : \u2211 k \u2208 Finset.Icc 1 n, \u230alogb 2 \u2191k\u230b = 1994\n\u22a2 n = 312",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L258"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "25c4795417ca901d5de7978ddd70486de804152511b3bd8dd8229178a72e7f6a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 265,
        "start_column": 2,
        "end_line": 265,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 0\n\u22a2 (4 / x)\u207b\u00b9 * (3 * x ^ 3 / x) ^ 2 * (1 / (2 * x))\u207b\u00b9 ^ 3 = 18 * x ^ 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L265"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "123dfd184d7c1247d25b4fc16a0adcbc3a4f3bd6cb90c7e067a44fa8a2ae260c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 268,
        "start_column": 2,
        "end_line": 268,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : 0 < a \u2227 0 < b\n\u22a2 (a + b) ^ 4 \u2264 8 * (a ^ 4 + b ^ 4)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L268"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6fa9b8e5634fac59670d16b0670cf2745d617f2a167035f2ce7fc788b238bbba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 272,
        "start_column": 2,
        "end_line": 272,
        "end_column": 7
      },
      "debug_info": {
        "goal": "c : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 2 * x ^ 2 + 5 * x + c\nh\u2081 : \u2203 x, f x \u2264 0\n\u22a2 c \u2264 25 / 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L272"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "bccccb6ad96c6492a56ca3c59d24937f0778d4eddc3690a8908317ced9375027"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 275,
        "start_column": 2,
        "end_line": 275,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2211 k \u2208 (30 ^ 4).divisors, 1 - 2 = 123",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L275"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e1286cb0b963af239a8106bc59391c22a4733850dce69329ad3811ef4113640f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 279,
        "start_column": 2,
        "end_line": 279,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 x < 0, f x = -x ^ 2 - 1\nh\u2081 : \u2200 (x : \u211d), 0 \u2264 x \u2227 x < 4 \u2192 f x = 2\nh\u2082 : \u2200 x \u2265 4, f x = \u221ax\n\u22a2 f Real.pi = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L279"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ca1fbc732aeb9a89402f98986ece7d904da068bd5e46acef3b4c262e6d68c045"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 283,
        "start_column": 2,
        "end_line": 283,
        "end_column": 7
      },
      "debug_info": {
        "goal": "rows seats : \u2115\nh\u2080 : rows * seats = 450\nh\u2081 : (rows + 5) * (seats - 3) = 450\n\u22a2 rows = 25",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L283"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "75c18dcc724366ca455b5194444cbb54c9cf5cdcef6d4ad4bb8c0ce24c6e0d27"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 286,
        "start_column": 2,
        "end_line": 286,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 3 * \u221a(2 * x - 7) - 8\n\u22a2 f 8 = 19",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L286"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "53901a8881fabe600edcd793187876f466bc2e6d0233fcb9e49927db054e2290"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 297,
        "start_column": 2,
        "end_line": 297,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t : \u2115 \u2192 \u211a\nh\u2080 : t 1 = 20\nh\u2081 : t 2 = 21\nh\u2082 : \u2200 n \u2265 3, t n = (5 * t (n - 1) + 1) / (25 * t (n - 2))\n\u22a2 \u2191(t 2020).den + (t 2020).num = 626",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L297"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a25149135b1581aedaa59ff5b05fb7936cd74782846fcf58b3e805d7e1c2cd20"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 311,
        "start_column": 2,
        "end_line": 311,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh : x > 0\n\u22a2 2 - \u221a2 \u2265 2 - x - 1 / (2 * x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L311"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5994e2791d8af030d41b7845ecf079bc4b24444802dbfcc6af5922d34b041bc7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "816817ed5a3426b1b22fb96a0c1c939e152ae295",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 318,
        "start_column": 2,
        "end_line": 318,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 n \u2208 S, n \u2223 Nat.sqrt 196\n\u22a2 \u2211 k \u2208 S, k = 24",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/816817ed5a3426b1b22fb96a0c1c939e152ae295/MiniF2F/Valid.lean#L318"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-18T16:45:18-08:00",
        "inclusion_date": "2025-05-19T03:03:51.490789+00:00"
      },
      "id": "e85b17ba3d245abf98a567aff9db9596fa2b2718b2aaf75537125f3d1a17fe12"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 350,
        "start_column": 2,
        "end_line": 350,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z w : \u211d\nh\u2080 : x ^ 2 / (2 ^ 2 - 1) + y ^ 2 / (2 ^ 2 - 3 ^ 2) + z ^ 2 / (2 ^ 2 - 5 ^ 2) + w ^ 2 / (2 ^ 2 - 7 ^ 2) = 1\nh\u2081 : x ^ 2 / (4 ^ 2 - 1) + y ^ 2 / (4 ^ 2 - 3 ^ 2) + z ^ 2 / (4 ^ 2 - 5 ^ 2) + w ^ 2 / (4 ^ 2 - 7 ^ 2) = 1\nh\u2082 : x ^ 2 / (6 ^ 2 - 1) + y ^ 2 / (6 ^ 2 - 3 ^ 2) + z ^ 2 / (6 ^ 2 - 5 ^ 2) + w ^ 2 / (6 ^ 2 - 7 ^ 2) = 1\nh\u2083 : x ^ 2 / (8 ^ 2 - 1) + y ^ 2 / (8 ^ 2 - 3 ^ 2) + z ^ 2 / (8 ^ 2 - 5 ^ 2) + w ^ 2 / (8 ^ 2 - 7 ^ 2) = 1\n\u22a2 x ^ 2 + y ^ 2 + z ^ 2 + w ^ 2 = 36",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L350"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "bbec2630a9d84a8dfc6a0bd5165a8de8d31ec10123e4a6b9f1849d4194561320"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 354,
        "start_column": 2,
        "end_line": 354,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : y \u2264 x\nh\u2082 : \u221a(x * y) * (x - y) = x + y\n\u22a2 x + y \u2265 4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L354"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "786882d1fa33055c325358c768cb8b38a6d8905377ac6e7711210436ffcffa8e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 358,
        "start_column": 62,
        "end_line": 358,
        "end_column": 67
      },
      "debug_info": {
        "goal": "u : \u2115 \u2192 \u2115\nh\u2080 : u 0 = 4\nh\u2081 : u 1 = 7\nh\u2082 : \u2200 n \u2265 2, u (n + 2) = (u n + u (n + 1)) % 10\n\u22a2 \u2200 (n : \u2115), \u2211 k \u2208 Finset.range n, u k > 10000 \u2192 1999 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L358"
      },
      "metadata": {
        "blame_email_hash": "b262f07ece49",
        "blame_date": "2025-03-21T12:42:00+01:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c60307c1ad6c3572a67f6923fd729e839b5e273196fd3973d66a7e2d7b7e41ba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 362,
        "start_column": 2,
        "end_line": 362,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q e d : \u2102\nh\u2080 : q = 11 - 5 * Complex.I\nh\u2081 : e = 11 + 5 * Complex.I\nh\u2082 : d = 2 * Complex.I\n\u22a2 q * e * d = 292 * Complex.I",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L362"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2024-03-19T21:28:14-05:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2c58ab61cb9f5a5c870702b1ebfbbf6cbb7e718be2a03b1e9a3462b8dc856601"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 366,
        "start_column": 2,
        "end_line": 366,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a \u2260 0 \u2227 b \u2260 0\nh\u2081 : \u2200 (x : \u211d), x ^ 2 + a * x + b = (x - a) * (x - b)\n\u22a2 a = 1 \u2227 b = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L366"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "67f252a0e04411a792fd1f975ddb43e3ef2a46d091099f671e077489d7cf1e12"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 372,
        "start_column": 2,
        "end_line": 372,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\n\u22a2 49 \u2264 \u2211 k \u2208 Finset.Icc 1 119, |\u2191k * x - 1|",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L372"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5fff2a30e5aa7fde3ef051c0b9dd91dda6a8c8a00316dac0ff21a9967ecbdda1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 383,
        "start_column": 2,
        "end_line": 383,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\na : \u2115 \u2192 \u2115\nh\u2080 : Function.Injective a\nh\u2081 : a 0 = 0\nh\u2082 : 0 < n\n\u22a2 \u2211 k \u2208 Finset.Icc 1 n, 1 / \u2191k \u2264 \u2211 k \u2208 Finset.Icc 1 n, \u2191(a k) / \u2191k ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L383"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d5ba4054ceb96f5326a8dd702fe8bc6080e8038e134203a90030f7cb1ffff6c6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 387,
        "start_column": 2,
        "end_line": 387,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2115 \u2192 \u211d\nh\u2080 : f 1 = 2\nh\u2081 : \u2200 (n : \u2115), 1 < n \u2227 Even n \u2192 f n = f (n - 1) + 1\nh\u2082 : \u2200 (n : \u2115), 1 < n \u2227 Odd n \u2192 f n = f (n - 2) + 2\n\u22a2 f 2017 = 2018",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L387"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2a7d7e3e6dabcd13987489e7b5812e8f221a7f8de9e5984e08650ce149fa8db5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 391,
        "start_column": 2,
        "end_line": 391,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Set \u2115\nu v : \u2115\nh\u2080 : \u2200 (a : \u2115), a \u2208 S \u2194 0 < a \u2227 27 * a % 40 = 17\nh\u2081 : IsLeast S u\nh\u2082 : IsLeast (S \\ {u}) v\n\u22a2 u + v = 62",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L391"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6f5e5ae9303fc4dd736cebca7e2c1f80019920cb0f9652252d7b1e258801dba5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 395,
        "start_column": 2,
        "end_line": 395,
        "end_column": 7
      },
      "debug_info": {
        "goal": "q e : \u2102\nh\u2080 : q = 2 - 2 * Complex.I\nh\u2081 : e = 5 + 5 * Complex.I\n\u22a2 q * e = 20",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L395"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2024-03-19T21:28:14-05:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4da2854445cb0a689589af72a1f12aa9d83d7ea3a068cd176cad7be9081704e2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 400,
        "start_column": 2,
        "end_line": 400,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u211d\nh\u2080 : \u2200 (x : \u211d), x \u2208 S \u2194 0 < x \u2227 x ^ 2 ^ \u221a2 = \u221a2 ^ 2 ^ x\n\u22a2 2 \u2264 \u2211 k \u2208 S, k \u2227 \u2211 k \u2208 S, k < 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L400"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "10a0b8ef5ecc0dab68ddbab792885ccf070d4863651d1ced250023a34b6ceccf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 404,
        "start_column": 2,
        "end_line": 404,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (x : \u2115), x \u2208 S \u2194 0 < x \u2227 x ^ 2 + 4 * x + 4 < 20\n\u22a2 S.card = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L404"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "931bcb1cd60a206db5ca38318bfb165b938dc7c2b65643797f7249e33e94258f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 408,
        "start_column": 2,
        "end_line": 408,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 \u2211 k \u2208 Finset.Icc 1 n, k * n.choose k = n * 2 ^ (n - 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L408"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0b21a17ec63e08f3c6862c93a078b315df37d0d8603890cbe062808f737b2b78"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 417,
        "start_column": 2,
        "end_line": 417,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 2 ^ x * 3 ^ y = 1296\n\u22a2 x + y = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L417"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6404240766d3ea748b0c36297e66bd0a113c4b44fce4d7df3ebff24d190fd7f0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 421,
        "start_column": 2,
        "end_line": 421,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 2 \u2264 n \u2227 171 \u2261 80 [MOD n] \u2227 468 \u2261 13 [MOD n]\n\u22a2 \u2211 k \u2208 S, k = 111",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L421"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "72386f1dd462812f07fc4285ad6d292ceb6d274f283fa895339774ead86182f5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 424,
        "start_column": 2,
        "end_line": 424,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2308\u221a27\u2309 - \u230a\u221a26\u230b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L424"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c315cca5a4c378fd626e0bf7b8e591b2aabce8dedb700982d6c304e5396d4295"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 428,
        "start_column": 2,
        "end_line": 428,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : |x + y| + |x - y| = 2\n\u22a2 x ^ 2 - 6 * x + y ^ 2 \u2264 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L428"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "19f6a3a07d1bcd33aabfe060acfb743c7d70c3550bfbcfb68e1d4498da14b063"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 444,
        "start_column": 2,
        "end_line": 444,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a r : \u211d\nu : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (k : \u2115), u k = a * r ^ k\nh\u2081 : u 1 = 2\nh\u2082 : u 3 = 6\n\u22a2 u 0 = 2 / \u221a3 \u2228 u 0 = -(2 / \u221a3)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L444"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "4c37e509e3b65c231c15c182e31ad5f176e8d3186730a3b2045eb88708182855"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 452,
        "start_column": 2,
        "end_line": 452,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2115\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : x * y + (x + y) = 71\nh\u2082 : x ^ 2 * y + x * y ^ 2 = 880\n\u22a2 x ^ 2 + y ^ 2 = 146",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L452"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d1df56b49804540e3c9a55c8bf9e70ccaab1e4f0c1aa36de82fabedb9ab5b789"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 461,
        "start_column": 2,
        "end_line": 461,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a * b + 1 \u2223 a ^ 2 + b ^ 2\n\u22a2 \u2203 x, \u2191x ^ 2 = (\u2191a ^ 2 + \u2191b ^ 2) / (\u2191a * \u2191b + 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L461"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "da3f3ccc4c7f14decae3ed569107607e05b8a0de02d58c2b087b8f813e142c7b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 467,
        "start_column": 2,
        "end_line": 467,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c r s t : \u211d\nf g : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 3 + 3 * x ^ 2 + 4 * x - 11\nh\u2081 : \u2200 (x : \u211d), g x = x ^ 3 + r * x ^ 2 + s * x + t\nh\u2082 : f a = 0\nh\u2083 : f b = 0\nh\u2084 : f c = 0\nh\u2085 : g (a + b) = 0\nh\u2086 : g (b + c) = 0\nh\u2087 : g (c + a) = 0\nh\u2088 : List.Pairwise (fun x1 x2 => x1 \u2260 x2) [a, b, c]\n\u22a2 t = 23",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L467"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "d4b584d71148c23db2cc58d26415a5545b875aefc8e0ab1fffc07dc09ebdb91b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 476,
        "start_column": 2,
        "end_line": 476,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a c : \u211d\n\u22a2 2 * a * (2 + c) \u2264 a ^ 2 + c ^ 2 + 4 * (1 + c)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L476"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "67a40a704a85153cc784563705b5aad0391a6e3f0792c5cca9e31c3ae90973ec"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 479,
        "start_column": 2,
        "end_line": 479,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {n | 15 ^ n \u2223 factorial 942} 233",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "85b9275eb07510632bb31719f5a69a4f3fbcaccdfd47eefa3fa7eb151cd31f76"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 507,
        "start_column": 2,
        "end_line": 507,
        "end_column": 7
      },
      "debug_info": {
        "goal": "s : Finset \u2124\nf : \u2124 \u2192 \u2124\nh\u2080 : \u2200 (x : \u2124), f x = |x + 4|\nh\u2081 : \u2200 (x : \u2124), x \u2208 s \u2194 f x < 9\n\u22a2 s.card = 17",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L507"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a2b10ef3485272028b130bc8673d8ca38b8dda0dd652cb767c909692e2419f0b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 510,
        "start_column": 2,
        "end_line": 510,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u211d\n\u22a2 10 * a \u2264 28 * a ^ 2 + 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e0bcc5781b50708954c15c7405f0c8c6e848ccffa94fcee6a8bd1d892880673a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 514,
        "start_column": 2,
        "end_line": 514,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 1 \u2264 a \u2227 a \u2264 9 \u2227 b \u2264 9\nh\u2081 : 10 * a + b = 2 * (a + b)\n\u22a2 10 * a + b = 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L514"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b3723ca75ae129b900ca603bafa6c4b0244d40844bd2a48a79e1930bdcc8cc4e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 522,
        "start_column": 2,
        "end_line": 522,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : (2 * n).divisors.card = 28\nh\u2082 : (3 * n).divisors.card = 30\n\u22a2 (6 * n).divisors.card = 35",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L522"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7a52771c9e17f525b1a15787b56e47e31a8c7936416820cc3ea98ab570be2ae9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 526,
        "start_column": 2,
        "end_line": 526,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x \u2260 0\nh\u2081 : y \u2260 0\nh\u2082 : x \u2260 y\nh\u2083 : x + 2 / x = y + 2 / y\n\u22a2 x * y = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5393be84731b7a4b0559aa4f123580ac64b65245fe93ec2ae83369a06d804357"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 535,
        "start_column": 2,
        "end_line": 535,
        "end_column": 7
      },
      "debug_info": {
        "goal": "b : \u211d\nh\u2080 : 4 ^ b + 2 ^ 3 = 12\n\u22a2 b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L535"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "82c8de67f5a4f40f65f3807c19de11709abb5f6822349eae956f92a3b70bd38e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 538,
        "start_column": 2,
        "end_line": 538,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u211d\nh\u2080 : 27 / 125 * d = 9 / 25\n\u22a2 3 / 5 * d ^ 3 = 25 / 9",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L538"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "44d83744927c69f4fc77fbf3c09c0992401b249263c40dc3cb9c375f962f45a3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 544,
        "start_column": 2,
        "end_line": 544,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : \u2203 x, x ^ 4 + a * x ^ 3 + b * x ^ 2 + a * x + 1 = 0\n\u22a2 4 / 5 \u2264 a ^ 2 + b ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L544"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "32ff0d98430f50cf70c5d35741726aedbca5e64dfaa6f2ea9981923c5a521bd7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 548,
        "start_column": 2,
        "end_line": 548,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 5 / 8 * \u2191b = 2 / 3 * \u2191a + 7\nh\u2081 : \u2191b - 5 / 8 * \u2191b = \u2191a - 2 / 3 * \u2191a + 7\n\u22a2 a = 42",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L548"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cf4c62e1b3621c1cc1a0fd2915e1fcfbfea0842b073bb71d12c077c531c91848"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 551,
        "start_column": 2,
        "end_line": 551,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2124\n\u22a2 a ^ 2 % 3 = 0 \u2228 a ^ 2 % 3 = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L551"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "844ea6b22fbf75256babdb8090e072de9ed6c989ee9dde3139289b40abd9c6ba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 555,
        "start_column": 2,
        "end_line": 555,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = 2 * x ^ 2 - 7 * x + 2\nh\u2081 : f a = 0\nh\u2082 : f b = 0\nh\u2083 : a \u2260 b\n\u22a2 1 / (a - 1) + 1 / (b - 1) = -1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L555"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e01f55802f12c628dbd82048d15f71bf4d285537bab9e689955b3478705ce487"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 559,
        "start_column": 2,
        "end_line": 559,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : 0 < x \u2227 0 < y\nh\u2081 : Real.log (x * y ^ 3) = 1\nh\u2082 : Real.log (x ^ 2 * y) = 1\n\u22a2 Real.log (x * y) = 3 / 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L559"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "21384773654a8b09cd1a31fe215554b570d63e63a2806c8880dad02d9b31f113"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 562,
        "start_column": 2,
        "end_line": 562,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2191(factorial 3) * (2 ^ 3 + \u221a9) / 2 = 33",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L562"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9102330c50eb0b237a0212fc9d1e981c4d6db059e8b78c78c8932e600ed1442f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 565,
        "start_column": 2,
        "end_line": 565,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 logb (5 ^ 2) (5 ^ 4) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L565"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2d32b2eaa6d45093a08cda94997302b24e244b5929ab559d54c70d8f049cc63a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 568,
        "start_column": 2,
        "end_line": 568,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211a\nh\u2080 : (x ^ 2 + y ^ 2).den = 1\n\u22a2 x.den = y.den",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L568"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "53630f345f4b316d3fe30a143492548e0d70b44dc624a632f5d9ffe64df7133f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 573,
        "start_column": 2,
        "end_line": 573,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u2115 \u2192 \u2124\nh\u2080 : x 1 = 211\nh\u2082 : x 2 = 375\nh\u2083 : x 3 = 420\nh\u2084 : x 4 = 523\nh\u2086 : \u2200 n \u2265 5, x n = x (n - 1) - x (n - 2) + x (n - 3) - x (n - 4)\n\u22a2 x 531 + x 753 + x 975 = 898",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L573"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "93bf6560fa32621011ac40ddbd6726c52d406605a9e1b21f41186e9453b50c16"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 577,
        "start_column": 2,
        "end_line": 577,
        "end_column": 7
      },
      "debug_info": {
        "goal": "b : \u2115\nh\u2080 : b < 10\nh\u2081 : (10 * b + 6).sqrt * (10 * b + 6).sqrt = 10 * b + 6\n\u22a2 b = 3 \u2228 b = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L577"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c4ceaf19701d92fcaa16219e32d6c8774e73338d46b2d7ec401f6d0b2ee346ba"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 581,
        "start_column": 2,
        "end_line": 581,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {n | 0 < n \u2227 \u2203! k, 8 / 15 < \u2191n / (\u2191n + \u2191k) \u2227 \u2191n / (\u2191n + \u2191k) < 7 / 13} 112",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L581"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5e578bd96988fd70a3c48a608b942a5840bc23b55b9280c4356d090659510dbc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 612,
        "start_column": 2,
        "end_line": 612,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 x < -5, f x = x ^ 2 + 5\nh\u2081 : \u2200 x \u2265 -5, f x = 3 * x - 8\nh\u2082 : Fintype \u2191(f \u207b\u00b9' {10})\n\u22a2 \u2211 k \u2208 (f \u207b\u00b9' {10}).toFinset, k = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L612"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "968840efe789e3a09f3d57999ded76abf74f226f6274ac3da0575c3e7f1f98e5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 624,
        "start_column": 2,
        "end_line": 624,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 < x \u2227 x < Real.pi\n\u22a2 12 \u2264 (9 * (x ^ 2 * sin x ^ 2) + 4) / (x * sin x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L624"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f2d47eb6946bbdddf5a8a0ee1d18642e15a00d3606106408e49f8a1c0bccf818"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 627,
        "start_column": 2,
        "end_line": 627,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : x + y = 7\nh\u2081 : 3 * x + y = 45\n\u22a2 x ^ 2 - y ^ 2 = 217",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L627"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "301b839fa9468562cf0a0b853976600403034c09d17710e0ce0d08d573b7b141"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 630,
        "start_column": 2,
        "end_line": 630,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n % 8 = 7\n\u22a2 n % 4 = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L630"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-18T16:45:18-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2fd869d380e2ecf34b5109df3c652e060796b25ced3c6e1f20145426d9543777"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 633,
        "start_column": 2,
        "end_line": 633,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k : \u2115\nh\u2080 : k = 2008 ^ 2 + 2 ^ 2008\n\u22a2 (k ^ 2 + 2 ^ k) % 10 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L633"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "00fb0535276619fc652776c4e9239e0d566b2c54fbf5b90ebf330bd91afbc0d3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 644,
        "start_column": 2,
        "end_line": 644,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\nh\u2081 : \u2211 k \u2208 Finset.Icc 1 n, \u2191k * Complex.I ^ k = 48 + 49 * Complex.I\n\u22a2 n = 97",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L644"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f559a486f6bc1ea100c90c9b6fd7d4e896d3a1404b7ec20e617f75eab1bc32b0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 647,
        "start_column": 2,
        "end_line": 647,
        "end_column": 7
      },
      "debug_info": {
        "goal": "z a : \u211d\n\u22a2 36 * (a * z) - 9 * a ^ 2 \u2264 36 * z ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L647"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b3ef7be8bcbeca2921262d374c730139cda47526be685a68822ede2c0ee5b585"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 662,
        "start_column": 2,
        "end_line": 662,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 5 \u2223 n \u2227 (factorial 5).lcm n = 5 * (factorial 10).gcd n\n\u22a2 S.card = 48",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L662"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "257abdc823e857293629632b2fbad00defd039bd644ccf14b0c5c4c7a81b7b4a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 666,
        "start_column": 2,
        "end_line": 666,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 - 4 * \u221ax + 1\n\u22a2 f (f 4) = 70",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L666"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5ebf8e86e655daaf6ff02c4b13ab5be4c4d050b77aa6c74532b2b2d852e15e7f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 670,
        "start_column": 2,
        "end_line": 670,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n k : \u2115\nh\u2080 : 0 < n \u2227 0 < k\nh\u2081 : k \u2264 n\n\u22a2 n.choose k = (n - 1).choose k + (n - 1).choose (k - 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L670"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5f51fc250052f670a537e9ff41731a54fd22ce7c6fa50024e34be4749d3d4d80"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 690,
        "start_column": 2,
        "end_line": 690,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (52 + 6 * \u221a43) ^ (3 / 2) - (52 - 6 * \u221a43) ^ (3 / 2) = 828",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L690"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "65aac1fa4ab5412a12eff791e3e07305df8d15c1ff65270a03f99c455e6b2075"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 696,
        "start_column": 2,
        "end_line": 696,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\n\u22a2 4 * b * (a + 1) \u2264 4 * b ^ 2 + (a + 1) ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L696"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f97388fca2bc25ba1c82f5ec05bec06a0ef939afd1a789deefe40d5d1b21b394"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 699,
        "start_column": 2,
        "end_line": 699,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 (n + 7).gcd (2 * n + 1) \u2264 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L699"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "fb8eeabde783950fb3b1fe6bebd7a8d604da9a70c5aae048c7189989254cefef"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 724,
        "start_column": 2,
        "end_line": 724,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), \u00acIrrational x \u2192 f x = \u2191|\u230ax\u230b|\nh\u2081 : \u2200 (x : \u211d), Irrational x \u2192 f x = \u2191\u2308x\u2309 ^ 2\n\u22a2 f (8 ^ (1 / 3)) + f (-Real.pi) + f \u221a50 + f (9 / 2) = 79",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L724"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "c1dbba76a79650f119206fc214009877558691f912b1f342605deaa593edf44a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 727,
        "start_column": 2,
        "end_line": 727,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nh\u2080 : y = x ^ 2 - 6 * x + 13\n\u22a2 4 \u2264 y",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L727"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "bc7525d0e45f75ef6f6072da9ba5c07e5f36c3396f531646ff8b108448929dc5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 732,
        "start_column": 2,
        "end_line": 732,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (3\u207b\u00b9 + 5\u207b\u00b9)\u207b\u00b9 = 29",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L732"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-12T13:01:27-04:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1bffef85b4adf171d366ec3522199628279ff191792dc9bb710ac7da51a29b0c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 736,
        "start_column": 2,
        "end_line": 736,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : a \u2260 0 \u2227 b \u2260 0\nh\u2081 : a \u2260 b\nh\u2082 : \u2200 (x : \u211d), f x = x ^ 2 + a * x + b\nh\u2083 : f a = 0\nh\u2084 : f b = 0\n\u22a2 a = 1 \u2227 b = -2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L736"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8802b8a0cc006e55d4f28714a5b07f442ad2b2a96eb4281fd260d7f24bea19ae"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 743,
        "start_column": 2,
        "end_line": 743,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d s : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c \u2227 0 < d\nh\u2081 : s = a / (a + b + d) + b / (a + b + c) + c / (b + c + d) + d / (a + c + d)\n\u22a2 1 < s \u2227 s < 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L743"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1d98387b1130a5fc4062b4b363cbd05f01c9200998759c289b220f302ed973af"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 747,
        "start_column": 2,
        "end_line": 747,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 0 < x\nh\u2081 : logb 2 (logb 8 x) = logb 8 (logb 2 x)\n\u22a2 logb 2 x ^ 2 = 27",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L747"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "140e145982a4e2dc0604376328a3e79fb1865f1cc581d75461cbf167ee45109c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 751,
        "start_column": 2,
        "end_line": 751,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n k : \u2115\nh\u2080\u271d : 0 < n \u2227 0 < k\nh\u2080 : \u2191n / \u2191k < 6\nh\u2081 : 5 < \u2191n / \u2191k\n\u22a2 22 \u2264 n.lcm k / n.gcd k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L751"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2faf67d1a82e4c54ec0df5c7e0b99055d4a842d9e6479a4127f2ba9f952e857d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 760,
        "start_column": 2,
        "end_line": 760,
        "end_column": 7
      },
      "debug_info": {
        "goal": "k m n : \u2115\nc : \u2115 \u2192 \u2115\nh\u2080 : 0 < k \u2227 0 < m \u2227 0 < n\nh\u2081 : \u2200 (s : \u2115), c s = s * (s + 1)\nh\u2082 : Nat.Prime (k + m + 1)\nh\u2083 : n + 1 < k + m + 1\n\u22a2 \u220f i \u2208 Finset.Icc 1 n, c i \u2223 \u220f i \u2208 Finset.Icc 1 n, c (m + i) - c k",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L760"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5f0bc1cc1feb3c84f9ba47b6d7d46584759f3c22e1d2abe660febcdac3c71caa"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 764,
        "start_column": 2,
        "end_line": 764,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a \u2260 b\nh\u2081 : a \u2260 2 * b\nh\u2082 : (4 * a + 3 * b) / (a - 2 * b) = 5\n\u22a2 (a + 11 * b) / (a - b) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L764"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2024-03-19T21:28:14-05:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "59002ac84119b46f4344a55752613b9c18be8e57d2982f26967b971e6ffbffd2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 769,
        "start_column": 2,
        "end_line": 769,
        "end_column": 7
      },
      "debug_info": {
        "goal": "u v : \u2115 \u2192 \u2115\nh\u2080 : \u2200 (n : \u2115), u n = 2 * n + 2\nh\u2081 : \u2200 (n : \u2115), v n = 2 * n + 1\n\u22a2 \u2211 x \u2208 Finset.range 2003, (2 * x + 2) - \u2211 x \u2208 Finset.range 2003, (2 * x + 1) = 2003",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L769"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2025-01-21T09:55:27-05:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6fdbab6638dec1014a139a9f0b3ecf7391558e0927b49d0bfa7673647303a384"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 774,
        "start_column": 2,
        "end_line": 774,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211d\nh\u2080 : a 0 = 1\nh\u2081 : \u2200 (n : \u2115), a (n + 1) = \u220f k \u2208 Finset.range (n + 1), a k + 4\n\u22a2 \u2200 n \u2265 1, a n - \u221a(a (n + 1)) = 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L774"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "211e0880ffc5b77e67e698fe39b8a91de8170c385c760369e6f8c741671887e3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "816817ed5a3426b1b22fb96a0c1c939e152ae295",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 781,
        "start_column": 2,
        "end_line": 781,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, 2 * k + 1 = n ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/816817ed5a3426b1b22fb96a0c1c939e152ae295/MiniF2F/Valid.lean#L781"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-05-19T03:03:51.490789+00:00"
      },
      "id": "dc61ebc6ef9d51f705cda09c3d38c4b5cbee1baa458e6260c542169d8c4fc992"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 793,
        "start_column": 2,
        "end_line": 793,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {a | 0 < a \u2227 a \u2261 2 [MOD 3] \u2227 a \u2261 4 [MOD 5] \u2227 a \u2261 6 [MOD 7] \u2227 a \u2261 8 [MOD 9]} 314",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L793"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1a56aaf7caa2b3bc782f0a55dadf225557518f2443a32a4924871f3d0ce3ed87"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 796,
        "start_column": 2,
        "end_line": 796,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : 10 ^ x * 100 ^ (2 * x) = 1000 ^ 5\n\u22a2 x = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L796"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cdb00390d2b108c0a66f59cf800ed890e637a423ee085006516e76beaa937afd"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 801,
        "start_column": 2,
        "end_line": 801,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2115\nt : \u2115 \u2192 \u2115\nh\u2080 : t 0 = 0\nh\u2081 : t 1 = 1\nh\u2082 : \u2200 n > 1, t n = t (n - 2) + t (n - 1)\nh\u2083 : a \u2261 5 [MOD 16]\nh\u2084 : b \u2261 10 [MOD 16]\nh\u2085 : c \u2261 15 [MOD 16]\n\u22a2 (t a + t b + t c) % 7 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L801"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1f2ea77112618fb1e91dd0f5aab6f8b2d632dd7a30514b51f7bd0b8e534b4cfc"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 805,
        "start_column": 2,
        "end_line": 805,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b \u2227 b \u2264 a\nh\u2081 : (a + b) % 10 = 2\nh\u2082 : (2 * a + b) % 10 = 1\n\u22a2 (a - b) % 10 = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L805"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1c9cf6b00cb4fd189469074a5b6f67cc8b10784da6e549a5b46ea1721a79db9a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 810,
        "start_column": 2,
        "end_line": 810,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : 0 < b\nh\u2081 : \u2200 (x : \u211d), f x = \u221a(a * x ^ 2 + b * x)\nh\u2082 : {x | 0 \u2264 f x} = f '' {x | 0 \u2264 f x}\n\u22a2 a = 0 \u2228 a = -4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L810"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9395490883a8fe127fc5c262ba0f1b5e648fca527575fde6ee77985ed34e2310"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 814,
        "start_column": 2,
        "end_line": 814,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q : \u211d\na : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), a (n + 2) - a (n + 1) = a (n + 1) - a n\nh\u2081 : a 1 = p\nh\u2082 : a 2 = 9\nh\u2083 : a 3 = 3 * p - q\nh\u2084 : a 4 = 3 * p + q\n\u22a2 a 2010 = 8041",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L814"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2edfb0e674f91bb5f70c6f63480aec6e94e22e5e08ca7a8755a021c692f9365b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 818,
        "start_column": 2,
        "end_line": 818,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u221a((5 / \u221a80 + \u221a845 / 9 + \u221a45) / \u221a5) = 13 / 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L818"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "af3956b1a52ecd5d133ef4f268e32990162668c9e8b05fecf7d9cf3597a7f952"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 831,
        "start_column": 2,
        "end_line": 831,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x = (\u2211 n \u2208 Finset.Icc 1 44, cos (\u2191n * Real.pi / 180)) / \u2211 n \u2208 Finset.Icc 1 44, sin (\u2191n * Real.pi / 180)\n\u22a2 \u230a100 * x\u230b = 241",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L831"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0bd73cc55c5b85c1f3728dd5995371db21e4dbd468e172b78ecba26d8708ed5f"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 836,
        "start_column": 2,
        "end_line": 836,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z : \u211d\nm : \u211a\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\nh\u2081 : x * y * z = 1\nh\u2082 : x + 1 / z = 5\nh\u2083 : y + 1 / x = 29\nh\u2084 : z + 1 / y = \u2191m\nh\u2085 : 0 < m\n\u22a2 \u2191m.den + m.num = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L836"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "87081d6d44f4faa33d3238badd4b68633362dfd1ba18c2801f3da3dd574d2438"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 840,
        "start_column": 2,
        "end_line": 840,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\na : \u2115 \u2192 \u211d\nh\u2080 : \u2200 (n : \u2115), |a n| < 1\nh\u2081 : \u2211 k \u2208 Finset.range n, |a k| = 19 + |\u2211 k \u2208 Finset.range n, a k|\n\u22a2 20 \u2264 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L840"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "0c8f7035a7614e67b08f6d0d2e93111001969260e3af3b8d1cf0663d237387d7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 843,
        "start_column": 2,
        "end_line": 843,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 0 < n\n\u22a2 9 \u2223 10 ^ n - 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L843"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9f0f7f9a591e90cf18ede2778bd277ea345f674ce8f90f16eaae9146d06435bf"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 848,
        "start_column": 2,
        "end_line": 848,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x a : \u2115\nh\u2080 : 0 < x \u2227 0 < a\nh\u2081 : a.gcd 40 = x + 3\nh\u2082 : a.lcm 40 = x * (x + 3)\nh\u2083 : \u2200 (b : \u2115), 0 < b \u2192 b.gcd 40 = x + 3 \u2227 b.lcm 40 = x * (x + 3) \u2192 a \u2264 b\n\u22a2 a = 8",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L848"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8419e93eb7025bc3ade7712c770686a4de75aa0374cf5b552d401cee24f7b049"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 851,
        "start_column": 2,
        "end_line": 851,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03c3 : \u211d \u2243 \u211d\nh : \u2200 (x : \u211d), \u03c3.toFun x = x ^ 3 - 8\n\u22a2 \u03c3.invFun (\u03c3.toFun (\u03c3.invFun 19)) = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L851"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "92f3882829ea2577cb2ae73b0a020622d798582a536eba7e7d709d715f98b2d9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 856,
        "start_column": 2,
        "end_line": 856,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c d : \u211d\nh\u2080 : b = a ^ 2 + 4 * a + 6\nh\u2081 : b = 1 / 2 * a ^ 2 + a + 6\nh\u2082 : d = c ^ 2 + 4 * c + 6\nh\u2083 : d = 1 / 2 * c ^ 2 + c + 6\nh\u2084 : a < c\n\u22a2 c - a = 6",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L856"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "301f47863c50332e7eeb762a49929852f10194da89375a7f16b5937d7a6f1542"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 861,
        "start_column": 2,
        "end_line": 861,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\nf : \u2115 \u2192 \u2115\nh\u2080\u271d : \u2200 (x : \u2115), f x = x ^ 2 + x + p\nh\u2080 : \u2200 k \u2264 \u230a\u221a(\u2191p / 3)\u230b\u208a, Nat.Prime (f k)\n\u22a2 \u2200 i \u2264 p - 2, Nat.Prime (f i)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L861"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "191844683f34f375f424b1c2b1a23f5dcbee5afa0fdc7eb1aac86acb4149261e"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 865,
        "start_column": 2,
        "end_line": 865,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a : \u2115 \u2192 \u211d\nh\u2080 : a 1 = 1\nh\u2081 : a 2 = 1 / \u221a3\nh\u2082 : \u2200 (n : \u2115), 1 \u2264 n \u2192 a (n + 2) = (a n + a (n + 1)) / (1 - a n * a (n + 1))\n\u22a2 |a 2009| = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L865"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "73cd20604fad55dd60dd01968118d8c9cf8d6a45fb080acb0f876d4ed2e45c3a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 871,
        "start_column": 2,
        "end_line": 871,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y z a b : \u211d\nh\u2080 : 0 < x \u2227 0 < y \u2227 0 < z\nh\u2081 : x \u2260 y\nh\u2082 : y \u2260 z\nh\u2083 : z \u2260 x\nh\u2084 : x + y + z = a\nh\u2085 : x ^ 2 + y ^ 2 + z ^ 2 = b ^ 2\nh\u2086 : x * y = z ^ 2\n\u22a2 0 < a \u2227 b ^ 2 < a ^ 2 \u2227 a ^ 2 < 3 * b ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L871"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "1dd19908b73f66b1289252c000e8588fc787853e86b59191bd15389e38b253e5"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 875,
        "start_column": 2,
        "end_line": 875,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : NNReal\nu : \u2115 \u2192 NNReal\nh\u2080 : \u2200 (n : \u2115), u (n + 1) = NNReal.sqrt (x + u n)\nh\u2081 : Filter.Tendsto u Filter.atTop (nhds 9)\n\u22a2 9 = NNReal.sqrt (x + 9)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L875"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7a858f6eacecd455bfdd3896ae39ae0204fd8aec8d652f3a88502ddc33de0139"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 883,
        "start_column": 2,
        "end_line": 883,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : n % 7 = 3\n\u22a2 (2 * n + 1) % 7 = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L883"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ea5069f2ba972e2a543f698eba6d98814c28b8f9fca7eaa983b7c099b76459a2"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 887,
        "start_column": 2,
        "end_line": 887,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u211d\nn : \u2124\nh\u2080 : x ^ 3 = -45\nh\u2081 : y ^ 3 = -101\nh\u2082 : x < \u2191n\nh\u2083 : \u2191n < y\n\u22a2 n = -4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L887"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "71fed5afda9da45f20bfc386bf12de4fa79300ca4f20c638803e79720a6a422d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 899,
        "start_column": 2,
        "end_line": 899,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x a : \u2115 \u2192 \u211d\nh\u2080 : a 1 \u2260 a 2\nh\u2081 : a 1 \u2260 a 3\nh\u2082 : a 1 \u2260 a 4\nh\u2083 : a 2 \u2260 a 3\nh\u2084 : a 2 \u2260 a 4\nh\u2085 : a 3 \u2260 a 4\nh\u2086 : a 1 > a 2\nh\u2087 : a 2 > a 3\nh\u2088 : a 3 > a 4\nh\u2089 : |a 1 - a 2| * x 2 + |a 1 - a 3| * x 3 + |a 1 - a 4| * x 4 = 1\nh\u2081\u2080 : |a 2 - a 1| * x 1 + |a 2 - a 3| * x 3 + |a 2 - a 4| * x 4 = 1\nh\u2081\u2081 : |a 3 - a 1| * x 1 + |a 3 - a 2| * x 2 + |a 3 - a 4| * x 4 = 1\nh\u2081\u2082 : |a 4 - a 1| * x 1 + |a 4 - a 2| * x 2 + |a 4 - a 3| * x 3 = 1\n\u22a2 x 2 = 0 \u2227 x 3 = 0 \u2227 x 1 = 1 / |a 1 - a 4| \u2227 x 4 = 1 / |a 1 - a 4|",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2d96ce88b1dc48806f97077c953d721bbc4e7aed47d20ca338896a558d49fc45"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 903,
        "start_column": 2,
        "end_line": 903,
        "end_column": 7
      },
      "debug_info": {
        "goal": "b : \u211d\nh\u2080 : b \u2260 0\n\u22a2 (7 * b ^ 3) ^ 2 * (4 * b ^ 2) ^ (-3) = 49 / 64",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L903"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "cb128b1ecb0bd8f21f1d6e93847be3db943df7ebe95d3c4625e3528a8fae7c48"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 908,
        "start_column": 2,
        "end_line": 908,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nx : \u211d\nh\u2080 : \u2200 (k : \u2115), 0 < k \u2192 \u2200 (m : \u2124), x \u2260 \u2191m * Real.pi / 2 ^ k\nh\u2081 : 0 < n\n\u22a2 \u2211 k \u2208 Finset.Icc 1 n, 1 / sin (2 ^ k * x) = 1 / tan x - 1 / tan (2 ^ n * x)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L908"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a8693b9d3dd4a1d0a2012fe53aab32af9b54657677609c76e68810e0f434a9b0"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 916,
        "start_column": 2,
        "end_line": 916,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2124\nh\u2080 : (n - 1) * n * (n + 1) = 720\n\u22a2 n + 1 = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L916"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5cec0c3f1a3377561249f16ac080133905aae14a5b3fa1c0785bd6d3cefb8404"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 919,
        "start_column": 2,
        "end_line": 919,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 3 \u2223 2 ^ (2 * n + 1) + 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L919"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "a3de00d4a5a265d8101f56052ee3c387a48676f8795b455dce872c1b0aeaec06"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 923,
        "start_column": 2,
        "end_line": 923,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u2115\nh\u2080 : 0 < a \u2227 0 < b\nh\u2081 : a + b = 20\nh\u2082 : a = 3 * b\n\u22a2 a - b = 10",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L923"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "20b2326dfeb7bb3daac88976c9752c58ff9ddb4c70416ea80bb641c222de351c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 927,
        "start_column": 2,
        "end_line": 927,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x e : \u2102\nh\u2080 : x + e = 7\nh\u2081 : 2 * x + e = 3\n\u22a2 e = 11 \u2227 x = -4",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L927"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3105d51629a8703d198e8f68c7d4e995e0e2eabb09a4373e191dfc0df057d4e3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 930,
        "start_column": 2,
        "end_line": 930,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2203 f, f 1 = 2 \u2227 \u2200 (n : \u2115), f (f n) = f n + n \u2227 \u2200 (n : \u2115), f n < f (n + 1)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L930"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "46679d2bf66e35b3f7b0fb0441ff480049bd0551b3683afb54a2735fe09b6b10"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 934,
        "start_column": 2,
        "end_line": 934,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2124\np : \u2115\nh\u2080 : Nat.Prime p\n\u22a2 \u2191p \u2223 n \u2194 n ^ 2 % \u2191p = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L934"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e5ec0557e86878cdf35d813784c5f9f5b062f451bf25d5da189985a2df61959c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 937,
        "start_column": 2,
        "end_line": 937,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 7 \u2223 2 ^ n - 1\n\u22a2 3 \u2223 n",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L937"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "bceace10ecc5a4ca1ca694014599a5b6a502b543cf8ed070f2ba0327615f5e0a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 940,
        "start_column": 2,
        "end_line": 940,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 2 \u2264 n\nh\u2081 : n ^ 2 \u2223 2 ^ n + 1\n\u22a2 n = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L940"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f49609746e79d0a807cfd43b300b06264cea1b3d0919cd33cb06cd76695014b9"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 943,
        "start_column": 2,
        "end_line": 943,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 4 \u2264 n\n\u22a2 n ^ 2 \u2264 n.factorial",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L943"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "6e1b1de858c54054e97820ed530b74918a5a6667fdd4944a1bbb5fb27910ab2c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 951,
        "start_column": 2,
        "end_line": 951,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x : \u211d\nh\u2080 : x \u2260 1\nh\u2081 : x \u2260 -2\nh\u2082 : (x + 1) / (x - 1) = (x - 2) / (x + 2)\n\u22a2 x = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L951"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "7c8a9c3c78bf97a1a5adcdaeb0dcf32bcf9a2eeb80e76cd1a0a306913316f2a7"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 958,
        "start_column": 2,
        "end_line": 958,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nu : \u2115 \u2192 \u2115\nh\u2080 : u 0 = 0\nh\u2081 : \u2200 (n : \u2115), u (n + 1) = 2 * u n + (n + 1)\n\u22a2 u n = 2 ^ (n + 1) - (n + 2)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L958"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "190e26424cbc85a9b535aadd4b44ae67562b0d9ad4fb062136088d8f44020301"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 962,
        "start_column": 2,
        "end_line": 962,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d\nk : \u211d\na b : \u2115\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 - 63 * x + k\nh\u2081 : f \u2191a = 0 \u2227 f \u2191b = 0\nh\u2082 : a \u2260 b\nh\u2083 : Nat.Prime a \u2227 Nat.Prime b\n\u22a2 k = 122",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L962"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "495deb78060f9bc39affb6471ace5159d358259317a95944665f74a79fc70fe1"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 973,
        "start_column": 2,
        "end_line": 973,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u2115\nn : NNReal\nh\u2080 : n \u2260 1\nh\u2081 : 1 < a \u2227 1 < b \u2227 1 < c\nh\u2082 : (n * (n * n ^ (1 / c)) ^ (1 / b)) ^ (1 / a) = (n ^ 25) ^ (1 / 36)\n\u22a2 b = 3",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L973"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e486868d1c1e4cdf1301663345707adf52075739faad20b3f02e2d4b2a6b20f6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 981,
        "start_column": 2,
        "end_line": 981,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b q r : \u2115\nh\u2080 : r < a + b\nh\u2081 : a ^ 2 + b ^ 2 = (a + b) * q + r\nh\u2082 : q ^ 2 + r = 1977\n\u22a2 |\u2191a - 22| = 15 \u2227 |\u2191b - 22| = 28 \u2228 |\u2191a - 22| = 28 \u2227 |\u2191b - 22| = 15",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L981"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "9ed32b09ab3ffe4f76fffe2e3c5df1bece3e73affac7efdefb936040fbffaef6"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 992,
        "start_column": 2,
        "end_line": 992,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x b : \u211d\nh\u2080 : 0 < b\nh\u2081 : 7 ^ (x + 7) = 8 ^ x\nh\u2082 : x = logb b (7 ^ 7)\n\u22a2 b = 8 / 7",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L992"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "5c18a7ceeeb5d68c30d1c11d2160f96184f759c3fb44fb7684d0c73e1f9b1659"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 997,
        "start_column": 2,
        "end_line": 997,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 IsGreatest {y | \u2203 a b, 1 < b \u2227 b \u2264 a \u2227 y = logb a (a / b) + logb b (b / a)} 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L997"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "f384ff90119d148442f29ff25433facc304e126b83bf853c0c314aa6f43abe1b"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1001,
        "start_column": 2,
        "end_line": 1001,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u2102 \u2192 \u2102\nh\u2080 : \u2200 (x : \u2102), f x = (2 * x + 3) * (x - 4) + (2 * x + 3) * (x - 6)\nh\u2081 : Fintype \u2191(f \u207b\u00b9' {0})\n\u22a2 \u2211 y \u2208 (f \u207b\u00b9' {0}).toFinset, y = 7 / 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1001"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8f30b740092bc1ef1d62e0856f5f79b365814ecf11ac737900ae13f6a743e561"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1005,
        "start_column": 2,
        "end_line": 1005,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : \u2200 (x : \u211d), f x = x ^ 2 + a * x + b\nh\u2081 : 2 * a \u2260 b\nh\u2082 : f (2 * a) = 0\nh\u2083 : f b = 0\n\u22a2 a + b = -1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1005"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "12795397341fa9832378f11629ce6bbbd987aab0c8f31cc274f641119b32078a"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1008,
        "start_column": 2,
        "end_line": 1008,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\nh\u2080 : 5 * n % 17 = 8\n\u22a2 n % 17 = 5",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1008"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3ea1c55237223cc704019514eeb5098805e3fca13766dace0169fc7d5a4e4f2c"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1012,
        "start_column": 2,
        "end_line": 1012,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\nk : \u211d\nf : \u211d \u2192 \u211d\nh\u2080 : Nat.Prime m\nh\u2081 : Nat.Prime n\nh\u2082 : \u2200 (x : \u211d), f x = x ^ 2 - 12 * x + k\nh\u2083 : f \u2191m = 0\nh\u2084 : f \u2191n = 0\nh\u2085 : m \u2260 n\n\u22a2 k = 35",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1012"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "43413facdb5aabaa7c71849009ac2d6a07906a8e7107545f368d2b9acd9cd416"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1018,
        "start_column": 2,
        "end_line": 1018,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 0 < n \u2227 Nat.Prime (n ^ 2 + 2 - 3 * n)\n\u22a2 S.card = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1018"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "38a830cf04b5e866c5bd86fdb00a783af5df401253aed92fcff21c3b25582f06"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1023,
        "start_column": 2,
        "end_line": 1023,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (2 + 3)\u207b\u00b9 - (2\u207b\u00b9 + 3\u207b\u00b9) = 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1023"
      },
      "metadata": {
        "blame_email_hash": "dd1b74f40c05",
        "blame_date": "2024-07-12T13:01:27-04:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "e15994aca40e5d2ec4b5355edb0ca56f4e7a5e48d32ed553cd911c5f7cad5f55"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1038,
        "start_column": 2,
        "end_line": 1038,
        "end_column": 7
      },
      "debug_info": {
        "goal": "x y : \u2124\nh\u2080 : x % 19 = 4\nh\u2081 : y % 19 = 7\n\u22a2 (x + 1) ^ 2 * (y + 5) ^ 3 % 19 = 13",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1038"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "288acf6da0a5a6d202ab68bb10441f24b9b5697372a0fe3d322a47330c84fd04"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1049,
        "start_column": 2,
        "end_line": 1049,
        "end_column": 7
      },
      "debug_info": {
        "goal": "f : \u211d \u2192 \u211d \u2192 \u211d\nh\u2080 : \u2200 (x y : \u211d), y \u2260 0 \u2192 f x y = x - y * \u2191\u230ax / y\u230b\n\u22a2 f (3 / 8) (-(2 / 5)) = -(1 / 40)",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1049"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "ea325cfe3d8666ca54a9d741c6f7f4112ea99319fe58f18b9d19c60ac47401c3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "816817ed5a3426b1b22fb96a0c1c939e152ae295",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1054,
        "start_column": 2,
        "end_line": 1054,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t s : \u211d\nn\u271d : \u2124\nh\u2080 : t = 2 * s - s ^ 2\nh\u2081 : s = \u2191n\u271d ^ 2 - 2 ^ n\u271d + 1\nn : \u2115\nx\u271d : n = 3\n\u22a2 t = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/816817ed5a3426b1b22fb96a0c1c939e152ae295/MiniF2F/Valid.lean#L1054"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-05-19T03:03:51.490789+00:00"
      },
      "id": "8e890273c7da60acd982548f9af2ef4902f494729ce456ae8d6496b3e2cfedef"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1057,
        "start_column": 2,
        "end_line": 1057,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : \u211d\nh\u2080 : a ^ 2 + b ^ 2 = 2\n\u22a2 a * b \u2264 1",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1057"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "8390fff98d55ddf0889622380d666513ee95b66bf3cd36a4805a31c81af57304"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1060,
        "start_column": 5,
        "end_line": 1060,
        "end_column": 10
      },
      "debug_info": {
        "goal": "\u22a2 IsLeast {t | 0 < t \u2227 Nat.lcm 12 t ^ 3 = (12 * t) ^ 2} 18",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1060"
      },
      "metadata": {
        "blame_email_hash": "24ddd6d59a58",
        "blame_date": "2023-10-18T22:01:06-05:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "3895ab92ab686825160fdfea8dda73e3b6390d071b311dc263ed01652fec7a58"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1070,
        "start_column": 2,
        "end_line": 1070,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b c : \u211d\nh\u2080 : 0 < a \u2227 0 < b \u2227 0 < c\n\u22a2 a ^ 2 / b ^ 2 + b ^ 2 / c ^ 2 + c ^ 2 / a ^ 2 \u2265 b / a + c / b + a / c",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1070"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "076dd64bb0c11b4d9bfe6b0f2b0c90bac423b8f84fbfb316471778ba3961769d"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1077,
        "start_column": 2,
        "end_line": 1077,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p q : \u2115\nh\u2080 : 0 < q\nh\u2081 : \u2211 k \u2208 Finset.Icc 1 1319, (-1) ^ (k + 1) * (1 / \u2191k) = \u2191p / \u2191q\n\u22a2 1979 \u2223 p",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1077"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "21ade5c559a85126249114e73166a6a3a64b48fa7e3455db6e1d59ab62750aee"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 1424,
        "start_column": 17,
        "end_line": 1424,
        "end_column": 22
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  n K q \u2264 r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L1424"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-07T19:27:00+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "8cde97192eeff9ef8351de73034ae8808cd8f6e816cc17cb80253de32dd9baa5"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7.lean",
        "start_line": 2352,
        "start_column": 2,
        "end_line": 2352,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 \u03b2 : \u2102\nhirr : \u2200 (i j : \u2124), \u03b2 \u2260 \u2191i / \u2191j\nhtriv : \u03b1 \u2260 0 \u2227 \u03b1 \u2260 1\nK : Type\ninst\u271d\u00b9 : Field K\n\u03c3 : K \u2192+* \u2102\nhd : DecidableEq (K \u2192+* \u2102)\n\u03b1' \u03b2' \u03b3' : K\nhabc : \u03b1 = \u03c3 \u03b1' \u2227 \u03b2 = \u03c3 \u03b2' \u2227 \u03b1 ^ \u03b2 = \u03c3 \u03b3'\ninst\u271d : NumberField K\nq : \u2115\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nh2mq : 2 * m K \u2223 q ^ 2\nthis :\n  let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  n K q \u2264 r\n\u22a2 let r := r \u03b1 \u03b2 hirr htriv K \u03c3 hd \u03b1' \u03b2' \u03b3' habc q u t hq0 h2mq;\n  \u2191r ^ ((r - 3 * h K) / 2) \u2265 c\u2081\u2085 K \u03b1' \u03b2' \u03b3' q ^ r",
        "url": "https://github.com/leanprover-community/mathlib4/blob/39a418d1d2ab4f4b8e31a1d56df9dd2caba05aab/Mathlib/NumberTheory/h7.lean#L2352"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-04-08T02:58:34+02:00",
        "inclusion_date": "2025-05-07T23:06:46.479053+00:00"
      },
      "id": "b9dcab32df0ea2969cee62d8388ed0828e2dddc7c34781f3fbf741adb44de309"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 62,
        "start_column": 9,
        "end_line": 62,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Components.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "d673ce021b4df124795afc93438361c3b7b5e223275fa334a4ed663b561ab49d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 80,
        "start_column": 2,
        "end_line": 80,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Components.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "6e3b20085271cc6401c7c173ed26821ceae2b2e330598eeaa47994f2f0423acc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 141,
        "start_column": 9,
        "end_line": 141,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Components.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "31b5cdd33731feef8483c6dcfb3508bfbf40d8642c03546edd30f7649f9f19ca"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 167,
        "start_column": 2,
        "end_line": 167,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Components.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "da778ca39e8be68b0ff5aeeaa5aceb67bb201b9842ba1c9fcde616ca371746d0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 259,
        "start_column": 2,
        "end_line": 259,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b9 : OracleInterface OStatement\ninst : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Components.lean#L259"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "899e91e2ad91a01b30dbd4f51126f827ab5209797de3b429b2ed2e23ed234aeb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 185,
        "start_column": 2,
        "end_line": 185,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190 (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Execution.lean#L185"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "aa21222546522efa6053209bdb5eecbebb323d55f55d847acc1bbb61a4cbd4c4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Transform/FiatShamir.lean",
        "start_line": 130,
        "start_column": 66,
        "end_line": 130,
        "end_column": 71
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u2074 : VCVCompatible StmtIn\ninst\u271d\u00b3 : (i : Fin n) \u2192 VCVCompatible (pSpec i).2\ninst\u271d\u00b2 : DecidableEq \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\ncompletenessError : \u211d\u22650\nR : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 Reduction.completeness relIn relOut R completenessError \u2192\n    Reduction.completeness relIn relOut R.fiatShamir completenessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Transform/FiatShamir.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-06T23:33:56-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "b91f07d8de824da852177e5516420fa43364bfea768ec3fd6320d64e14105f7a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b2 : Fact (Nat.Prime p)\nG\u2081 : Type u_2\ninst\u271d\u00b9 : CommGroup G\u2081\ninst\u271d : IsPrimeOrderWith G\u2081 p\nn : \u2115\ng : G\u2081\na : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1))\n\u22a2 g ^ \u2211 i, a.val ^ \u2191i * ((degreeLTEquiv (ZMod p) (n + 1)) poly i).val =\n    g ^ (\u2211 x, (degreeLTEquiv (ZMod p) (n + 1)) poly x * a ^ \u2191x).val",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/AGM/Basic.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-15T12:13:54+05:30",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "da92d24ab4d8bbbe44674f006c59fc17e7e4d2c77b4353edaafe52b146ddc7cb"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 171,
        "start_column": 6,
        "end_line": 171,
        "end_column": 11
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2078 : CommGroup G\np : \u2115\ninst\u271d\u2077 : Fact (Nat.Prime p)\nh : Nat.card G = p\ng : G\nG\u2081 : Type u_2\ninst\u271d\u2076 : CommGroup G\u2081\ninst\u271d\u2075 : IsPrimeOrderWith G\u2081 p\ng\u2081 : G\u2081\nG\u2082 : Type u_3\ninst\u271d\u2074 : CommGroup G\u2082\ninst\u271d\u00b3 : IsPrimeOrderWith G\u2082 p\ng\u2082 : G\u2082\nG\u209c : Type u_4\ninst\u271d\u00b2 : CommGroup G\u209c\ninst\u271d\u00b9 : IsPrimeOrderWith G\u209c p\npairing : Additive G\u2081 \u2192\u2097[\u2124] Additive G\u2082 \u2192\u2097[\u2124] Additive G\u209c\nn : \u2115\ninst\u271d : Fact (Nat.Prime p)\nsrs : Vector G\u2081 (n + 1)\ncoeffs : Fin (n + 1) \u2192 ZMod p\nz : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1)) := (degreeLTEquiv (ZMod p) (n + 1)).invFun coeffs\nthis : Field (ZMod p)\n\u22a2 ((\u2191poly - C (eval z \u2191poly)) / (X - C z)).degree < \u2191(n + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/AGM/Basic.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-15T21:13:06-06:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "9efc9fabe80f117d989da9dd315e3aba35978d2b0c8eb1410fc1d25badae8d27"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/Data/Probability/Notation.lean",
        "start_line": 70,
        "start_column": 76,
        "end_line": 70,
        "end_column": 81
      },
      "debug_info": {
        "goal": "F : Type\ninst\u271d\u00b9 : Nonempty F\ninst\u271d : Fintype F\n\u22a2 \u2191(do\n          let x \u2190 $\u1d56 F\n          let y \u2190 $\u1d56 F\n          let z \u2190 $\u1d56 (F \u00d7 F)\n          Pure.pure (z = (x, y)))\n      True =\n    1 / \u2191(Fintype.card (F \u00d7 F))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/Data/Probability/Notation.lean#L70"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-06T23:33:56-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "420b444f107d572ebe9c7fbd8332135aff4c816a7f393a6b7d7fb0091f5dee0e"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 702,
        "start_column": 2,
        "end_line": 702,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (P\u2081.append P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    match __discr with\n      | (stmt\u2082, wit\u2082, transcript\u2081) => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        match __discr with\n          | (stmt\u2083, wit\u2083, transcript\u2082) => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Sequential.lean#L702"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "a4bfd8299210978f0cd74dbe25e913c32a59626d4b886e21bafaa94a2cfba47f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 728,
        "start_column": 89,
        "end_line": 728,
        "end_column": 94
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : \u211d\u22650\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (R\u2081.append R\u2082) (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Sequential.lean#L728"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "228b4994f6e788f9eb16b5ae9a163f416c2b84ea4ae1a71818e51b9630f7260b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential.lean",
        "start_line": 755,
        "start_column": 38,
        "end_line": 755,
        "end_column": 43
      },
      "debug_info": {
        "goal": "\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nm : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d\u00b2 : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) \u2192 Type\nrel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) \u2192 \u211d\u22650\nh : \u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Sequential.lean#L755"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-06T19:22:58-03:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "b7ccfae101fead9f97c49998098709b2a16b7cfb2e5d17c98e77aba65c9169c4"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "1395ec3f569237dea18e4878cc52478aa00a46b669ef10cbe71a4ee353f71429"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "6e7ceede535bbc84093863ed7bd6e6eefbc4f14a4c042b1a1feb793150b4e2c7"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190 Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190 Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 =>\n          ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1.1), a.2.2.1, a.2.2.2,\n            a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "b584a91218fdbcac7aa33fe46caef8790c459e43fd7c3668d53be19c1713c889"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 201,
        "start_column": 2,
        "end_line": 201,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\ncompletenessError : \u211d\u22650\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn \u2192\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run stmtIn witIn R] \u2265\n        1 - \u2191completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run (data.fStmtIn stmtIn) (data.fWitIn witIn) R] \u2265\n    1 - \u2191completenessError\nx\u271d : (StmtOut' \u00d7 WitOut') \u00d7 StmtOut' \u00d7 pSpec.FullTranscript\na\u271d : x\u271d \u2208 (run (data.fStmtIn stmtIn) (data.fWitIn witIn) R).support\nhRelOut' : relOut' x\u271d.2.1 x\u271d.1.2 \u2227 x\u271d.1.1 = x\u271d.2.1\n\u22a2 ((fun x => relOut x.2.1 x.1.2 \u2227 x.1.1 = x.2.1) \u2218 fun a =>\n      ((data.fStmtOut (stmtIn, a.1.1), data.fWitOut (witIn, a.1.2)), data.fStmtOut (stmtIn, a.2.1), a.2.2))\n    x\u271d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Virtual.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-22T09:32:10-04:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "fabaffcd37294341121382ed15615cc5fd8e7f835a21af8c19e813f98bd99007"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 215,
        "start_column": 2,
        "end_line": 215,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : \u211d\u22650\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Virtual.lean#L215"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "0727f589ac4b827478530f41e673f0c5cda8472a140f1926c8dca796fe8534c9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 229,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : \u211d\u22650\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Composition/Virtual.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "58a2a2d06aef8d5f68b38c0563a7e79699bffe77ed5ecbf464634c3d652ce114"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 389,
        "start_column": 2,
        "end_line": 389,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : \u211d\u22650\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Security/Basic.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "346ab2a6c2e5e787887cb0d79c48833207ab7155c5a28376354a7e527ed50315"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 409,
        "start_column": 75,
        "end_line": 409,
        "end_column": 80
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn StmtOut : Type\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrSoundness langIn langOut verifier rbrSoundnessError \u2192 soundness langIn langOut verifier (\u2211 i, rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Security/Basic.lean#L409"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "27003d0d5624f705530174c9af1128ea2e77778f71f8247fea867713d1168ded"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 419,
        "start_column": 2,
        "end_line": 419,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier rbrKnowledgeError \u2192\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Security/Basic.lean#L419"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "b2b2a75efaafdf769f6c0a621e9b94ca3c44d4833b6e68e457d529483e77eaa5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 428,
        "start_column": 82,
        "end_line": 428,
        "end_column": 87
      },
      "debug_info": {
        "goal": "n : \u2115\n\u03b9 : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 \u211d\u22650\n\u22a2 rbrKnowledgeSoundness relIn relOut verifier rbrKnowledgeError \u2192\n    knowledgeSoundness relIn relOut verifier (\u2211 i, rbrKnowledgeError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/OracleReduction/Security/Basic.lean#L428"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-28T13:43:25-07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "7e608a3a16e02cf8d377334883fadecfe8571a59aaab21d4b02e1a3d034f5197"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "BoltonBailey/add-uses-commands",
        "commit": "f9d633e87fd658eea7d5473640cbf5ccbb7df04e",
        "lean_version": "v4.18.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 495,
        "start_column": 2,
        "end_line": 495,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5R\u2983\u2264 \u2191deg\u2984[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : \u2191(transcript 0) \u2208 R\u2983\u2264 \u2191deg\u2984[X]\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (OracleInterface.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) \u2191(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = stmt.1.target then pure () else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f9d633e87fd658eea7d5473640cbf5ccbb7df04e/ArkLib/ProofSystem/Sumcheck/Basic.lean#L495"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-05-20T03:09:48.966966+00:00"
      },
      "id": "1d6ea9762e85e1510141c23d662a9a8ab2a390834308d7b18c1005ff2650410f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "gphomles3",
        "commit": "cfbd99be354a1a0bff822e089a6d883abe9ddfcc",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean",
        "start_line": 316,
        "start_column": 4,
        "end_line": 316,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k G : Type u\ninst\u271d\u00b2 : CommRing k\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nX : ShortComplex (Rep k G)\nhX : X.ShortExact\nz : \u21a5(oneCycles X.X\u2083)\ny : G \u2192\u2080 \u2191X.X\u2082.V\nhy : (mapRange.linearMap (ModuleCat.Hom.hom X.g.hom)) y = \u2191z\nx : \u2191X.X\u2081.V\nhx : (ConcreteCategory.hom X.f.hom) x = (dZero X.X\u2082) y\n\u22a2 (ConcreteCategory.hom (snakeInput\u2080 hX).L\u2081.g)\n      ((ConcreteCategory.hom (shortComplexH1 X.X\u2082).moduleCatRightHomologyData.p) y) =\n    (ConcreteCategory.hom (snakeInput\u2080 hX).v\u2080\u2081.\u03c4\u2083) ((ConcreteCategory.hom (H1\u03c0 X.X\u2083)) z)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/cfbd99be354a1a0bff822e089a6d883abe9ddfcc/Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean#L316"
      },
      "metadata": {
        "blame_email_hash": "14e6523700b1",
        "blame_date": "2025-05-08T13:19:02+01:00",
        "inclusion_date": "2025-05-08T23:09:52.249304+00:00"
      },
      "id": "719996828d3b4e0705106ccd933f958951745256f86ff44333ac097dfffab0a8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "gphomles3",
        "commit": "cfbd99be354a1a0bff822e089a6d883abe9ddfcc",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean",
        "start_line": 379,
        "start_column": 4,
        "end_line": 379,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k G : Type u\ninst\u271d\u00b2 : CommRing k\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nX : ShortComplex (Rep k G)\nhX : X.ShortExact\nz : \u21a5(twoCycles X.X\u2083)\ny : G \u00d7 G \u2192\u2080 \u2191X.X\u2082.V\nhy : (mapRange.linearMap (ModuleCat.Hom.hom X.g.hom)) y = \u2191z\nx : G \u2192\u2080 \u2191X.X\u2081.V\nhx : (mapRange.linearMap (ModuleCat.Hom.hom X.f.hom)) x = (dOne X.X\u2082) y\n\u22a2 (ConcreteCategory.hom (snakeInput\u2081 hX).L\u2081.g)\n      ((ConcreteCategory.hom (shortComplexH2 X.X\u2082).moduleCatRightHomologyData.p) y) =\n    (ConcreteCategory.hom (snakeInput\u2081 hX).v\u2080\u2081.\u03c4\u2083) ((ConcreteCategory.hom (H2\u03c0 X.X\u2083)) z)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/cfbd99be354a1a0bff822e089a6d883abe9ddfcc/Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean#L379"
      },
      "metadata": {
        "blame_email_hash": "14e6523700b1",
        "blame_date": "2025-05-08T13:19:02+01:00",
        "inclusion_date": "2025-05-08T23:09:52.249304+00:00"
      },
      "id": "3d479ce0df52c417e042fc95380cf77f4a407d2cb521ff16da9a6f2a26c0855b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "gphomles3",
        "commit": "cfbd99be354a1a0bff822e089a6d883abe9ddfcc",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean",
        "start_line": 380,
        "start_column": 4,
        "end_line": 380,
        "end_column": 9
      },
      "debug_info": {
        "goal": "k G : Type u\ninst\u271d\u00b2 : CommRing k\ninst\u271d\u00b9 : Group G\ninst\u271d : DecidableEq G\nX : ShortComplex (Rep k G)\nhX : X.ShortExact\nz : \u21a5(twoCycles X.X\u2083)\ny : G \u00d7 G \u2192\u2080 \u2191X.X\u2082.V\nhy : (mapRange.linearMap (ModuleCat.Hom.hom X.g.hom)) y = \u2191z\nx : G \u2192\u2080 \u2191X.X\u2081.V\nhx : (mapRange.linearMap (ModuleCat.Hom.hom X.f.hom)) x = (dOne X.X\u2082) y\n\u22a2 (ConcreteCategory.hom (snakeInput\u2081 hX).L\u2082.f) \u27e8x, \u22ef\u27e9 =\n    (ConcreteCategory.hom (snakeInput\u2081 hX).v\u2081\u2082.\u03c4\u2082)\n      ((ConcreteCategory.hom (shortComplexH2 X.X\u2082).moduleCatRightHomologyData.p) y)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/cfbd99be354a1a0bff822e089a6d883abe9ddfcc/Mathlib/RepresentationTheory/Homological/GroupHomology/LongExactSequence.lean#L380"
      },
      "metadata": {
        "blame_email_hash": "14e6523700b1",
        "blame_date": "2025-05-08T13:19:02+01:00",
        "inclusion_date": "2025-05-08T23:09:52.249304+00:00"
      },
      "id": "50eba66c326e6b6d23fedca894c063fbe34066258e47c84efe6e1e84b02babdf"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest2.lean",
        "start_line": 16,
        "start_column": 2,
        "end_line": 16,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 ArithmeticFunction.vonMangoldt n \u2264 Real.log \u2191n",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest2.lean#L16"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-02T11:17:08-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "5d1fabd35d078a86be873c000286a6abf768b1ed8e0e1bac53e7a22477652dc8"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest2.lean",
        "start_line": 42,
        "start_column": 4,
        "end_line": 42,
        "end_column": 9
      },
      "debug_info": {
        "goal": "F : \u211d \u2192 \u211d\nc\u2081 c\u2082 : \u211d\nc\u2081pos : 0 < c\u2081\nc\u2082pos : 0 < c\u2082\nc\u2082_lt_one : c\u2082 < 1\nFbddAbove : \u2200 (x : \u211d), F x \u2264 1\nFnonneg : \u2200 (x : \u211d), F x \u2265 0\nFzeroAfter : \u2200 X > 1, \u2200 (n : \u2115), \u2191n \u2265 (1 + c\u2081) * X \u2192 F (\u2191n / X) = 0\nFone : \u2200 X > 1, \u2200 (n : \u2115), 0 < n \u2192 \u2191n \u2264 (1 - c\u2082) * X \u2192 F (\u2191n / X) = 1\nX Y : \u211d\n\u22a2 \u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * F (\u2191n / X) =\n    \u2211 n \u2208 (Icc 0 \u230aY\u230b\u208a).toFinset, ArithmeticFunction.vonMangoldt n * F (\u2191n / X) +\n      \u2211' (n : \u2115),\n        let n' := n + \u230aY\u230b\u208a + 1;\n        ArithmeticFunction.vonMangoldt n' * F (\u2191n' / X)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest2.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-02T11:17:08-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "2136795c4f124c4f1569a235a3e18d1aed68d136ac9fcd00e2763223be3cd9a9"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest2.lean",
        "start_line": 44,
        "start_column": 2,
        "end_line": 44,
        "end_column": 7
      },
      "debug_info": {
        "goal": "F : \u211d \u2192 \u211d\nc\u2081 c\u2082 : \u211d\nc\u2081pos : 0 < c\u2081\nc\u2082pos : 0 < c\u2082\nc\u2082_lt_one : c\u2082 < 1\nFbddAbove : \u2200 (x : \u211d), F x \u2264 1\nFnonneg : \u2200 (x : \u211d), F x \u2265 0\nFzeroAfter : \u2200 X > 1, \u2200 (n : \u2115), \u2191n \u2265 (1 + c\u2081) * X \u2192 F (\u2191n / X) = 0\nFone : \u2200 X > 1, \u2200 (n : \u2115), 0 < n \u2192 \u2191n \u2264 (1 - c\u2082) * X \u2192 F (\u2191n / X) = 1\nthis :\n  \u2200 (X Y : \u211d),\n    \u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * F (\u2191n / X) =\n      \u2211 n \u2208 (Icc 0 \u230aY\u230b\u208a).toFinset, ArithmeticFunction.vonMangoldt n * F (\u2191n / X) +\n        \u2211' (n : \u2115),\n          let n' := n + \u230aY\u230b\u208a + 1;\n          ArithmeticFunction.vonMangoldt n' * F (\u2191n' / X)\n\u22a2 \u2200\u1da0 (X : \u211d) in Filter.atTop,\n    \u2016\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * F (\u2191n / X) -\n          (Finset.Icc 0 \u230aX\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt\u2016 \u2264\n      (c\u2081 + c\u2082) * X * Real.log ((1 + c\u2082) * X)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest2.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-02T11:17:08-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "171a7291fe89bd3d5b3f707d32b65873c9b28b302b2e5fd22646c6bf4459fec0"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest3.lean",
        "start_line": 158,
        "start_column": 4,
        "end_line": 158,
        "end_column": 9
      },
      "debug_info": {
        "goal": "Smooth1 : (\u211d \u2192 \u211d) \u2192 \u211d \u2192 \u211d \u2192 \u211d\nSmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nc\u2081_lt : c\u2081 < 1\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nc\u2082_lt : c\u2082 < 1\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC : \u211d\nC_eq : C = 2 * (c\u2081 + c\u2082 + 3)\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nthis_1 : 0 < X\nX_ne_zero : X \u2260 0\nn_on_X_pos : \u2200 {n : \u2115}, 0 < n \u2192 0 < \u2191n / X\nsmooth1BddAbove : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), 0 < n \u2192 \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\nF : \u211d \u2192 \u211d := Smooth1 SmoothingF \u03b5\nn\u2080 : \u2115 := \u230aX * (1 - c\u2081 * \u03b5)\u230b\u208a\nn\u2080_le : \u2191n\u2080 \u2264 X * (1 - c\u2081 * \u03b5)\nn\u2080_gt : X * (1 - c\u2081 * \u03b5) - 1 \u2264 \u2191n\u2080\nsum\u039b : Summable fun n => vonMangoldt n * F (\u2191n / X)\nsum\u039bn\u2080 : \u2200 (n\u2080 : \u2115), Summable fun n => vonMangoldt (n + n\u2080) * F ((\u2191n + \u2191n\u2080) / X)\nn\u2081 : \u2115 := \u2308X * (1 + c\u2082 * \u03b5)\u2309\u208a\nn\u2081_ge : X * (1 + c\u2082 * \u03b5) \u2264 \u2191n\u2081\nn\u2081_le : \u2191n\u2081 < X * (1 + c\u2082 * \u03b5) + 1\nn\u2081_ge_n\u2080 : n\u2080 \u2264 n\u2081\nn\u2081_sub_n\u2080 : \u2191n\u2081 - \u2191n\u2080 < X * \u03b5 * (c\u2082 + c\u2081) + 2\n\u22a2 \u2200 n \u2208 Finset.range (n\u2081 - n\u2080), \u2016vonMangoldt (n + n\u2080)\u2016 \u2264 Real.log (X * (1 + c\u2082 * \u03b5))",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest3.lean#L158"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-07T10:17:07-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "28b9e9557cf304c216e35cdca7dc393a453657ed176aed54275e198b8231be8c"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest3.lean",
        "start_line": 164,
        "start_column": 4,
        "end_line": 164,
        "end_column": 9
      },
      "debug_info": {
        "goal": "Smooth1 : (\u211d \u2192 \u211d) \u2192 \u211d \u2192 \u211d \u2192 \u211d\nSmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nc\u2081_lt : c\u2081 < 1\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nc\u2082_lt : c\u2082 < 1\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC : \u211d\nC_eq : C = 2 * (c\u2081 + c\u2082 + 3)\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nthis_1 : 0 < X\nX_ne_zero : X \u2260 0\nn_on_X_pos : \u2200 {n : \u2115}, 0 < n \u2192 0 < \u2191n / X\nsmooth1BddAbove : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), 0 < n \u2192 \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\nF : \u211d \u2192 \u211d := Smooth1 SmoothingF \u03b5\nn\u2080 : \u2115 := \u230aX * (1 - c\u2081 * \u03b5)\u230b\u208a\nn\u2080_le : \u2191n\u2080 \u2264 X * (1 - c\u2081 * \u03b5)\nn\u2080_gt : X * (1 - c\u2081 * \u03b5) - 1 \u2264 \u2191n\u2080\nsum\u039b : Summable fun n => vonMangoldt n * F (\u2191n / X)\nsum\u039bn\u2080 : \u2200 (n\u2080 : \u2115), Summable fun n => vonMangoldt (n + n\u2080) * F ((\u2191n + \u2191n\u2080) / X)\nn\u2081 : \u2115 := \u2308X * (1 + c\u2082 * \u03b5)\u2309\u208a\nn\u2081_ge : X * (1 + c\u2082 * \u03b5) \u2264 \u2191n\u2081\nn\u2081_le : \u2191n\u2081 < X * (1 + c\u2082 * \u03b5) + 1\nn\u2081_ge_n\u2080 : n\u2080 \u2264 n\u2081\nn\u2081_sub_n\u2080 : \u2191n\u2081 - \u2191n\u2080 < X * \u03b5 * (c\u2082 + c\u2081) + 2\nvonBnd1 : \u2200 n \u2208 Finset.range (n\u2081 - n\u2080), \u2016vonMangoldt (n + n\u2080)\u2016 \u2264 Real.log (X * (1 + c\u2082 * \u03b5))\n\u22a2 \u2211 n \u2208 Finset.range (n\u2081 - n\u2080), \u2016vonMangoldt (n + n\u2080)\u2016 * \u2016F ((\u2191n + \u2191n\u2080) / X)\u2016 \u2264\n    (\u2191n\u2081 - \u2191n\u2080) * Real.log (X * (1 + c\u2082 * \u03b5))",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest3.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-02T22:39:39-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "608ef92d6a9da135d829860c0d94356f843b8b5adffc6b3e9518898b01d5494b"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest3.lean",
        "start_line": 170,
        "start_column": 4,
        "end_line": 170,
        "end_column": 9
      },
      "debug_info": {
        "goal": "Smooth1 : (\u211d \u2192 \u211d) \u2192 \u211d \u2192 \u211d \u2192 \u211d\nSmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nc\u2081_lt : c\u2081 < 1\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nc\u2082_lt : c\u2082 < 1\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC : \u211d\nC_eq : C = 2 * (c\u2081 + c\u2082 + 3)\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nthis_1 : 0 < X\nX_ne_zero : X \u2260 0\nn_on_X_pos : \u2200 {n : \u2115}, 0 < n \u2192 0 < \u2191n / X\nsmooth1BddAbove : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), 0 < n \u2192 \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\nF : \u211d \u2192 \u211d := Smooth1 SmoothingF \u03b5\nn\u2080 : \u2115 := \u230aX * (1 - c\u2081 * \u03b5)\u230b\u208a\nn\u2080_le : \u2191n\u2080 \u2264 X * (1 - c\u2081 * \u03b5)\nn\u2080_gt : X * (1 - c\u2081 * \u03b5) - 1 \u2264 \u2191n\u2080\nsum\u039b : Summable fun n => vonMangoldt n * F (\u2191n / X)\nsum\u039bn\u2080 : \u2200 (n\u2080 : \u2115), Summable fun n => vonMangoldt (n + n\u2080) * F ((\u2191n + \u2191n\u2080) / X)\nn\u2081 : \u2115 := \u2308X * (1 + c\u2082 * \u03b5)\u2309\u208a\nn\u2081_ge : X * (1 + c\u2082 * \u03b5) \u2264 \u2191n\u2081\nn\u2081_le : \u2191n\u2081 < X * (1 + c\u2082 * \u03b5) + 1\nn\u2081_ge_n\u2080 : n\u2080 \u2264 n\u2081\nn\u2081_sub_n\u2080 : \u2191n\u2081 - \u2191n\u2080 < X * \u03b5 * (c\u2082 + c\u2081) + 2\nvonBnd1 : \u2200 n \u2208 Finset.range (n\u2081 - n\u2080), \u2016vonMangoldt (n + n\u2080)\u2016 \u2264 Real.log (X * (1 + c\u2082 * \u03b5))\nbnd1 :\n  \u2211 n \u2208 Finset.range (n\u2081 - n\u2080), \u2016vonMangoldt (n + n\u2080)\u2016 * \u2016F ((\u2191n + \u2191n\u2080) / X)\u2016 \u2264\n    (\u2191n\u2081 - \u2191n\u2080) * Real.log (X * (1 + c\u2082 * \u03b5))\n\u22a2 \u2211 x \u2208 Finset.range (\u230aX + 1\u230b\u208a - n\u2080), \u2016vonMangoldt (x + n\u2080)\u2016 \u2264 (\u2191\u230aX + 1\u230b\u208a - \u2191n\u2080) * Real.log (X + 1)",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest3.lean#L170"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-02T22:39:39-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "64bac1b21aea07d37c1f874e49f16e3bc0984e378cb44fad05e9ca45885136f6"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/AlphaProofTest3.lean",
        "start_line": 180,
        "start_column": 2,
        "end_line": 180,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Smooth1 : (\u211d \u2192 \u211d) \u2192 \u211d \u2192 \u211d \u2192 \u211d\nSmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nc\u2081_lt : c\u2081 < 1\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nc\u2082_lt : c\u2082 < 1\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC : \u211d\nC_eq : C = 2 * (c\u2081 + c\u2082 + 3)\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nthis_1 : 0 < X\nX_ne_zero : X \u2260 0\nn_on_X_pos : \u2200 {n : \u2115}, 0 < n \u2192 0 < \u2191n / X\nsmooth1BddAbove : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), 0 < n \u2192 \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\nF : \u211d \u2192 \u211d := Smooth1 SmoothingF \u03b5\nn\u2080 : \u2115 := \u230aX * (1 - c\u2081 * \u03b5)\u230b\u208a\nn\u2080_le : \u2191n\u2080 \u2264 X * (1 - c\u2081 * \u03b5)\nn\u2080_gt : X * (1 - c\u2081 * \u03b5) - 1 \u2264 \u2191n\u2080\nsum\u039b : Summable fun n => vonMangoldt n * F (\u2191n / X)\nsum\u039bn\u2080 : \u2200 (n\u2080 : \u2115), Summable fun n => vonMangoldt (n + n\u2080) * F ((\u2191n + \u2191n\u2080) / X)\nn\u2081 : \u2115 := \u2308X * (1 + c\u2082 * \u03b5)\u2309\u208a\nn\u2081_ge : X * (1 + c\u2082 * \u03b5) \u2264 \u2191n\u2081\nn\u2081_le : \u2191n\u2081 < X * (1 + c\u2082 * \u03b5) + 1\nn\u2081_ge_n\u2080 : n\u2080 \u2264 n\u2081\nn\u2081_sub_n\u2080 : \u2191n\u2081 - \u2191n\u2080 < X * \u03b5 * (c\u2082 + c\u2081) + 2\nvonBnd1 : \u2200 n \u2208 Finset.range (n\u2081 - n\u2080), \u2016vonMangoldt (n + n\u2080)\u2016 \u2264 Real.log (X * (1 + c\u2082 * \u03b5))\n\u22a2 (\u2191n\u2081 - \u2191n\u2080) * Real.log (X * (1 + c\u2082 * \u03b5)) + (\u2191\u230aX + 1\u230b\u208a - \u2191n\u2080) * Real.log (X + 1) \u2264 C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/AlphaProofTest3.lean#L180"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-02T22:39:39-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "ce94bc231208aa109bbdc0d515ab47ba1794b51af37e41b87cf30dfb0fab2b48"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/ZetaBounds.lean",
        "start_line": 2617,
        "start_column": 2,
        "end_line": 2617,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h\nA : \u211d\nhA : A \u2208 Ioc 0 (1 / 2)\nh\u271d :\n  \u2203 C,\n    \u2203 (_ : 0 < C),\n      \u2200 (\u03c3 t : \u211d),\n        3 < |t| \u2192\n          \u03c3 \u2208 Ico (1 - A / Real.log |t| ^ 9) 1 \u2192\n            \u2016deriv riemannZeta (\u2191\u03c3 + \u2191t * I) / riemannZeta (\u2191\u03c3 + \u2191t * I)\u2016 \u2264 C * Real.log |t| ^ 9\nT : \u211d\nT_gt : 3 < T\n\u22a2 HolomorphicOn (fun s => deriv riemannZeta s / riemannZeta s) (Ioc (1 - A / Real.log T ^ 9) 2 \u00d7\u2102 Icc (-T) T \\ {1})",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/ZetaBounds.lean#L2617"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-03-07T16:45:37-05:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "2d6fdacb880cb5784783f04ee6a96909077056e09fe07d292dde774b5d15944b"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 369,
        "start_column": 2,
        "end_line": 369,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Smooth1 : (\u211d \u2192 \u211d) \u2192 \u211d \u2192 \u211d \u2192 \u211d\nSmoothingF : \u211d \u2192 \u211d\nc\u2081 : \u211d\nc\u2081_pos : 0 < c\u2081\nhc\u2081 : \u2200 (\u03b5 x : \u211d), 0 < \u03b5 \u2192 0 < x \u2192 x \u2264 1 - c\u2081 * \u03b5 \u2192 Smooth1 SmoothingF \u03b5 x = 1\nc\u2082 : \u211d\nc\u2082_pos : 0 < c\u2082\nhc\u2082 : \u2200 (\u03b5 x : \u211d), \u03b5 \u2208 Ioo 0 1 \u2192 1 + c\u2082 * \u03b5 \u2264 x \u2192 Smooth1 SmoothingF \u03b5 x = 0\nC_gt' : 3 < c\u2081 + c\u2082 + 3\nC : \u211d\nC_eq : C = c\u2081 + c\u2082 + 3\nC_gt : 3 < C\nX : \u211d\nX_ge_C : C < X\n\u03b5 : \u211d\n\u03b5pos : 0 < \u03b5\n\u03b5_lt_one : \u03b5 < 1\nthis_1 : 0 < X\nthis : X \u2260 0\nn_on_X_pos : \u2200 {n : \u2115}, 0 < n \u2192 0 < \u2191n / X\nsmooth1BddAbove : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2264 1\nsmooth1BddBelow : \u2200 (n : \u2115), 0 < n \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) \u2265 0\nsmoothIs1 : \u2200 (n : \u2115), 0 < n \u2192 \u2191n \u2264 X * (1 - c\u2081 * \u03b5) \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 1\nsmoothIs0 : \u2200 (n : \u2115), 1 + c\u2082 * \u03b5 \u2264 \u2191n / X \u2192 Smooth1 SmoothingF \u03b5 (\u2191n / X) = 0\n\u22a2 \u2016\u2191(\u2211' (n : \u2115), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF \u03b5 (\u2191n / X)) -\n        \u2191((Finset.range \u230aX + 1\u230b\u208a).sum \u21d1ArithmeticFunction.vonMangoldt)\u2016 \u2264\n    C * \u03b5 * X * Real.log X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/MediumPNT.lean#L369"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-05-02T22:39:39-04:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "2df7090cff040850fa37ab440035e62834096330d82b2330cda1f505316558c9"
    },
    {
      "repo": {
        "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
        "branch": "AK_work",
        "commit": "deda78cba510ad49b82f668e79ee458be78c6a0e",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PrimeNumberTheoremAnd/MediumPNT.lean",
        "start_line": 509,
        "start_column": 2,
        "end_line": 509,
        "end_column": 7
      },
      "debug_info": {
        "goal": "SmoothingF : \u211d \u2192 \u211d\n\u03b5 : \u211d\n\u03b5_pos : 0 < \u03b5\nX T : \u211d\nT_pos : 0 < T\n\u03c3\u2080 : \u211d\n\u03c3\u2080_pos : 0 < \u03c3\u2080\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (Icc \u03c3\u2080 2 \u00d7\u2102 univ \\ {1})\nsuppSmoothingF : support SmoothingF \u2286 Icc (1 / 2) 2\nSmoothingFnonneg : \u2200 x > 0, 0 \u2264 SmoothingF x\nmass_one : \u222b (x : \u211d) in Ioi 0, SmoothingF x / x = 1\n\u22a2 (1 / (2 * \u2191Real.pi * I)) \u2022\n      ((I \u2022 \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF \u03b5 X) (1 + (Real.log X)\u207b\u00b9) (-T) T +\n        I \u2022 \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191(1 + (Real.log X)\u207b\u00b9) + \u2191t * I)) =\n    1 / (2 * \u2191Real.pi * I) *\n        (((((I * \u222b (t : \u211d) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) -\n                \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s - \u2191T * I)) +\n              I * \u222b (t : \u211d) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191\u03c3\u2080 + \u2191t * I)) +\n            \u222b (s : \u211d) in Icc \u03c3\u2080 (1 + (Real.log X)\u207b\u00b9), SmoothedChebyshevIntegrand SmoothingF \u03b5 X (\u2191s + \u2191T * I)) +\n          I * \u222b (t : \u211d) in Ici T, SmoothedChebyshevIntegrand SmoothingF \u03b5 X (1 + \u2191(Real.log X)\u207b\u00b9 + \u2191t * I)) +\n      MellinTransform (fun x => \u2191(Smooth1 SmoothingF \u03b5 x)) 1 * \u2191X",
        "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/deda78cba510ad49b82f668e79ee458be78c6a0e/PrimeNumberTheoremAnd/MediumPNT.lean#L509"
      },
      "metadata": {
        "blame_email_hash": "4bcdc021face",
        "blame_date": "2025-02-10T12:59:29-05:00",
        "inclusion_date": "2025-05-15T23:14:18.311181+00:00"
      },
      "id": "5d18f0792d8ba46431457ddf3b8689dce481c3706776a8b6789f2cd3d76779bf"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "bounded-depth",
        "commit": "2efcba7c9d835e9969977f8470ca9640e1f7cbd7",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Propositional/Kripke/AxiomBoundDepth.lean",
        "start_line": 186,
        "start_column": 6,
        "end_line": 186,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ.inr\nF : Frame\nn : \u2115\nih :\n  \u2200 {l : List F.World} (hl\u2081 : l.length = n + 2),\n    List.Chain' (fun x1 x2 => x1 \u227a x2) l \u2192\n      Satisfies { toFrame := F, Val := cascadeVal l (n + 1) \u22ef } (l.head \u22ef) (Axioms.BoundDepth' n) \u2192 \u00acl.Nodup\nl : List F.World\nhl\u2081 : l.length = n + 1 + 2\nhl\u2082 : List.Chain' (fun x1 x2 => x1 \u227a x2) l\nh : l.head \u22ef \u22a7 atom (n + 1) \u279d Axioms.BoundDepth' n\n\u22a2 \u00acl.tail.Nodup",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2efcba7c9d835e9969977f8470ca9640e1f7cbd7/Foundation/Propositional/Kripke/AxiomBoundDepth.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-08T18:22:14+09:00",
        "inclusion_date": "2025-05-08T23:32:25.978477+00:00"
      },
      "id": "93ee070cc7ad655cf36227ba769be9d6f633c6786af00b0c283357f921d35a7f"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "update-v4.19.0-todo",
        "commit": "18f052e7e0c36d237929ba35c9f4309f5f26709a",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Foundation/Incompleteness/Arith/FixedPoint.lean",
        "start_line": 103,
        "start_column": 46,
        "end_line": 103,
        "end_column": 51
      },
      "debug_info": {
        "goal": "T : Theory \u2112\u2092\u1d63\ninst\u271d : \ud835\udc08\ud835\udeba\u2081 \u2aaf T\n\u03b8 : Semisentence \u2112\u2092\u1d63 1\n\u22a2 T \u22a2!. LO.FirstOrder.Arith.fixpoint \u03b8 \u2b64 \u03b8/[\u231cLO.FirstOrder.Arith.fixpoint \u03b8\u231d]",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/18f052e7e0c36d237929ba35c9f4309f5f26709a/Foundation/Incompleteness/Arith/FixedPoint.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-10T03:41:27+09:00",
        "inclusion_date": "2025-05-09T23:36:15.688372+00:00"
      },
      "id": "3839c90ea77b3cd1895e46714ebd131b931158e42715c83e3c5eb5aa6eb980c8"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "update-v4.19.0-todo",
        "commit": "18f052e7e0c36d237929ba35c9f4309f5f26709a",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean",
        "start_line": 42,
        "start_column": 4,
        "end_line": 42,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115},\n    Grz.miniCanonicalFrame Hilbert.GrzPoint3 \u03c6 \u2208 LO.Modal.Kripke.FrameClass.finite_connected_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/18f052e7e0c36d237929ba35c9f4309f5f26709a/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-05-09T23:36:15.688372+00:00"
      },
      "id": "d915c3d00db46e192a3fd0a76d392c3445c3f183befca6f50be0566607a79d50"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "update-v4.19.0-todo",
        "commit": "18f052e7e0c36d237929ba35c9f4309f5f26709a",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean",
        "start_line": 33,
        "start_column": 101,
        "end_line": 33,
        "end_column": 106
      },
      "debug_info": {
        "goal": "\u22a2 Complete Hilbert.GLPoint3 LO.Modal.Kripke.FrameClass.finite_strict_linear_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/18f052e7e0c36d237929ba35c9f4309f5f26709a/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-17T22:57:50+09:00",
        "inclusion_date": "2025-05-09T23:36:15.688372+00:00"
      },
      "id": "9c36b5688b3a2d0b6efdfe438a60466e868dc6ff3999f9172fc6a763ebaf7f1c"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "update-v4.19.0-todo",
        "commit": "18f052e7e0c36d237929ba35c9f4309f5f26709a",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean",
        "start_line": 35,
        "start_column": 4,
        "end_line": 35,
        "end_column": 9
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {\u03c6 : Formula \u2115},\n    Grz.miniCanonicalFrame Hilbert.GrzPoint2 \u03c6 \u2208 LO.Modal.Kripke.FrameClass.finite_confluent_partial_order",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/18f052e7e0c36d237929ba35c9f4309f5f26709a/Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-03-14T14:50:18+09:00",
        "inclusion_date": "2025-05-09T23:36:15.688372+00:00"
      },
      "id": "a25142621e6185ac5694ffead9ed03005d1bd106178227d01fcef08d4596dc5f"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 74,
        "start_column": 21,
        "end_line": 74,
        "end_column": 26
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\nc : \u2102\nx : GL (Fin 0) (IsDedekindDomain.FiniteAdeleRing \u2124 \u211a)\n\u22a2 \u22a4.FG",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L74"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2025-01-18T16:24:18+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "2932bad0d033168b67a2fbc939372caac422d56eb11c44f28749f939de070bc0"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 118,
        "start_column": 19,
        "end_line": 118,
        "end_column": 24
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : AutomorphicForm.GLn.Weight.IsTrivial n \u03c1\n\u22a2 IsSmooth fun x => z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L118"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "aabe0e6e480d4c92c0ea2ae0eb9503e53d2f4ec341c8948510b229f82e780e02"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 119,
        "start_column": 21,
        "end_line": 119,
        "end_column": 26
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : AutomorphicForm.GLn.Weight.IsTrivial n \u03c1\n\u22a2 GL (Fin n) \u211a \u2192 GL (Fin n) (IsDedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 GL (Fin n) \u211d \u2192 z = z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L119"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "bb9febe5214eaab8cdae7808acbf101fde55b98df384b1afc4aa025c124d05b9"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 120,
        "start_column": 30,
        "end_line": 120,
        "end_column": 35
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : AutomorphicForm.GLn.Weight.IsTrivial n \u03c1\n\u22a2 GL (Fin n) (IsDedekindDomain.FiniteAdeleRing \u2124 \u211a) \u2192 IsSlowlyIncreasing fun y => z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L120"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "981ab7122bf6594c08ade0a6a367ad61611e687a45fd985eb154b4aa22629a81"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 122,
        "start_column": 26,
        "end_line": 122,
        "end_column": 31
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : AutomorphicForm.GLn.Weight.IsTrivial n \u03c1\n\u22a2 \u2203 U, IsConstantOn U fun x => z",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L122"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T23:32:34+02:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "46bc79c44e3b25e0a026591e2231f3e7c9f35545758c4c5dc2bca19f64b700ca"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 121,
        "start_column": 23,
        "end_line": 121,
        "end_column": 28
      },
      "debug_info": {
        "goal": "z : \u2102\nn : \u2115\n\u03c1 : Weight n\nh\u03c1 : AutomorphicForm.GLn.Weight.IsTrivial n \u03c1\n\u22a2 \u2200 (x : GL (Fin n) (IsDedekindDomain.FiniteAdeleRing \u2124 \u211a)),\n    FiniteDimensional \u2102\n      (\u21a5(Z (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)) \u29f8\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) \u211d) (Matrix (Fin n) (Fin n) \u211d)).toLinearMap\n          (annihilator \u27e8fun y => z, \u22ef\u27e9))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T23:29:04+02:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "9197fcdbfd954db2bc06788b4f01c0a90874daa9dac2f3c7ef7f702479a47f8e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 128,
        "start_column": 14,
        "end_line": 128,
        "end_column": 19
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\n\u22a2 Function.LeftInverse (fun z => AutomorphicForm.GLn.ofComplex z 0 \u03c1 sorry) fun f => f.toFun 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L128"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "7f9f7e51b2c2bad325c7beb1c216d85f0af39d6d81c451f5bb6a980a07bd9819"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/GlobalLanglandsConjectures/GLzero.lean",
        "start_line": 129,
        "start_column": 15,
        "end_line": 129,
        "end_column": 20
      },
      "debug_info": {
        "goal": "\u03c1 : Weight 0\n\u22a2 Function.RightInverse (fun z => AutomorphicForm.GLn.ofComplex z 0 \u03c1 sorry) fun f => f.toFun 1",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/GlobalLanglandsConjectures/GLzero.lean#L129"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-06-12T14:33:04+02:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "b068336757b2f1c509fe9252bc71bab939baaca238711604dc9f2b95caca0b4e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/Basic/Reductions.lean",
        "start_line": 325,
        "start_column": 93,
        "end_line": 325,
        "end_column": 98
      },
      "debug_info": {
        "goal": "P : FLT.FreyPackage\n\u22a2 IsSimpleModule (ZMod (FLT.FreyPackage.p P))\n    (torsionGaloisRepresentation (FLT.FreyPackage.FreyCurve P) (FLT.FreyPackage.p P) FLT.Qbar).asModule",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/Basic/Reductions.lean#L325"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-04-30T10:03:06+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "07a16934fd9c9d4e6f8aef7cf07da93f5f514df39bcbb0d2d47309066a5e0271"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/Basic/Reductions.lean",
        "start_line": 335,
        "start_column": 95,
        "end_line": 335,
        "end_column": 100
      },
      "debug_info": {
        "goal": "P : FLT.FreyPackage\n\u22a2 \u00acIsSimpleModule (ZMod (FLT.FreyPackage.p P))\n      (torsionGaloisRepresentation (FLT.FreyPackage.FreyCurve P) (FLT.FreyPackage.p P) FLT.Qbar).asModule",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/Basic/Reductions.lean#L335"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-04-30T10:03:06+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "8bad79b13ed195052d213f96f32199e4dba799979a93f96c44ff18d08956388d"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 39,
        "start_column": 91,
        "end_line": 39,
        "end_column": 96
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b9 : Field k\nE : WeierstrassCurve k\ninst\u271d : E.IsElliptic\nn : \u2115\nhn : 0 < n\n\u22a2 Finite (@WeierstrassCurve.n_torsion k inst\u271d\u00b9 E n)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/EllipticCurve/Torsion.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2024-11-30T14:53:27+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "28d00bb8d980a926fb7eb8ae79d557ec6f86e80bb95759245fa8bd7fe3096a27"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 44,
        "start_column": 38,
        "end_line": 44,
        "end_column": 43
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b2 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b9 : E.IsElliptic\ninst\u271d : IsSepClosed k\nn : \u2115\nhn : \u2191n \u2260 0\n\u22a2 Nat.card (@WeierstrassCurve.n_torsion k inst\u271d\u00b2 E n) = n ^ 2",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/EllipticCurve/Torsion.lean#L44"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-03-23T17:52:39+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "1599d6ab6fae022f2f03939285acd28c7b6873f22eaa8cb1e981efd4501e22a5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 64,
        "start_column": 73,
        "end_line": 64,
        "end_column": 78
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u00b3 : Field k\nE : WeierstrassCurve k\ninst\u271d\u00b2 : E.IsElliptic\nK : Type u\ninst\u271d\u00b9 : Field K\ninst\u271d : Algebra k K\n\u22a2 @WeierstrassCurve.Points.map k inst\u271d\u00b3 E K K inst\u271d\u00b9 inst\u271d\u00b9 inst\u271d inst\u271d (AlgHom.id k K) =\n    AddMonoidHom.id (Point (E.baseChange K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/EllipticCurve/Torsion.lean#L64"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2024-11-30T14:53:27+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "4036194138dfe814aab9398bafbaf6d4a5a3758987ba658423efceba4b3b53a7"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/EllipticCurve/Torsion.lean",
        "start_line": 69,
        "start_column": 48,
        "end_line": 69,
        "end_column": 53
      },
      "debug_info": {
        "goal": "k : Type u\ninst\u271d\u2077 : Field k\nE : WeierstrassCurve k\ninst\u271d\u2076 : E.IsElliptic\nK L M : Type u\ninst\u271d\u2075 : Field K\ninst\u271d\u2074 : Field L\ninst\u271d\u00b3 : Field M\ninst\u271d\u00b2 : Algebra k K\ninst\u271d\u00b9 : Algebra k L\ninst\u271d : Algebra k M\nf : K \u2192\u2090[k] L\ng : L \u2192\u2090[k] M\n\u22a2 AddMonoidHom.comp (@WeierstrassCurve.Points.map k inst\u271d\u2077 E L M inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b9 inst\u271d g)\n      (@WeierstrassCurve.Points.map k inst\u271d\u2077 E K L inst\u271d\u2075 inst\u271d\u2074 inst\u271d\u00b2 inst\u271d\u00b9 f) =\n    @WeierstrassCurve.Points.map k inst\u271d\u2077 E K M inst\u271d\u2075 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d (g.comp f)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/EllipticCurve/Torsion.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "5ecb8fcfe98c",
        "blame_date": "2024-11-30T14:53:27+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "01ba4c4be5d1cf6e1b790ef70e9788d3cf8c04c6bd2a8b4e7cecca742a9e8b79"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 307,
        "start_column": 28,
        "end_line": 307,
        "end_column": 33
      },
      "debug_info": {
        "goal": "x : QHat\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/AutomorphicRepresentation/Example.lean#L307"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-06T01:01:13+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "1436734c818bae667d726f69a996d77c66a43ff13891106238a280de957c1880"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 476,
        "start_column": 66,
        "end_line": 476,
        "end_column": 71
      },
      "debug_info": {
        "goal": "\u22a2 QHat.unitsratsub \u2294 QHat.unitszHatsub = \u22a4",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/AutomorphicRepresentation/Example.lean#L476"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-06T01:54:08+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "ebcf30269586f1790dfdf2952988d183fefc7af9b392e0c15c6dc9efdf600b2d"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1065,
        "start_column": 29,
        "end_line": 1065,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u22a2 Function.Injective \u21d1Hurwitz.j\u2081",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/AutomorphicRepresentation/Example.lean#L1065"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "cdc42480c889040e03509b36eac363a89efd8d7a68eb695e8ac548590c52f963"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1072,
        "start_column": 29,
        "end_line": 1072,
        "end_column": 34
      },
      "debug_info": {
        "goal": "\u22a2 Function.Injective \u21d1Hurwitz.j\u2082",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/AutomorphicRepresentation/Example.lean#L1072"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "99266b87c70c8d12dc8b6f624080fc21735ecc2adc0fc91f0eac687166b4df10"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1076,
        "start_column": 2,
        "end_line": 1076,
        "end_column": 7
      },
      "debug_info": {
        "goal": "z : Hurwitz.HurwitzRatHat\n\u22a2 failed to pretty print expression (use 'set_option pp.rawOnError true' for raw representation)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/AutomorphicRepresentation/Example.lean#L1076"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "a41e16128ad7cdbad70d29bfbf23dc021a8d6f88c766833e77f69d72b1b0fe8e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/AutomorphicRepresentation/Example.lean",
        "start_line": 1078,
        "start_column": 82,
        "end_line": 1078,
        "end_column": 87
      },
      "debug_info": {
        "goal": "z : Hurwitz.HurwitzRatHat\u02e3\n\u22a2 \u2203 u v, \u2191z = Hurwitz.j\u2081 \u2191u * Hurwitz.j\u2082 \u2191v",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/AutomorphicRepresentation/Example.lean#L1078"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-05-10T01:13:22+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "0728ce299acb3278bbb959a45ef5f154e0d47d2b1fb05e2164767f1fafda5dff"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/DedekindDomain/AdicValuation.lean",
        "start_line": 244,
        "start_column": 2,
        "end_line": 244,
        "end_column": 7
      },
      "debug_info": {
        "goal": "A : Type u_1\nK : Type u_2\ninst\u271d\u2074 : CommRing A\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Algebra A K\ninst\u271d\u00b9 : IsFractionRing A K\ninst\u271d : IsDedekindDomain A\nv : HeightOneSpectrum A\n\u22a2 Function.Bijective\n    \u21d1(@IsDedekindDomain.HeightOneSpectrum.ResidueFieldToCompletionResidueField A K inst\u271d\u2074 inst\u271d\u00b3 inst\u271d\u00b2 inst\u271d\u00b9 inst\u271d v)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/DedekindDomain/AdicValuation.lean#L244"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-04-30T00:07:20+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "2be5400fd58f9e7af7fd6f56037b845638079e0e739c723c7b70ca098a25ceb4"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/NumberField/AdeleRing.lean",
        "start_line": 25,
        "start_column": 2,
        "end_line": 25,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u00b9 : Field K\ninst\u271d : NumberField K\n\u22a2 LocallyCompactSpace (AdeleRing (RingOfIntegers K) K)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/NumberField/AdeleRing.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2024-12-02T00:05:18+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "1856b805016092e9d1730135a6f9b1c12a3cb26ca4066252eef049beb8336a17"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/NumberField/AdeleRing.lean",
        "start_line": 276,
        "start_column": 2,
        "end_line": 276,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 CompactSpace (AdeleRing (RingOfIntegers \u211a) \u211a \u29f8 AdeleRing.principalSubgroup (RingOfIntegers \u211a) \u211a)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/NumberField/AdeleRing.lean#L276"
      },
      "metadata": {
        "blame_email_hash": "82b95686a14c",
        "blame_date": "2025-02-08T15:57:20+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "4b2ab85a865a568f1b8786238a4a358218a9a3ad6078a145873e16df4db86e3e"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/NumberField/Completion/Infinite.lean",
        "start_line": 91,
        "start_column": 2,
        "end_line": 91,
        "end_column": 7
      },
      "debug_info": {
        "goal": "K : Type u_1\nL : Type u_2\ninst\u271d\u00b3 : Field K\ninst\u271d\u00b2 : Field L\ninst\u271d\u00b9 : Algebra K L\nv : InfinitePlace K\ninst\u271d : NumberField L\n\u22a2 Module.finrank v.Completion ((w : ExtensionPlace L v) \u2192 (\u2191w).Completion) =\n    Module.finrank v.Completion (TensorProduct K L v.Completion)",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/NumberField/Completion/Infinite.lean#L91"
      },
      "metadata": {
        "blame_email_hash": "82b95686a14c",
        "blame_date": "2025-03-27T09:14:59+00:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "af772635bb0f94f5cb3b585f687e03a4a53b2bc8dd1fff11f1052bf25d03a140"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/Basic.lean",
        "start_line": 99,
        "start_column": 40,
        "end_line": 99,
        "end_column": 45
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2075 : Ring R\ninst\u271d\u2074 : MeasurableSpace R\ninst\u271d\u00b3 : TopologicalSpace R\ninst\u271d\u00b2 : BorelSpace R\ninst\u271d\u00b9 : IsTopologicalAddGroup R\ninst\u271d : LocallyCompactSpace R\n\u22a2 MeasurableSMul R\u02e3 R",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/Basic.lean#L99"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "243004c59bc4e7eb755301385cb4ad7fa5f0b0ec9d0ad1dc653d25cf11beb5d5"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/Basic.lean",
        "start_line": 101,
        "start_column": 45,
        "end_line": 101,
        "end_column": 50
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u2075 : Ring R\ninst\u271d\u2074 : MeasurableSpace R\ninst\u271d\u00b3 : TopologicalSpace R\ninst\u271d\u00b2 : BorelSpace R\ninst\u271d\u00b9 : IsTopologicalAddGroup R\ninst\u271d : LocallyCompactSpace R\n\u22a2 ContinuousConstSMul R\u02e3 R",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/Basic.lean#L101"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "7d85522ef78131f7304e6bb1c0c072d9798b449db7bb30eb48a353715baf81ee"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean",
        "start_line": 20,
        "start_column": 75,
        "end_line": 20,
        "end_column": 80
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\nB : Type u_2\ninst\u271d\u00b2 : Ring B\ninst\u271d\u00b9 : Algebra K B\ninst\u271d : FiniteDimensional K B\n\u22a2 Module.Finite (AdeleRing (RingOfIntegers K) K) (TensorProduct K B (AdeleRing (RingOfIntegers K) K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean#L20"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "db7db512ab55ec27353684d62fcc1989f866fbaaed9c9d685714fe84d507ae4a"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean",
        "start_line": 26,
        "start_column": 61,
        "end_line": 26,
        "end_column": 66
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2074 : Field K\ninst\u271d\u00b3 : NumberField K\nB : Type u_2\ninst\u271d\u00b2 : Ring B\ninst\u271d\u00b9 : Algebra K B\ninst\u271d : FiniteDimensional K B\n\u22a2 LocallyCompactSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean#L26"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "a3092531ced6921a475e0ae609640140f10e22b8ab11b868e07fe4d34fc8b9d2"
    },
    {
      "repo": {
        "remote": "https://github.com/ImperialCollegeLondon/FLT",
        "branch": "main",
        "commit": "b256f707f76991c59762b1666a3ca51cfbddd6d8",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean",
        "start_line": 37,
        "start_column": 85,
        "end_line": 37,
        "end_column": 90
      },
      "debug_info": {
        "goal": "K : Type u_1\ninst\u271d\u2076 : Field K\ninst\u271d\u2075 : NumberField K\nB : Type u_2\ninst\u271d\u2074 : Ring B\ninst\u271d\u00b3 : Algebra K B\ninst\u271d\u00b2 : FiniteDimensional K B\ninst\u271d\u00b9 : MeasurableSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\ninst\u271d : BorelSpace (TensorProduct K B (AdeleRing (RingOfIntegers K) K))\nb : B\u02e3\n\u22a2 (Units.map \u2191Algebra.TensorProduct.includeLeftRingHom) b \u2208\n    distribHaarChar.ker (TensorProduct K B (AdeleRing (RingOfIntegers K) K))",
        "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b256f707f76991c59762b1666a3ca51cfbddd6d8/FLT/HaarMeasure/DistribHaarChar/AdeleRing.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "c7989443bd81",
        "blame_date": "2025-05-09T09:50:50+01:00",
        "inclusion_date": "2025-05-12T00:22:58.144253+00:00"
      },
      "id": "446f40e38e90fdf65e3c32b7d0d7074c6c7c41cfa85d8c71916d9cfe0eaf1b5a"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "EMwave",
        "commit": "1a485b181fd479295c2fb42f33cf1c2537bd8f08",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Electromagnetism/Wave.lean",
        "start_line": 212,
        "start_column": 2,
        "end_line": 212,
        "end_column": 7
      },
      "debug_info": {
        "goal": "OM : OpticalMedium\nt : Time\nx : Space\n_p\u271d : ENNReal\ns : WithLp _p\u271d (Fin 3 \u2192 \u211d)\nE : ElectricField\nB : MagneticField\n\u22a2 \u221a(OM.\u03bc \u2022 OM.\u03b5)\u207b\u00b9 \u2022 B t x =\n    (WithLp.equiv 2 (Fin 3 \u2192 \u211d)).symm\n      ((crossProduct ((WithLp.equiv _p\u271d (Fin 3 \u2192 \u211d)) s)) ((WithLp.equiv 2 (Fin 3 \u2192 \u211d)) (E t x)))",
        "url": "https://github.com/HEPLean/PhysLean/blob/1a485b181fd479295c2fb42f33cf1c2537bd8f08/PhysLean/Electromagnetism/Wave.lean#L212"
      },
      "metadata": {
        "blame_email_hash": "95cd4b9b9759",
        "blame_date": "2025-05-11T15:58:00+01:00",
        "inclusion_date": "2025-05-11T23:32:56.403083+00:00"
      },
      "id": "6b6eba850caddc1f1c4115e76da72fe13cc0dedc9e47bcdbbaa861d65fd3d767"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "EMwave",
        "commit": "1a485b181fd479295c2fb42f33cf1c2537bd8f08",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Electromagnetism/Wave.lean",
        "start_line": 217,
        "start_column": 2,
        "end_line": 217,
        "end_column": 7
      },
      "debug_info": {
        "goal": "OM : OpticalMedium\nt : Time\nx : Space\n_p\u271d : ENNReal\ns : WithLp _p\u271d (Fin 3 \u2192 \u211d)\nE : ElectricField\nB : MagneticField\n\u22a2 \u221a(OM.\u03bc \u2022 OM.\u03b5)\u207b\u00b9 \u2022 E t x =\n    (WithLp.equiv 2 (Fin 3 \u2192 \u211d)).symm\n      ((crossProduct ((WithLp.equiv _p\u271d (Fin 3 \u2192 \u211d)) s)) ((WithLp.equiv 2 (Fin 3 \u2192 \u211d)) (B t x)))",
        "url": "https://github.com/HEPLean/PhysLean/blob/1a485b181fd479295c2fb42f33cf1c2537bd8f08/PhysLean/Electromagnetism/Wave.lean#L217"
      },
      "metadata": {
        "blame_email_hash": "95cd4b9b9759",
        "blame_date": "2025-05-11T15:58:00+01:00",
        "inclusion_date": "2025-05-11T23:32:56.403083+00:00"
      },
      "id": "b4b84951b233c073f2979b62b63ff4f573acab44aa89beed1becaa52ff8ffa8f"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Smt/Reconstruct/BitVec/Bitblast.lean",
        "start_line": 37,
        "start_column": 2,
        "end_line": 37,
        "end_column": 7
      },
      "debug_info": {
        "goal": "w : Nat\nx y : BitVec w\n\u22a2 (x = y) = (BitVec.beq w x y = true)",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Smt/Reconstruct/BitVec/Bitblast.lean#L37"
      },
      "metadata": {
        "blame_email_hash": "a29bc6f92c6c",
        "blame_date": "2024-05-08T17:36:04-07:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "06903fb617edab65a9480d78f688920ee401e63324fbd0215080108f9415717e"
    },
    {
      "repo": {
        "remote": "https://github.com/ufmg-smite/lean-smt",
        "branch": "main",
        "commit": "e994ff05c81214b3397f8b59aaeca4c302bd41dc",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Test/Int/DefineSort.lean",
        "start_line": 8,
        "start_column": 2,
        "end_line": 8,
        "end_column": 7
      },
      "debug_info": {
        "goal": "a b : MyInt\n\u22a2 MyInt.add a b = MyInt.add b a",
        "url": "https://github.com/ufmg-smite/lean-smt/blob/e994ff05c81214b3397f8b59aaeca4c302bd41dc/Test/Int/DefineSort.lean#L8"
      },
      "metadata": {
        "blame_email_hash": "2d71a621927f",
        "blame_date": "2022-07-14T12:41:05-04:00",
        "inclusion_date": "2025-05-17T23:11:31.262140+00:00"
      },
      "id": "0d9944a0ca335cee494beb1bb7ce91fc4fcb01f4e5ba50725acc2abcbec6f495"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/MaximalConsistentSet.lean",
        "start_line": 191,
        "start_column": 4,
        "end_line": 191,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inl\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : Consistent \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191\u2205 \u2286 {\u223c\u03c6}\n\u22a2 \u2191\u2205 *\u22ac[\ud835\udce2] \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/MaximalConsistentSet.lean#L191"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-12T12:29:45+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "16bf128716f7898dc911f671d8ef2b1417c9789e709da5084d5ac4000b39f3c6"
    },
    {
      "repo": {
        "remote": "https://github.com/FormalizedFormalLogic/Foundation",
        "branch": "master",
        "commit": "5d0eb4e51de098b32e1623f00fe8c84dff24a004",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Foundation/Modal/MaximalConsistentSet.lean",
        "start_line": 194,
        "start_column": 4,
        "end_line": 194,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case inr\n\u03b1 : Type u_1\nS : Type u_2\ninst\u271d\u00b3 : Entailment (Formula \u03b1) S\n\ud835\udce2 : S\ninst\u271d\u00b2 : DecidableEq \u03b1\nT : FormulaSet \u03b1\ninst\u271d\u00b9 : Entailment.Cl \ud835\udce2\n\u03c6 : Formula \u03b1\ninst\u271d : Necessitation \ud835\udce2\nT_consis : Consistent \ud835\udce2 T\nh : \u223c\u25a1\u03c6 \u2208 T\nh\u0393 : \u2191{\u223c\u03c6} \u2286 {\u223c\u03c6}\n\u22a2 \u2191{\u223c\u03c6} *\u22ac[\ud835\udce2] \u22a5",
        "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/5d0eb4e51de098b32e1623f00fe8c84dff24a004/Foundation/Modal/MaximalConsistentSet.lean#L194"
      },
      "metadata": {
        "blame_email_hash": "165d0178d95d",
        "blame_date": "2025-05-12T12:29:45+09:00",
        "inclusion_date": "2025-05-15T23:27:40.059657+00:00"
      },
      "id": "ec60fa49e5ecd09d8454c8d07337a05aa1b6ff1ceb384dfed9bd0c12e9669f8b"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 75,
        "start_column": 17,
        "end_line": 75,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 (detRep 1, orthchroRep 1) = 1",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "650ac535039891699611762b1607ed5e85a37f70539ce611cc534d7ae0dc8af2"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 76,
        "start_column": 17,
        "end_line": 76,
        "end_column": 22
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 \u2200 (x y : \u2191(LorentzGroup d)),\n    (detRep (x * y), orthchroRep (x * y)) = (detRep x, orthchroRep x) * (detRep y, orthchroRep y)",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L76"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "022053c370c0e74a030bf4a71f656252c855fee8d8d97949bb939c36be855ca5"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 77,
        "start_column": 25,
        "end_line": 77,
        "end_column": 30
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 Continuous fun \u039b => (detRep \u039b, orthchroRep \u039b)",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L77"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-05T23:32:38+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "69f4ede4c712f7bd8247e7278dc2e2e3b63522028b4a9ef070ef8fb870983b6c"
    },
    {
      "repo": {
        "remote": "https://github.com/HEPLean/PhysLean",
        "branch": "jnlindsay/feat/restricted-Lorentz-group-equal-to-identity-component",
        "commit": "b4a420deef68762a68898a4245f54fb1992b6f4c",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "PhysLean/Relativity/Lorentz/Group/Restricted.lean",
        "start_line": 86,
        "start_column": 2,
        "end_line": 86,
        "end_column": 7
      },
      "debug_info": {
        "goal": "d : \u2115\n\u22a2 _root_.IsConnected \u2191(LorentzGroup.restricted d)",
        "url": "https://github.com/HEPLean/PhysLean/blob/b4a420deef68762a68898a4245f54fb1992b6f4c/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L86"
      },
      "metadata": {
        "blame_email_hash": "f5ab4f28bed3",
        "blame_date": "2025-05-13T20:30:02+10:00",
        "inclusion_date": "2025-05-13T23:18:43.440253+00:00"
      },
      "id": "56d416332db27680a625dc9e3fcef645b48675ece9e1ee3f47398a3dcf1da58f"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h71.lean",
        "start_line": 9,
        "start_column": 94,
        "end_line": 9,
        "end_column": 99
      },
      "debug_info": {
        "goal": "z\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfdev : AnalyticAt \u2102 (deriv f) z\u2080\nn : \u2115\nhn : n > 0\ng : \u2102 \u2192 \u2102\nhg : AnalyticAt \u2102 g z\u2080\nhgneq0 : g z\u2080 \u2260 0\nhexp : \u2200\u1da0 (z : \u2102) in nhds z\u2080, f z = (z - z\u2080) ^ n \u2022 g z\n\u22a2 \u2200\u1da0 (z : \u2102) in nhds z\u2080, deriv f z = (z - z\u2080) ^ (n - 1) \u2022 (n \u2022 g z + (z - z\u2080) \u2022 deriv g z)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h71.lean#L9"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-14T23:45:44+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "3ba7a51931b63fc6a95ecc528e4245e674f4b92f5fd301f6f8d94322ad429060"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/duper",
        "branch": "dev",
        "commit": "0f56e6f6463c4d8d406de52cc69b29036e4bed7b",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "Duper/Tests/lastAsylum.lean",
        "start_line": 35,
        "start_column": 13,
        "end_line": 35,
        "end_column": 18
      },
      "debug_info": {
        "goal": "ax1 : \u2200 (x : Inhab), Peculiar x \u2194 (Sane x \u2194 \u00acDoctor x)\nax2 : \u2200 (x : Inhab), Special x \u2194 \u2200 (y : Inhab), \u00acDoctor y \u2194 (Sane y \u2194 Peculiar x)\nax3 : \u2200 (x y : Inhab), (Sane x \u2194 Special y) \u2192 (Sane (bf x) \u2194 \u00acDoctor y)\nax4 : Sane Tarr \u2194 (x : Inhab) \u2192 Doctor x \u2192 Sane x\nax5 : Sane Fether \u2194 \u2200 (x : Inhab), \u00acDoctor x \u2192 \u00acSane x\nax6 : Sane Fether \u2194 Sane Tarr\n\u22a2 False",
        "url": "https://github.com/leanprover-community/duper/blob/0f56e6f6463c4d8d406de52cc69b29036e4bed7b/Duper/Tests/lastAsylum.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "d9c480704efb",
        "blame_date": "2022-08-01T22:37:02-04:00",
        "inclusion_date": "2025-05-14T23:19:01.080875+00:00"
      },
      "id": "3c116486d136d45fb4070181901af621002bb468281e1b49223e1212129ef279"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 103,
        "start_column": 2,
        "end_line": 103,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 \u2200 {U : Set \u2102} {f g : \u2102 \u2192 \u2102}, IsOpen U \u2192 (\u2200 z \u2208 U, f z = g z) \u2192 \u2200 z \u2208 U, deriv f z = deriv g z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "e0b947c12ed8acc279489ec302d483e3eac7795a1c6f5f5a59800da1232217db"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 165,
        "start_column": 78,
        "end_line": 165,
        "end_column": 83
      },
      "debug_info": {
        "goal": "f : \u2102 \u2192 \u2102\nz\u2080 : \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfdev : AnalyticAt \u2102 (deriv f) z\u2080\nn : \u2115\nhn : n > 0\ng : \u2102 \u2192 \u2102\nhg : AnalyticAt \u2102 g z\u2080\nhgneq0 : g z\u2080 \u2260 0\nUg : Set \u2102\nhU : Ug \u2208 nhds z\u2080\nhUf : \u2200 z \u2208 Ug, f z = (z - z\u2080) ^ n \u2022 g z\nUr : Set \u2102\nhgN : Ur \u2208 nhds z\u2080 \u2227 AnalyticOnNhd \u2102 g Ur\nz : \u2102\nHz : z \u2208 Ug \u2229 Ur\nHderiv : deriv (fun z => (z - z\u2080) ^ n \u2022 g z) z = (z - z\u2080) ^ (n - 1) * (\u2191n * g z + (z - z\u2080) * deriv g z)\n\u22a2 f =\u1da0[nhds z] fun z => (fun z => (z - z\u2080) ^ n \u2022 g z) z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L165"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "597623ba506d57d10dfe1d64704a31f8b2720654abf11c23c0a975d8263c582e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 177,
        "start_column": 6,
        "end_line": 177,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case zero\nz\u2080 : \u2102\nn : \u2115\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfdev : AnalyticAt \u2102 (deriv f) z\u2080\nhof : \u2102 \u2192 \u21910 \u2264 hf.order\n\u22a2 hfdev.order = \u2191(n - 0)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "1fa6c0e4a9ce170b0f18e6d9a5d27db3096dcc02d19bfab695bb31229acf019e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 178,
        "start_column": 6,
        "end_line": 178,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ\nz\u2080 : \u2102\nn : \u2115\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfdev : AnalyticAt \u2102 (deriv f) z\u2080\nk : \u2115\nhk : (\u2102 \u2192 \u2191k \u2264 hf.order) \u2192 hfdev.order = \u2191(n - k)\nhof : \u2102 \u2192 \u2191(k + 1) \u2264 hf.order\n\u22a2 hfdev.order = \u2191(n - (k + 1))",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L178"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-19T16:40:15+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "eaa24477ee1cd8f07753d503eaf9bdd87f4b293011f52204835328100ee38842"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 282,
        "start_column": 4,
        "end_line": 282,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mp.intro\nk : \u2115\nn : \u2115\u221e\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nhfdev : \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z\nH1 : \u2200 k_1 < n, \u22ef.order = 0\nH2 : iteratedDeriv k f z \u2260 0\n\u22a2 \u22ef.order = n",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L282"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-13T17:58:44+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "1a1294e78513f1fee1f25c3a40d75f7653969ddeed4dd5b7525898b659342662"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 286,
        "start_column": 6,
        "end_line": 286,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mpr.left\nk\u271d : \u2115\nn : \u2115\u221e\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nhfdev : \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k\u271d f) z\nH : \u22ef.order = n\nk : \u2115\u221e\nhk : k < n\n\u22a2 \u22ef.order = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L286"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-13T17:58:44+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "cba1f9acef95e1a748f1bb443db7825cd46713975ac6ca712bd3ca49b3635d5b"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 288,
        "start_column": 6,
        "end_line": 288,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mpr.right\nk : \u2115\nn : \u2115\u221e\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nhord : \u22ef.order \u2260 \u22a4\nhfdev : \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv k f) z\nH\u271d : \u22ef.order = n\nH : iteratedDeriv k f z = 0\n\u22a2 False",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L288"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-13T17:58:44+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "a034442812892c1d1ef2742b69d82f790651db4327682c3f5d5b8e40c04fe70e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 302,
        "start_column": 2,
        "end_line": 302,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.h.left\nn : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nho : \u2200 (z : \u2102), \u22ef.order \u2260 \u22a4\nhd : \u2200 k < n, iteratedDeriv k f z = 0\nk : \u2115\u221e\nhkn : k < \u2191n\nthis : k.toNat < n \u2192 iteratedDeriv k.toNat f z = 0\n\u22a2 order \u22ef = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L302"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-13T17:58:44+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "2077e281e99c6f0365bb61f13a0a216ebef73995195b8aa28fab55513a096898"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 303,
        "start_column": 2,
        "end_line": 303,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.h.right\nn : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nho : \u2200 (z : \u2102), \u22ef.order \u2260 \u22a4\nhd : \u2200 k < n, iteratedDeriv k f z = 0\n\u22a2 iteratedDeriv ?m.64713 f z \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L303"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-13T17:58:44+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "910f173a523d8628bf4ed17bb01b2036b0de98ed779defcd10655ca6027ef55e"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "f6e31f7f5d5931abc9523a1f52cda482f7354b60",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 305,
        "start_column": 2,
        "end_line": 305,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case h.h.hfdev\nn : \u2115\nf : \u2102 \u2192 \u2102\nz : \u2102\nhf : \u2200 (z : \u2102), AnalyticAt \u2102 f z\nho : \u2200 (z : \u2102), \u22ef.order \u2260 \u22a4\nhd : \u2200 k < n, iteratedDeriv k f z = 0\n\u22a2 \u2200 (z : \u2102), AnalyticAt \u2102 (iteratedDeriv ?m.64713 f) z",
        "url": "https://github.com/leanprover-community/mathlib4/blob/f6e31f7f5d5931abc9523a1f52cda482f7354b60/Mathlib/NumberTheory/h7order.lean#L305"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-13T17:58:44+02:00",
        "inclusion_date": "2025-05-20T03:02:23.995399+00:00"
      },
      "id": "214a3e0157a1f176e55e024c5941399f959efbd4a3d88ce0883a0ca75e2ccc62"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 226,
        "start_column": 6,
        "end_line": 226,
        "end_column": 11
      },
      "debug_info": {
        "goal": "z\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nx : \u2102\nthis : dist x z\u2080 < \u03b5 \u2192 deriv f x = 0\n\u22a2 dist x z\u2080 < r \u2192 deriv f x = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L226"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "d44e30639fc612ebb0a96ca1bceb7c6574aa34ed58820e8783c1d1c543442b00"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 233,
        "start_column": 6,
        "end_line": 233,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.intro.intro.intro.refine_3\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nhf' : EqOn (deriv f) (deriv fun x => 0) (Metric.ball z\u2080 r)\nhx : z\u2080 \u2208 Metric.ball z\u2080 r\nthis : f z\u2080 = 0 \u2192 EqOn f (fun x => 0) (Metric.ball z\u2080 r)\n\u22a2 \u2203 \u03b5 > 0, \u2200 y \u2208 Metric.ball z\u2080 \u03b5, f y = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L233"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "22e7e7a93cacc2a6f40aeb1b9a55bcb05d2780ba0308e643c1d8b8dbf6a19c16"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 234,
        "start_column": 6,
        "end_line": 234,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.intro.intro.intro.refine_1\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nhf' : EqOn (deriv f) (deriv fun x => 0) (Metric.ball z\u2080 r)\nhx : z\u2080 \u2208 Metric.ball z\u2080 r\n\u22a2 IsOpen (Metric.ball z\u2080 r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "7dc460684b56e3f64f3236cd04a4c00c681f9e0f9bbf0463b3b8202970d54faa"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 235,
        "start_column": 6,
        "end_line": 235,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case mp.intro.intro.intro.refine_2\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf\u271d : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\nr : \u211d\nhB : 0 < r \u2227 AnalyticOnNhd \u2102 f (Metric.ball z\u2080 r)\n\u03b5 : \u211d\nh\u03b5 : \u03b5 > 0\nhball : \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0\nhf : DifferentiableOn \u2102 f (Metric.ball z\u2080 r)\nhg : DifferentiableOn \u2102 (fun x => 0) (Metric.ball z\u2080 r)\nhf' : EqOn (deriv f) (deriv fun x => 0) (Metric.ball z\u2080 r)\nhx : z\u2080 \u2208 Metric.ball z\u2080 r\n\u22a2 IsPreconnected (Metric.ball z\u2080 r)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L235"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T18:06:07+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "561f451859ae2f5dd44f32e75a7e6f02a2d47bc1ff7dd3ea487ceeec01b5584a"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 236,
        "start_column": 4,
        "end_line": 236,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case mpr\nz\u2080 : \u2102\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhzero : f z\u2080 = 0\n\u22a2 (\u2203 \u03b5 > 0, \u2200 y \u2208 Metric.ball z\u2080 \u03b5, f y = 0) \u2192 \u2203 \u03b5 > 0, \u2200 y \u2208 Metric.ball z\u2080 \u03b5, deriv f y = 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L236"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T17:20:40+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "4c95688dd08ac4cd35cc42c46e1e128d3ff524e2bf5136639605e8d36547dd26"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 255,
        "start_column": 6,
        "end_line": 255,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ.mp.intro\nz\u2080 : \u2102\nn : \u2115\nIH :\n  \u2200 (f : \u2102 \u2192 \u2102) (hf : AnalyticAt \u2102 f z\u2080), hf.order \u2260 \u22a4 \u2192 ((\u2200 k < n, \u22ef.order = 0) \u2227 deriv^[n] f z\u2080 \u2260 0 \u2194 hf.order = \u2191n)\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfin : hf.order \u2260 \u22a4\nhz : \u2200 k < n + 1, \u22ef.order = 0\nhnz : deriv^[n + 1] f z\u2080 \u2260 0\nIH' : \u22ef.order \u2260 \u22a4 \u2192 ((\u2200 k < n, \u22ef.order = 0) \u2227 deriv^[n] (deriv f) z\u2080 \u2260 0 \u2194 \u22ef.order = \u2191n)\n\u22a2 hf.order = \u2191(n + 1)",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L255"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-13T17:58:44+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "ee454089aba8bc813b5bf9ddd1f983f331c50c33a13aec500f0d2f10d0ce0bb8"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 256,
        "start_column": 4,
        "end_line": 256,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ.mpr\nz\u2080 : \u2102\nn : \u2115\nIH :\n  \u2200 (f : \u2102 \u2192 \u2102) (hf : AnalyticAt \u2102 f z\u2080), hf.order \u2260 \u22a4 \u2192 ((\u2200 k < n, \u22ef.order = 0) \u2227 deriv^[n] f z\u2080 \u2260 0 \u2194 hf.order = \u2191n)\nf : \u2102 \u2192 \u2102\nhf : AnalyticAt \u2102 f z\u2080\nhfin : hf.order \u2260 \u22a4\n\u22a2 hf.order = \u2191(n + 1) \u2192 (\u2200 k < n + 1, \u22ef.order = 0) \u2227 deriv^[n + 1] f z\u2080 \u2260 0",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L256"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T17:20:40+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "f8a06dd3ac6c4ea2426700113405d68f1d172eaddae2e7ee2e77ef3f8015a4b0"
    },
    {
      "repo": {
        "remote": "https://github.com/leanprover-community/mathlib4",
        "branch": "hilbert7",
        "commit": "50d1283ac830e0464671949a4ee23f70eda09242",
        "lean_version": "v4.18.0-rc1"
      },
      "location": {
        "path": "Mathlib/NumberTheory/h7order.lean",
        "start_line": 261,
        "start_column": 74,
        "end_line": 261,
        "end_column": 79
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2200 (f : \u2102 \u2192 \u2102) (z\u2080 : \u2102) (hf : \u2200 (z : \u2102), AnalyticAt \u2102 f z),\n    (\u2200 (z : \u2102), \u22ef.order \u2260 \u22a4) \u2192 (\u2200 k < n, iteratedDeriv k f z\u2080 = 0) \u2192 \u2191n \u2264 \u22ef.order",
        "url": "https://github.com/leanprover-community/mathlib4/blob/50d1283ac830e0464671949a4ee23f70eda09242/Mathlib/NumberTheory/h7order.lean#L261"
      },
      "metadata": {
        "blame_email_hash": "427ce08bc78e",
        "blame_date": "2025-05-20T17:20:40+02:00",
        "inclusion_date": "2025-05-21T03:02:42.449798+00:00"
      },
      "id": "985ae959594b91e38c764b90b9ffcf3b197a9b82ebd775bf6f2b19479c5fa99d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 62,
        "start_column": 9,
        "end_line": 62,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b9 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 Unit),\n    (OStatement \u2295\u1d65 fun x => WitEquiv) i =\n      match (\u22ef.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => ProtocolSpec.Message (SendWitness.pSpec WitEquiv) j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Components.lean#L62"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "12a8ac76f96697f6983e0c8324fa8a0f7bd768d5f01007533d2341e4743daaa6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 80,
        "start_column": 2,
        "end_line": 80,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement Witness \u03b9\u209b\u1d62 : Type\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst\u271d\u00b2 : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nWitEquiv : Type\ninst\u271d\u00b9 : OracleInterface WitEquiv\nequiv : Witness \u2243 WitEquiv\nrelIn : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Witness \u2192 Prop\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness relIn (SendWitness.toRelOut Statement Witness \u03b9\u209b\u1d62 OStatement WitEquiv equiv relIn)\n    (SendWitness.oracleReduction \u03b9 oSpec Statement Witness \u03b9\u209b\u1d62 OStatement inst\u271d\u00b2 WitEquiv inst\u271d\u00b9 equiv)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Components.lean#L80"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "539976d0e1a5ac70215c97dd044213e3ec8047f28a04e2b63e164675d5a2c556"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 141,
        "start_column": 9,
        "end_line": 141,
        "end_column": 14
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\n\u22a2 \u2200 (i : \u03b9\u209b\u1d62 \u2295 \u03b9\u209b\u1d62),\n    (OStatement \u2295\u1d65 OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => ProtocolSpec.Message (SameOracle.pSpec \u03b9\u209b\u1d62 inst\u271d OStatement) j",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Components.lean#L141"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "b79eac0b2519ba8ca1ae6968c8242052ba33bd57642407c0863235b853691705"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 167,
        "start_column": 2,
        "end_line": 167,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStatement \u03b9\u209b\u1d62 : Type\ninst\u271d\u00b9 : Unique \u03b9\u209b\u1d62\nOStatement : \u03b9\u209b\u1d62 \u2192 Type\ninst : (i : \u03b9\u209b\u1d62) \u2192 OracleInterface (OStatement i)\nrel : Statement \u00d7 ((i : \u03b9\u209b\u1d62) \u2192 OStatement i) \u2192 Prop\nrelComp : Statement \u2192 OracleComp [OStatement]\u2092 Unit\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (fun x x_1 => rel x) (SameOracle.relOut \u03b9\u209b\u1d62 inst\u271d\u00b9 OStatement)\n    (SameOracle.oracleReduction \u03b9 oSpec Statement \u03b9\u209b\u1d62 inst\u271d\u00b9 OStatement inst relComp)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Components.lean#L167"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "e3073b68dabbf6c5bb78a86d745d6bdcbd9911f3cb3b27e7108ea90314df6c01"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Components.lean",
        "start_line": 260,
        "start_column": 2,
        "end_line": 260,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nOStatement : Type\ninst\u271d\u00b9 : OracleInterface OStatement\ninst : VCVCompatible (Query OStatement)\ninst\u271d : oSpec.FiniteRange\n\u22a2 OracleReduction.perfectCompleteness (RandomQuery.relIn OStatement) (RandomQuery.relOut OStatement inst\u271d\u00b9)\n    (RandomQuery.oracleReduction \u03b9 oSpec OStatement inst\u271d\u00b9)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Components.lean#L260"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-24T11:52:07-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "847fe385a65b15d39ff3577fda5dbd35527c925237212fd478cb5ffb12efda54"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 197,
        "start_column": 2,
        "end_line": 197,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let a \u2190\n        (simulateQ loggingOracle\n              (Prover.runToRound n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut inst\u271d (Fin.last n) stmt wit\n                reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190 Prover.run n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut inst\u271d stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Execution.lean#L197"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "2cda35c023af46953dfc1ec670dce969e719d564f66d51c0b0368e7031e91057"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Execution.lean",
        "start_line": 290,
        "start_column": 2,
        "end_line": 290,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst\u271d : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 (do\n      let __discr \u2190\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                @Prover.run_of_prover_first.match_1 (fun i => (pSpec i).2) i fun isLt => a.1)) <$>\n            (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let __discr \u2190\n      (reduction.prover.sendMessage \u27e80, \u22ef\u27e9 (reduction.prover.input stmt wit)).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                @Prover.run_of_prover_first.match_1 (fun i => (pSpec i).2) i fun isLt => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              @Prover.run_of_prover_first.match_1 (fun i => (pSpec i).2) i fun isLt => __discr.1).liftComp\n        (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Execution.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "4bfc0d1846a993780e853f4e68939251a7d4826574faa7c3b33b1ac3ac2262ab"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 312,
        "start_column": 2,
        "end_line": 312,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u2075 : CommRing R\nd : \u2115\ninst\u271d\u2074 : Fintype R\ninst\u271d\u00b3 : DecidableEq R\ninst\u271d\u00b2 : IsDomain R\n\u03c3 : Type\ninst\u271d\u00b9 : Fintype \u03c3\ninst\u271d : DecidableEq \u03c3\na : MvPolynomial \u03c3 R\nha : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s a = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nb : MvPolynomial \u03c3 R\nhb : \u2200 (s : \u03c3 \u2192\u2080 \u2115), \u00acMvPolynomial.coeff s b = 0 \u2192 \u2200 (i : \u03c3), s i \u2264 d\nhNe : \u00aca = b\n\u22a2 {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card \u2264 Fintype.card \u03c3 * d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/OracleInterface.lean#L312"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "a4096c6d08943fa1ca7ad0af166bb6e2fae927d5655927e16476b11ad677f921"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/OracleInterface.lean",
        "start_line": 351,
        "start_column": 2,
        "end_line": 351,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b9 : Type\nspec : OracleSpec \u03b9\nR : Type\ninst\u271d : CommSemiring R\nm : \u2115\nD : Fin m \u21aa R\np : Polynomial R\n\u22a2 \u2203 x,\n    ((OptionT.run (List.mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {\u03b1} =>\n          QueryImpl.impl\n            (@SimOracle.statelessOracle Unit \u03b9 spec\n              (OracleInterface.toOracleSpec Unit (fun x => Polynomial R) fun i => instOracleInterfacePolynomial R inst\u271d)\n              fun i q => OracleInterface.oracle (Polynomial R) (instOracleInterfacePolynomial R inst\u271d) p q)) =\n        pure x \u2227\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/OracleInterface.lean#L351"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "d519d84dcd458b3636717dd6f0beda5ac3576e352dbc114333c21ca93dae32b1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Transform/FiatShamir.lean",
        "start_line": 130,
        "start_column": 66,
        "end_line": 130,
        "end_column": 71
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut : Type\ninst\u271d\u2074 : VCVCompatible StmtIn\ninst\u271d\u00b3 : (i : Fin n) \u2192 VCVCompatible (pSpec i).2\ninst\u271d\u00b2 : DecidableEq \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\ncompletenessError : NNReal\nR : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n\u22a2 Reduction.completeness relIn relOut R completenessError \u2192\n    Reduction.completeness relIn relOut (Reduction.fiatShamir n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut R)\n      completenessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Transform/FiatShamir.lean#L130"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-06T23:33:56-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "24d044ddb053f9c915f0ef55cc9de73a31f01e716434067209ab2d9bd5b00f24"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 103,
        "start_column": 2,
        "end_line": 103,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : Polynomial R\n\u22a2 (FRI.splitEvenOdd R inst\u271d\u00b9 p).1.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/CommitmentScheme/Fold.lean#L103"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "1281e78b45028c309501e1951cff7c06ec10eedafb5c0cc6e27bbd6efcbbb21b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 107,
        "start_column": 2,
        "end_line": 107,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\np : Polynomial R\n\u22a2 (FRI.splitEvenOdd R inst\u271d\u00b9 p).2.natDegree \u2264 p.natDegree / 2",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/CommitmentScheme/Fold.lean#L107"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "5bc1b357bbd805d0f5bd76b5df5282bb866ab8ab0507d9c80886576054837774"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 119,
        "start_column": 11,
        "end_line": 119,
        "end_column": 16
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5(Polynomial.degreeLT R (2 * n))\npEven pOdd : Polynomial R\n\u22a2 pEven \u2208 Polynomial.degreeLT R n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/CommitmentScheme/Fold.lean#L119"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "5973d046d41cc79a65d530e73f61c77e75d8725b1ccd6d7d75816716c0893018"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/Fold.lean",
        "start_line": 119,
        "start_column": 26,
        "end_line": 119,
        "end_column": 31
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommRing R\ninst\u271d : Sampleable R\nn deg : \u2115\n\u03b6 : R\u02e3\nhPrim : IsPrimitiveRoot \u03b6 (2 ^ n)\np : \u21a5(Polynomial.degreeLT R (2 * n))\npEven pOdd : Polynomial R\n\u22a2 pOdd \u2208 Polynomial.degreeLT R n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/CommitmentScheme/Fold.lean#L119"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-11-26T16:07:07-07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "583588a509f1c9a113a104657905213b47f76268a5d1301f409da768ace497b3"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 219,
        "start_column": 6,
        "end_line": 219,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case succ\n\u03b1 : Type\ninst\u271d\u00b2 : DecidableEq \u03b1\ninst\u271d\u00b9 : Inhabited \u03b1\ninst\u271d : Fintype \u03b1\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\nn : \u2115\nih :\n  \u2200 (leaves : List.Vector \u03b1 (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (@MerkleTree.implement_with_function \u03b1 hash)\n        (do\n          let cache \u2190 MerkleTree.buildMerkleTree \u03b1 n leaves\n          let proof : List.Vector \u03b1 n := MerkleTree.generateProof \u03b1 n i cache\n          MerkleTree.verifyProof \u03b1 inst\u271d\u00b2 n i leaves[i] (MerkleTree.getRoot \u03b1 n cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n\u22a2 ((((Option.elimM (OptionT.run (MerkleTree.buildMerkleTree \u03b1 (n + 1) leaves)) (FreeMonad.pure none)\n              (@Function.comp (MerkleTree.Cache \u03b1 (n + 1))\n                (OptionT (FreeMonad (OracleQuery (MerkleTree.spec \u03b1))) PUnit.{1})\n                (FreeMonad (OracleQuery (MerkleTree.spec \u03b1)) (Option PUnit.{1})) OptionT.run fun cache =>\n                MerkleTree.verifyProof \u03b1 inst\u271d\u00b2 (n + 1) i (leaves.get i) (MerkleTree.getRoot \u03b1 (n + 1) cache)\n                  (MerkleTree.generateProof \u03b1 (n + 1) i cache))).mapM\n          fun {\u03b1_1} q =>\n          @MerkleTree.implement_with_function.match_1 \u03b1 (fun \u03b1_2 q => StateT Unit (OracleComp []\u2092) \u03b1_2) \u03b1_1 q\n            fun i left right => pure (hash (left, right))) >>=\n        fun __do_lift => __do_lift.getM)\n      ()).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/CommitmentScheme/MerkleTree.lean#L219"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-04-16T13:24:09-07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "fae3edcaeb511af4f6c7534e685742216c4353868e3a3c67d8413ce8832009cd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 160,
        "start_column": 2,
        "end_line": 160,
        "end_column": 7
      },
      "debug_info": {
        "goal": "p : \u2115\ninst\u271d\u00b2 : Fact (Nat.Prime p)\nG\u2081 : Type u_2\ninst\u271d\u00b9 : CommGroup G\u2081\ninst\u271d : @IsPrimeOrderWith G\u2081 CommGroup.toGroup p inst\u271d\u00b2\nn : \u2115\ng : G\u2081\na : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1))\n\u22a2 g ^ \u2211 i, a.val ^ \u2191i * ((degreeLTEquiv (ZMod p) (n + 1)) poly i).val =\n    g ^ (\u2211 x, (degreeLTEquiv (ZMod p) (n + 1)) poly x * a ^ \u2191x).val",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/AGM/Basic.lean#L160"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-15T12:13:54+05:30",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "bed57fecb3bc2509721051ba03b6ba49fb3a52372329e8be7911c1739e9483bd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/AGM/Basic.lean",
        "start_line": 171,
        "start_column": 6,
        "end_line": 171,
        "end_column": 11
      },
      "debug_info": {
        "goal": "G : Type u_1\ninst\u271d\u2078 : CommGroup G\np : \u2115\ninst\u271d\u2077 : Fact (Nat.Prime p)\nh : Nat.card G = p\ng : G\nG\u2081 : Type u_2\ninst\u271d\u2076 : CommGroup G\u2081\ninst\u271d\u2075 : @IsPrimeOrderWith G\u2081 CommGroup.toGroup p inst\u271d\u2077\ng\u2081 : G\u2081\nG\u2082 : Type u_3\ninst\u271d\u2074 : CommGroup G\u2082\ninst\u271d\u00b3 : @IsPrimeOrderWith G\u2082 CommGroup.toGroup p inst\u271d\u2077\ng\u2082 : G\u2082\nG\u209c : Type u_4\ninst\u271d\u00b2 : CommGroup G\u209c\ninst\u271d\u00b9 : @IsPrimeOrderWith G\u209c CommGroup.toGroup p inst\u271d\u2077\npairing : Additive G\u2081 \u2192\u2097[\u2124] Additive G\u2082 \u2192\u2097[\u2124] Additive G\u209c\nn : \u2115\ninst\u271d : Fact (Nat.Prime p)\nsrs : Vector G\u2081 (n + 1)\ncoeffs : Fin (n + 1) \u2192 ZMod p\nz : ZMod p\npoly : \u21a5(degreeLT (ZMod p) (n + 1)) := (degreeLTEquiv (ZMod p) (n + 1)).invFun coeffs\nthis : Field (ZMod p)\n\u22a2 ((\u2191poly - C (eval z \u2191poly)) / (X - C z)).degree < \u2191(n + 1)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/AGM/Basic.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-03-15T21:13:06-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "b90a61e116928d0cd74e7c6a2a635cb2e78f9c623fb205137cbe65b06b2f97ae"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 186,
        "start_column": 33,
        "end_line": 186,
        "end_column": 38
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\n\u22a2 @codeDist' n inst\u271d\u00b2 R inst\u271d\u00b9 C inst\u271d \u2260 \u22a4",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/CodingTheory/Basic.lean#L186"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "27936a388d4dcaa7bd7f2690591e87f5bec866bcb0005a61ef06053813d47acc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 187,
        "start_column": 4,
        "end_line": 187,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case neg\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\nC : Set (n \u2192 R)\ninst\u271d : Fintype \u2191C\nh : \u00acSubsingleton \u2191C\nthis : @codeDist' n inst\u271d\u00b2 R inst\u271d\u00b9 C inst\u271d \u2260 \u22a4\n\u22a2 ENat.toNat (Finset.image (fun x => hammingDist \u2191x.1 \u2191x.2) {p | \u00acp.1 = p.2}).min =\n    sInf {d | \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 hammingDist u v \u2264 d}",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/CodingTheory/Basic.lean#L187"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "fb0e519c2a910489a9a01c6af5403ac184f29e39f0545d131eceaed4914272b6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 231,
        "start_column": 4,
        "end_line": 231,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2081.intro.intro.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nv : n \u2192 R\nhv : v \u2208 C\nhuv : \u00acu = v\nhDist : hammingDist u v \u2264 d\n\u22a2 \u2203 u \u2208 C, \u00acu = 0 \u2227 hammingNorm u \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/CodingTheory/Basic.lean#L231"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "01287f67bd34557794ac268ea2afd45d9d5367981ecc6711b955d9073d7386aa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 234,
        "start_column": 4,
        "end_line": 234,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case e_a.h.h\u2082.intro.intro.intro\nn : Type u_1\ninst\u271d\u00b2 : Fintype n\nR : Type u_2\ninst\u271d\u00b9 : DecidableEq R\ninst\u271d : CommSemiring R\nC : Submodule R (n \u2192 R)\nd : \u2115\nu : n \u2192 R\nhu : u \u2208 C\nhNorm : \u00acu = 0\nhDist : hammingNorm u \u2264 d\n\u22a2 \u2203 u \u2208 C, \u2203 v \u2208 C, \u00acu = v \u2227 hammingDist u v \u2264 d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/CodingTheory/Basic.lean#L234"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "c5cb3969ac484d6f50392e8b6a02859061eb960f8cc4a6ccf17ac4cf3db9b4fe"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/CodingTheory/Basic.lean",
        "start_line": 395,
        "start_column": 65,
        "end_line": 395,
        "end_column": 70
      },
      "debug_info": {
        "goal": "n : Type u_1\ninst\u271d\u00b3 : Fintype n\nR : Type u_2\ninst\u271d\u00b2 : DecidableEq R\ninst\u271d\u00b9 : Finite R\ninst\u271d : DivisionRing R\nC : Submodule R (n \u2192 R)\n\u22a2 Module.finrank R \u21a5C \u2264 card n - @codeDist n inst\u271d\u00b3 R inst\u271d\u00b2 C.carrier + 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/CodingTheory/Basic.lean#L395"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-26T22:44:38-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "40fdd6e2a54c07ee8a176769a4afb95600afff7a375ad20e1816354b40fe0020"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 34,
        "start_column": 14,
        "end_line": 34,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.LeftInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/Data/MlPoly/Equiv.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "44965d6bc546bcf0806a51a2e12917bb34a5da45b5ed3503b284eb74da9b6722"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 35,
        "start_column": 15,
        "end_line": 35,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\n\u22a2 Function.RightInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/Data/MlPoly/Equiv.lean#L35"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "40ad881641702560432808e0e2d0bed830498ee181148a03395c07f0020c123b"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 43,
        "start_column": 2,
        "end_line": 43,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\np q : MlPoly R n\n\u22a2 @MlPoly.toSpec R inst\u271d n (p + q) = @MlPoly.toSpec R inst\u271d n p + @MlPoly.toSpec R inst\u271d n q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/Data/MlPoly/Equiv.lean#L43"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "9bccaa0bb207468894da17a166c4a799e3b7b79bc6a31c71d148c6618393e996"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 47,
        "start_column": 2,
        "end_line": 47,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommSemiring R\nn : \u2115\nS : Type u_2\ninst\u271d : CommSemiring S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191(@MlPoly.toSpec R inst\u271d\u00b9 n p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/Data/MlPoly/Equiv.lean#L47"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "3e87c909326c85ed44359ade5022ce45b33fa5e7102abed24670959b00a6ccb1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 50,
        "start_column": 2,
        "end_line": 50,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : Mul R\ninst\u271d : AddCommMonoid R\nn : \u2115\na : R\nb : Vector R n\nc : R\nd : Vector R n\n\u22a2 get (@Vector.cons R n a b) \u2b1d\u1d65 get (@Vector.cons R n c d) = a * c + b.get \u2b1d\u1d65 d.get",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Basic.lean#L50"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-14T11:09:39-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "f7511af6d79ff363937b87326f1077c3f99193c57594ed14ea4641f751ce11d9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 121,
        "start_column": 18,
        "end_line": 121,
        "end_column": 23
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : Semiring R\n\u22a2 \u2200 (a : R), @HSMul.hSMul R (@MlPoly R n) (@MlPoly R n) instHSMul a 0 = 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/Data/MlPoly/Basic.lean#L121"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "0417ce2afdf604498faadb09dc3b90ba409fd0a1684f65921ec02e8ae99f6e31"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 149,
        "start_column": 2,
        "end_line": 149,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nunit : \u03b1\nl l' : List \u03b1\nm n n' : \u2115\nh : n \u2264 m\nh' : n' \u2264 m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : max n l.length = max n' l'.length\n\u22a2 l ++ replicate (n - l.length + (m - max n' l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - max n' l'.length)) unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/Math/Basic.lean#L149"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-13T15:41:38-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "7a201294c330b397b6bc0e72338c0c656fb454cb2003b8f0990ff79d48e73570"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 203,
        "start_column": 5,
        "end_line": 203,
        "end_column": 10
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\nl\u2081 l\u2082 : List \u03b1\nunit : \u03b1\n\u22a2 (@fun x => @List.matchSize_eq_iff_forall_eq.match_1 \u03b1 (fun x => Prop) x fun x y => x = y)\n      (@List.matchSize \u03b1 l\u2081 l\u2082 unit) \u2194\n    \u2200 (i : \u2115), l\u2081.getD i unit = l\u2082.getD i unit",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/Math/Basic.lean#L203"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "f622d6c9f55573d16fe5a2dad1b8021debeab43a0efb090547127a450bdf9fd1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 382,
        "start_column": 75,
        "end_line": 382,
        "end_column": 80
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\np : \u03b1 \u2192 Bool\nas : Array \u03b1\nh : (popWhile p as).size > 0\n\u22a2 \u00acp (@Array.getLast \u03b1 (popWhile p as) h) = true",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/Math/Basic.lean#L382"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-14T17:35:17-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "4b7be23d96e304db72cd77c2a2c914e03488e09df392cae9f5740080d7c3efb6"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 460,
        "start_column": 4,
        "end_line": 460,
        "end_column": 9
      },
      "debug_info": {
        "goal": "l : List \u2115\nj a : \u2115\nl' : List \u2115\nh : j < a + l'.sum\n\u22a2 \u2203 n, @List.findSum \u2115 Nat.instAddMonoid Nat.instPreorder Nat.decLt (a :: l') j = some n",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/Math/Basic.lean#L460"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "378535ced63b5025622e6c2522456dc799edebae9528bcdb913a0708458fe78d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/Math/Basic.lean",
        "start_line": 472,
        "start_column": 80,
        "end_line": 472,
        "end_column": 85
      },
      "debug_info": {
        "goal": "\u03b1 : Type u_1\ninst\u271d\u00b2 : AddMonoid \u03b1\ninst\u271d\u00b9 : Preorder \u03b1\ninst\u271d : DecidableRel fun x1 x2 => x1 < x2\nl : List \u2115\nj : Fin l.sum\n\u22a2 @List.findSumIdx \u2115 Nat.instAddMonoid Nat.instPreorder Nat.decLt l \u2191j < l.length",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/Math/Basic.lean#L472"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "1cc3745aec3ab1a11c1ff96dbfcd12416a48c3ccacf7b5afb84227634eb265c9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 75,
        "start_column": 2,
        "end_line": 75,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\n\u03c3 : Type u_3\n\u03c3\u2081 : Type u_4\n\u03c3\u2082 : Type u_5\nx : \u03c3\u2081 \u2192 R\nf : \u03c3 \u2192 \u03c3\u2081 \u2295 \u03c3\u2082\np : MvPolynomial \u03c3 R\nb : \u03c3\u2081 \u2192\u2080 \u2115\nh : \u00accoeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p)) = 0\n\u22a2 (coeff b ((sumToIter R \u03c3\u2081 \u03c3\u2082) ((rename f) p))).degrees \u2264 Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MvPolynomial/Sumcheck.lean#L75"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-16T12:52:41-06:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "3b6e140765c5b83bbe777ff0617bfb36798ca54f13b752bb4c870c94fb73d065"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Sumcheck.lean",
        "start_line": 112,
        "start_column": 2,
        "end_line": 112,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommSemiring R\nn : \u2115\nh : n > 0\nD : Fin (n - 1) \u2192 Finset R\np : MvPolynomial (Fin n) R\n\u22a2 ((@MvPolynomial.sumExceptFirst' R inst\u271d n h D) p).degree \u2264 \u2191(degreeOf \u27e80, h\u27e9 p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MvPolynomial/Sumcheck.lean#L112"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-09-13T15:50:48-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "67eb81a664a759038cf8fdb778628e9b2565946132eebf505f2dbbf01f367308"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 69,
        "start_column": 58,
        "end_line": 69,
        "end_column": 63
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u2074 : DecidableEq \u03c3\ninst\u271d\u00b3 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b2 : CommRing R\ninst\u271d\u00b9 : IsDomain R\ninst\u271d : DecidableEq R\np : MvPolynomial \u03c3 R\nhp : p \u2260 0\nS : \u03c3 \u2192 Finset R\n\u22a2 \u2191{x \u2208 p.vars.pi S | (eval (@MvPolynomial.Function.extendDomain \u03c3 R inst\u271d\u2074 MulZeroClass.toZero p.vars x)) p = 0}.card /\n      \u220f i \u2208 p.vars, \u2191(S i).card \u2264\n    \u2211 i \u2208 p.vars, \u2191(degreeOf i p) / \u2191(S i).card",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MvPolynomial/Interpolation.lean#L69"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "4a71a275f53e74eeae5fce8ab161f2fdfeaae9fbe53e74efd6890175d995fffc"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MvPolynomial/Interpolation.lean",
        "start_line": 171,
        "start_column": 76,
        "end_line": 171,
        "end_column": 81
      },
      "debug_info": {
        "goal": "\u03c3 : Type u_1\ninst\u271d\u00b3 : DecidableEq \u03c3\ninst\u271d\u00b2 : Fintype \u03c3\nR : Type u_2\ninst\u271d\u00b9 : CommRing R\ninst\u271d : IsDomain R\np q : MvPolynomial \u03c3 R\nS : \u03c3 \u2192 Finset R\nhDegree : \u2200 (i : \u03c3), degreeOf i p < (S i).card\nhEval : \u2200 x \u2208 piFinset fun i => S i, (eval x) p = (eval x) q\n\u22a2 p = q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MvPolynomial/Interpolation.lean#L171"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-10-30T15:40:43-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "05ad2ccb0024f122fd2d12bddb74100dd0a232f7a3112f3fadcdf1ff226fcfda"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 571,
        "start_column": 2,
        "end_line": 571,
        "end_column": 7
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q : @UniPoly Q\ni : \u2115\nhi : i < Array.size (@UniPoly.add_raw Q inst\u271d p q)\n\u22a2 (p ++ Array.replicate (Array.size q - Array.size p) 0)[i] +\n      (q ++ Array.replicate (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/UniPoly/Basic.lean#L571"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "71ba1b9223994fd7a08aee84650184d3ec1f31b9afa33177f42040549adec772"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/UniPoly/Basic.lean",
        "start_line": 899,
        "start_column": 4,
        "end_line": 899,
        "end_column": 9
      },
      "debug_info": {
        "goal": "Q : Type u_2\ninst\u271d : Ring Q\np q r : @UniPoly Q\nhpq : p ++ Array.replicate (Array.size q - Array.size p) 0 = q ++ Array.replicate (Array.size p - Array.size q) 0\nhqr : q ++ Array.replicate (Array.size r - Array.size q) 0 = r ++ Array.replicate (Array.size q - Array.size r) 0\n\u22a2 p ++ Array.replicate (Array.size r - Array.size p) 0 = r ++ Array.replicate (Array.size p - Array.size r) 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/UniPoly/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "895381da4c275d79c01cbb3863b34d12bd7ff63becfd5650a0cb820dc2460871"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 151,
        "start_column": 2,
        "end_line": 151,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (fun a =>\n        (TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (a.2.2.1, (P.toProverOut.1 a.2.1).1),\n          TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction\n        (pure\n          (default,\n            P.input\n              (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                stmtIn)\n              (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                witIn),\n            stmtIn, witIn))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2.1).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n) =\n    (fun a =>\n        (TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (stmtIn, (P.toProverOut.1 a.2).1),\n          TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            (witIn, (P.toProverOut.1 a.2).2),\n          a.1)) <$>\n      Fin.induction\n        (pure\n          (default,\n            P.input\n              (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                stmtIn)\n              (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                witIn)))\n        (fun j ih => do\n          let __discr \u2190 ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge \u27e8j, hDir\u27e9 __discr.2 a)) <$>\n                liftM (query (Sum.inr \u27e8j, hDir\u27e9) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage \u27e8j, hDir\u27e9 __discr.2).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092))\n        (Fin.last n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Composition/Virtual.lean#L151"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "97b455cc79c487be234ecc05bbf622cff35fa4869dcef1edeca459aad320ed08"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 164,
        "start_column": 2,
        "end_line": 164,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let a \u2190\n        Prover.run\n            (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n              stmtIn)\n            (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n              (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data) witIn)\n            R.prover\n      (fun a_1 =>\n            ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                  (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                  (stmtIn, a.1),\n                TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n                  (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                  (witIn, a.2.1)),\n              a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a =>\n                        TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                            WitOut' data)\n                          (stmtIn, a)) <$>\n                      R.verifier.verify\n                        (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                            WitOut' data)\n                          stmtIn)\n                        transcript }).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190\n      Prover.run\n          (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            stmtIn)\n          (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data) witIn)\n          R.prover\n    (fun a_1 =>\n          ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (stmtIn, a.1),\n              TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (witIn, a.2.1)),\n            TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n              (stmtIn, a_1),\n            a.2.2)) <$>\n        (Verifier.run\n              (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                stmtIn)\n              a.2.2 R.verifier).liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Composition/Virtual.lean#L164"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "03de913ba91ffae4f3d19f400530eb50a1a1b35f1b63cd464e06d99b8ceeebf8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 177,
        "start_column": 2,
        "end_line": 177,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n\u22a2 (do\n      let __discr \u2190\n        Prover.runWithLog stmtIn witIn\n            (Prover.transport n pSpec \u03b9 oSpec StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a =>\n                            TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                                WitOut' data)\n                              (stmtIn, a)) <$>\n                          R.verifier.verify\n                            (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                                WitOut' data)\n                              stmtIn)\n                            transcript })).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)) =\n    do\n    let a \u2190\n      Prover.runWithLog\n          (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n            stmtIn)\n          (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data) witIn)\n          R.prover\n    (fun a_1 =>\n          ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n                (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (stmtIn, a.1),\n              TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n                (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n                (witIn, a.2.1)),\n            TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n              (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' data)\n              (stmtIn, a_1.1),\n            a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle\n                (Verifier.run\n                  (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n                    (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n                      data)\n                    stmtIn)\n                  a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++\u2092 [pSpec.Challenge]\u2092)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Composition/Virtual.lean#L177"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "c6b77c460dd1c7c05fcac9f1b4789b6e70d5d9a8af1013f22866f4a283511e0c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 201,
        "start_column": 2,
        "end_line": 201,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\ncompletenessError : NNReal\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn \u2192\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut \u2227 prvStmtOut = stmtOut|run stmtIn witIn R] \u2265\n        1 - \u2191completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut \u2227\n          prvStmtOut =\n            stmtOut|run\n        (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          stmtIn)\n        (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n          (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          witIn)\n        R] \u2265\n    1 - \u2191completenessError\nx\u271d : (StmtOut' \u00d7 WitOut') \u00d7 StmtOut' \u00d7 pSpec.FullTranscript\na\u271d :\n  x\u271d \u2208\n    (run\n        (TransportStatement.fStmtIn StmtIn StmtOut StmtIn' StmtOut'\n          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          stmtIn)\n        (TransportWitness.fWitIn WitIn WitOut WitIn' WitOut'\n          (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          witIn)\n        R).support\nhRelOut' : relOut' x\u271d.2.1 x\u271d.1.2 \u2227 x\u271d.1.1 = x\u271d.2.1\n\u22a2 ((fun x => relOut x.2.1 x.1.2 \u2227 x.1.1 = x.2.1) \u2218 fun a =>\n      ((TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n            (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n              (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n                relIn' relOut relOut' data))\n            (stmtIn, a.1.1),\n          TransportWitness.fWitOut WitIn WitOut WitIn' WitOut'\n            (TransportData.toTransportWitness StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n              (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n                relIn' relOut relOut' data))\n            (witIn, a.1.2)),\n        TransportStatement.fStmtOut StmtIn StmtOut StmtIn' StmtOut'\n          (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n            (TransportDataComplete.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn\n              relIn' relOut relOut' data))\n          (stmtIn, a.2.1),\n        a.2.2))\n    x\u271d",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Composition/Virtual.lean#L201"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-04-22T09:32:10-04:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "3d392e04bcb2e6bb231642c93d6b54a90983510cef02e9bf30a6bf8e74900198"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 215,
        "start_column": 2,
        "end_line": 215,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : NNReal\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    \u2200 stmtIn \u2209 langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut \u2209 langOut'|run stmtIn witIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn \u2209 langIn\n\u22a2 [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut \u2209\n          langOut|run witIn WitIn\n        { prover := WitOut,\n          verifier :=\n            Verifier.transport n pSpec \u03b9 oSpec StmtIn StmtOut StmtIn' StmtOut'\n              (TransportDataSound.toTransportStatement StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\n                data)\n              V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Composition/Virtual.lean#L215"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "c7b24e26eaec9a1df2add76d8cf06376249e32576acf5ff0e2491aa7ce877255"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 229,
        "start_column": 2,
        "end_line": 234,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b2 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nrelIn' : StmtIn' \u2192 WitIn' \u2192 Prop\nrelOut' : StmtOut' \u2192 WitOut' \u2192 Prop\nsoundnessError : NNReal\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  \u2200 (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          \u00acrelIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            \u00acrelIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) \u2227\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover,\n              verifier :=\n                Verifier.transport n pSpec \u03b9 oSpec StmtIn StmtOut StmtIn' StmtOut'\n                  (TransportData.toTransportStatement StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\n                    (TransportDataKnowledgeSound.toTransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut'\n                      WitOut' relIn relIn' relOut relOut' data))\n                  V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Composition/Virtual.lean#L229"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "fe5794e3ab5b81ffff40309a534c523f91075b05335a926761830a2223a3ca51"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Virtual.lean",
        "start_line": 278,
        "start_column": 4,
        "end_line": 278,
        "end_column": 9
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 : StmtIn\nx\u271d\u00b2 : Unit\nx\u271d\u00b9 : StmtOut'\nx\u271d : Unit\np q : Polynomial \u2124\nt : \u2124\nf : Polynomial \u2124\nt' r : \u2124\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n\u22a2 eval r p * eval r q = t'",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Composition/Virtual.lean#L278"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:31:31-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "b1dc0323ac10be51a018f7a2325386b44496a480bd5cf1b98e7e541f636841b5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 390,
        "start_column": 2,
        "end_line": 390,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : NNReal\nhLt : knowledgeError < 1\nextractor :\n  @Reduction.StraightlineExtractor n pSpec (\u03b9 \u2295 { i // (pSpec i).1 = Direction.V_to_P }) (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n    StmtIn WitIn StmtOut WitOut\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (@extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) \u2227\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/OracleReduction/Security/Basic.lean#L390"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "9f50781ddc2eae7f16fda25de38903edcf90e97ed761a895c163083e77fafbd9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 402,
        "start_column": 2,
        "end_line": 402,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m n : \u2115\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nO\u2098\u2081 : (i : pSpec\u2081.MessageIdx) \u2192 OracleInterface (pSpec\u2081.Message i)\nO\u2098\u2082 : (i : pSpec\u2082.MessageIdx) \u2192 OracleInterface (pSpec\u2082.Message i)\ninst\u271d\u00b2 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b9 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\ninst\u271d : oSpec.DecidableEq\nP\u2081 : Prover pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nP\u2082 : Prover pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\nstmt : Stmt\u2081\nwit : Wit\u2081\n\u22a2 run stmt wit (Prover.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 P\u2081 P\u2082) = do\n    let __discr \u2190 liftM (run stmt wit P\u2081)\n    @Prover.append_run.match_1 m pSpec\u2081 Stmt\u2082 Wit\u2082\n        (fun __discr =>\n          OracleComp (oSpec ++\u2092 [(pSpec\u2081 ++\u209a pSpec\u2082).Challenge]\u2092) (Stmt\u2083 \u00d7 Wit\u2083 \u00d7 (pSpec\u2081 ++\u209a pSpec\u2082).FullTranscript))\n        __discr fun stmt\u2082 wit\u2082 transcript\u2081 => do\n        let __discr \u2190 liftM (run stmt\u2082 wit\u2082 P\u2082)\n        @Prover.append_run.match_1 n pSpec\u2082 Stmt\u2083 Wit\u2083\n            (fun __discr =>\n              OracleComp (oSpec ++\u2092 [(pSpec\u2081 ++\u209a pSpec\u2082).Challenge]\u2092)\n                (Stmt\u2083 \u00d7 Wit\u2083 \u00d7 (pSpec\u2081 ++\u209a pSpec\u2082).FullTranscript))\n            __discr fun stmt\u2083 wit\u2083 transcript\u2082 => pure (stmt\u2083, wit\u2083, transcript\u2081 ++\u209c transcript\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L402"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-28T16:03:02+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "844a4540049b8446ecb6c9306cae8371602110a60f5619e6996092c6bc24904a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 432,
        "start_column": 89,
        "end_line": 432,
        "end_column": 94
      },
      "debug_info": {
        "goal": "m n : \u2115\n\u03b9 : Type\ninst\u271d\u2074 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\npSpec\u2081 : ProtocolSpec m\npSpec\u2082 : ProtocolSpec n\ninst\u271d\u00b3 : (i : pSpec\u2081.ChallengeIdx) \u2192 Sampleable (pSpec\u2081.Challenge i)\ninst\u271d\u00b2 : (i : pSpec\u2082.ChallengeIdx) \u2192 Sampleable (pSpec\u2082.Challenge i)\nStmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 : Type\nrel\u2081 : Stmt\u2081 \u2192 Wit\u2081 \u2192 Prop\nrel\u2082 : Stmt\u2082 \u2192 Wit\u2082 \u2192 Prop\nrel\u2083 : Stmt\u2083 \u2192 Wit\u2083 \u2192 Prop\ninst\u271d\u00b9 : oSpec.DecidableEq\ninst\u271d : oSpec.FiniteRange\nR\u2081 : Reduction pSpec\u2081 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082\nR\u2082 : Reduction pSpec\u2082 oSpec Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083\ncompletenessError\u2081 completenessError\u2082 : NNReal\nh\u2081 : completeness rel\u2081 rel\u2082 R\u2081 completenessError\u2081\nh\u2082 : completeness rel\u2082 rel\u2083 R\u2082 completenessError\u2082\n\u22a2 completeness rel\u2081 rel\u2083 (Reduction.append m n pSpec\u2081 pSpec\u2082 \u03b9 oSpec Stmt\u2081 Wit\u2081 Stmt\u2082 Wit\u2082 Stmt\u2083 Wit\u2083 R\u2081 R\u2082)\n    (completenessError\u2081 + completenessError\u2082)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L432"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2024-12-01T17:09:18-07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "9968e6975eded6056fa44eb4fa314a9a1a28f6d18aa09d3fd4db0cb97f5a4c98"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 462,
        "start_column": 27,
        "end_line": 462,
        "end_column": 32
      },
      "debug_info": {
        "goal": "case h.e'_6.h.h.h.h.e'_2.h.h.e\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\ninst\u271d\u00b2 : oSpec.DecidableEq\ninst\u271d\u00b9 : oSpec.FiniteRange\nn : Fin (0 + 1) \u2192 \u2115\npSpec : (i : Fin (0 + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d : (i : Fin (0 + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (0 + 2) \u2192 Type\nrel : (i : Fin (0 + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nR : (i : Fin (0 + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (0 + 1) \u2192 NNReal\nh : \u2200 (i : Fin 1), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\ne_1\u271d\u00b9 : \u2211 i, n i = n 0\nhe\u271d : compose 0 n pSpec = pSpec 0\nx\u271d : { i // (compose 0 n pSpec i).1 = Direction.V_to_P }\ne_1\u271d : (compose 0 n pSpec \u2191x\u271d).2 = (pSpec 0 \u2191x\u271d).2\n\u22a2 instSampleableChallengeCompose 0 n pSpec inst\u271d = inst\u271d 0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L462"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "a9e0923398b632451608ec543e049d4e02e18b7ccf3caa61561c4aa4bf053c66"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/Basic.lean",
        "start_line": 464,
        "start_column": 4,
        "end_line": 464,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\n\u03b9 : Type\ninst\u271d\u00b3 : DecidableEq \u03b9\noSpec : OracleSpec \u03b9\ninst\u271d\u00b2 : oSpec.DecidableEq\ninst\u271d\u00b9 : oSpec.FiniteRange\nm : \u2115\nih :\n  \u2200 {n : Fin (m + 1) \u2192 \u2115} {pSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)}\n    [inst : (i : Fin (m + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)]\n    {Stmt Wit : Fin (m + 2) \u2192 Type} {rel : (i : Fin (m + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop}\n    (R : (i : Fin (m + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ))\n    (completenessError : Fin (m + 1) \u2192 NNReal),\n    (\u2200 (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)) \u2192\n      completeness (rel 0) (rel (Fin.last (m + 1))) (Reduction.compose \u03b9 oSpec m n pSpec Stmt Wit R)\n        (\u2211 i, completenessError i)\nn : Fin (m + 1 + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1 + 1)) \u2192 ProtocolSpec (n i)\ninst\u271d : (i : Fin (m + 1 + 1)) \u2192 (j : (pSpec i).ChallengeIdx) \u2192 Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 1 + 2) \u2192 Type\nrel : (i : Fin (m + 1 + 2)) \u2192 Stmt i \u2192 Wit i \u2192 Prop\nR : (i : Fin (m + 1 + 1)) \u2192 Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1 + 1) \u2192 NNReal\nh : \u2200 (i : Fin (m + 1 + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n\u22a2 completeness (rel 0) (rel (Fin.last (m + 1 + 1))) (Reduction.compose \u03b9 oSpec (m + 1) n pSpec Stmt Wit R)\n    (\u2211 i, completenessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/Sequential/Basic.lean#L464"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-23T10:22:30+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "d686f5d233b7880538e6c0729300e87f10234aeb4908ec70c940fac5f7998efd"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean",
        "start_line": 354,
        "start_column": 2,
        "end_line": 354,
        "end_column": 7
      },
      "debug_info": {
        "goal": "m : \u2115\nn : Fin (m + 1) \u2192 \u2115\npSpec : (i : Fin (m + 1)) \u2192 ProtocolSpec (n i)\nT : (i : Fin (m + 1)) \u2192 (pSpec i).FullTranscript\ni : Fin m\n\u22a2 @Fin.dfoldl (\u2191i + 1)\n      (fun i_1 =>\n        FullTranscript\n          (ProtocolSpec.compose (\u2191i_1)\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec))))\n      (fun i_1 acc =>\n        @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1) i_2)) +\n            n (Fin.castLE \u22ef i_1.succ))\n          (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i + 1) i_1) i_2)))\n          (ProtocolSpec.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)))\n          (ProtocolSpec.compose (\u2191i_1 + 1)\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef n))\n            (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i + 1) i_1)\n              (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n          (ProtocolSpec.FullTranscript.compose._proof_41 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) i_1)\n          (ProtocolSpec.FullTranscript.compose._proof_44 (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n)\n            (Fin.take (\u2191i + 1 + 1) \u22ef pSpec) i_1)\n          (ProtocolSpec.FullTranscript.append\n            (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1) i_2)))\n            (n (Fin.castLE \u22ef i_1.succ))\n            (ProtocolSpec.compose (\u2191i_1)\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef n))\n              (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i + 1) i_1)\n                (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)))\n            (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n      (T (Fin.castLE \u22ef 0)) =\n    @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n      (\u2211 i_1, n (Fin.castLE \u22ef i_1) + n i.succ) (\u2211 i_1, n (Fin.castLE \u22ef i_1))\n      (ProtocolSpec.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ))\n      (ProtocolSpec.compose (\u2191i + 1) (Fin.take (\u2191i + 1 + 1) \u22ef n) (Fin.take (\u2191i + 1 + 1) \u22ef pSpec)) \u22ef \u22ef\n      (ProtocolSpec.FullTranscript.append (\u2211 i_1, n (Fin.castLE \u22ef i_1)) (n i.succ)\n        (ProtocolSpec.compose (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)) (pSpec i.succ)\n        (@Fin.dfoldl (\u2191i)\n          (fun i_1 =>\n            FullTranscript\n              (ProtocolSpec.compose (\u2191i_1)\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_38 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec))))\n          (fun i_1 acc =>\n            @dcast\u2082 \u2115 ProtocolSpec (@FullTranscript) ProtocolSpec.instDepCast ProtocolSpec.FullTranscript.instDepCast\u2082\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) i_2)) +\n                n (Fin.castLE \u22ef i_1.succ))\n              (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i) i_1) i_2)))\n              (ProtocolSpec.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)))\n              (ProtocolSpec.compose (\u2191i_1 + 1)\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef n))\n                (Fin.take (\u2191i_1 + 1 + 1) (ProtocolSpec.FullTranscript.compose._proof_40 (\u2191i) i_1)\n                  (Fin.take (\u2191i + 1) \u22ef pSpec)))\n              (ProtocolSpec.FullTranscript.compose._proof_41 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) i_1)\n              (ProtocolSpec.FullTranscript.compose._proof_44 (\u2191i) (Fin.take (\u2191i + 1) \u22ef n) (Fin.take (\u2191i + 1) \u22ef pSpec)\n                i_1)\n              (ProtocolSpec.FullTranscript.append\n                (\u2211 i_2, n (Fin.castLE \u22ef (Fin.castLE (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) i_2)))\n                (n (Fin.castLE \u22ef i_1.succ))\n                (ProtocolSpec.compose (\u2191i_1)\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1) (Fin.take (\u2191i + 1) \u22ef n))\n                  (Fin.take (\u2191i_1 + 1) (ProtocolSpec.FullTranscript.compose._proof_39 (\u2191i) i_1)\n                    (Fin.take (\u2191i + 1) \u22ef pSpec)))\n                (pSpec (Fin.castLE \u22ef i_1.succ)) acc (T (Fin.castLE \u22ef i_1.succ))))\n          (T (Fin.castLE \u22ef 0)))\n        (T i.succ))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/Sequential/ProtocolSpec.lean#L354"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-05-25T11:02:32+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "b162b62c420075eb2e9baf6a0408121850bbe35350b44a1512a7e5c1f5b8faac"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 492,
        "start_column": 2,
        "end_line": 492,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5(degreeLE R \u2191deg)), (Direction.V_to_P, R)]\nx : getType (Sumcheck.Spec.pSpec R inst\u271d\u00b9 deg) 0\nhp_i : \u2191(transcript 0) \u2208 degreeLE R \u2191deg\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (List.mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure () else failure\n                    (fun a =>\n                          Sumcheck.Spec.Statement.mk R n i.succ a\n                            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1))) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (OracleInterface.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a =>\n            (a, fun i_1 =>\n              @Prod.snd (Sumcheck.Spec.Statement R n i.castSucc)\n                ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i) stmt i_1)) <$>\n          a.getM) =\n    (fun a =>\n        (Sumcheck.Spec.Statement.mk R n i.succ (Polynomial.eval (transcript 1) \u2191(transcript 0))\n            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1)),\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure ()\n      else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/ProofSystem/Sumcheck/Basic.lean#L492"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-18T19:07:20+07:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "f39eacf11edb3ccb0f8777e129ab06541700e9f70f5afb579518baa0bd2a3b19"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "7b3c5416354ddbedb53f4d02c4b415fd2e8af881",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/Basic.lean",
        "start_line": 510,
        "start_column": 57,
        "end_line": 510,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast (Sumcheck.Spec.relation._proof_12 n i.castSucc)))\n        \u2191(@oStmt 0) =\n    target\n\u22a2 ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                verifier :=\n                  Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover.sendMessage\n        \u27e80, \u22ef\u27e9\n        ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                        i }.toReduction.prover.toProverIn.input\n          (Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i)) Unit\n          ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover.PrvState\n            0)\n          (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)).neverFails \u2227\n    \u2200 (a : Polynomial R) (b : a \u2208 degreeLE R \u2191deg)\n      (b_1 :\n        { prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover.PrvState\n          1),\n      (\u27e8a, b\u27e9, b_1) \u2208\n          ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                      verifier :=\n                        Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                          i }.toReduction.prover.sendMessage\n              \u27e80, \u22ef\u27e9\n              ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.toProverIn.input\n                (Sumcheck.Spec.Statement R n i.castSucc \u00d7\n                  ((i : Fin 1) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                Unit\n                ({ prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.PrvState\n                  0)\n                (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)).support \u2192\n        \u2200 (x : R),\n          (Verifier.run (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt)\n              (Transcript.snoc 2 (Sumcheck.Spec.pSpec R inst\u271d\u00b3 deg) 1 x\n                (Transcript.snoc 2 (Sumcheck.Spec.pSpec R inst\u271d\u00b3 deg) 0 \u27e8a, b\u27e9\n                  (@default (Transcript 0 (Sumcheck.Spec.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited)))\n              { prover := Sumcheck.Spec.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                        i }.toReduction.verifier).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b3c5416354ddbedb53f4d02c4b415fd2e8af881/ArkLib/ProofSystem/Sumcheck/Basic.lean#L510"
      },
      "metadata": {
        "blame_email_hash": "0c5d39c5ece3",
        "blame_date": "2025-03-09T23:22:53-05:00",
        "inclusion_date": "2025-06-01T03:14:51.997900+00:00"
      },
      "id": "675d9c587ea97fb0e97a0911261beb07c87a34a8f1ba7ffec4d56142d4803f73"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/SingleRound.lean",
        "start_line": 630,
        "start_column": 42,
        "end_line": 630,
        "end_column": 47
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\nn deg m : \u2115\nD : Fin m \u21aa R\ninst\u271d : VCVCompatible R\n\u22a2 OracleReduction.perfectCompleteness (Sumcheck.Spec.Combined.relIn R inst\u271d\u00b9 n deg m D)\n    (Sumcheck.Spec.Combined.relOut R inst\u271d\u00b9 n deg) (Sumcheck.Spec.Combined.reduction R inst\u271d\u00b9 n deg)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Sumcheck/SingleRound.lean#L630"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "f9eb35f2e6df8aaf342a6154db4f5e536f71fb7a47df804872cc6b13bd6ca023"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 193,
        "start_column": 2,
        "end_line": 193,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u03b1 : Type\ninst : DecidableEq \u03b1\ninst_1 : SelectableType \u03b1\npreexisting_cache : QueryCache (MerkleTree.spec \u03b1)\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ (n + 1))\n\u22a2 ((simulateQ randomOracle\n          (Vector.mmap (fun x => liftM (query () x))\n            (List.Vector.ofFn fun i =>\n              (leaves.get \u27e82 * \u2191i, MerkleTree.buildLayer._proof_4 n i\u27e9,\n                leaves.get \u27e82 * \u2191i + 1, MerkleTree.buildLayer._proof_5 n i\u27e9)))).run\n      preexisting_cache).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/CommitmentScheme/MerkleTree.lean#L193"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-05-31T21:50:03-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "94e5f7b99192b3bf10fd567946a9be4c1dd1c1e42e51022475e17b6a4a8ad481"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/CommitmentScheme/MerkleTree.lean",
        "start_line": 238,
        "start_column": 4,
        "end_line": 238,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case right\n\u03b1 : Type\ninst\u271d\u00b3 : DecidableEq \u03b1\ninst\u271d\u00b2 : Inhabited \u03b1\ninst\u271d\u00b9 : Fintype \u03b1\ninst\u271d : SelectableType \u03b1\nn : \u2115\nleaves : List.Vector \u03b1 (2 ^ n)\ni : Fin (2 ^ n)\nhash : \u03b1 \u00d7 \u03b1 \u2192 \u03b1\npreexisting_cache : QueryCache (MerkleTree.spec \u03b1)\nmerkle_tree_cache : MerkleTree.Cache \u03b1 n\nquery_cache : QueryCache (MerkleTree.spec \u03b1)\nh_mem_support :\n  (merkle_tree_cache, query_cache) \u2208\n    ((simulateQ randomOracle (MerkleTree.buildMerkleTree \u03b1 n leaves)).run preexisting_cache).support\n\u22a2 ((simulateQ randomOracle\n          (MerkleTree.verifyProof \u03b1 inst\u271d\u00b3 n i (leaves.get i) (MerkleTree.getRoot \u03b1 n merkle_tree_cache)\n            (MerkleTree.generateProof \u03b1 n i merkle_tree_cache))).run\n      query_cache).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/CommitmentScheme/MerkleTree.lean#L238"
      },
      "metadata": {
        "blame_email_hash": "ab200eba5736",
        "blame_date": "2025-05-31T21:50:03-04:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "e8b3e005743c91371d2273f68563373bee281e5cb3ced7011af6e56b2efd6221"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Test/realToFloat.lean",
        "start_line": 23,
        "start_column": 2,
        "end_line": 23,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x => x.1.exp + isomorph `RealToFloat (fun x => x.2 0) x) = fun p => p.1.exp + p.2 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/Test/realToFloat.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-11-19T16:57:30-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "c0d54bfa60547c746dc115d30556d3fd78b550ff3be63d063386c3bbc6a7e3a3"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "Test/realToFloat.lean",
        "start_line": 34,
        "start_column": 2,
        "end_line": 34,
        "end_column": 7
      },
      "debug_info": {
        "goal": "\u22a2 (fun x =>\n      x.1.exp + isomorph `RealToFloat (fun x => x.2 0) x \u2264 0 \u2227 x.1.exp + isomorph `RealToFloat (fun x => x.2 1) x \u2264 0) =\n    fun p => p.1.exp + p.2 0 \u2264 0 \u2227 p.1.exp + p.2 1 \u2264 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/Test/realToFloat.lean#L34"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-11-19T16:57:30-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "7b123661af1232e4b825d524f4b14b91d10feeed79958b038212934ea4eff3f4"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "examples/FloatTest.lean",
        "start_line": 13,
        "start_column": 82,
        "end_line": 13,
        "end_column": 87
      },
      "debug_info": {
        "goal": "x\u271d\u00b3 x\u271d\u00b2 x\u271d\u00b9 x\u271d : PUnit.{1}\n\u22a2 { data := #[1.0, 2.0, 3.0, 4.0, 3.0] }.toByteArray.size % 8 = 0",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/examples/FloatTest.lean#L13"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2025-01-07T15:43:19-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "e93dd22e7de6d89815d8ae7f4892b134cc27172d51d5b4fb7baa4430a35c18f3"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Util/Alternatives.lean",
        "start_line": 95,
        "start_column": 7,
        "end_line": 95,
        "end_column": 12
      },
      "debug_info": {
        "goal": "a b : Nat\nh : a = b\n\u22a2 (fun x =>\n      let y := x + x + x + x;\n      y + y) =\n    fun x =>\n    let y := x + x + x + x;\n    let y := x + x + x + x;\n    x + x + x + x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Util/Alternatives.lean#L95"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2023-04-26T17:56:32-04:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "e3f23306dea9b48d572c6813e4bfa042f392a9c8a9c508c705e40a9a6faed581"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/Erased.lean",
        "start_line": 18,
        "start_column": 63,
        "end_line": 18,
        "end_column": 68
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nx y : Erased \u03b1\n\u22a2 \u2191x = \u2191y \u2192 x = y",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/Erased.lean#L18"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "d95d2b28923d5acab74c10e0cd02c67d503d88c285e1d739c64a6d33a604fe2a"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/Erased.lean",
        "start_line": 25,
        "start_column": 56,
        "end_line": 25,
        "end_column": 61
      },
      "debug_info": {
        "goal": "\u03b1 : Type\nx : \u03b1\n\u22a2 \u2191(erase x) = x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/Erased.lean#L25"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "d0806764df9631774d819e99b02e32abcceb28e50f1c5195ed7c7ed9ceb9ae42"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/TestFunctionExtension.lean",
        "start_line": 23,
        "start_column": 15,
        "end_line": 23,
        "end_column": 20
      },
      "debug_info": {
        "goal": "X : Sort u_1\nY : Type u_2\ninst\u271d\u00b9 : NormedAddCommGroup Y\ninst\u271d : NormedSpace \u211d Y\nF : (X \u2192 \u211d) \u2192 \u211d\n\u03c6 : X \u2192 \u211d\ny : Y\n\u22a2 (testFunctionExtension F fun x => \u03c6 x \u2022 y) = F \u03c6 \u2022 y",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/TestFunctionExtension.lean#L23"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "9976edfd75788d3dc0c71c4c4a46b38ea4a270f563b97cb44d917f295408e866"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/TestFunctionExtension.lean",
        "start_line": 36,
        "start_column": 11,
        "end_line": 36,
        "end_column": 16
      },
      "debug_info": {
        "goal": "X : Sort u_1\nY : Type u_2\ninst\u271d\u00b9 : NormedAddCommGroup Y\ninst\u271d : NormedSpace \u211d Y\nF : (X \u2192 \u211d) \u2192 \u211d\nG : (X \u2192 Y) \u2192 Y\nf : X \u2192 Y\nh : \u2200 (\u03c6 : X \u2192 \u211d) (y : Y), F \u03c6 \u2022 y = G fun x => \u03c6 x \u2022 y\n\u22a2 testFunctionExtension F f = G f",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/TestFunctionExtension.lean#L36"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-08T10:58:37-05:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "29518c5d6253911c7eb3fa92f134ea72db67c78dfd03bdcb61589c8a8ed8868f"
    },
    {
      "repo": {
        "remote": "https://github.com/lecopivo/SciLean",
        "branch": "bump-v4.19.0-rc2",
        "commit": "612daaaa9f63016cd8d06df8e634e4d858d26d8e",
        "lean_version": "v4.19.0-rc2"
      },
      "location": {
        "path": "SciLean/Modules/Prob/DerivUnderIntegralSign.lean",
        "start_line": 32,
        "start_column": 41,
        "end_line": 32,
        "end_column": 46
      },
      "debug_info": {
        "goal": "X : Type u_2\ninst\u271d\u00b3 : NormedAddCommGroup X\ninst\u271d\u00b2 : NormedSpace \u211d X\nY : Type u_1\nx\u271d : MeasurableSpace Y\nZ : Type u_3\ninst\u271d\u00b9 : NormedAddCommGroup Z\ninst\u271d : NormedSpace \u211d Z\n\u03bc : X \u2192 Measure Y\nf : X \u2192 Y \u2192 Z\nx dx : X\nh : DifferentiableUnderIntegralAt f \u03bc x\n\u22a2 (fderiv \u211d (fun x => \u222b (y : Y), f x y \u2202\u03bc x) x) dx =\n    (fderiv \u211d (fun x' => \u222b (y : Y), f x y \u2202\u03bc x') x) dx + \u222b (y : Y), (fderiv \u211d (fun x => f x y) x) dx \u2202\u03bc x",
        "url": "https://github.com/lecopivo/SciLean/blob/612daaaa9f63016cd8d06df8e634e4d858d26d8e/SciLean/Modules/Prob/DerivUnderIntegralSign.lean#L32"
      },
      "metadata": {
        "blame_email_hash": "c7c59fe619b9",
        "blame_date": "2024-02-12T01:13:42+01:00",
        "inclusion_date": "2025-05-29T03:10:06.182872+00:00"
      },
      "id": "e66469233f8695318fb5a7795a86667299fdda620175d88571bb47deba716703"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean",
        "start_line": 866,
        "start_column": 67,
        "end_line": 866,
        "end_column": 72
      },
      "debug_info": {
        "goal": "F : \u2115 \u2192 Type u_1\ninst : @BinaryTower.BinaryTowerField F\n\u03ba \u03c4 : \u2115\nh : Fact (\u03ba < \u03c4)\ninstleft : Algebra (F \u03ba) (F (\u03ba + 1)) := sorry\ninstright : Algebra (F (\u03ba + 1)) (F \u03c4) := sorry\ninstSMul : SMul (F \u03ba) (F \u03c4) := sorry\n\u22a2 IsScalarTower (F \u03ba) (F (\u03ba + 1)) (F \u03c4)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean#L866"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "b675d4bffec22bac2a914de30bef7e43f53966ea2dffd718b89cd19594ade97d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean",
        "start_line": 899,
        "start_column": 56,
        "end_line": 899,
        "end_column": 61
      },
      "debug_info": {
        "goal": "F : \u2115 \u2192 Type u_1\ninst : @BinaryTower.BinaryTowerField F\n\u03ba \u03c4 : \u2115\nh : Fact (\u03ba < \u03c4)\nbasis_vectors : Finset (Fin (\u03c4 - \u03ba)) \u2192 F \u03c4 :=\n  fun s => \u220f i \u2208 s, @BinaryTower.BinaryTowerField.special_elements_of_range F inst (\u03ba + 1) \u03c4 \u22ef \u2191\u2191i\ninstModule : Module (F \u03ba) (F \u03c4) := @BinaryTower.BinaryTowerField.module_cross_tower F inst \u03ba \u03c4 h\n\u22a2 LinearIndependent (F \u03ba) basis_vectors",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean#L899"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "f50972093b0427081f3d6514ad016c46501449e87d2c2690e5eea6c3897fd585"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean",
        "start_line": 900,
        "start_column": 69,
        "end_line": 900,
        "end_column": 74
      },
      "debug_info": {
        "goal": "F : \u2115 \u2192 Type u_1\ninst : @BinaryTower.BinaryTowerField F\n\u03ba \u03c4 : \u2115\nh : Fact (\u03ba < \u03c4)\nbasis_vectors : Finset (Fin (\u03c4 - \u03ba)) \u2192 F \u03c4 :=\n  fun s => \u220f i \u2208 s, @BinaryTower.BinaryTowerField.special_elements_of_range F inst (\u03ba + 1) \u03c4 \u22ef \u2191\u2191i\ninstModule : Module (F \u03ba) (F \u03c4) := @BinaryTower.BinaryTowerField.module_cross_tower F inst \u03ba \u03c4 h\nhli : LinearIndependent (F \u03ba) basis_vectors\n\u22a2 \u22a4 \u2264 Submodule.span (F \u03ba) (Set.range basis_vectors)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/Basic.lean#L900"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "6a12863bc7dcfef2f2be8f09803822de3756f557cf50adf7caa96aa21bbceef8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 267,
        "start_column": 52,
        "end_line": 267,
        "end_column": 57
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u2070 : Field K\u271d\ninst\u271d\u00b9\u2079 : Field L\u271d\ninst\u271d\u00b9\u2078 : Field R\u271d\ninst\u271d\u00b9\u2077 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2075 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b3 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u00b9 : Field K\ninst\u271d\u00b9\u2070 : Field L\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Module K L\ninst\u271d\u2077 : Module K R\ninst\u271d\u2076 : Semiring (TensorProduct K L R)\ninst\u271d\u2075 : Module L (TensorProduct K L R)\ninst\u271d\u2074 : Algebra K R\ninst\u271d\u00b3 : Algebra K L\ninst\u271d\u00b2 : Algebra R (TensorProduct K L R)\ninst\u271d\u00b9 : IsScalarTower K R (TensorProduct K L R)\n\u03b9R : Type u_4\ninst\u271d : _root_.Fintype \u03b9R\nbR : Basis \u03b9R K R\nthis : Module L (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9R \u2192 TensorProduct K L R := fun i => 1 \u2297\u209c[K] bR i\n\u22a2 LinearIndependent L basis_vectors",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L267"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "71af523bb9838c9f4328e03526b1e2f82f3fa5108107fd3e67c50edc70fab152"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 268,
        "start_column": 65,
        "end_line": 268,
        "end_column": 70
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u2070 : Field K\u271d\ninst\u271d\u00b9\u2079 : Field L\u271d\ninst\u271d\u00b9\u2078 : Field R\u271d\ninst\u271d\u00b9\u2077 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2075 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b3 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u00b9 : Field K\ninst\u271d\u00b9\u2070 : Field L\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Module K L\ninst\u271d\u2077 : Module K R\ninst\u271d\u2076 : Semiring (TensorProduct K L R)\ninst\u271d\u2075 : Module L (TensorProduct K L R)\ninst\u271d\u2074 : Algebra K R\ninst\u271d\u00b3 : Algebra K L\ninst\u271d\u00b2 : Algebra R (TensorProduct K L R)\ninst\u271d\u00b9 : IsScalarTower K R (TensorProduct K L R)\n\u03b9R : Type u_4\ninst\u271d : _root_.Fintype \u03b9R\nbR : Basis \u03b9R K R\nthis : Module L (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9R \u2192 TensorProduct K L R := fun i => 1 \u2297\u209c[K] bR i\nhli : LinearIndependent L basis_vectors\n\u22a2 \u22a4 \u2264 Submodule.span L (Set.range basis_vectors)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L268"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "4d61a53523311fdb5d9f77f0e6f4cd4f130cce5d8dde765f1b7e499cbae37c6a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 280,
        "start_column": 52,
        "end_line": 280,
        "end_column": 57
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b9\u2079 : Field K\u271d\ninst\u271d\u00b9\u2078 : Field L\u271d\ninst\u271d\u00b9\u2077 : Field R\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2075 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u00b3 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b9 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u2070 : Field K\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Module K L\ninst\u271d\u2076 : Module K R\ninst\u271d\u2075 : Semiring (TensorProduct K L R)\ninst\u271d\u2074 : Module R (TensorProduct K L R)\ninst\u271d\u00b3 : Algebra K R\ninst\u271d\u00b2 : Algebra K L\ninst\u271d\u00b9 : Algebra R (TensorProduct K L R)\ninst\u271d : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_4\nbL : Basis \u03b9L K L\nthis : Module R (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9L \u2192 TensorProduct K L R := fun i => bL i \u2297\u209c[K] 1\n\u22a2 LinearIndependent R basis_vectors",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L280"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "9eaff71e258a3fbdc46b53f324c11a3c165683f94131ee4ca0333ec942dc3bba"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 281,
        "start_column": 65,
        "end_line": 281,
        "end_column": 70
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b9\u2079 : Field K\u271d\ninst\u271d\u00b9\u2078 : Field L\u271d\ninst\u271d\u00b9\u2077 : Field R\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2075 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u00b3 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b9 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u\nL : Type v\nR : Type w\ninst\u271d\u00b9\u2070 : Field K\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Field L\ninst\u271d\u2077 : Module K L\ninst\u271d\u2076 : Module K R\ninst\u271d\u2075 : Semiring (TensorProduct K L R)\ninst\u271d\u2074 : Module R (TensorProduct K L R)\ninst\u271d\u00b3 : Algebra K R\ninst\u271d\u00b2 : Algebra K L\ninst\u271d\u00b9 : Algebra R (TensorProduct K L R)\ninst\u271d : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_4\nbL : Basis \u03b9L K L\nthis : Module R (TensorProduct K L R) := inferInstance\nbasis_vectors : \u03b9L \u2192 TensorProduct K L R := fun i => bL i \u2297\u209c[K] 1\nhli : LinearIndependent R basis_vectors\n\u22a2 \u22a4 \u2264 Submodule.span R (Set.range basis_vectors)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L281"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "af148e15d87cc3894f93fcfee0bb957839873fa24737b426def787291724c810"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 334,
        "start_column": 25,
        "end_line": 334,
        "end_column": 30
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u00b3 : Field K\u271d\ninst\u271d\u00b2\u00b2 : Field L\u271d\ninst\u271d\u00b2\u00b9 : Field R\u271d\ninst\u271d\u00b2\u2070 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2079 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2078 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2077 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u2076 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u2075 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u_4\nL : Type u_5\nR : Type u_6\ninst\u271d\u00b9\u2074 : Field K\ninst\u271d\u00b9\u00b3 : Field L\ninst\u271d\u00b9\u00b2 : Field R\ninst\u271d\u00b9\u00b9 : Algebra K L\ninst\u271d\u00b9\u2070 : Algebra K R\ninst\u271d\u2079 : IsScalarTower K L (TensorProduct K L R)\ninst\u271d\u2078 : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_7\n\u03b9R : Type u_8\ninst\u271d\u2077 : _root_.Fintype \u03b9L\ninst\u271d\u2076 : _root_.Fintype \u03b9R\n\u03ba \u03c4 \u03b9 : \u2115\ninst\u271d\u2075 : Fact (\u03ba < \u03c4)\ninst\u271d\u2074 : Fact (\u03b9 < \u03c4)\ninst\u271d\u00b3 : Module (BTField \u03ba) (BTField \u03c4)\ninst\u271d\u00b2 : Module (BTField \u03ba) (BTField \u03b9)\ninst\u271d\u00b9 : Algebra (BTField \u03ba) (BTField \u03c4)\ninst\u271d : Algebra (BTField \u03ba) (BTField \u03b9)\n\u22a2 Nonempty\n    (TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03b9) \u2243\u2090[BTField \u03ba] TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03b9))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L334"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "377f3145680800cde62ffc2458ea0ab70c836e624c29933697c3dac4a3efd4b1"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "tensor-algebra",
        "commit": "b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean",
        "start_line": 347,
        "start_column": 25,
        "end_line": 347,
        "end_column": 30
      },
      "debug_info": {
        "goal": "K\u271d : Type u_1\nL\u271d : Type u_2\nR\u271d : Type u_3\nl\u03ba r\u03ba : \u2115\ninst\u271d\u00b2\u2070 : Field K\u271d\ninst\u271d\u00b9\u2079 : Field L\u271d\ninst\u271d\u00b9\u2078 : Field R\u271d\ninst\u271d\u00b9\u2077 : Algebra K\u271d L\u271d\ninst\u271d\u00b9\u2076 : Algebra K\u271d R\u271d\ninst\u271d\u00b9\u2075 : Fact (finrank K\u271d L\u271d = l\u03ba)\ninst\u271d\u00b9\u2074 : Fact (finrank K\u271d R\u271d = r\u03ba)\ninst\u271d\u00b9\u00b3 : SMulCommClass K\u271d L\u271d L\u271d\ninst\u271d\u00b9\u00b2 : SMulCommClass K\u271d R\u271d R\u271d\nK : Type u_4\nL : Type u_5\nR : Type u_6\ninst\u271d\u00b9\u00b9 : Field K\ninst\u271d\u00b9\u2070 : Field L\ninst\u271d\u2079 : Field R\ninst\u271d\u2078 : Algebra K L\ninst\u271d\u2077 : Algebra K R\ninst\u271d\u2076 : IsScalarTower K L (TensorProduct K L R)\ninst\u271d\u2075 : IsScalarTower K R (TensorProduct K L R)\n\u03b9L : Type u_7\n\u03b9R : Type u_8\ninst\u271d\u2074 : _root_.Fintype \u03b9L\ninst\u271d\u00b3 : _root_.Fintype \u03b9R\n\u03ba \u03c4 : \u2115\ninst\u271d\u00b2 : Fact (\u03ba < \u03c4)\ninst\u271d\u00b9 : Module (BTField \u03ba) (BTField \u03c4)\ninst\u271d : Algebra (BTField \u03ba) (BTField \u03c4)\n\u22a2 Nonempty\n    (TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03c4) \u2243\u2090[BTField \u03ba] TensorProduct (BTField \u03ba) (BTField \u03c4) (BTField \u03c4))",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/b26d47c7d8aced407a40c77d07cf6e8b6c1c09f5/ArkLib/Data/FieldTheory/BinaryTowerField/TensorAlgebra.lean#L347"
      },
      "metadata": {
        "blame_email_hash": "17f52712dc49",
        "blame_date": "2025-05-30T05:28:52+07:00",
        "inclusion_date": "2025-05-30T03:04:36.739883+00:00"
      },
      "id": "1d1e7db455aee436467617880e1a85d582794e877d1bfae876a0afda3d667e6f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 30,
        "start_column": 4,
        "end_line": 30,
        "end_column": 9
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\np : MlPoly R n\n\u22a2 (\u2211 i, C p[i] * \u220f j, if { toFin := i }.getLsb' j = true then X j else C 1 - X j) \u2208 restrictDegree (Fin n) R 1",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Equiv.lean#L30"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "320a5965524bc9b4ea68aa223944048182a8df5cd3d8c2c1a434438246003356"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 39,
        "start_column": 14,
        "end_line": 39,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\n\u22a2 Function.LeftInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Equiv.lean#L39"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "99a4a86506990771376d4fac0e4291ee98a8257402c0d2cefa69aad3872a4f8c"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 40,
        "start_column": 15,
        "end_line": 40,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\n\u22a2 Function.RightInverse (@MlPoly.ofSpec R inst\u271d n) (@MlPoly.toSpec R inst\u271d n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Equiv.lean#L40"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "78343f2e47745aafd923752c83f5f213629777135bcbf6ba68f4e9f094d3cc7a"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 48,
        "start_column": 2,
        "end_line": 48,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d : CommRing R\nn : \u2115\np q : MlPoly R n\n\u22a2 @MlPoly.toSpec R inst\u271d n (p + q) = @MlPoly.toSpec R inst\u271d n p + @MlPoly.toSpec R inst\u271d n q",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Equiv.lean#L48"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "3ebff7674bbe505aedaf577c5b450ad62181e2deeff1fbca157c10ae94b83650"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Equiv.lean",
        "start_line": 52,
        "start_column": 2,
        "end_line": 52,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\ninst\u271d\u00b9 : CommRing R\nn : \u2115\nS : Type u_2\ninst\u271d : CommRing S\nf : R \u2192+* S\np : MlPoly R n\nx : Vector S n\n\u22a2 p.eval\u2082 f x = MvPolynomial.eval\u2082 f x.get \u2191(@MlPoly.toSpec R inst\u271d\u00b9 n p)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Equiv.lean#L52"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-01-28T11:45:54-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "b8bd61fe6e83c893acc45bc2351da29141584b68881415979c43aae222ce4ca5"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 237,
        "start_column": 2,
        "end_line": 237,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type u_1\nn : \u2115\ninst\u271d : CommRing R\nw : Vector R n\ni : Fin (2 ^ n)\n\u22a2 (@MlPoly.lagrangeBasis R n inst\u271d w)[i] = \u220f j, if { toFin := i }.getLsb' j = true then w[j] else 1 - w[j]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Basic.lean#L237"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "7848ccb302a9283013157778786281cb8cc2c7ca400948321aebf26c30af1dce"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 322,
        "start_column": 14,
        "end_line": 322,
        "end_column": 19
      },
      "debug_info": {
        "goal": "R\u271d : Type u_1\nn : \u2115\nR : Type u_2\ninst\u271d\u00b9 : Add R\ninst\u271d : Sub R\n\u22a2 Function.LeftInverse (@MlPoly.evalToCoeff R inst\u271d n) (@MlPoly.coeffToEval R inst\u271d\u00b9 n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Basic.lean#L322"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "67c42e95aad007e8c307517657ffd8b738c72cb74414d6b26531d371c0c4648f"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/Data/MlPoly/Basic.lean",
        "start_line": 323,
        "start_column": 15,
        "end_line": 323,
        "end_column": 20
      },
      "debug_info": {
        "goal": "R\u271d : Type u_1\nn : \u2115\nR : Type u_2\ninst\u271d\u00b9 : Add R\ninst\u271d : Sub R\n\u22a2 Function.RightInverse (@MlPoly.evalToCoeff R inst\u271d n) (@MlPoly.coeffToEval R inst\u271d\u00b9 n)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/Data/MlPoly/Basic.lean#L323"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "b733d2e476f0cd4c2d03147be03044f79e0ea884132870ca5292f0b067559230"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 288,
        "start_column": 14,
        "end_line": 288,
        "end_column": 19
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nS : StateFunction pSpec oSpec innerLangIn innerLangOut V\n\u22a2 \u2200\n    stmt \u2209\n      StatementLens.projectStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n          (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n            InnerWitIn InnerWitOut lens) \u207b\u00b9'\n        innerLangIn,\n    sorry 0 stmt default = False",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L288"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "234bde953dede4d847c9810a914d3d996cabaa3077364cdf5d97a43b0676b8fa"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 289,
        "start_column": 13,
        "end_line": 289,
        "end_column": 18
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nS : StateFunction pSpec oSpec innerLangIn innerLangOut V\n\u22a2 \u2200 (m : Fin n),\n    pSpec.getDir m = Direction.P_to_V \u2192\n      \u2200 (stmt : OuterStmtIn) (tr : Transcript m.castSucc pSpec),\n        sorry m.castSucc stmt tr = False \u2192 \u2200 (msg : pSpec.getType m), sorry m.succ stmt (Transcript.snoc msg tr) = False",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L289"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "4343d896a2c3853513889217e65a574a39a65988c6c4af1c5b375787687645a0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 290,
        "start_column": 13,
        "end_line": 290,
        "end_column": 18
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nS : StateFunction pSpec oSpec innerLangIn innerLangOut V\n\u22a2 \u2200 (stmt : OuterStmtIn) (tr : Transcript (Fin.last n) pSpec),\n    sorry (Fin.last n) stmt tr = False \u2192\n      [fun x =>\n          x \u2208 fun x =>\n            True|run stmt tr\n            (Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              V)] =\n        0",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L290"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "a26360090c794ec49815d7d4d60941987139659f42c4732443365988802a68cf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 389,
        "start_column": 4,
        "end_line": 389,
        "end_column": 9
      },
      "debug_info": {
        "goal": "case succ\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut\ni : Fin n\nih :\n  (fun a => (a.1.1, a.1.2, a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.castSucc outerStmtIn outerWitIn\n            (Prover.transport n pSpec \u03b9 oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn\n              InnerStmtOut InnerWitOut lens P))).run =\n    (fun a => (a.1.1, (a.1.2, outerStmtIn, outerWitIn), a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.castSucc\n            (StatementLens.projectStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projectWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            P)).run\n\u22a2 (fun a => (a.1.1, a.1.2, a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.succ outerStmtIn outerWitIn\n            (Prover.transport n pSpec \u03b9 oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn\n              InnerStmtOut InnerWitOut lens P))).run =\n    (fun a => (a.1.1, (a.1.2, outerStmtIn, outerWitIn), a.2)) <$>\n      (simulateQ loggingOracle\n          (runToRound i.succ\n            (StatementLens.projectStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projectWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            P)).run",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L389"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "d44b503fd46116bcc82d2b5af79dc108529e4b6fc550d551714144fda8fcf5a0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 506,
        "start_column": 2,
        "end_line": 506,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nsoundnessError : NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (fun x x => True) lens\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut),\n    \u2200 stmtIn \u2209 innerLangIn,\n      [fun x => x.2.1 \u2209 innerLangOut|Reduction.run stmtIn witIn { prover := prover, verifier := V }] \u2264 \u2191soundnessError\nOuterWitIn OuterWitOut : Type\nouterWitIn : OuterWitIn\nprover : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\nouterStmtIn : OuterStmtIn\nhOuterStmtIn : outerStmtIn \u2209 outerLangIn\nh' :\n  \u2200 (prover : Prover pSpec oSpec InnerStmtIn OuterWitIn InnerStmtOut OuterWitOut),\n    \u2200 stmtIn \u2209 innerLangIn,\n      [fun x => x.2.1 \u2209 innerLangOut|Reduction.run stmtIn outerWitIn { prover := prover, verifier := V }] \u2264\n        \u2191soundnessError\n\u22a2 [fun x =>\n      x.2.1 \u2209\n        outerLangOut|Reduction.run outerStmtIn outerWitIn\n        { prover := prover,\n          verifier := Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V }] \u2264\n    \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L506"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "c3aa166ffa4342f6dbe86df8a9263686ad54e7286c1c711e3e6fdfae31779294"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 526,
        "start_column": 2,
        "end_line": 532,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nsoundnessError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191soundnessError\n\u22a2 \u2203 extractor,\n    \u2200 (stmtIn : OuterStmtIn) (witIn : OuterWitIn)\n      (prover : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n            \u00acouterRelIn stmtIn (extractor witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n              outerRelOut stmtOut\n                witOut|Reduction.runWithLog stmtIn witIn\n            { prover := prover,\n              verifier :=\n                Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                  (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                    InnerWitIn InnerWitOut lens)\n                  V }] \u2264\n        \u2191soundnessError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L526"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "71f2fcf9dff19317d9956b385e94e599acb6a12fb768fc0cfea8f53fb72a5b14"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 549,
        "start_column": 2,
        "end_line": 549,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (fun x x => True) lens\nh :\n  \u2203 stateFunction,\n    \u2200 stmtIn \u2209 innerLangIn,\n      \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut)\n        (i : pSpec.ChallengeIdx),\n        let ex := do\n          let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n          let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n          pure (__do_lift, __do_lift_1);\n        [fun x =>\n            match x with\n            | ((transcript, snd), challenge) =>\n              \u00acstateFunction.fn (\u2191i).castSucc stmtIn transcript \u2227\n                stateFunction.fn (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n          \u2191(rbrSoundnessError i)\n\u22a2 \u2203 stateFunction,\n    \u2200 stmtIn \u2209 outerLangIn,\n      \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec OuterStmtIn WitIn OuterStmtOut WitOut)\n        (i : pSpec.ChallengeIdx),\n        let ex := do\n          let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n          let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n          pure (__do_lift, __do_lift_1);\n        [fun x =>\n            match x with\n            | ((transcript, snd), challenge) =>\n              \u00acstateFunction.fn (\u2191i).castSucc stmtIn transcript \u2227\n                stateFunction.fn (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n          \u2191(rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L549"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "bf74210d7fbb6c91f2428d96884d67d156795ab77401aa26dbc6ae360c085af0"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/Transport.lean",
        "start_line": 567,
        "start_column": 2,
        "end_line": 567,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nh : rbrKnowledgeSoundness innerRelIn innerRelOut V rbrKnowledgeError\n\u22a2 rbrKnowledgeSoundness outerRelIn outerRelOut\n    (Verifier.transport n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n        InnerWitOut lens)\n      V)\n    rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Composition/Transport.lean#L567"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "ceb2f120acf79355e46fcea58a2aeb28d2b66c0769ca132475f7d208d574f0e8"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "5ee74d2da8b81f7eac230ecc682fcb033b0487f7",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 393,
        "start_column": 2,
        "end_line": 393,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : NNReal\nhLt : knowledgeError < 1\nextractor : @StraightlineExtractor n pSpec \u03b9 oSpec StmtIn WitIn WitOut\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (@extractor x.1.2 stmtIn x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n          relOut x.2.1 x.1.2|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x =>\n      \u2200 (x_1 : WitOut), \u00acrelOut x.2.1 x_1|Reduction.run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/5ee74d2da8b81f7eac230ecc682fcb033b0487f7/ArkLib/OracleReduction/Security/Basic.lean#L393"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-02T03:03:34.455235+00:00"
      },
      "id": "7571f0f3a6f11455ff6ba98f6f8db0e21298b826b5031fe52b224b162bf9e381"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/SingleRound.lean",
        "start_line": 479,
        "start_column": 2,
        "end_line": 479,
        "end_column": 7
      },
      "debug_info": {
        "goal": "R : Type\ninst\u271d\u00b9 : CommSemiring R\ninst\u271d : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\nstmt : Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, \u21a5(degreeLE R \u2191deg)), (Direction.V_to_P, R)]\nx : getType (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b9 deg) 0\nhp_i : \u2191(transcript 0) \u2208 degreeLE R \u2191deg\nhEq : transcript 0 = \u27e8\u2191(transcript 0), hp_i\u27e9\n\u22a2 (do\n      let a \u2190\n        ((OptionT.run (List.mapM (fun i => liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run \u2218 fun evals => do\n                    if evals.sum = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure () else failure\n                    (fun a =>\n                          Sumcheck.Spec.Statement.mk R n i.succ a\n                            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1))) <$>\n                        liftM (query (Sum.inr (Sum.inr \u27e80, \u22ef\u27e9)) (transcript 1)))).mapM\n            fun {\u03b1} => (OracleInterface.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a =>\n            (a, fun i_1 =>\n              @Prod.snd (Sumcheck.Spec.Statement R n i.castSucc)\n                ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b9 n deg i) stmt i_1)) <$>\n          a.getM) =\n    (fun a =>\n        (Sumcheck.Spec.Statement.mk R n i.succ (Polynomial.eval (transcript 1) \u2191(transcript 0))\n            (Fin.snoc (Sumcheck.Spec.Statement.challenges R n i.castSucc stmt.1) (transcript 1)),\n          stmt.2)) <$>\n      if \u2211 x, Polynomial.eval (D x) \u2191(transcript 0) = Sumcheck.Spec.Statement.target R n i.castSucc stmt.1 then pure ()\n      else failure",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Sumcheck/SingleRound.lean#L479"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "79b245832e1c2319f7e7a74267140d7146d12985018806a1a95f441cecb338cf"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/ProofSystem/Sumcheck/SingleRound.lean",
        "start_line": 497,
        "start_column": 57,
        "end_line": 497,
        "end_column": 62
      },
      "debug_info": {
        "goal": "case left\nR : Type\ninst\u271d\u00b3 : CommSemiring R\ninst\u271d\u00b2 : VCVCompatible R\nn deg m : \u2115\nD : Fin m \u21aa R\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ni : Fin (n + 1)\ninst\u271d\u00b9 : DecidableEq \u03b9\ninst\u271d : oSpec.FiniteRange\ntarget : R\nchallenge : Fin \u2191i.castSucc \u2192 R\noStmt : (i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i\nwitIn\u271d : Unit\nhValid :\n  \u2211 x \u2208 Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x \u2218 Fin.cast (Sumcheck.Spec.relation._proof_11 n i.castSucc)))\n        \u2191(@oStmt ()) =\n    target\n\u22a2 (Prover.processRound 1\n        { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n              verifier :=\n                Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n        (Prover.processRound 0\n          { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                verifier :=\n                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n          (pure\n            (@default (Transcript 0 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited,\n              { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.toProverIn.input\n                (Sumcheck.Spec.Statement R n i.castSucc \u00d7 ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                Unit\n                ({ prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                          verifier :=\n                            Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                              i }.toReduction.prover.PrvState\n                  0)\n                (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)))).neverFails \u2227\n    \u2200 (a : Transcript 2 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg))\n      (b :\n        { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                      i }.toReduction.prover.PrvState\n          2),\n      (a, b) \u2208\n          (Prover.processRound 1\n              { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                    verifier :=\n                      Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2 i }.toReduction.prover\n              (Prover.processRound 0\n                { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                      verifier :=\n                        Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                          i }.toReduction.prover\n                (pure\n                  (@default (Transcript 0 (Sumcheck.Spec.SingleRound.pSpec R inst\u271d\u00b3 deg)) Unique.instInhabited,\n                    { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                                verifier :=\n                                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                                    i }.toReduction.prover.toProverIn.input\n                      (Sumcheck.Spec.Statement R n i.castSucc \u00d7\n                        ((i : Unit) \u2192 Sumcheck.Spec.OracleStatement R inst\u271d\u00b3 n deg i))\n                      Unit\n                      ({ prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                                verifier :=\n                                  Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                                    i }.toReduction.prover.PrvState\n                        0)\n                      (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) witIn\u271d)))).support \u2192\n        (Verifier.run (Sumcheck.Spec.Statement.mk R n i.castSucc target challenge, oStmt) a\n            { prover := Sumcheck.Spec.SingleRound.prover R inst\u271d\u00b3 n deg m D \u03b9 oSpec i,\n                  verifier :=\n                    Sumcheck.Spec.SingleRound.oracleVerifier R inst\u271d\u00b3 n deg m D \u03b9 oSpec inst\u271d\u00b2\n                      i }.toReduction.verifier).neverFails",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/ProofSystem/Sumcheck/SingleRound.lean#L497"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "e6f67d451016cd4f8f7590cf709491be9faa7073737f83eab2763df3fec6401d"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 346,
        "start_column": 6,
        "end_line": 346,
        "end_column": 11
      },
      "debug_info": {
        "goal": "case a\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (Verifier.compatStatement n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V)\n    lens\nstF : StateFunction pSpec oSpec innerLangIn innerLangOut V\nouterStmtIn : OuterStmtIn\ntranscript : Transcript (Fin.last n) pSpec\nhStmt :\n  stF.toFun (Fin.last n) (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n      transcript =\n    False\nh :\n  \u2200\n    x \u2208\n      (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n          transcript).support,\n    x \u2209 innerLangOut\ninnerStmtOut : InnerStmtOut\nhSupport :\n  innerStmtOut \u2208\n    (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n        transcript).support\n\u22a2 outerStmtIn \u2209 outerLangIn",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L346"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-02T21:57:20+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "fb3f6bda6899d0924ce1e2cdc8855e9e47490e8a12f43d0fb8cb0bb059e7fde9"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 550,
        "start_column": 2,
        "end_line": 550,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nsoundnessError : NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (Verifier.compatStatement n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V)\n    lens\nWitIn WitOut : Type\nouterWitIn : WitIn\nouterP : Prover pSpec oSpec OuterStmtIn WitIn OuterStmtOut WitOut\nouterStmtIn : OuterStmtIn\nhOuterStmtIn : outerStmtIn \u2209 outerLangIn\nh :\n  \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut),\n    \u2200 stmtIn \u2209 innerLangIn,\n      [fun x => x.2.1 \u2208 innerLangOut|do\n          let __discr \u2190 Prover.run stmtIn witIn prover\n          (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n              (run stmtIn __discr.2.2 V).liftComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n        \u2191soundnessError\ninnerP : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut\nthis : StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn \u2209 innerLangIn\nhSound :\n  [fun x => x.2.1 \u2208 innerLangOut|do\n      let __discr \u2190\n        Prover.run (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n            outerWitIn innerP\n      (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n          (run (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn) __discr.2.2\n                V).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191soundnessError\n\u22a2 [fun x => x.2.1 \u2208 outerLangOut|do\n      let __discr \u2190 Prover.run outerStmtIn outerWitIn outerP\n      (fun a =>\n            ((__discr.1, __discr.2.1),\n              StatementLens.liftStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens (outerStmtIn, a),\n              __discr.2.2)) <$>\n          (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n                __discr.2.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    [fun x => x.2.1 \u2208 innerLangOut|do\n      let __discr \u2190\n        Prover.run (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n            outerWitIn innerP\n      (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n          (V.verify (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens outerStmtIn)\n                __discr.2.2).liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L550"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "2b0aecdb3ff198efe0d6899a500d302b7d42c4a3f411d1b6d1340ac2a03c8117"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 594,
        "start_column": 4,
        "end_line": 594,
        "end_column": 9
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @Prover.liftContext.match_4 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut) (outerP.output state)\n        fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let __discr \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\ninnerStmtIn : InnerStmtIn\ninnerWitIn : InnerWitIn\n\u22a2 Prover.runWithLog innerStmtIn innerWitIn innerP = do\n    let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n    @Verifier.liftContext_knowledgeSoundness.match_1 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n        (fun __discr =>\n          OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n            (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n        __discr fun fst outerWitOut rest =>\n        pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L594"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-02T21:57:20+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "214273d05342c8cbd511eb00a0bb7fec4f591b71ef61be12e9de072ae9099220"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 599,
        "start_column": 2,
        "end_line": 599,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b2 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : Inhabited InnerStmtOut\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nknowledgeError : NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nE : StraightlineExtractor pSpec oSpec InnerStmtIn InnerWitIn InnerWitOut\nh' :\n  \u2200 (stmtIn : InnerStmtIn) (witIn : InnerWitIn)\n    (prover : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, verifyQueryLog) =>\n          \u00acinnerRelIn stmtIn (E witOut stmtIn transcript proveQueryLog.fst verifyQueryLog) \u2227\n            innerRelOut stmtOut witOut|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := V }] \u2264\n      \u2191knowledgeError\nouterStmtIn : OuterStmtIn\nouterWitIn : OuterWitIn\nouterP : Prover pSpec oSpec OuterStmtIn OuterWitIn OuterStmtOut OuterWitOut\ninnerP : Prover pSpec oSpec InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut :=\n  { toProverState := outerP.toProverState, input := fun x x => outerP.input outerStmtIn outerWitIn,\n    sendMessage := outerP.sendMessage, receiveChallenge := outerP.receiveChallenge,\n    output := fun state =>\n      @Prover.liftContext.match_4 OuterStmtOut OuterWitOut (fun x => InnerStmtOut \u00d7 InnerWitOut) (outerP.output state)\n        fun outerStmtOut outerWitOut =>\n        (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut) }\nh_innerP_input :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    innerP.input innerStmtIn innerWitIn = outerP.input outerStmtIn outerWitIn\nhR :\n  [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let __discr \u2190\n        Prover.runWithLog\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (WitnessLens.projWit OuterWitIn OuterWitOut InnerWitIn InnerWitOut\n              (ContextLens.toWitnessLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerWitIn)\n            innerP\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    \u2191knowledgeError\nh_innerP_runWithLog :\n  \u2200 {innerStmtIn : InnerStmtIn} {innerWitIn : InnerWitIn},\n    Prover.runWithLog innerStmtIn innerWitIn innerP = do\n      let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      @Verifier.liftContext_knowledgeSoundness.match_1 n pSpec \u03b9 oSpec OuterStmtOut OuterWitOut\n          (fun __discr =>\n            OracleComp (oSpec ++\u2092 [pSpec.Challenge]\u2092)\n              (InnerStmtOut \u00d7 InnerWitOut \u00d7 pSpec.FullTranscript \u00d7 (oSpec ++\u2092 [pSpec.Challenge]\u2092).QueryLog))\n          __discr fun fst outerWitOut rest =>\n          pure (default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv outerWitOut, rest)\n\u22a2 [fun x =>\n      \u00acouterRelIn outerStmtIn\n            (WitnessLens.liftWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv\n              (x.1.2,\n                E (WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv x.1.2)\n                  (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                    (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                      OuterWitOut InnerWitIn InnerWitOut lens)\n                    outerStmtIn)\n                  x.2.2.1 x.2.2.2.1.fst x.2.2.2.2)) \u2227\n        outerRelOut x.2.1 x.1.2|do\n      let __discr \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      (fun a =>\n            ((__discr.1, __discr.2.1),\n              StatementLens.liftStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                (outerStmtIn, a.1),\n              __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    __discr.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)] \u2264\n    [fun x =>\n      \u00acinnerRelIn\n            (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n              (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                InnerWitIn InnerWitOut lens)\n              outerStmtIn)\n            (E x.1.2\n              (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut\n                  InnerWitIn InnerWitOut lens)\n                outerStmtIn)\n              x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n        innerRelOut x.2.1 x.1.2|do\n      let a \u2190 Prover.runWithLog outerStmtIn outerWitIn outerP\n      (fun a_1 =>\n            ((default, WitnessLens.projWit OuterWitOut OuterWitIn InnerWitOut InnerWitIn lensInv a.2.1), a_1.1, a.2.2.1,\n              a.2.2.2, a_1.2)) <$>\n          (simulateQ loggingOracle\n                  (V.verify\n                    (StatementLens.projStmt OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n                      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn\n                        OuterWitOut InnerWitIn InnerWitOut lens)\n                      outerStmtIn)\n                    a.2.2.1)).run.liftComp\n            (oSpec ++\u2092 [pSpec.Challenge]\u2092)]",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L599"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "9c3a46dec270d4a447a1968b236700c348eeadfe78862b03631e5c5715147572"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 618,
        "start_column": 2,
        "end_line": 618,
        "end_column": 7
      },
      "debug_info": {
        "goal": "case intro\nn : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterLangIn : Set OuterStmtIn\nouterLangOut : Set OuterStmtOut\ninnerLangIn : Set InnerStmtIn\ninnerLangOut : Set InnerStmtOut\nrbrSoundnessError : pSpec.ChallengeIdx \u2192 NNReal\nlens : StatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nlensSound :\n  StatementLens.IsSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut outerLangIn outerLangOut innerLangIn\n    innerLangOut (Verifier.compatStatement n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut lens V)\n    lens\nstF : StateFunction pSpec oSpec innerLangIn innerLangOut V\nh :\n  \u2200 stmtIn \u2209 innerLangIn,\n    \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec InnerStmtIn WitIn InnerStmtOut WitOut)\n      (i : pSpec.ChallengeIdx),\n      let ex := do\n        let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n        let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n        pure (__do_lift, __do_lift_1);\n      [fun x =>\n          match x with\n          | ((transcript, snd), challenge) =>\n            \u00acstF.toFun (\u2191i).castSucc stmtIn transcript \u2227\n              stF.toFun (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n        \u2191(rbrSoundnessError i)\n\u22a2 \u2203 stateFunction,\n    \u2200 stmtIn \u2209 outerLangIn,\n      \u2200 (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec OuterStmtIn WitIn OuterStmtOut WitOut)\n        (i : pSpec.ChallengeIdx),\n        let ex := do\n          let __do_lift \u2190 Prover.runWithLogToRound (\u2191i).castSucc stmtIn witIn prover\n          let __do_lift_1 \u2190 liftM (pSpec.getChallenge i)\n          pure (__do_lift, __do_lift_1);\n        [fun x =>\n            match x with\n            | ((transcript, snd), challenge) =>\n              \u00acstateFunction.toFun (\u2191i).castSucc stmtIn transcript \u2227\n                stateFunction.toFun (\u2191i).succ stmtIn (Transcript.snoc challenge transcript)|ex] \u2264\n          \u2191(rbrSoundnessError i)",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L618"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "8930fa3e2d601bfd2968c7a7615db3c179c912f6dea877fb094ee00bcd434436"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Composition/LiftContext.lean",
        "start_line": 637,
        "start_column": 2,
        "end_line": 637,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\nOuterStmtIn OuterWitIn OuterStmtOut OuterWitOut InnerStmtIn InnerWitIn InnerStmtOut InnerWitOut : Type\ninst\u271d\u00b9 : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\ninst\u271d : oSpec.FiniteRange\nouterRelIn : OuterStmtIn \u2192 OuterWitIn \u2192 Prop\nouterRelOut : OuterStmtOut \u2192 OuterWitOut \u2192 Prop\ninnerRelIn : InnerStmtIn \u2192 InnerWitIn \u2192 Prop\ninnerRelOut : InnerStmtOut \u2192 InnerWitOut \u2192 Prop\nrbrKnowledgeError : pSpec.ChallengeIdx \u2192 NNReal\nlens : ContextLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensInv : WitnessLensInv OuterWitIn OuterWitOut InnerWitIn InnerWitOut\nlensKnowledgeSound :\n  ContextLens.IsKnowledgeSound OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n    InnerWitOut outerRelIn innerRelIn outerRelOut innerRelOut (fun x x => True) lensInv lens\nV : Verifier pSpec oSpec InnerStmtIn InnerStmtOut\nh : rbrKnowledgeSoundness innerRelIn innerRelOut V rbrKnowledgeError\n\u22a2 rbrKnowledgeSoundness outerRelIn outerRelOut\n    (Verifier.liftContext n pSpec \u03b9 oSpec OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut\n      (ContextLens.toStatementLens OuterStmtIn OuterStmtOut InnerStmtIn InnerStmtOut OuterWitIn OuterWitOut InnerWitIn\n        InnerWitOut lens)\n      V)\n    rbrKnowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Composition/LiftContext.lean#L637"
      },
      "metadata": {
        "blame_email_hash": "d0850777cf0b",
        "blame_date": "2025-06-01T19:05:19+07:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "87703710fdc2990aab468d96e933427da28ac73a758e0254b4efffc45b058b74"
    },
    {
      "repo": {
        "remote": "https://github.com/Verified-zkEVM/ZKLib",
        "branch": "main",
        "commit": "64d9598799eff6654ab4bba3a88b86a79b72924f",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "ArkLib/OracleReduction/Security/Basic.lean",
        "start_line": 426,
        "start_column": 2,
        "end_line": 426,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\npSpec : ProtocolSpec n\n\u03b9 : Type\noSpec : OracleSpec \u03b9\ninst\u271d\u00b9 : oSpec.FiniteRange\ninst\u271d : (i : pSpec.ChallengeIdx) \u2192 VCVCompatible (pSpec.Challenge i)\nStmtIn WitIn StmtOut WitOut : Type\nrelIn : StmtIn \u2192 WitIn \u2192 Prop\nrelOut : StmtOut \u2192 WitOut \u2192 Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : NNReal\nhLt : knowledgeError < 1\nextractor : @StraightlineExtractor n pSpec \u03b9 oSpec StmtIn WitIn WitOut\nhKS :\n  \u2200 (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        \u00acrelIn stmtIn (@extractor x.1.2 stmtIn x.2.2.1 x.2.2.2.1.fst x.2.2.2.2) \u2227\n          relOut x.2.1 x.1.2|Reduction.runWithLog stmtIn witIn { prover := prover, verifier := verifier }] \u2264\n      \u2191knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : \u2200 (x : WitIn), \u00acrelIn stmtIn x\n\u22a2 [fun x => \u2203 wit, relOut x.2.1 wit|Reduction.run stmtIn witIn' { prover := prover, verifier := verifier }] \u2264\n    \u2191knowledgeError",
        "url": "https://github.com/Verified-zkEVM/ZKLib/blob/64d9598799eff6654ab4bba3a88b86a79b72924f/ArkLib/OracleReduction/Security/Basic.lean#L426"
      },
      "metadata": {
        "blame_email_hash": "f335a4ba1b88",
        "blame_date": "2025-02-06T20:02:30-05:00",
        "inclusion_date": "2025-06-03T03:05:03.675730+00:00"
      },
      "id": "34b03447cb89f1a9a8a9bbaf1b72a36c0ac18b2abd3ed54566a34cf2bc5fb130"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 318,
        "start_column": 2,
        "end_line": 318,
        "end_column": 7
      },
      "debug_info": {
        "goal": "S : Finset \u2115\nh\u2080 : \u2200 (n : \u2115), n \u2208 S \u2194 n \u2223 Nat.sqrt 196\n\u22a2 \u2211 k \u2208 S, k = 24",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L318"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-18T16:45:18-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "2530d20f81e1944e65639d8dad03757bdfd6dee6f863d1d9527747efe70e54e3"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 781,
        "start_column": 2,
        "end_line": 781,
        "end_column": 7
      },
      "debug_info": {
        "goal": "n : \u2115\n\u22a2 \u2211 k \u2208 Finset.range n, (2 * k + 1) = n ^ 2",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L781"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "b1890c6356fe89c61d610ee84adfeabaf2601f8ba1faac3647ca26a82facfd68"
    },
    {
      "repo": {
        "remote": "https://github.com/yangky11/miniF2F-lean4",
        "branch": "main",
        "commit": "88317cf19776c515d831fb3ad7afd6b85f4ff471",
        "lean_version": "v4.19.0"
      },
      "location": {
        "path": "MiniF2F/Valid.lean",
        "start_line": 1054,
        "start_column": 2,
        "end_line": 1054,
        "end_column": 7
      },
      "debug_info": {
        "goal": "t s : \u211d\nn : \u2124\nh\u2080 : t = 2 * s - s ^ 2\nh\u2081 : s = \u2191n ^ 2 - 2 ^ n + 1\nx\u271d : n = 3\n\u22a2 t = 0",
        "url": "https://github.com/yangky11/miniF2F-lean4/blob/88317cf19776c515d831fb3ad7afd6b85f4ff471/MiniF2F/Valid.lean#L1054"
      },
      "metadata": {
        "blame_email_hash": "f7088d9b07bb",
        "blame_date": "2023-11-15T08:54:48-08:00",
        "inclusion_date": "2025-06-03T03:14:17.361520+00:00"
      },
      "id": "dcdbb87a721ea62a857704f05cea5ef6d3daa0329868a42c0bded58bed0c295a"
    }
  ]
}