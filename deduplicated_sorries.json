[
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 73,
      "start_column": 6,
      "end_line": 73,
      "end_column": 11,
      "file": "Compfiles/Imo2016P5.lean"
    },
    "debug_info": {
      "goal": "case h.refine_4\nhp : ∀ (n : ℕ), (n % 4 = 2 ∨ n % 4 = 3) = ¬(n % 4 = 0 ∨ n % 4 = 1)\nx : ℝ\n⊢ ∏ i ∈ Finset.Icc 1 2016 \\ {n ∈ Finset.Icc 1 2016 | n % 4 = 2 ∨ n % 4 = 3}, (x - ↑i) ≠\n    ∏ i ∈ Finset.Icc 1 2016 \\ {n ∈ Finset.Icc 1 2016 | n % 4 = 0 ∨ n % 4 = 1}, (x - ↑i)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2016P5.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T10:28:23-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "84bcea7f0ca35dc32900513de6c78d94d4fcdad22bbeb1fddee00d5661e996a6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Usa1983P5.lean"
    },
    "debug_info": {
      "goal": "x : ℝ\nn : ℕ\nhn : 0 < n\n⊢ let fracs := {q | q.den ≤ n ∧ ↑q ∈ Set.Ioo x (x + 1 / ↑n)};\n  fracs.Finite ∧ fracs.ncard ≤ (n + 1) / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1983P5.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T10:41:38-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70a1fadae39feaa3d8ce9b646979787a76bafdc03944e9d10fe318ab2b6675fe"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7,
      "file": "Compfiles/Canada1998P5.lean"
    },
    "debug_info": {
      "goal": "m : ℕ\nhm : 0 < m\na b : ℕ\nhab : a ≤ b\n⊢ a ^ 2 + b ^ 2 = m ^ 2 * (a * b + 1) ↔ ∃ n, ↑a = A m hm n ∧ ↑b = A m hm (n + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Canada1998P5.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-16T22:18:26-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "22a90092699eaa13360ddaaec1446beb4a40cccd71a83e62cdf0d519f6abf8c9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2004P6.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\n⊢ n ∈ SolutionSet ↔ 0 < n ∧ ∃ k, Alternating (n * k)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P6.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-30T13:21:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "38aa16505c3cd807c8542c1b64c5019cedb95e504aa2034046bf7b02c3aa45d9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 48,
      "end_line": 28,
      "end_column": 53,
      "file": "Compfiles/Imo1977P4.lean"
    },
    "debug_info": {
      "goal": "f : ℝ → ℝ\na b A B : ℝ\nh₀ : ∀ (x : ℝ), f x = 1 - a * Real.cos x - b * Real.sin x - A * Real.cos (2 * x) - B * Real.sin (2 * x)\nh₁ : ∀ (x : ℝ), f x ≥ 0\n⊢ a ^ 2 + b ^ 2 ≤ 2 ∧ A ^ 2 + B ^ 2 ≤ 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1977P4.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7eb3e4760b723be54d07da3e9c717a2fce8b7af9770b04ec8d9b84f811088b91"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 43,
      "end_line": 37,
      "end_column": 48,
      "file": "Compfiles/Imo1972P4.lean"
    },
    "debug_info": {
      "goal": "a b c d e : ℝ\nh₀ : 0 < a ∧ 0 < b ∧ 0 < c ∧ 0 < d ∧ 0 < e\n⊢ (a ^ 2 - c * e) * (b ^ 2 - c * e) ≤ 0 ∧\n      (b ^ 2 - d * a) * (c ^ 2 - d * a) ≤ 0 ∧\n        (c ^ 2 - e * b) * (d ^ 2 - e * b) ≤ 0 ∧\n          (d ^ 2 - a * c) * (e ^ 2 - a * c) ≤ 0 ∧ (e ^ 2 - b * d) * (a ^ 2 - b * d) ≤ 0 ↔\n    (a, b, c, d, e) ∈ solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1972P4.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ff938d32047a58dfb1bf3488eb08cd6ecd1a61b810b115938beb88eef1ab358e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Usa1980P5.lean"
    },
    "debug_info": {
      "goal": "x y z : ℝ\nhx : x ∈ Set.Icc 0 1\nhy : y ∈ Set.Icc 0 1\nhz : z ∈ Set.Icc 0 1\n⊢ x / (y + z + 1) + y / (z + x + 1) + z / (x + y + 1) ≤ 1 + (1 - x) * (1 - y) * (1 - z)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1980P5.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-27T11:18:26-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1e4fd3f45cfefb76ca1f1463488867c50bf82fa1323f4c1b3958b0a0f029f5d0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Compfiles/Usa2022P1.lean"
    },
    "debug_info": {
      "goal": "a b : ℕ\nha : 0 < a\nhb : 0 < b\ncolor : Fin (a + b + 1) × Fin (a + b + 1) → Fin 2\nc0 : a ^ 2 + a * b - b ≤ Fintype.card { s // color s = 0 }\nc1 : b ^ 2 + a * b - a ≤ Fintype.card { s // color s = 1 }\n⊢ ∃ A B,\n    A.card = a ∧\n      B.card = b ∧\n        (∀ x ∈ A, color x = 0) ∧ (∀ y ∈ B, color y = 1) ∧ ∀ x ∈ A ∪ B, ∀ y ∈ A ∪ B, x ≠ y → x.1 ≠ y.1 ∧ x.2 ≠ y.2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2022P1.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-04-16T11:18:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4a096ad1ad14b4122abc40067ae64088caeb3169c51e3251f31e280913f8ef83"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "Compfiles/Imo2021P6.lean"
    },
    "debug_info": {
      "goal": "m : ℕ\nhm : 2 ≤ m\nA : Finset ℤ\nB : Fin m → Finset ℤ\nhB : ∀ (k : Fin m), B k ⊆ A\nhs : ∀ (k : Fin m), ∑ b ∈ B k, b = ↑m ^ (↑k + 1)\n⊢ m ≤ 2 * A.card",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2021P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T14:13:49-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "390f6cc22c9c6ea1d9605d905936613c35d4b79a343e7bce7566508786e16488"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo2018P5.lean"
    },
    "debug_info": {
      "goal": "a : ℕ → ℤ\napos : ∀ (n : ℕ), 0 < a n\nN : ℕ\nhN : 0 < N\nh : ∀ (n : ℕ), N ≤ n → ∃ z, ↑z = ∑ i ∈ Finset.range n, ↑(a i) / ↑(a ((i + 1) % n))\n⊢ ∃ M, ∀ (m : ℕ), M ≤ m → a m = a (m + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P5.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-20T08:39:26-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e15099a9fdcbc01d7a88ce0137d6816274d90edc358c72372e671bb4846b49cc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "Compfiles/Usa1993P3.lean"
    },
    "debug_info": {
      "goal": "⊢ IsLeast {c | ∀ (f : ↑(Set.Icc 0 1) → ℝ), valid f ∧ ∀ (x : ↑(Set.Icc 0 1)), f x ≤ c * ↑↑x} min_c",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1993P3.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-17T17:28:05-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "693fe0a4b901598111f70d4be3658dc97da9b8be3c7a4b1a8f9a50a8920e8763"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 28,
      "end_line": 37,
      "end_column": 33,
      "file": "Compfiles/Imo1988P3.lean"
    },
    "debug_info": {
      "goal": "f : ℕ → ℕ\nh₀ : f 1 = 1\nh₁ : f 3 = 3\nh₂ : ∀ (n : ℕ), f (2 * n) = f n\nh₃ : ∀ (n : ℕ), f (4 * n + 1) + f n = 2 * f (2 * n + 1)\nh₄ : ∀ (n : ℕ), f (4 * n + 3) + 2 * f n = 3 * f (2 * n + 1)\nA : Finset ↑{n | 0 < n ∧ n ≤ 1988 ∧ f n = n}\n⊢ A.card = solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1988P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59de92e21cfae296e4b66f7deb395a01acb55a9e06e67321002dc3e973a525a7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Compfiles/Imo1994P4.lean"
    },
    "debug_info": {
      "goal": "m n : ℤ\n⊢ (m, n) ∈ SolutionSet ↔ 0 < m ∧ 0 < n ∧ m * n - 1 ∣ n ^ 3 + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1994P4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-23T19:59:15-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d99ee4237a684cd6a37cbaf1951f988026cafa15f338b5b9899e0fc680aa0d47"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 4,
      "end_line": 30,
      "end_column": 9,
      "file": "Compfiles/Imo1990P3.lean"
    },
    "debug_info": {
      "goal": "case mpr\nn : ℕ\nhn : 1 < n\nhnd : n ^ 2 ∣ 2 ^ n + 1\n⊢ n ∈ solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1990P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-01T16:38:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "758fafad7560a57d684d9f7eebf31a504afb36adce932b3367972349cd3d8da2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Imo1999P4.lean"
    },
    "debug_info": {
      "goal": "x p : ℕ\n⊢ (x, p) ∈ SolutionSet ↔ 0 < x ∧ Nat.Prime p ∧ x ^ (p - 1) ∣ (p - 1) ^ x + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1999P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-01T11:05:51-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bd063222b756ce52d4cd10c835265a7e46200225e627904c70e079aa0a2222e6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 46,
      "start_column": 2,
      "end_line": 46,
      "end_column": 7,
      "file": "Compfiles/Usa1999P1.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nc : Finset (checkerboard n)\nha : ∀ (x : checkerboard n), x ∈ c ∨ ∃ y ∈ c, adjacent x y\nhb : ∀ x ∈ c, ∀ y ∈ c, ∃ p, List.Chain' adjacent p ∧ p.head? = some x ∧ p.getLast? = some y\n⊢ n ^ 2 ≤ c.card * 3 + 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1999P1.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T15:42:10-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "18e66c7ee601f4c46a6619e6f90e818ee8eecf1194ffebf3f0c6876fe79c32dc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Imo1998P6.lean"
    },
    "debug_info": {
      "goal": "f : ℕ+ → ℕ+\nh : ∀ (s t : ℕ+), f (t ^ 2 * f s) = s * f t ^ 2\n⊢ IsLeast {n | n = ↑(f 1998)} ↑solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:49:10-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "485a0138d3e94f7ce0c4314dd39028fef5d95c7679266a155c5b6aae27df3c3c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 48,
      "start_column": 2,
      "end_line": 48,
      "end_column": 7,
      "file": "Compfiles/Imo2014P4.lean"
    },
    "debug_info": {
      "goal": "A B C P Q M N : EuclideanSpace ℝ (Fin 2)\nhABC : AffineIndependent ℝ ![A, B, C]\nacuteA : ∠ C A B < Real.pi / 2\nacuteB : ∠ A B C < Real.pi / 2\nacuteC : ∠ B C A < Real.pi / 2\nhP : Sbtw ℝ P B C\nhQ : Sbtw ℝ Q B C\nhPAB : ∠ P A B = ∠ B C A\nhCAQ : ∠ C A Q = ∠ A B C\nhM : M ∈ affineSpan ℝ {A, M}\nhN : Q ∈ affineSpan ℝ {A, N}\nhPAM : P = midpoint ℝ A M\nhQAN : Q = midpoint ℝ A N\n⊢ let ABC := { points := ![A, B, C], independent := hABC };\n  let D := ↑(affineSpan ℝ {B, M}) ∩ ↑(affineSpan ℝ {C, N});\n  D.Nonempty ∧ D ⊆ Metric.sphere (Affine.Simplex.circumsphere ABC).center (Affine.Simplex.circumsphere ABC).radius",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2014P4.lean#L48"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-17T13:26:17-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f7f04887d23d2c0bcd401dc258c7ff1432af00c33eb6d07e81b0f57c3d93a90c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 44,
      "start_column": 54,
      "end_line": 44,
      "end_column": 59,
      "file": "Compfiles/Imo1961P1.lean"
    },
    "debug_info": {
      "goal": "a b x y z : ℝ\n⊢ (x, y, z) ∈ xyz_of_ab a b ↔ IsSolution a b x y z",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "977b18b828ee3c1ced5fc0ba497b0b928f57a2d4b9075fcc3661232d2920245e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7,
      "file": "Compfiles/Imo1961P1.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\n⊢ (a, b) ∈ ab_that_make_xyz_positive_distinct ↔\n    ∀ (x y z : ℝ), IsSolution a b x y z → 0 < x ∧ 0 < y ∧ 0 < z ∧ [x, y, z].Nodup",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1961P1.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-15T21:26:42-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f19746420ee4822c533114713613a83278b1298849e43bb4bb8df8f246a45f06"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 93,
      "start_column": 28,
      "end_line": 93,
      "end_column": 33,
      "file": "Compfiles/Imo2023P2.lean"
    },
    "debug_info": {
      "goal": "V : Type u_1\nPt : Type u_2\ninst✝⁴ : NormedAddCommGroup V\ninst✝³ : InnerProductSpace ℝ V\ninst✝² : MetricSpace Pt\ninst✝¹ : NormedAddTorsor V Pt\nhd2 : Fact (finrank ℝ V = 2)\ninst✝ : Oriented ℝ V (Fin 2)\nA B C D E L S P : Pt\nΩ ω : Sphere Pt\nperp_A_BC prll_D_BC tang_P_ω : AffineSubspace ℝ Pt\nh_acute_ABC : acute V Pt A B C\nh_AB_lt_BC : dist A B < dist A C\nh_Ω : {A, B, C} ⊆ Metric.sphere Ω.center Ω.radius\nh_S_Ω : dist S C = dist S B ∧ S ∈ Metric.sphere Ω.center Ω.radius\nh_S_A : (∡ C B S).sign = (∡ C B A).sign\nh_perp_A_BC : perp_to V Pt perp_A_BC (affineSpan ℝ {B, C}) ∧ A ∈ perp_A_BC\nh_D : D ∈ ↑perp_A_BC ∩ ↑(affineSpan ℝ {B, S})\nh_E : E ∈ ↑perp_A_BC ∩ Metric.sphere Ω.center Ω.radius\nh_E_ne_A : E ≠ A\nh_prll_D_BC : D ∈ prll_D_BC ∧ prll_D_BC ∥ affineSpan ℝ {B, C}\nh_L : L ∈ ↑prll_D_BC ∩ ↑(affineSpan ℝ {B, E})\nh_ω : {B, D, L} ⊆ Metric.sphere ω.center ω.radius\nh_P : P ∈ Metric.sphere ω.center ω.radius ∩ Metric.sphere Ω.center Ω.radius\nh_P_ne_B : P ≠ B\nh_tang_P_ω : is_tangent V Pt tang_P_ω ω ∧ P ∈ tang_P_ω\n⊢ ∃ X ∈ ↑tang_P_ω ∩ ↑(affineSpan ℝ {B, S}), ∠ B A X = ∠ X A C ∧ ∠ B A X < π / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P2.lean#L93"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2024-06-30T13:54:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7b3956fa65105267c283b43238e7aba1b2149d9c7538c3268f378ae7adfa2c20"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 26,
      "start_column": 2,
      "end_line": 26,
      "end_column": 7,
      "file": "Compfiles/Imo1985P4.lean"
    },
    "debug_info": {
      "goal": "M : Finset ℕ\nMpos : ∀ m ∈ M, 0 < m\nMdivisors : ∀ m ∈ M, ∀ (n : ℕ), Nat.Prime m ∧ n ∣ m → m ≤ 23\n⊢ ∃ M' ⊆ M, ∃ k, M'.prod id = k ^ 4",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1985P4.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T14:04:16-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ddaadab80fbd37ea7ecafef90b8ca11a9234181b1211cb0ffc42a0ce6fd3e9f8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2003P1.lean"
    },
    "debug_info": {
      "goal": "A : Finset ℕ\nhA : A ⊆ S\n⊢ ∃ t, ∀ (i j : Fin 100), i ≠ j → Disjoint {x | ∃ x_1 ∈ A, x_1 + ↑(t i) = x} {x | ∃ x_1 ∈ A, x_1 + ↑(t j) = x}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P1.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T21:07:17-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "657cd833a974ab73627c17d6691be96ce65ce940112ce4eda2d8fe1858c42ad9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 55,
      "start_column": 6,
      "end_line": 55,
      "end_column": 11,
      "file": "Compfiles/Usa2001P1.lean"
    },
    "debug_info": {
      "goal": "case h.right\nf : Fin 8 → Finset (Fin 23) :=\n  fun x =>\n    match x with\n    | 0 => {1, 2, 3, 4, 5, 6}\n    | 1 => {1, 7, 8, 9, 10, 11}\n    | 2 => {1, 12, 13, 14, 15, 16}\n    | 3 => {2, 7, 12, 17, 18, 19}\n    | 4 => {3, 8, 13, 17, 20, 21}\n    | 5 => {4, 9, 14, 17, 22, 23}\n    | 6 => {5, 10, 15, 18, 20, 22}\n    | 7 => {6, 11, 16, 19, 21, 23}\nx y : Fin min_colors\ni j : Fin 8\nhij : i ≠ j\nhx : x ∈ f i\nhy : y ∈ f i\n⊢ ¬(x ∈ f j ∧ y ∈ f j)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L55"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-05T14:18:02-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "52e3c5c580809d36090d9e8f44aef9fc4a04ff6f204aafc4fc9cd640ee363c8d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 56,
      "start_column": 4,
      "end_line": 56,
      "end_column": 9,
      "file": "Compfiles/Usa2001P1.lean"
    },
    "debug_info": {
      "goal": "case right\n⊢ min_colors ∈ lowerBounds possible_num_colors",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2001P1.lean#L56"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-20T22:49:53-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "10222a5dcca446acc32bcfe899926803a340d05b0ce2f7372eaa12ef21e4af55"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 41,
      "end_line": 38,
      "end_column": 46,
      "file": "Compfiles/Bulgaria1998P2.lean"
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace ℝ (Fin 2)\nH1 : dist D A = dist D C\nH2 : ∠ D A B = ∠ A B C\nH3 : M = midpoint ℝ B C\nx : ℝ := ∠ D A C\nthis : ∠ D A C = ∠ D C A\ny : ℝ := ∠ C A B\n⊢ ∠ D A B = x + y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-14T20:53:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "abee20d38c65c1d71797ca10be74434c936d00a85117508010ce88ea8991e006"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "Compfiles/Bulgaria1998P2.lean"
    },
    "debug_info": {
      "goal": "A B C D E M : EuclideanSpace ℝ (Fin 2)\nH1 : dist D A = dist D C\nH2 : ∠ D A B = ∠ A B C\nH3 : M = midpoint ℝ B C\nx : ℝ := ∠ D A C\nthis✝ : ∠ D A C = ∠ D C A\ny : ℝ := ∠ C A B\nthis : ∠ A B C = x + y\n⊢ ∠ B E C = ∠ D A C",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P2.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-06-28T19:13:25-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6461b41ab5e7770c2ed81776e8e350a5355af09005bfebc66e6f647615574984"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Compfiles/Imo1996P3.lean"
    },
    "debug_info": {
      "goal": "f : ℕ → ℕ\n⊢ f ∈ SolutionSet ↔ ∀ (m n : ℕ), f (m + f n) = f (f m) + f n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1996P3.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:27:20-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4b3f1401c0e8ce853e000609b98f22842c3d0077977d1d935d95b761b26a194d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 94,
      "start_column": 4,
      "end_line": 94,
      "end_column": 9,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inl.inl\nn : ℕ\nih :\n  ∀ m < n,\n    0 < m →\n      ∀ (a : Fin m → ℤ),\n        Function.Injective a →\n          (∀ (i : Fin m), 0 < a i) →\n            (∀ (i j : Fin m), i < j → a i < a j) →\n              ∀ (M : Finset ℤ),\n                (∀ m ∈ M, 0 < m) → M.card ≤ m - 1 → ∑ i, a i ∉ M → ∃ p, ∀ (i : Fin m), ∑ j ∈ {x | x ≤ i}, a (p j) ∉ M\nhn : 0 < n\na : Fin n → ℤ\nainj : Function.Injective a\napos : ∀ (i : Fin n), 0 < a i\nasorted : ∀ (i j : Fin n), i < j → a i < a j\nM : Finset ℤ\nMpos : ∀ m ∈ M, 0 < m\nMcard : M.card ≤ n - 1\nx : ℤ := ∑ i ∈ {x | ↑x < n - 1}, a i\nh1 : x ∈ M\nh2 : ∃ y, x < y ∧ y ∈ M\n⊢ ∑ i, a i ∉ M → ∃ p, ∀ (i : Fin n), ∑ j ∈ {x | x ≤ i}, a (p j) ∉ M",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L94"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dc9a55001c2ba4425e6d715a6fbacc1c81011b4a3c2a7989191d478cf45df528"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 4,
      "end_line": 95,
      "end_column": 9,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inl.inr\nn : ℕ\nih :\n  ∀ m < n,\n    0 < m →\n      ∀ (a : Fin m → ℤ),\n        Function.Injective a →\n          (∀ (i : Fin m), 0 < a i) →\n            (∀ (i j : Fin m), i < j → a i < a j) →\n              ∀ (M : Finset ℤ),\n                (∀ m ∈ M, 0 < m) → M.card ≤ m - 1 → ∑ i, a i ∉ M → ∃ p, ∀ (i : Fin m), ∑ j ∈ {x | x ≤ i}, a (p j) ∉ M\nhn : 0 < n\na : Fin n → ℤ\nainj : Function.Injective a\napos : ∀ (i : Fin n), 0 < a i\nasorted : ∀ (i j : Fin n), i < j → a i < a j\nM : Finset ℤ\nMpos : ∀ m ∈ M, 0 < m\nMcard : M.card ≤ n - 1\nx : ℤ := ∑ i ∈ {x | ↑x < n - 1}, a i\nh1 : x ∈ M\nh2 : ¬∃ y, x < y ∧ y ∈ M\n⊢ ∑ i, a i ∉ M → ∃ p, ∀ (i : Fin n), ∑ j ∈ {x | x ≤ i}, a (p j) ∉ M",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6909dde353f67211a38189935267ceaf80fdb371a40c56e75291455d7f241d4f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 8,
      "end_line": 205,
      "end_column": 13,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 0 < n\na : Fin n → ℤ\nainj : Function.Injective a\napos : ∀ (i : Fin n), 0 < a i\nasorted : ∀ (i j : Fin n), i < j → a i < a j\nM : Finset ℤ\nMpos : ∀ m ∈ M, 0 < m\nMcard : M.card ≤ n - 1\nx : ℤ := ∑ i ∈ {x | ↑x < n - 1}, a i\nh1 : x ∉ M\ny : ℤ\nhy1 : x < y\nhy2 : y ∈ M\nM' : Finset ℤ := {z ∈ M | z ≤ x}\nhyM' : y ∉ M'\nh3 : M'.card ≤ n - 2\nhM : ∑ i, a i ∉ M\nh7 : M'.card > 0\nn' : ℕ := n - 1\na' : Fin n' → ℤ := fun i => a ⟨↑i, ⋯⟩\nainj' : Function.Injective a'\napos' : ∀ (i : Fin n'), 0 < a' i\nasorted' : ∀ (i j : Fin n'), i < j → a' i < a' j\nMpos' : ∀ m ∈ M', 0 < m\nhM' : ∑ i, a' i ∉ M'\np' : Equiv.Perm (Fin n')\nhp : ∀ (i : Fin n'), ∑ j ∈ {x | x ≤ i}, a' (p' j) ∉ M'\np : Equiv.Perm (Fin n) := extendPerm p' ⋯\ni : Fin n\nh30 : ↑i < n'\ni' : Fin n' := ⟨↑i, h30⟩\nh31 : ¬(∑ j ∈ {x | x ≤ i'}, a' (p' j) ∈ M ∧ ∑ j ∈ {x | x ≤ i'}, a' (p' j) ≤ x)\nh35 : n' ≤ n\n⊢ ∑ j ∈ {x | x ≤ i'}, a' (p' j) = ∑ j ∈ {x | x ≤ i}, a (p j)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-27T11:09:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9166e5fdd3c527a41fb88d6b8da5ca6cebe2d8a26d68ab9baaf6d507f1235e6f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 229,
      "start_column": 8,
      "end_line": 229,
      "end_column": 13,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 0 < n\na : Fin n → ℤ\nainj : Function.Injective a\napos : ∀ (i : Fin n), 0 < a i\nasorted : ∀ (i j : Fin n), i < j → a i < a j\nM : Finset ℤ\nMpos : ∀ m ∈ M, 0 < m\nMcard : M.card ≤ n - 1\nx : ℤ := ∑ i ∈ {x | ↑x < n - 1}, a i\nh1 : x ∉ M\ny : ℤ\nhy1 : x < y\nhy2 : y ∈ M\nM' : Finset ℤ := {z ∈ M | z ≤ x}\nhyM' : y ∉ M'\nh3 : M'.card ≤ n - 2\nhM : ∑ i, a i ∉ M\nh7 : M'.card > 0\nn' : ℕ := n - 1\na' : Fin n' → ℤ := fun i => a ⟨↑i, ⋯⟩\nainj' : Function.Injective a'\napos' : ∀ (i : Fin n'), 0 < a' i\nasorted' : ∀ (i j : Fin n'), i < j → a' i < a' j\nMpos' : ∀ m ∈ M', 0 < m\nhM' : ∑ i, a' i ∉ M'\np' : Equiv.Perm (Fin n')\nhp : ∀ (i : Fin n'), ∑ j ∈ {x | x ≤ i}, a' (p' j) ∉ M'\np : Equiv.Perm (Fin n) := extendPerm p' ⋯\ni : Fin n\nh30 : ↑i < n'\ni' : Fin n' := ⟨↑i, h30⟩\nh31 : ¬(∑ j ∈ {x | x ≤ i}, a (p j) ∈ M ∧ ∑ j ∈ {x | x ≤ i}, a (p j) ≤ x)\nh35 : n' ≤ n\nh33 : ∑ j ∈ {x | x ≤ i'}, a' (p' j) = ∑ j ∈ {x | x ≤ i}, a (p j)\n⊢ ∑ j ∈ {x | x ≤ i}, a (p j) ≤ x",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-25T14:14:36-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "511c2d114eb89f65073e96eabcc3d71f98579702dd28c81bf5a23962d0a8a2db"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 248,
      "start_column": 4,
      "end_line": 248,
      "end_column": 9,
      "file": "Compfiles/Imo2009P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inr.inr\nn : ℕ\nih :\n  ∀ m < n,\n    0 < m →\n      ∀ (a : Fin m → ℤ),\n        Function.Injective a →\n          (∀ (i : Fin m), 0 < a i) →\n            (∀ (i j : Fin m), i < j → a i < a j) →\n              ∀ (M : Finset ℤ),\n                (∀ m ∈ M, 0 < m) → M.card ≤ m - 1 → ∑ i, a i ∉ M → ∃ p, ∀ (i : Fin m), ∑ j ∈ {x | x ≤ i}, a (p j) ∉ M\nhn : 0 < n\na : Fin n → ℤ\nainj : Function.Injective a\napos : ∀ (i : Fin n), 0 < a i\nasorted : ∀ (i j : Fin n), i < j → a i < a j\nM : Finset ℤ\nMpos : ∀ m ∈ M, 0 < m\nMcard : M.card ≤ n - 1\nx : ℤ := ∑ i ∈ {x | ↑x < n - 1}, a i\nh1 : x ∉ M\nh2 : ¬∃ y, x < y ∧ y ∈ M\n⊢ ∑ i, a i ∉ M → ∃ p, ∀ (i : Fin n), ∑ j ∈ {x | x ≤ i}, a (p j) ∉ M",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2009P6.lean#L248"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T21:41:42-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "22383062318de48d44b3ed916cd7e8aa0f82c0a61a0b60abfcc633ebc6148c22"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 66,
      "start_column": 6,
      "end_line": 66,
      "end_column": 11,
      "file": "Compfiles/Usa1998P4.lean"
    },
    "debug_info": {
      "goal": "case h\ns : chessboard\n⊢ List.foldl recolor_rect start_coloring\n      (List.map (fun x => { x := 2 * x, y := 0, width := 1, height := 98 }) (List.range 49) ++\n        List.map (fun y => { x := 0, y := 2 * y, width := 98, height := 1 }) (List.range 49))\n      s =\n    0",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-14T08:31:05-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9ea8c2f130bba433b8a37b17018ff76e4fc61894dd2c1de84dcf5a50d8d06cca"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 71,
      "start_column": 4,
      "end_line": 71,
      "end_column": 9,
      "file": "Compfiles/Usa1998P4.lean"
    },
    "debug_info": {
      "goal": "case right.intro.intro\nn : ℕ\nrs : List Rectangle\nhrs : all_same_color (List.foldl recolor_rect start_coloring rs)\nhrsl : rs.length = n\n⊢ min_clicks ≤ n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa1998P4.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-07-12T20:46:44-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d1ba93a4731fbc74da9899276cada366ce2dc3a3b2d23e12a9e31354762b7b53"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Imo1998P4.lean"
    },
    "debug_info": {
      "goal": "a b : ℕ\n⊢ 0 < a ∧ 0 < b ∧ a * b ^ 2 + b + 7 ∣ a ^ 2 * b + a + b ↔ (a, b) ∈ solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P4.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:45:18-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fc70b6c2b5fc0eb454b9dd3b62f2514672e8bdca0803d4e335cd505dae7ed741"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Imo2011P5.lean"
    },
    "debug_info": {
      "goal": "f : ℤ → ℤ\nfpos✝ : ∀ (n : ℤ), 0 < f n\nfpos : ∀ (m n : ℤ), f (m - n) ∣ f m - f n\n⊢ ∀ (m n : ℤ), f m ≤ f n → f m ∣ f n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2011P5.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-03T09:55:58-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "50b1281e2f646430ce0f9e5ea999f1c4147a0c038bd67910c7606ed09580f437"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 44,
      "end_line": 28,
      "end_column": 49,
      "file": "Compfiles/Imo1978P6.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : n = 1978\nC : Fin n → Fin 6\n⊢ ∃ j i k, C i = C j ∧ C j = C k ∧ ↑i + 1 + ↑k + 1 = ↑j + 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1978P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f8f3712c528b4d17d5628a952c37a68e116ac06f2f630787c920974aa4f4d0dc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo1971P5.lean"
    },
    "debug_info": {
      "goal": "m : ℕ\n⊢ ∃ S, S.Finite ∧ ∀ s ∈ S, Nat.card ↑{t | dist s t = 1} = m",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P5.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-22T17:20:29-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e8b8b50bcfe121c3fe635582a739ee84b52789442cd0762620d5e4817bd9294c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 55,
      "end_line": 28,
      "end_column": 60,
      "file": "Compfiles/Imo1976P6.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nh₀ : u 0 = 2\nh₁ : u 1 = 5 / 2\nh₂ : ∀ (n : ℕ), u (n + 2) = u (n + 1) * (u n ^ 2 - 2) - u 1\n⊢ ∀ (n : ℕ), ↑⌊u n⌋ = 2 ^ ((2 ^ n - (-1) ^ n) / 3)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1976P6.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c7ac912b5dab64e31d96d871a476349ee992c77a9758aaf327ed29ca8e5b6207"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 38,
      "end_line": 36,
      "end_column": 43,
      "file": "Compfiles/Imo2010P3.lean"
    },
    "debug_info": {
      "goal": "case h\ng : ℤ>0 → ℤ>0\nc : ℤ>0\nhc : ∀ (x : ℤ>0), g x = x + c\nm n : ℤ>0\n⊢ (m + c + n) * (n + c + m) = (m + n + c) * (m + n + c)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-01-21T08:16:08-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "94668c81e3549dfecb4822c85b43a18d85126a7d88d79f594fe3876d79f93f9a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 4,
      "end_line": 37,
      "end_column": 9,
      "file": "Compfiles/Imo2010P3.lean"
    },
    "debug_info": {
      "goal": "case mpr\ng : ℤ>0 → ℤ>0\n⊢ (∀ (m n : ℤ>0), IsSquare ((g m + n) * (g n + m))) → g ∈ SolutionSet",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2010P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-23T10:40:22-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c54f7b36c32bfd3312985b07d2f481cb30e8ebd526c7aa3b0b97c9600efd1f21"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo2001P3.lean"
    },
    "debug_info": {
      "goal": "Girl Boy Problem : Type\ninst✝² : Finite Girl\ninst✝¹ : Finite Boy\ninst✝ : Finite Problem\ngirl_card : Nat.card Girl = 21\nboy_card : Nat.card Boy = 21\ngirl_solved : Girl → Problem → Prop\nboy_solved : Boy → Problem → Prop\nhG : ∀ (g : Girl), {p | girl_solved g p}.ncard ≤ 6\nhB : ∀ (b : Boy), {p | boy_solved b p}.ncard ≤ 6\nhp : ∀ (g : Girl) (b : Boy), {p | girl_solved g p ∧ boy_solved b p}.ncard ≤ 1\n⊢ ∃ p, 3 ≤ {g | girl_solved g p}.ncard ∧ 3 ≤ {g | boy_solved g p}.ncard",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P3.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-27T13:39:48-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0703412ccfffece0f77a04b2211c7c6cf694e1949d9f18c6cc54e76838e4e300"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7,
      "file": "Compfiles/Imo2016P4.lean"
    },
    "debug_info": {
      "goal": "⊢ IsLeast {b | ∃ a, Fragrant {p | ∃ i < b, ↑p = P (a + 1 + ↑i)}} Solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2016P4.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-11T08:43:20-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5ffeaafd6cde0607ff44006b6e318adc71b60ab65625f327fe3ca6855e65387b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9,
      "file": "Compfiles/Imo2018P2.lean"
    },
    "debug_info": {
      "goal": "case mp.intro\nn : ℕ\nhn1 : 3 ≤ n\nhn2 : 3 ∣ n\n⊢ ∃ a, ∀ (i : ZMod n), a i * a (i + 1) = a (i + 2)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T08:47:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "af0d7a722687c06c555b9498c50a7d43b531862294e4c0713eaec5dcc6a310ca"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9,
      "file": "Compfiles/Imo2018P2.lean"
    },
    "debug_info": {
      "goal": "case mpr\nn : ℕ\n⊢ (3 ≤ n ∧ ∃ a, ∀ (i : ZMod n), a i * a (i + 1) = a (i + 2)) → n ∈ solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P2.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-05T08:47:40-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "28df25ad37b7fb2f16cd4f8fb7a0dbd384f98eb7b93f0373f54a4a63f0e39075"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/Imo1998P3.lean"
    },
    "debug_info": {
      "goal": "k : ℕ\n⊢ k ∈ solution_set ↔ ∃ n, (n ^ 2).divisors.card = k * n.divisors.card",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1998P3.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T10:57:30-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4174712cf034663847198231d1aa7c3c55804dc7ae278d00dbf8b7d42ab9b70f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "x : ℕ\nhp : 0 < x\nhx : Even x\n⊢ x.maxPowDiv / 2 + 1 = x.maxPowDiv",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2b7a59febd73e6a95234d5262f71307061ac70c37b24ad316db2dae8eef958c7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 323,
      "start_column": 6,
      "end_line": 323,
      "end_column": 11,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "case a.intro.intro\na : ℕ+\nN : ℕ\nhN : 1 < N\nms' : ℕ\nih :\n  ∀ (s0 : State N),\n    (∀ (i : Fin N), Nat.maxPowDiv 2 ↑(s0.board i) < Nat.maxPowDiv 2 ↑a) →\n      ∑ i, Nat.maxPowDiv 2 ↑(s0.board i) = ms' → EndInevitableIn a N ms' s0\nb0 : Blackboard N\nt0 : Player\nhd : ∀ (i : Fin N), Nat.maxPowDiv 2 ↑({ board := b0, turn := Player.Bob }.board i) < Nat.maxPowDiv 2 ↑a\nhms : ∑ i, Nat.maxPowDiv 2 ↑({ board := b0, turn := Player.Bob }.board i) = ms' + 1\ns : State N\ni : Fin N\nhie : Even ↑(b0 i)\nhis : s = { board := Function.update b0 i ⟨↑(b0 i) / 2, ⋯⟩, turn := Player.Alice }\n⊢ EndInevitableIn a N ms' s",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L323"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "588abd4ec33720ef7944b078f097d6791dcea8f2d8048b615439550a5e648590"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 344,
      "start_column": 4,
      "end_line": 344,
      "end_column": 9,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "case a.intro.intro.a.intro.intro\na : ℕ+\nN : ℕ\nhN : 1 < N\nms' : ℕ\nb0 : Blackboard N\nt0 : Player\nhd : ∀ (i : Fin N), Nat.maxPowDiv 2 ↑({ board := b0, turn := Player.Alice }.board i) < Nat.maxPowDiv 2 ↑a\nb1 : Blackboard N\nhms : ∑ i, Nat.maxPowDiv 2 ↑(b1 i) = ms' + 1\ni : Fin N\nhi : b1 = Function.update b0 i (b0 i + a)\ns2 : State N\nj : Fin N\nhje : Even ↑(b1 j)\nhj : s2 = { board := Function.update b1 j ⟨↑(b1 j) / 2, ⋯⟩, turn := Player.Alice }\nih :\n  (∀ (i : Fin N), Nat.maxPowDiv 2 ↑(s2.board i) < Nat.maxPowDiv 2 ↑a) →\n    ∑ i, Nat.maxPowDiv 2 ↑(s2.board i) = ms' → EndInevitableIn a N ms' s2\n⊢ EndInevitableIn a N ms' s2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L344"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-07-17T08:59:40-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "93780d60039058a18ddb1b49b621c73a758165f125b921490dbf849fc282b82f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 366,
      "start_column": 2,
      "end_line": 366,
      "end_column": 7,
      "file": "Compfiles/Usa2023P4.lean"
    },
    "debug_info": {
      "goal": "case inr\na : ℕ+\nN : ℕ\nhN✝ : 0 < N\nb0 : Blackboard N\nhe : BobCanForceEnd a N { board := b0, turn := Player.Alice }\nhN : 1 < N\n⊢ EndInevitable a N { board := b0, turn := Player.Alice }",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P4.lean#L366"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-12T16:07:14-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "cab7d541738fcdc4bd3856350d9101fd61352a5b0cc217b486a058b2b98e2e8e"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2003P2.lean"
    },
    "debug_info": {
      "goal": "a b : ℤ\n⊢ (a, b) ∈ solution_set ↔ 0 < a ∧ a < b ∧ ∃ c, 0 < c ∧ c * (2 * a * b ^ 2 - b ^ 3 + 1) = a ^ 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2003P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-09T08:45:13-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6531c8f669557a8956b5774d758dad925c00b224eb3f12393efc8ccade689b32"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 115,
      "start_column": 2,
      "end_line": 115,
      "end_column": 7,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "α : Type\ninst✝ : Fintype α\n⊢ Fintype.card { s // Even s.card } = 2 ^ (Fintype.card α - 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "25f2f449dcf4b011033f6e1c59d8643a4d940613ae17c82c72d77fababcd49f7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 121,
      "start_column": 40,
      "end_line": 121,
      "end_column": 45,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\n⊢ ∀ (i : Fin n), 0 < c i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5dbbd31b4b8a8c5fb210f8c40db26ab0212d73c391ec4b6dcf100ece3c1bbe71"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 122,
      "start_column": 39,
      "end_line": 122,
      "end_column": 44,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\n⊢ ∑ i, c i = k",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:45:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d4a3dc0886c39d91903f92ca1dbef2ea0a977839db922db8970e9a8e93e6014f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 132,
      "start_column": 40,
      "end_line": 132,
      "end_column": 45,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := ↑f ⟨↑i, ⋯⟩\n⊢ ↑y < n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5a2ed4b14f561e1c81fd5c6d9635d04f7de0c1c6331b720be482057c227d31a3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 134,
      "start_column": 21,
      "end_line": 134,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := ↑f ⟨↑i, ⋯⟩\ny' : Fin n := ⟨↑y, ⋯⟩\nys : { s // Even s.card } := cs y'\n⊢ i ∈ {j | ↑f j = ⟨↑y', ⋯⟩}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dbf7b4453189af85ba47ca280e7dcf649fdfb0c53d3a45d008b444f864219027"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 134,
      "start_column": 57,
      "end_line": 134,
      "end_column": 62,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ni : Fin k\ny : Fin (2 * n) := ↑f ⟨↑i, ⋯⟩\ny' : Fin n := ⟨↑y, ⋯⟩\nys : { s // Even s.card } := cs y'\n⊢ ↑y + n < 2 * n",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4b376c21f9ce6fc057fcaafff54432ca6470c8fe26a02ffdb3b93f71c7e7cd6d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.28220 ∈ ↑ys then ?m.29219 else y\n⊢ NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
    },
    "id": "f8533dd0a3f55533c2477a49d0a3820d5ce9965da43dcffbe8e76b5b3654e1ce"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "b3732b993f744ef833daad18119fac3df179f1e0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.28220 ∈ ↑ys then ?m.29219 else y\nhg1 : NSequence n k g1 := sorry\n⊢ ⟨g1, hg1⟩ ∈ {g | ψ n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/b3732b993f744ef833daad18119fac3df179f1e0/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-03T01:31:22.854018+00:00"
    },
    "id": "2a7d61deffe3d547be4916f255e97bbe931e7434f1991d206a653226c163286d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 147,
      "start_column": 4,
      "end_line": 147,
      "end_column": 9,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "case h.e_a\nn k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\np : S → ↑{g | ψ n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := ↑f ⟨↑i, ⋯⟩;\n      let y' := ⟨↑y, ⋯⟩;\n      let ys := cs y';\n      if ⟨i, ⋯⟩ ∈ ↑ys then ⟨↑y + n, ⋯⟩ else y;\n    let hg1 := ⋯;\n    let hgg := ⋯;\n    ⟨⟨g1, hg1⟩, hgg⟩\na : Fin n\n⊢ (Finset.filter (Membership.mem {j | ↑f j = ⟨↑a, ⋯⟩}) Finset.univ).card = c a",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L147"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-05-02T10:48:28-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8a987bb8765c2df88e8b6b47d6fb8cefc854d0546fe560237a48614627c2a1ea"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 167,
      "start_column": 6,
      "end_line": 167,
      "end_column": 11,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "case left\nn k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\np : S → ↑{g | ψ n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := ↑f ⟨↑i, ⋯⟩;\n      let y' := ⟨↑y, ⋯⟩;\n      let ys := cs y';\n      if ⟨i, ⋯⟩ ∈ ↑ys then ⟨↑y + n, ⋯⟩ else y;\n    let hg1 := ⋯;\n    let hgg := ⋯;\n    ⟨⟨g1, hg1⟩, hgg⟩\nScard : Fintype.card S = ∏ i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\nx y : S\nhxy : p x = p y\n⊢ x = y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "187544c61cc20ac3ab3cadc7ed93b0df5e5c897b9d6d0cc3acd67665cc3a4953"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 169,
      "start_column": 6,
      "end_line": 169,
      "end_column": 11,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "case right.mk\nn k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\np : S → ↑{g | ψ n k g = f} :=\n  fun cs =>\n    let g1 := fun i =>\n      let y := ↑f ⟨↑i, ⋯⟩;\n      let y' := ⟨↑y, ⋯⟩;\n      let ys := cs y';\n      if ⟨i, ⋯⟩ ∈ ↑ys then ⟨↑y + n, ⋯⟩ else y;\n    let hg1 := ⋯;\n    let hgg := ⋯;\n    ⟨⟨g1, hg1⟩, hgg⟩\nScard : Fintype.card S = ∏ i, 2 ^ (c i - 1)\nScard' : Fintype.card S = 2 ^ (k - n)\ng : { f // NSequence n k f }\nhg : g ∈ {g | ψ n k g = f}\n⊢ ∃ a, p a = ⟨g, hg⟩",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T16:45:32-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c1b370ae45f32b205ad252022edbd62aa344cdce9a0ab4ffa024cc3c4cb93f45"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "Compfiles/Usa2017P5.lean"
    },
    "debug_info": {
      "goal": "c : ℝ\n⊢ c ∈ solution_set ↔\n    0 < c ∧\n      ∃ l,\n        (Set.range l).Finite ∧\n          (∀ (p : ℤ × ℤ), 0 < l p) ∧ ∀ {p1 p2 : ℤ × ℤ}, p1 ≠ p2 → l p1 = l p2 → dist ↑(l p1) ↑(l p2) ≤ c ^ l p1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2017P5.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T15:48:13-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c3050863d613aad47b9dfd678f561f1cbafeaf06591cd31a80abc13bb8ce12eb"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo2004P2.lean"
    },
    "debug_info": {
      "goal": "P : Polynomial ℝ\n⊢ P ∈ SolutionSet ↔\n    ∀ (a b c : ℝ),\n      a * b + b * c + c * a = 0 →\n        Polynomial.eval (a - b) P + Polynomial.eval (b - c) P + Polynomial.eval (c - a) P =\n          2 * Polynomial.eval (a + b + c) P",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2004P2.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-06T15:22:50-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9d3b5c062b3acb3eaa91fe7a425835d4cee7d144ccddaef7bfd996a58bdc3fb0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "Compfiles/Imo1976P4.lean"
    },
    "debug_info": {
      "goal": "⊢ IsGreatest {n | ∃ s, ∑ i ∈ s, i = 1976 ∧ ∏ i ∈ s, i = n} solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1976P4.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-26T10:31:58-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59b56ee6f40ffa4b324b92b4e5e51fef346312664d501e57fbf096b4046ee589"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 76,
      "end_line": 33,
      "end_column": 81,
      "file": "Compfiles/Imo1979P5.lean"
    },
    "debug_info": {
      "goal": "a : ℝ\n⊢ (∃ x1 x2 x3 x4 x5,\n      x1 ≥ 0 ∧\n        x2 ≥ 0 ∧\n          x3 ≥ 0 ∧\n            x4 ≥ 0 ∧\n              x5 ≥ 0 ∧\n                x1 + 2 * x2 + 3 * x3 + 4 * x4 + 5 * x5 = a ∧\n                  x1 + 2 ^ 3 * x2 + 3 ^ 3 * x3 + 4 ^ 3 * x4 + 5 ^ 3 * x5 = a ^ 2 ∧\n                    x1 + 2 ^ 5 * x2 + 3 ^ 5 * x3 + 4 ^ 5 * x4 + 5 ^ 5 * x5 = a ^ 3) ↔\n    a ∈ solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1979P5.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "a685641c3d0c1275d5dfd657aa7baf442f8004ced215bf8d31f62da6e68f9cd6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 69,
      "start_column": 2,
      "end_line": 69,
      "end_column": 7,
      "file": "Compfiles/Imo2018P3.lean"
    },
    "debug_info": {
      "goal": "case intro\nt : antipascal_triangle 2018\nht : ∀ (n : ℕ), 1 ≤ n → n ≤ ∑ i ∈ Finset.range 2018, (i + 1) → ∃ r ≤ 2018, ∃ c < r, t.f { row := r, col := c } = n\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2018P3.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-09-16T20:32:12-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b74da3c35c3c198ee6324b495f922b684119eb02f5199c5f7a3c268ac569586"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 89,
      "end_line": 33,
      "end_column": 94,
      "file": "Compfiles/Imo1995P4.lean"
    },
    "debug_info": {
      "goal": "x : ℕ → ℝ\nh : x 0 = x 1995\nh1 : ∀ (i : ℕ), 0 < i ∧ i ≤ 1995 → x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i\n⊢ x 0 ≤ solution ∧\n    ∃ x, x 0 = solution ∧ x 0 = x 1995 ∧ ∀ (i : ℕ), 0 < i ∧ i ≤ 1995 → x (i - 1) + 2 / x (i - 1) = 2 * x i + 1 / x i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1995P4.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8bf203733f0794e1e22f4376adcadd04cad7b415bd6860f73e1236dceb463e5c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 42,
      "start_column": 5,
      "end_line": 42,
      "end_column": 10,
      "file": "Compfiles/Usa2024P2.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\n⊢ IsLeast {k | ∃ S, Good S ∧ k = {z | InAtLeastKSubsets S k z}.ncard} solution",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2024P2.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-29T08:54:06-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8c59bcdefbeba56749ef385508b5e62691ef4208163d7e2bbeb2954a29dbe8a2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 21,
      "end_line": 34,
      "end_column": 26,
      "file": "Compfiles/Imo1975P2.lean"
    },
    "debug_info": {
      "goal": "a : ℕ → ℤ\napos : ∀ (i : ℕ), 0 < a i\nha : ∀ (i : ℕ), a i < a (i + 1)\n⊢ ∀ (i n0 : ℕ), ∃ n, n0 ≤ n ∧ ∃ r s j, a n = ↑r * a i + ↑s * a j ∧ i < j ∧ 0 < r ∧ 0 < s",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1975P2.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ded0abf7b97be9573a23a6136eb84239d6cc648cd2d8fa92ea313752baabf7a3"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 4,
      "end_line": 34,
      "end_column": 9,
      "file": "Compfiles/Imo2023P1.lean"
    },
    "debug_info": {
      "goal": "case h.mp\nx : ℕ\n⊢ x ∈ solution_set → x ∈ {n | 1 < n ∧ ¬Nat.Prime n ∧ P n}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "15e0848c7784ad9fd15e9f10c392790899bf89491e42fa932bf9c6218e752563"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9,
      "file": "Compfiles/Imo2023P1.lean"
    },
    "debug_info": {
      "goal": "case h.mpr\nx : ℕ\n⊢ x ∈ {n | 1 < n ∧ ¬Nat.Prime n ∧ P n} → x ∈ solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P1.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T06:07:49-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b3826aca3d84084fabd8dd55d0a97c4b07cbfb403dbfb879c501370e0fd9de29"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 40,
      "start_column": 4,
      "end_line": 40,
      "end_column": 9,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inl\nb c : ℕ\nhb : 0 < b\nhc : 0 < c\na : ℕ\nih : ∀ m < a, 0 < m → m ^ 4 = b ^ 4 + c ^ 2 → False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\nb_odd : Odd b\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "aed6dfad082bb1ce663caedfa16c651d6eab2f5a047a2d7bbaa0a6cfc48b85dc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 41,
      "start_column": 4,
      "end_line": 41,
      "end_column": 9,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "case ind.inr\nb c : ℕ\nhb : 0 < b\nhc : 0 < c\na : ℕ\nih : ∀ m < a, 0 < m → m ^ 4 = b ^ 4 + c ^ 2 → False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_odd : Odd c\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "191cdf08156dc398f4e2892cbb4b3cd8c491ff039c41915c75bd9802bb7d31bc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 32,
      "end_line": 36,
      "end_column": 37,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "b c : ℕ\nhb : 0 < b\nhc : 0 < c\na : ℕ\nih : ∀ m < a, 0 < m → m ^ 4 = b ^ 4 + c ^ 2 → False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\n⊢ a.gcd b = 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3c6556c5f19ca1f0a6ef35290962cea6d99a869185c207fb21f12c8c8178c126"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 26,
      "end_line": 38,
      "end_column": 31,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "b c : ℕ\nhb : 0 < b\nhc : 0 < c\na : ℕ\nih : ∀ m < a, 0 < m → m ^ 4 = b ^ 4 + c ^ 2 → False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\n⊢ Odd a",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "22aa66b842e36ecafe1cec11b3d1e34ab3d9e293af198e33c21c897cfda16502"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 26,
      "end_line": 39,
      "end_column": 31,
      "file": "Compfiles/Bulgaria1998P6.lean"
    },
    "debug_info": {
      "goal": "b c : ℕ\nhb : 0 < b\nhc : 0 < c\na : ℕ\nih : ∀ m < a, 0 < m → m ^ 4 = b ^ 4 + c ^ 2 → False\nha : 0 < a\nh : a ^ 4 = b ^ 4 + c ^ 2\nhab : a.gcd b = 1\nc_even : Even c\na_odd : Odd a\n⊢ Odd b",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P6.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-12-13T12:48:09-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "59560b104c7c4c5cb16982141452671dd3ad1f3ce493c8111c60d34637729f4a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 4,
      "end_line": 34,
      "end_column": 9,
      "file": "Compfiles/Imo2012P2.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 3 ≤ n\na : { x // x ∈ Finset.Icc 2 n } → ℝ\napos : ∀ (i : { x // x ∈ Finset.Icc 2 n }), 0 < a i\naprod : ∏ i, a i = 1\n⊢ ∀ (i : { x // x ∈ Finset.Icc 2 n }), (1 + a i) ^ ↑i ≤ ↑↑i ^ ↑i / (↑↑i - 1) ^ (↑i - 1) * a i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2012P2.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-27T20:50:55-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "14bffe1545d568c60a8bd1e5474cedf36449dcf62cd176dfe6356f09b0b9f556"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7,
      "file": "Compfiles/Imo2012P2.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 3 ≤ n\na : { x // x ∈ Finset.Icc 2 n } → ℝ\napos : ∀ (i : { x // x ∈ Finset.Icc 2 n }), 0 < a i\naprod : ∏ i, a i = 1\nh1 : ∀ (i : { x // x ∈ Finset.Icc 2 n }), (1 + a i) ^ ↑i ≤ ↑↑i ^ ↑i / (↑↑i - 1) ^ (↑i - 1) * a i\n⊢ ↑n ^ n < ∏ i, (1 + a i) ^ ↑i",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2012P2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T17:59:59-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d5baea445d201ef1efdbb406cb680700cd2bc41d8a878b078cf84922f6bd9c79"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 65,
      "end_line": 27,
      "end_column": 70,
      "file": "Compfiles/Imo1983P5.lean"
    },
    "debug_info": {
      "goal": "⊢ ∃ S, S.card = 1983 ∧ (∀ x ∈ S, x ≤ 10 ^ 5) ∧ ∀ x ∈ S, ∀ y ∈ S, ∀ z ∈ S, x < y ∧ y < z → x + z ≠ 2 * y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1983P5.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "119f8cd3b9ae6850e75d18ffff7fa50363e47d5b3be618e6d1af3334e4c9c3be"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 52,
      "start_column": 2,
      "end_line": 52,
      "end_column": 7,
      "file": "Compfiles/Imo2023P5.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\n⊢ IsGreatest {k | ∀ (j : JapaneseTriangle n), ∃ p, k ≤ Fintype.card { i // j.red i = p.steps i }} (solution_value n)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P5.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-23T09:39:50-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "10ebc2192d3a75b2f963bd3f61b4fdf1e4e2fac123ec0737279c201da26646bc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo1983P6.lean"
    },
    "debug_info": {
      "goal": "T : Affine.Triangle ℝ (EuclideanSpace ℝ (Fin 2))\na b c : ℝ\nha : a = dist (T.points 1) (T.points 2)\nhb : b = dist (T.points 2) (T.points 0)\nhc : c = dist (T.points 0) (T.points 1)\n⊢ 0 ≤ a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) ∧\n    (0 = a ^ 2 * b * (a - b) + b ^ 2 * c * (b - c) + c ^ 2 * a * (c - a) ↔ EqualityCondition a b c)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1983P6.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-05-24T09:06:54-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3d5a4451c801f87b1e7155be7e2701b268ef4ca0ef4d806d1a3bb331986c8ef2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo2017P6.lean"
    },
    "debug_info": {
      "goal": "S : Finset (ℤ × ℤ)\nhS : ∀ s ∈ S, gcd s.1 s.2 = 1\n⊢ ∃ n, 0 < n ∧ ∃ a, ∀ s ∈ S, ∑ i ∈ Finset.range n, a i * s.1 ^ i * s.2 ^ (n - i) = 1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2017P6.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-02T08:56:28-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e626a51d37ef57cb9d3967c06b073e61b56fd29b8873090de00761e2a4aeb573"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 23,
      "start_column": 63,
      "end_line": 23,
      "end_column": 68,
      "file": "Compfiles/Imo1971P3.lean"
    },
    "debug_info": {
      "goal": "⊢ {(n, m) | (2 ^ n - 3).Coprime (2 ^ m - 3)}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1971P3.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "18493d62eebe92b1ad1c9b0b55228abc8759946c42a14d9dc2802344cbfee998"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 45,
      "start_column": 2,
      "end_line": 45,
      "end_column": 7,
      "file": "Compfiles/Imo2001P1.lean"
    },
    "debug_info": {
      "goal": "t : Affine.Triangle ℝ (EuclideanSpace ℝ (Fin 2))\n⊢ ∡ (Affine.Simplex.circumcenter t) (t.points 2) (t.points 1) = ↑Real.pi - ∡ (t.points 1) (t.points 0) (t.points 2)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T20:28:24-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7b4a585c6f9e62a2df1aaa6fa81fe56ae506abc18da534a26d621188e0892c77"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 60,
      "start_column": 2,
      "end_line": 60,
      "end_column": 7,
      "file": "Compfiles/Imo2001P1.lean"
    },
    "debug_info": {
      "goal": "A B C : EuclideanSpace ℝ (Fin 2)\nhABC : AffineIndependent ℝ ![A, B, C]\nhAcuteA : ∠ C A B < Real.pi / 2\nhAcuteB : ∠ A B C < Real.pi / 2\nhAcuteC : ∠ B C A < Real.pi / 2\nhAB : ∠ A B C + Real.pi / 6 ≤ ∠ B C A\nABC : Affine.Triangle ℝ (EuclideanSpace ℝ (Fin 2)) := { points := ![A, B, C], independent := hABC }\nP : ↥(affineSpan ℝ {B, C}) := (EuclideanGeometry.orthogonalProjection (affineSpan ℝ {B, C})) A\n⊢ ∠ C A B + ∠ C (Affine.Simplex.circumcenter ABC) ↑P < Real.pi / 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2001P1.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-29T13:45:33-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ee845fa1f900c8e260a593aed3969dec328d6ffd42cbd9035c04ad975e075edc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo2017P1.lean"
    },
    "debug_info": {
      "goal": "a0 : ℕ\n⊢ a0 ∈ solution_set ↔ ∃ A, {n | a a0 n = A}.Infinite",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2017P1.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-02T09:41:34-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1d43200cfbd12ea0c73995ad0a7d4f5ec72ebb2f32f40ac5b062a020740cda6a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 35,
      "start_column": 33,
      "end_line": 35,
      "end_column": 38,
      "file": "Compfiles/Imo1982P4.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 0 < n\nhxy : ∃ x y, x ^ 3 - 3 * x * y ^ 2 + y ^ 3 = ↑n\n⊢ n ≠ 2891 ∧\n    ∃ x1 x2 x3 y1 y2 y3,\n      x1 ^ 3 - 3 * x1 * y1 ^ 2 + y1 ^ 3 = ↑n ∧\n        x2 ^ 3 - 3 * x2 * y2 ^ 2 + y2 ^ 3 = ↑n ∧\n          x3 ^ 3 - 3 * x3 * y3 ^ 2 + y3 ^ 3 = ↑n ∧ (x1 ≠ x2 ∨ y1 ≠ y2) ∧ (x1 ≠ x3 ∨ y1 ≠ y3) ∧ (x2 ≠ x3 ∨ y2 ≠ y3)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1982P4.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "3e39b2ceda3e",
      "blame_date": "2024-06-06T17:35:14+08:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7179f0d078cbbbc30b96a56279c569d64bf8666c598defa2cb1d48cb379e9bbc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "Compfiles/Usa2008P1.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 0 < n\n⊢ ∃ k,\n    (∀ (i : Fin (n + 1)), 1 < k i) ∧\n      (∀ (i j : Fin (n + 1)), i ≠ j → (k i).Coprime (k j)) ∧ ∃ m, ∏ i, k i = 1 + m * (m + 1)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2008P1.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-28T09:53:59-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "25f6acbaa7a2ff5be4437089ccb005ff61d3fdc59cab3bb154fdf6f823210a42"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "Compfiles/Imo2020P5.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\n⊢ n ∈ SolutionSet ↔\n    1 < n ∧\n      ∀ (α : Type) [inst : Fintype α],\n        Fintype.card α = n →\n          ∀ (f : α → ℕ+),\n            (Pairwise fun a b => ∃ s, s.Nonempty ∧ geometric_mean f s = (↑↑(f a) + ↑↑(f b)) / 2) →\n              ∃ y, ∀ (a : α), f a = y",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P5.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-04-18T17:13:51-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7cda25c5ee26d2e5ce0ba4bbd25626195a3d0276411517f6368e9375af56c748"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "Compfiles/Imo1963P4.lean"
    },
    "debug_info": {
      "goal": "x₁ x₂ x₃ x₄ x₅ y : ℝ\n⊢ (x₁, x₂, x₃, x₄, x₅) ∈ SolutionSet y ↔\n    x₅ + x₂ = y * x₁ ∧ x₁ + x₃ = y * x₂ ∧ x₂ + x₄ = y * x₃ ∧ x₃ + x₅ = y * x₄ ∧ x₄ + x₁ = y * x₅",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1963P4.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T08:58:13-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "dadfe170b5abd88f8d87744633853afcb214ea416c42a1a6972de382d61ac7c6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«1»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 : 1 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f5eccdc3c1087ce8e0fa5de98487c4b9f0e17b466a14c6ff17bfd51f7ee844df"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«2»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 : 1 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b4549a7f99321c680d5eba196ed48a2f03b1c6e38b415b48bae98b318c4572d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«3»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 : 1 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0e47e1dc204fb0cd9d9105a3bd0d11899f287fb03839c8ba1cda4499b53d0920"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«4»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 : 1 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2d3c34ee5b51b3c60b46be7841a5183ec00109f623349a618507daf3252ca1db"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«5»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 : 1 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4e114f0a36a4c9f3e461bebd312cba323468378cb66eca708aa012370dc94ff2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«6»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 : 1 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e5e44cbabf8ccde6e2b17551712341bbbb81bc84f5edcd799c24e3ff11403a2f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«7»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 : 1 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1242d7ce42b24197936bf10666d41b7af4016a6c0aa0b232d9283a169fc37599"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«1».«8»\ni j : ℕ\nhi1 : 1 ≤ 1\nhi2 hj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨1, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨1, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 1, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f1f835af412ae1808f2381cfd6f798b1fc0fc43b42152709891c9eeaea4a3a77"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«1»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7866919956bea21f27eadf5c1c009558e99ca771dab48b0c9b59630270de39dd"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«2»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4c2d40fbe36ea72d6f40744e439689d30e273cc8bb3a2fc9587ebef04f4f0b70"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«3»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "71e0d3357fad98db3158a08af93ea86e07bae53f7510a6825744878675a5f186"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«4»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "12034a8c19e0cd8a3821ca2b86cace0e9cda9afba573af42a01b58a591902f56"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«5»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7fff431ac7296b360b5ddc858760e0033054c8ffec73a8c6163bd5debf63c704"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«6»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "af9433f7bed0a9d895eb5bcd10de53d73aad83db0529aa177255dce1f49e2872"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«7»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "73e6d2fd67880eb6c7e484c80eaf8611165d09d86dd77e565d8ece38f823b53c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«2».«8»\ni j : ℕ\nhi1 : 1 ≤ 2\nhi2 : 2 ≤ 8\nhj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨2, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨2, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 2, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "223af2772f141d557e778e97d00ee9d2f291296553ab3b67d4695be70854888b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«1»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "a7d4c52ff46ca1e0237446c281f067aa11eb39b7d9f11c7cfa70ca183621950d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«2»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bf0ef1a15996584838fdc2c02c5d2504892791ae3f48bec4fa93b7f1a6acfaff"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«3»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "81be109718254013fa033ec3b4239dac571c95f84d92ad6a2e41c74de7d32119"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«4»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "41e6f9e1feec43b30dcbf75ff8fc0208a59b548d5300bb847fefbb9fdf1d7ff0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«5»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1274e5c83ee1358d23b96e80b4b9d95225b8397cbcb6a3e2714d59f168876957"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«6»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "04a2d75f85aa21a71d8fe9852f59d9aef4546ece37bd51fee9c4548247ac81b8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«7»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ebd3d7afca130128d0fddf4d2663f299d853fc88b4d45df067f57d3ca59f0cb1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«3».«8»\ni j : ℕ\nhi1 : 1 ≤ 3\nhi2 : 3 ≤ 8\nhj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨3, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨3, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 3, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fef2f82eb5bfb140d95bf0ce492965dcdb2bc400b7208f76d41318e7755b790f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«1»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "cb663d0e1ce874ba06b40e0121c51d823f1b5e4be93aa4bb37ff426e89243074"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«2»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "338df36c8e3359512d558471f6c8ae553079999294470ff526f0d4146a045c6f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«3»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3c54d0a3795b90b086596695c5ad6954507deeb3bab878598e4a4a174afcf40b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«4»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1121f8e9b163ec41eaa6f3fb5d37d01deb1abde552412d5e54640c8be6897bd6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«5»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5d603cce10e4b14df55f1eee78e88d8aeca193063a2a2c6f389265ed4c73953c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«6»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c85747599a537c6ffca3bd2bbfd3b443d0b8d68d9cb0ad78f42756c5469c2373"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«7»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4c24939fc4bdb84e88077c67f9ad18f0da6ab223108218504392b3050f5be35c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«4».«8»\ni j : ℕ\nhi1 : 1 ≤ 4\nhi2 : 4 ≤ 8\nhj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨4, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨4, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 4, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3ba55cfc35d1b19ae77790c8e836b2c20bff6ad49190ba76f56b8d7c1c41f910"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«1»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "c78f65069c3786a53ce41267a2990b8f5e1c5a5a51e637d6857bb34fdcf08a06"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«2»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "732bc3d627983f68e0a0ae3489d7e202b4c8676ff9a5e8e511ae47c49a5fbdc9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«3»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9fd9f09a7f5151a28239f6b543542e12b1dea9c71ad71da1258cbdf8cce28951"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«4»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3a31f762344cc10a3f4a285b9707d82eec683ef62d3bc53e24878d8351c81e69"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«5»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "65579631a3df714f74b29fb7ec81c7d5c51d1f77f089f4bfaa1fe3b58c0447f1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«6»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2427a12149ad60f3da8c4a82c3692bddef73e3da3a708d8e2851103641dd9f7a"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«7»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4529f7c0345c3f1f556463a98a873bc2d898e214f552395d901fe00962abd86c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«5».«8»\ni j : ℕ\nhi1 : 1 ≤ 5\nhi2 : 5 ≤ 8\nhj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨5, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨5, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 5, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d7a8990edf1cb34390db765087d674ed6c9169cb0f80c2ae1e56669dd45e7c7f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«1»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1a07994d64e82e9137330d5b7a85de2d429bcda8225ba5398c0a8f612125d507"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«2»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "01c3062f95ce457ac1390ec28f6ecbfc092c0a8bb90767852c79fb72457f0ad2"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«3»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5ab24a647c77aa1c7b351b5e62316e68ae5358c3b0806b7297a4d0389b979001"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«4»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6bcd360233d42fc12faf3d0c2d8c7c26a61296d0aa6d6d49305c1c01a0898340"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«5»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "06d66619040c0abd3e5408da51e157a7bd6e5e11c58c6eb2cffa071630ba544c"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«6»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4bf8077509e327eb5012ef8948108574f7bbad3b09202cba62caf8881df2eb43"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«7»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b4468593cce701f5d63754982acd49cf7f5f1b8b74c3b19873ea73ac6ff2162d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«6».«8»\ni j : ℕ\nhi1 : 1 ≤ 6\nhi2 : 6 ≤ 8\nhj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨6, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨6, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 6, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "40b44930609bb1217e1867d4cc6b022ccae06691e77b5eed12bff8771e6babda"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«1»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "336042af7186201ff93eb50061a1e0611d5193e6f4262b4461ecd53019934c03"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«2»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "813be212b88bae5d76a30f89dfb76bd84955f9c58f8563c93d0e7734a1b24996"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«3»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "56a755706dbce627a7857c8f09dbc0d4a458b95b66eb6d5da3730d73bd8e9619"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«4»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d63a932f6883a1e474c2e910b1167b70bc081b66b002dccdca31e329cd467b62"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«5»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "ca9398af4e5e796553454024f23475f0e68bd188481300142556233e2a4e2575"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«6»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fa24d207147bc4d1a6f09a98377900cb02f439a637c9c0078827c358c9d835ea"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«7»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "942ab9b9b0245cebdf7717ec80e51b172ce497744cb4bd0dc31e7b663699ab1f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«7».«8»\ni j : ℕ\nhi1 : 1 ≤ 7\nhi2 : 7 ≤ 8\nhj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨7, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨7, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 7, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5693d8cb01ecf4c7cd0bd1ab8e34f652978f261e1b548c58717719f5d7c421f5"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«1»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 1\nhj2 : 1 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨1, ⋯⟩\nhij2 : 2 * ↑⟨1, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨1, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 1 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fd18c3c0e2804a9f9ae657fc90b50e29e49fcf8ca1e977f063896e03f5e461ce"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«2»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 2\nhj2 : 2 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨2, ⋯⟩\nhij2 : 2 * ↑⟨2, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 2 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "2cebe444324e0c668b07408c3def882f3093e2e1e1335a5e81edcf7932bc4b43"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«3»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 3\nhj2 : 3 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨3, ⋯⟩\nhij2 : 2 * ↑⟨3, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨3, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 3 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "755e8bdf18242b1e67d89c9d674921f6d57ac24edd2008bf67f6162f7a6f0f59"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«4»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 4\nhj2 : 4 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨4, ⋯⟩\nhij2 : 2 * ↑⟨4, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨4, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 4 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8d035b859df9280e806942d1d964b5036e63de23f6f509d3f8cd47613f046106"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«5»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 5\nhj2 : 5 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨5, ⋯⟩\nhij2 : 2 * ↑⟨5, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨5, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 5 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "bf78c7082e72970cbf40371637754b2d24de2ee8f22d7f2c51b4f82abfe36ae0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«6»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 6\nhj2 : 6 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨6, ⋯⟩\nhij2 : 2 * ↑⟨6, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨6, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 6 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1b9ed15268bff60f67e1559600bcc93b11944f1a84432e4168630d7e48c50ef7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«7»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 7\nhj2 : 7 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨7, ⋯⟩\nhij2 : 2 * ↑⟨7, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨7, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 7 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1a87f892ba397cfb3a94a0452a3a0f07f588492603784f88f270aa0583663527"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 76,
      "start_column": 44,
      "end_line": 76,
      "end_column": 49,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case h.intro.mk.intro.intro.mk.intro.intro.intro.intro.«8».«8»\ni j : ℕ\nhi1 : 1 ≤ 8\nhi2 : 8 ≤ 8\nhj1 : 1 ≤ 8\nhj2 : 8 ≤ 8\nhij1 : ⟨8, ⋯⟩ < ⟨8, ⋯⟩\nhij2 : 2 * ↑⟨8, ⋯⟩ - ↑⟨8, ⋯⟩ ∈ Set.Icc 1 8\nhc1 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\nhc2 :\n  (match ⟨8, ⋯⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0) =\n    match ⟨2 * 8 - 8, hij2⟩ with\n    | ⟨1, property⟩ => 0\n    | ⟨2, property⟩ => 1\n    | ⟨3, property⟩ => 0\n    | ⟨4, property⟩ => 1\n    | ⟨5, property⟩ => 1\n    | ⟨6, property⟩ => 0\n    | ⟨7, property⟩ => 1\n    | ⟨8, property⟩ => 0\n    | x => 0\n⊢ False",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L76"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-12-02T21:25:12-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9863b9380860a92d271ff1c11d72565631020b26d2e9f736feeb9f93f024355d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 87,
      "start_column": 4,
      "end_line": 87,
      "end_column": 9,
      "file": "Compfiles/Bulgaria1998P1.lean"
    },
    "debug_info": {
      "goal": "case left\ncolor : ↑(Set.Icc 1 solution_value) → Fin 2\n⊢ coloring_is_good color",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Bulgaria1998P1.lean#L87"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-17T11:03:23-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "4dfcdfe291ff46c6fc82b53f0fca21f1b636bcff633ea8c0f9dc1411d818e8a1"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Compfiles/Imo1991P6.lean"
    },
    "debug_info": {
      "goal": "a : ℝ\nha : 1 < a\n⊢ Bounded (solution a ha) ∧ ∀ (i j : ℕ), i ≠ j → 1 ≤ |solution a ha i - solution a ha j| * |↑i - ↑j|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1991P6.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-20T21:26:57-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "9a27ead7e901d4b2a8237c3922016f7362874addcf8d84c29521c4212418e36d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "Compfiles/Imo2021P2.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nx : Fin n → ℝ\n⊢ ∑ i, ∑ j, √|x i - x j| ≤ ∑ i, ∑ j, √|x i + x j|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2021P2.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-04T09:33:15-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "d0aed2d5a7333bb441d28f2f9746bd121d055067b2a1019cf51e0276d964af40"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo2015P2.lean"
    },
    "debug_info": {
      "goal": "a b c : ℤ\n⊢ (a, b, c) ∈ SolutionSet ↔\n    0 < a ∧ 0 < b ∧ 0 < c ∧ is_power_of_two (a * b - c) ∧ is_power_of_two (b * c - a) ∧ is_power_of_two (c * a - b)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2015P2.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-07T18:22:25-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3931ff4e24b0e27b3a721bd58c4c0c4fb3d99add222117fbe86db98047cd9fd5"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "Compfiles/Imo1993P5.lean"
    },
    "debug_info": {
      "goal": "⊢ if DoesExist = true then ∃ f, Good f else ¬∃ f, Good f",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1993P5.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-24T13:48:13-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "b2eee41030bd1b84e31fcb8e72599d1d3785cce18cd948f2a3584e6da8159c3b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Compfiles/Imo2007P1.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 0 < n\na x : Fin n → ℝ\nh : Monotone x\n⊢ (⨆ i, d a i) / 2 ≤ ⨆ i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "0fa2c4666fb34d33a86e885cd30911f353a5e8db7640b27e303df0eaeebcb5a8"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "Compfiles/Imo2007P1.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 0 < n\na : Fin n → ℝ\n⊢ ∃ x, Monotone x ∧ (⨆ i, d a i) / 2 = ⨆ i, |x i - a i|",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2007P1.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-11-27T11:23:45-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "6ce2f8f3b0847e9ad0becb040b6fde0dbc8f1dcb19adea3c04eb0fb6a31f9102"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "Compfiles/Imo2023P3.lean"
    },
    "debug_info": {
      "goal": "k : ℕ\nhk : 2 ≤ k\na : ℕ+ → ℕ+\n⊢ a ∈ SolutionSet hk ↔\n    ∃ P,\n      P.Monic ∧\n        P.degree = ↑k ∧\n          (∀ n ≤ k, 0 ≤ P.coeff n) ∧\n            ∀ (n : ℕ+), Polynomial.eval (↑↑(a n)) P = ↑↑(∏ i ∈ Finset.range k, a ⟨↑n + i + 1, ⋯⟩)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2023P3.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-24T09:05:23-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1117e8a7a517122b73dbcb9fdd47dc1e91fcce2bc71ba0a142cbbb7b7a86c725"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Compfiles/Imo1973P5.lean"
    },
    "debug_info": {
      "goal": "G : Set (ℝ → ℝ)\nhf : ∀ f ∈ G, ∃ a b, a ≠ 0 ∧ ∀ (x : ℝ), f x = a * x + b\nhG : ∀ f ∈ G, ∀ g ∈ G, g ∘ f ∈ G\nhinv : ∀ f ∈ G, (∀ (x : ℝ), f x ≠ 0) → f⁻¹ ∈ G\nhfix : ∀ f ∈ G, ∃ x, f x = x\n⊢ ∃ k, ∀ f ∈ G, f k = k",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1973P5.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-06-09T12:13:52-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "7303214fd0f64bd5da1847b9323191e73f7c4881eed8d603a53f6907767079f0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Compfiles/Imo1966P4.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nx : ℝ\nhx : ∀ (t : ℕ) (k : ℤ), x ≠ ↑k * Real.pi / 2 ^ t\n⊢ ∑ i ∈ Finset.range n, 1 / Real.sin (2 ^ (i + 1) * x) = 1 / Real.tan x - 1 / Real.tan (2 ^ n * x)",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1966P4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-23T21:57:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "1137ba6c9ba47104c1ab8ec7f77faa36f6001add8c9580821296c704de84f0d6"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7,
      "file": "Compfiles/Imo1970P6.lean"
    },
    "debug_info": {
      "goal": "P : Fin 100 → Pt\nhP : ∀ (a b c : Fin 100), [a, b, c].Nodup → ¬Collinear ℝ {P c, P b, P c}\n⊢ let cardAll := Nat.card ↑{t | ∃ a b c, ![P a, P b, P c] = t.points};\n  let cardAcute := Nat.card ↑{t | ∃ a b c, ![P a, P b, P c] = t.points ∧ AcuteTriangle t};\n  ↑cardAcute / ↑cardAll ≤ 7 / 10",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo1970P6.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-21T09:27:31-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "fc4853fef38f3fe863cf2d87956e1ee4a2e7ce864d586917dde85c4771408849"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 42,
      "start_column": 2,
      "end_line": 42,
      "end_column": 7,
      "file": "Compfiles/Usa2000P5.lean"
    },
    "debug_info": {
      "goal": "A : ZMod 3 → EuclideanSpace ℝ (Fin 2)\nhABC : AffineIndependent ℝ ![A 0, A 1, A 2]\nω : Fin 7 → Circle\nhTangent : ∀ i < 6, ExternallyTangent (ω i) (ω (i + 1))\nhA : ∀ i < 7, A ↑i ∈ ω ↑i ∧ A (↑i + 1) ∈ ω ↑i\n⊢ ω 0 = ω 6",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2000P5.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-02-16T09:11:27-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "e97dd05f8b02a88ccec3e6f2bced6a18341024aff9110c24dc12371251e8d418"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 29,
      "start_column": 2,
      "end_line": 29,
      "end_column": 7,
      "file": "Compfiles/CIIM2022P6.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nhn : 0 < n\n⊢ d (n + 1).factorial ≤ 2 * d n.factorial",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/CIIM2022P6.lean#L29"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-01-16T20:57:01-05:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "8594afb538b66f2210ef250234e20ef941d0de3624227a418f60b8acdff8173f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 60,
      "start_column": 4,
      "end_line": 60,
      "end_column": 9,
      "file": "Compfiles/Usa2023P5.lean"
    },
    "debug_info": {
      "goal": "case mp\nn : ℕ\nhn : 2 < n\n⊢ n ∈ solution_set →\n    ∀ (a : Fin n → Fin n → Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid ⋯ a ha → ∃ p, ∃ (hp : ∀ (r : Fin n), Function.Injective (p r)), col_valid ⋯ (fun r c => a r (p r c)) ⋯",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-04T12:29:47-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "5cf8e96ea39aac4fd4af09646d3eb359d3353f76ab6fa68f329cc347261e5677"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 61,
      "start_column": 4,
      "end_line": 61,
      "end_column": 9,
      "file": "Compfiles/Usa2023P5.lean"
    },
    "debug_info": {
      "goal": "case mpr\nn : ℕ\nhn : 2 < n\n⊢ (∀ (a : Fin n → Fin n → Fin (n ^ 2)) (ha : Function.Injective2 a),\n      row_valid ⋯ a ha →\n        ∃ p, ∃ (hp : ∀ (r : Fin n), Function.Injective (p r)), col_valid ⋯ (fun r c => a r (p r c)) ⋯) →\n    n ∈ solution_set",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Usa2023P5.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2023-10-04T12:29:47-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "3e6c2261cccc3c7a82006cbffa972069d8e9f7a3abbc6ffddb14c17dd8fba1a9"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 232,
      "start_column": 8,
      "end_line": 232,
      "end_column": 13,
      "file": "Foundation/Modal/Hilbert/NNFormula.lean"
    },
    "debug_info": {
      "goal": "φ : NNFormula ℕ\n⊢ ∃ ψ, ψ.isModalCNF ∧ Hilbert.K ⊢! φ.toFormula ⭤ ψ.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Hilbert/NNFormula.lean#L232"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "cd8925a7578e3fd1ec23a50fdbcff59ac504775be5f40a2f0bb5a8bcafdeb831"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 236,
      "start_column": 8,
      "end_line": 236,
      "end_column": 13,
      "file": "Foundation/Modal/Hilbert/NNFormula.lean"
    },
    "debug_info": {
      "goal": "φ : NNFormula ℕ\n⊢ ∃ ψ, ψ.isModalDNF ∧ Hilbert.K ⊢! φ.toFormula ⭤ ψ.toFormula",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Hilbert/NNFormula.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "54bf4cc9ab075278febe5d0fef9724b59c5a45d1dfef24ea9c1f88689cba363d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 27,
      "start_column": 25,
      "end_line": 27,
      "end_column": 30,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst✝¹ : L.Normal\ninst✝ : L.Consistent\nφ : Formula ℕ\nhL : φ ∈ L\nhV : φ ∉ Logic.Ver\nΓ : List { ψ // ψ.isModalCNFPart }\nγ : Formula ℕ\neγ : (⋀Γ.unattach).toFormula = γ\nh : Hilbert.K ⊢! φ.toNNFormula.toFormula ⭤ γ\nthis : φ.toNNFormula.toFormula ⭤ γ ∈ L\n⊢ γ ∈ L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Maximal/Makinson.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "c084bca3f9aef533d553839211b6de4a8ea7457e2c6d432e1753bc9ff51542fa"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 28,
      "start_column": 33,
      "end_line": 28,
      "end_column": 38,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst✝¹ : L.Normal\ninst✝ : L.Consistent\nφ : Formula ℕ\nhL : φ ∈ L\nhV : φ ∉ Logic.Ver\nΓ : List { ψ // ψ.isModalCNFPart }\nγ : Formula ℕ\neγ : (⋀Γ.unattach).toFormula = γ\nh : Hilbert.K ⊢! φ.toNNFormula.toFormula ⭤ γ\nthis : φ.toNNFormula.toFormula ⭤ γ ∈ L\nhγL : γ ∈ L\n⊢ γ ∉ Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Maximal/Makinson.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "5a9e77f9f729eb29d4651099c2c81a099e62c84c2830efdc83fbdb262ce38896"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 31,
      "start_column": 4,
      "end_line": 31,
      "end_column": 9,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst✝¹ : L.Normal\ninst✝ : L.Consistent\nφ : Formula ℕ\nhL : φ ∈ L\nhV : φ ∉ Logic.Ver\nΓ : List { ψ // ψ.isModalCNFPart }\nγ : Formula ℕ\neγ : (⋀Γ.unattach).toFormula = γ\nh : Hilbert.K ⊢! φ.toNNFormula.toFormula ⭤ γ\nthis : φ.toNNFormula.toFormula ⭤ γ ∈ L\nhγL : γ ∈ L\nhγV : γ ∉ Logic.Ver\n⊢ ∃ δ ∈ Γ, (↑δ).toFormula ∈ L ∧ (↑δ).toFormula ∉ Logic.Ver",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Maximal/Makinson.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "e740fd040672f4fcc10fb7e988d599db5f1ead9edcb14a8d7a814401234a6125"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 36,
      "start_column": 4,
      "end_line": 36,
      "end_column": 9,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "case mk.intro\nL : Logic\ninst✝¹ : L.Normal\ninst✝ : L.Consistent\nφ : Formula ℕ\nhL : φ ∈ L\nhV : φ ∉ Logic.Ver\nΓ : List { ψ // ψ.isModalCNFPart }\nγ : Formula ℕ\neγ : (⋀Γ.unattach).toFormula = γ\nh : Hilbert.K ⊢! φ.toNNFormula.toFormula ⭤ γ\nthis✝ : φ.toNNFormula.toFormula ⭤ γ ∈ L\nhγL : γ ∈ L\nhγV : γ ∉ Logic.Ver\nΔ : List { ψ // ψ.isPrebox ∨ ψ.isPredia ∨ ψ.degree = 0 }\nhδΓ : ⟨⋁Δ.unattach, ⋯⟩ ∈ Γ\nhδL : (↑⟨⋁Δ.unattach, ⋯⟩).toFormula ∈ L\nhδV : (↑⟨⋁Δ.unattach, ⋯⟩).toFormula ∉ Logic.Ver\nξ : NNFormula ℕ\nproperty✝ : (□ξ).isPrebox ∨ (□ξ).isPredia ∨ (□ξ).degree = 0\nhψ₁ : ⟨□ξ, property✝⟩ ∈ Δ\nhψ₂ : (↑⟨□ξ, property✝⟩).isPrebox\nthis : □ξ.toFormula ∈ Logic.Ver\n⊢ False",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Maximal/Makinson.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "e1695b651db01d4616a427a74792e55d9e56ac21c422b8ff8f290aa9d5bc09df"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 38,
      "start_column": 49,
      "end_line": 38,
      "end_column": 54,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "L : Logic\ninst✝¹ : L.Normal\ninst✝ : L.Consistent\nφ : Formula ℕ\nhL : φ ∈ L\nhV : φ ∉ Logic.Ver\nΓ : List { ψ // ψ.isModalCNFPart }\nγ : Formula ℕ\neγ : (⋀Γ.unattach).toFormula = γ\nh : Hilbert.K ⊢! φ.toNNFormula.toFormula ⭤ γ\nthis : φ.toNNFormula.toFormula ⭤ γ ∈ L\nhγL : γ ∈ L\nhγV : γ ∉ Logic.Ver\nΔ : List { ψ // ψ.isPrebox ∨ ψ.isPredia ∨ ψ.degree = 0 }\nhδΓ : ⟨⋁Δ.unattach, ⋯⟩ ∈ Γ\nhδL : (↑⟨⋁Δ.unattach, ⋯⟩).toFormula ∈ L\nhδV : (↑⟨⋁Δ.unattach, ⋯⟩).toFormula ∉ Logic.Ver\nhΔ₁ : ∀ ψ ∈ Δ, ¬(↑ψ).isPrebox\n⊢ ∃ Γ, φ ⭤ ⋀Γ ∈ L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Maximal/Makinson.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "66b5348e6f514ec8d2637a4e75d6ab34c5f893ca51c1539eaf969400d5829746"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "Foundation/Modal/Maximal/Makinson.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.mk.intro.intro.intro\nL : Logic\ninst✝¹ : L.Normal\ninst✝ : L.Consistent\nφ : Formula ℕ\nhL : φ ∈ L\nhV : ¬Hilbert.Ver ⊢! φ\nΓ : List { ψ // ψ.isModalCNFPart }\nγ : Formula ℕ\neγ : (⋀Γ.unattach).toFormula = γ\nh : Hilbert.K ⊢! φ.toNNFormula.toFormula ⭤ γ\nthis✝ : φ.toNNFormula.toFormula ⭤ γ ∈ L\nhγL : γ ∈ L\nhγV : γ ∉ Logic.Ver\nΔ : List { ψ // ψ.isPrebox ∨ ψ.isPredia ∨ ψ.degree = 0 }\nhδΓ : ⟨⋁Δ.unattach, ⋯⟩ ∈ Γ\nhδL : (↑⟨⋁Δ.unattach, ⋯⟩).toFormula ∈ L\nhδV : (↑⟨⋁Δ.unattach, ⋯⟩).toFormula ∉ Logic.Ver\nhΔ₁ : ∀ ψ ∈ Δ, ¬(↑ψ).isPrebox\nthis : ∃ Γ, φ ⭤ ⋀Γ ∈ L\n⊢ ∃ ψ, ◇ψ ∈ L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Maximal/Makinson.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-10T09:06:15+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "d99d0ab55f542c45bea9e7da4c087dcf5af53c6b1fabf50cd0e172f68541ec1e"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 42,
      "start_column": 4,
      "end_line": 42,
      "end_column": 9,
      "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean"
    },
    "debug_info": {
      "goal": "⊢ ∀ {φ : Formula ℕ}, Grz.miniCanonicalFrame Hilbert.GrzPoint3 φ ∈ FrameClass.finite_connected_partial_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Kripke/Hilbert/GrzPoint3.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-14T14:50:18+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "dd3f2d1ee7c1622bf78398bb7c1c810959b5c4333709085d0bffec78dff32d6d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 33,
      "start_column": 101,
      "end_line": 33,
      "end_column": 106,
      "file": "Foundation/Modal/Kripke/Hilbert/GLPoint3.lean"
    },
    "debug_info": {
      "goal": "⊢ Complete Hilbert.GLPoint3 FrameClass.finite_strict_linear_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Kripke/Hilbert/GLPoint3.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-17T22:57:50+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "03647850b20caa42bd4ed5ddabbb952322a5f7028761c7554b4abab16ac6679c"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "frame-skeleton",
      "commit": "08b717a177f07bbd3f52e99c1c99d12c14a96235",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 35,
      "start_column": 4,
      "end_line": 35,
      "end_column": 9,
      "file": "Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean"
    },
    "debug_info": {
      "goal": "⊢ ∀ {φ : Formula ℕ}, Grz.miniCanonicalFrame Hilbert.GrzPoint2 φ ∈ FrameClass.finite_confluent_partial_order",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/08b717a177f07bbd3f52e99c1c99d12c14a96235/Foundation/Modal/Kripke/Hilbert/GrzPoint2.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-03-14T14:50:18+09:00",
      "inclusion_date": "2025-04-22T23:22:07.165658+00:00"
    },
    "id": "aef4460638c4224f5bc131ecac102afb659413de0bfa3d3f43ff930ec172b25d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "solovay-sentences",
      "commit": "96ecdcf3310a2fd8245872e8a962c668d61f0ce5",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 111,
      "start_column": 2,
      "end_line": 111,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/GL/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory ℒₒᵣ\ninst✝² : T.Delta1Definable\nM : Model\nr : M.World\ninst✝¹ : M.IsFiniteTree r\ninst✝ : Fintype M.World\nN N' : ℕ\nw : Fin N → Semiterm ℒₒᵣ Empty N'\nt : M.World → Semiterm ℒₒᵣ Empty N\ni : M.World\n⊢ (Rewriting.app (Rew.substs w)) (⩖ ε, θChainAux T t ε) = ⩖ ε, θChainAux T (fun i => (Rew.substs w) (t i)) ε",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/96ecdcf3310a2fd8245872e8a962c668d61f0ce5/Foundation/ProvabilityLogic/GL/Completeness.lean#L111"
    },
    "metadata": {
      "blame_email_hash": "5a2548ae1d83",
      "blame_date": "2025-03-31T09:39:30+09:00",
      "inclusion_date": "2025-04-01T05:40:23.283040+00:00"
    },
    "id": "53f4f7361843fd4dac777d7c0e837d01743e4e73d6cc9e99fbc8c3bbe2452d92"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Carleson/LinearizedMetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : CompatibleFunctions ℝ X (defaultA a)\ninst✝¹ : IsCancellative X (defaultτ a)\ninst✝ : IsOneSidedKernel a K\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.IsConjExponent q'\nQ : SimpleFunc X (Θ X)\nθ : Θ X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (⇑Q) θ K x1 x2).toReal) 2 2 volume volume\n    (C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, linearizedCarlesonOperator (⇑Q) K f x ≤ ↑(C1_0_3 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "c310678d6982240739518fff83bb4c7b4b852dffb9d2a6da65f71a00216e5e57"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 526,
      "start_column": 70,
      "end_line": 526,
      "end_column": 75,
      "file": "Carleson/TileStructure.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst✝² : PseudoMetricSpace X\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Set (𝔓 X)\n⊢ IsAntichain (fun x1 x2 => x1 ≤ x2) (toTileLike '' 𝔄) ↔\n    ∀ (p p' : 𝔓 X), p ∈ 𝔄 → p' ∈ 𝔄 → p ≠ p' → Disjoint (toTileLike p).toTile (toTileLike p').toTile",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TileStructure.lean#L526"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-03T17:09:05+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "b11fec209a8e9e6d28ba0f72be209af353af056d145d5e5bf091a912ceee00b6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 218,
      "start_column": 2,
      "end_line": 218,
      "end_column": 7,
      "file": "Carleson/HolderVanDerCorput.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝¹ : MetricSpace X\ninst✝ : ProofData a q K σ₁ σ₂ F G\nz : X\nR t : ℝ\nhR : 0 < R\nC : ℝ≥0\nϕ : X → ℂ\nhϕ : support ϕ ⊆ ball z R\nh2ϕ : HolderWith C nnτ ϕ\nht : t ∈ Ioc 0 1\n⊢ LipschitzWith (C8_0_1 ↑a ⟨t, ⋯⟩) (holderApprox R t ϕ)",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L218"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-19T16:30:05+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "393599577049b16ddc0284d92bb8541569987867e6056aaf90f085f7000f6d65"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 229,
      "start_column": 55,
      "end_line": 229,
      "end_column": 60,
      "file": "Carleson/HolderVanDerCorput.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝¹ : MetricSpace X\ninst✝ : ProofData a q K σ₁ σ₂ F G\nz : X\nR : ℝ≥0\nhR : 0 < R\nϕ : X → ℂ\nhϕ : support ϕ ⊆ ball z ↑R\nh2ϕ : hnorm ϕ z R < ⊤\nf g : Θ X\n⊢ ↑‖∫ (x : X), cexp (I * (↑(f x) - ↑(g x))) * ϕ x‖₊ ≤\n    ↑(C2_0_5 ↑a) * volume (ball z ↑R) * hnorm ϕ z R * (1 + ↑(nndist_{z ,↑R} f g)) ^ (2 * ↑a ^ 2 + ↑a ^ 3)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/HolderVanDerCorput.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "4f0774fdf1b5",
      "blame_date": "2024-07-01T23:56:16+08:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "0a7b83de487e4725261acd6846fed27d95d85448b239aef8106cf387db39e490"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Carleson/MetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : CompatibleFunctions ℝ X (defaultA a)\ninst✝¹ : IsCancellative X (defaultτ a)\ninst✝ : IsOneSidedKernel a K\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, carlesonOperator K f x ≤ ↑(C1_0_2 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "614b0b1fd379e2aab89e519f6043f2cd34f21de790b42d55b8bc704504a1d15e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 58,
      "start_column": 2,
      "end_line": 58,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f : ℝ → ℂ\nn : ℕ\nhf : MemLp f ⊤ volume\nperiodic_f : Function.Periodic f (2 * π)\nx : ℝ\n⊢ partialFourierSum n (partialFourierSum n f) x = partialFourierSum n f x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5cf368edd40f6686c7cf712723cd2708e16112dafe65202e7ceff6b93580caae"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f g : ℝ → ℂ\nn : ℕ\nhf : MemLp f ⊤ volume\nperiodic_f : Function.Periodic f (2 * π)\nhg : MemLp g ⊤ volume\nperiodic_g : Function.Periodic g (2 * π)\n⊢ ∫ (x : ℝ) in 0 ..2 * π, (starRingEnd ℂ) (partialFourierSum n f x) * g x =\n    ∫ (x : ℝ) in 0 ..2 * π, (starRingEnd ℂ) (f x) * partialFourierSum n g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "60c0cd3392949ba20afa599ece3f28e3db655d1e45f1b616574451b1fdfb5bdc"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "g : ℝ → ℂ\nn : ℕ\nhmg : Measurable g\nhg : MemLp g ⊤ volume\nperiodic_g : Function.Periodic g (2 * π)\n⊢ (fun p => eLpNorm ((Ioc 0 (2 * π)).indicator (approxHilbertTransform n g)) p volume) ≤ fun p =>\n    eLpNorm ((Ioc 0 (2 * π)).indicator g) p volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d0452e487bcae6fb1961fd7b6858cc14d0985e42138e76c88d15181c1c255be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f g : ℝ → ℂ\nn : ℕ\nhf : MemLp f ⊤ volume\nperiodic_f : Function.Periodic f (2 * π)\nhg✝ : MemLp g ⊤ volume\nperiodic_g : Function.Periodic g (2 * π)\nr : ℝ\nhr : r ∈ Ioo 0 π\nhg : ∀ (x : ℝ), ‖g x‖ ≤ niceKernel r x\n⊢ eLpNorm ((Ioc 0 (2 * π)).indicator fun x => ∫ (y : ℝ) in 0 ..2 * π, f y * g (x - y)) 2 volume ≤\n    2 ^ 5 * eLpNorm ((Ioc 0 (2 * π)).indicator f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "613e84de0ee275a0f16c37b30e3825a2914e869a1ccd76c1e0fc5873330f9699"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 168,
      "start_column": 2,
      "end_line": 168,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\n⊢ Continuous (dirichletApprox n)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L168"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0fe2c4cd9f2bbe6355d5ca1c2f261f6900a16b43b8714c5af6dcc49e35a2e6db"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 172,
      "start_column": 2,
      "end_line": 172,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\n⊢ Function.Periodic (dirichletApprox n) (2 * π)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L172"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a04d60225babf97b3e178476dea5a97d57d0b2fff018930ec691ca25ebed64c1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 182,
      "start_column": 2,
      "end_line": 182,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f : ℝ → ℂ\nn✝ : ℕ\nhf : MemLp f ⊤ volume\nperiodic_f : Function.Periodic f (2 * π)\nn : ℕ\nx : ℝ\n⊢ approxHilbertTransform n f x = ↑(2 * π)⁻¹ * ∫ (y : ℝ) in 0 ..2 * π, f y * dirichletApprox n (x - y)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L182"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a5c69bea75b27a811d2528bbc7737b8ecd2ca4000425f6fa438dfca2d868ae80"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 192,
      "start_column": 2,
      "end_line": 192,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "f : ℝ → ℂ\nn✝ : ℕ\nhf : MemLp f ⊤ volume\nperiodic_f : Function.Periodic f (2 * π)\nr : ℝ\nhr : r ∈ Ioo 0 1\nn : ℕ\nhn : n = ⌈r⁻¹⌉₊\nx : ℝ\n⊢ dist (dirichletApprox n x) ({y | ‖y‖ ∈ Ioo r 1}.indicator 1 ↑x) ≤ 2 ^ 5 * niceKernel r x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L192"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "034e090b3b5d00fd6c5739e217cb6a1b098d003fa4a867f94e567c82879e24e6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "r : ℝ\nhr : 0 < r\n⊢ HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts 4)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Classical/HilbertStrongType.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "a1e9bc78fc17042729da155c3a7456a7e1e5986eb838c8a87676ab4cebb90d9d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 50,
      "start_column": 2,
      "end_line": 50,
      "end_column": 7,
      "file": "Carleson/ToMathlib/BoundedFiniteSupport.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst✝⁴ : MeasurableSpace X\nf : X → E\ninst✝³ : TopologicalSpace E\ninst✝² : ENorm E\ninst✝¹ : Zero E\nμ : Measure X\ninst✝ : MeasurableSpace E\nbfs : BoundedFiniteSupport f μ\n⊢ Measurable f",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/BoundedFiniteSupport.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-03-19T12:39:18+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "460cda378c202c78d0e03cc5cd25dea5a98c833356f0b9cac604cad9b5f2b37a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 78,
      "start_column": 2,
      "end_line": 78,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst✝² : MetricSpace X\ninst✝¹ : MeasurableSpace X\nμ : Measure X\ninst✝ : NormedAddCommGroup E\nf : X → E\nhf : LocallyIntegrable f μ\n⊢ ContinuousOn (fun x => ⨍⁻ (y : X) in ball x.1 x.2, ‖f y‖ₑ ∂μ) (univ ×ˢ Ioi 0)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6c8eb556e01381bb08b8af99a245eee870e0f1f66ff8221578ad7a9f1b9668bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 391,
      "start_column": 33,
      "end_line": 391,
      "end_column": 38,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝¹¹ : MetricSpace X\ninst✝¹⁰ : MeasurableSpace X\nμ : Measure X\ninst✝⁹ : μ.IsDoubling A\ninst✝⁸ : NormedAddCommGroup E\nι : Type u_3\n𝓑 : Set ι\nc : ι → X\nr : ι → ℝ\ninst✝⁷ : BorelSpace X\ninst✝⁶ : NormedSpace ℝ E\ninst✝⁵ : MeasurableSpace E\ninst✝⁴ : BorelSpace E\ninst✝³ : IsFiniteMeasureOnCompacts μ\ninst✝² : ProperSpace X\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\nh𝓑 : 𝓑.Countable\nR : ℝ\nhR : ∀ i ∈ 𝓑, r i ≤ R\np : ℝ≥0\nhp : 1 < p\n⊢ ∀ (f : X → E), MemLp f (↑p) μ → ∀ᵐ (x : X) ∂μ, MB μ 𝓑 c r f x ≠ ⊤",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L391"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-20T18:21:24+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c7869fae856813b3e3c4345c57328e4428ee5e902a62545df85d66e836284c27"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 451,
      "start_column": 2,
      "end_line": 451,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\nι : Type u_3\n𝓑 : Set ι\nc : ι → X\nr : ι → ℝ\ninst✝⁴ : BorelSpace X\ninst✝³ : IsFiniteMeasureOnCompacts μ\ninst✝² : ProperSpace X\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nh𝓑 : 𝓑.Countable\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ < p₂\nv : X → E\nmlpv : MemLp v (↑p₂) μ\n⊢ AEStronglyMeasurable ((fun u x => maximalFunction μ 𝓑 c r (↑p₁) u x) v) μ ∧\n    eLpNorm ((fun u x => maximalFunction μ 𝓑 c r (↑p₁) u x) v) (↑p₂) μ ≤ ↑(C2_0_6 A p₁ p₂) * eLpNorm v (↑p₂) μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L451"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "815e25d02c1768da1982f769158ae3560951060b22880e8619f49d3bbe5e85be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 456,
      "start_column": 2,
      "end_line": 456,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\ninst✝² : MetricSpace X\ninst✝¹ : MeasurableSpace X\nμ : Measure X\ninst✝ : NormedAddCommGroup E\nf : X → E\nι : Type u_3\n𝓑 : Set ι\nc : ι → X\nr : ι → ℝ\nhf : LocallyIntegrable f μ\n⊢ LowerSemicontinuous (MB μ 𝓑 c r f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L456"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "05e80ff9860b703391208b2cda69077ae36243fad6875f39785f9e1e1e35295f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 469,
      "start_column": 2,
      "end_line": 469,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\nι : Type u_3\n𝓑 : Set ι\nc : ι → X\nr : ι → ℝ\ninst✝⁴ : BorelSpace X\ninst✝³ : IsFiniteMeasureOnCompacts μ\ninst✝² : ProperSpace X\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nh𝓑 : 𝓑.Countable\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ ≤ p₂\nv : X → E\nmlpv : MemLp v (↑p₂) μ\n⊢ AEStronglyMeasurable ((fun u x => maximalFunction μ 𝓑 c r (↑p₁) u x) v) μ ∧\n    wnorm ((fun u x => maximalFunction μ 𝓑 c r (↑p₁) u x) v) (↑p₂) μ ≤ ↑(A ^ 2) * eLpNorm v (↑p₂) μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L469"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "a65bf16630d6e102b858d7756662a7ae8631d5ae8fbaaddb09e4ca4e92f402cb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 535,
      "start_column": 31,
      "end_line": 535,
      "end_column": 36,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : ProperSpace X\ninst✝³ : BorelSpace X\ninst✝² : IsFiniteMeasureOnCompacts μ\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ < p₂\n⊢ ∀ (f : X → E),\n    MemLp f (↑p₂) μ →\n      ∀ᵐ (x : X) ∂μ, maximalFunction μ (⋯.choose ×ˢ univ) (fun x => x.1) (fun x => 2 ^ x.2) (↑p₁) f x ≠ ⊤",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L535"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "36bc1c4731292dca07e7f25f06f9fd49b9ecbd53961545f124f8197f49a5e0bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 546,
      "start_column": 29,
      "end_line": 546,
      "end_column": 34,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : ProperSpace X\ninst✝³ : BorelSpace X\ninst✝² : IsFiniteMeasureOnCompacts μ\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ ≤ p₂\n⊢ ∀ (f : X → E),\n    MemLp f (↑p₂) μ →\n      ∀ᵐ (x : X) ∂μ, maximalFunction μ (⋯.choose ×ˢ univ) (fun x => x.1) (fun x => 2 ^ x.2) (↑p₁) f x ≠ ⊤",
      "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/HardyLittlewood.lean#L546"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
    },
    "id": "cea385dac1d112850bc06971123e5c0fa2db07a903a7bfbc542d04ce324857e5"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 560,
      "start_column": 2,
      "end_line": 560,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁴ : MetricSpace X\ninst✝³ : MeasurableSpace X\nμ : Measure X\ninst✝² : μ.IsDoubling A\ninst✝¹ : NormedAddCommGroup E\nf : X → E\ninst✝ : ProperSpace X\nhf : LocallyIntegrable f μ\n⊢ LowerSemicontinuous (globalMaximalFunction μ 1 f)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L560"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-20T19:02:09+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a135885236f8f9812986da33746dc9973c1d95f6ba49bded65d807027401a0be"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "f24f307dc53f01080bbe6b549e4ab55c63c4079e",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 618,
      "start_column": 2,
      "end_line": 618,
      "end_column": 7,
      "file": "Carleson/ToMathlib/WeakType.lean"
    },
    "debug_info": {
      "goal": "ε : Type u_3\ninst✝⁵ : TopologicalSpace ε\ninst✝⁴ : ContinuousENorm ε\n𝕜 : Type u_12\nE' : Type u_13\nα : Type u_14\nα' : Type u_15\ninst✝³ : NormedAddCommGroup E'\n_x : MeasurableSpace α\n_x' : MeasurableSpace α'\nT : (α → ε) → α' → E'\np p' : ℝ≥0∞\nμ : Measure α\nν : Measure α'\nc : ℝ≥0\nh : HasWeakType T p p' μ ν c\ninst✝² : NormedRing 𝕜\ninst✝¹ : MulActionWithZero 𝕜 E'\ninst✝ : IsBoundedSMul 𝕜 E'\nk : 𝕜\nf : α → ε\nhf : MemLp f p μ\n⊢ wnorm ((k • T) f) p' ν ≤ ↑(‖k‖₊ * c) * eLpNorm f p μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/f24f307dc53f01080bbe6b549e4ab55c63c4079e/Carleson/ToMathlib/WeakType.lean#L618"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-03T02:15:11.073010+00:00"
    },
    "id": "688b3e0133f891911b1757ec0b89288ac24a5d49c47c3a0d8ac4b0762edbf08f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf₁ f₂ g₁ g₂ : X → ℂ\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nh2u : 𝓘 u₁ ≤ 𝓘 u₂\nhf₁ : Bornology.IsBounded (range f₁)\nh2f₁ : HasCompactSupport f₁\nhf₂ : Bornology.IsBounded (range f₂)\nh2f₂ : HasCompactSupport f₂\n⊢ ↑‖∫ (x : X),\n          adjointCarlesonSum ((fun x => t.𝔗 x) u₁) g₁ x *\n            (starRingEnd ℂ) (adjointCarlesonSum ((fun x => t.𝔗 x) u₂) g₂ x)‖₊ ≤\n    ↑(C7_4_4 a n) *\n        eLpNorm (fun x => ((↑(𝓘 u₁) ∩ ↑(𝓘 u₂)).indicator (t.adjointBoundaryOperator u₁ g₁) x).toReal) 2 volume *\n      eLpNorm (fun x => ((↑(𝓘 u₁) ∩ ↑(𝓘 u₂)).indicator (t.adjointBoundaryOperator u₂ g₂) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9a8e695223cd668091caf9069e8a3380828a4186c792edfeaa3281246711802a"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf₁ f₂ g₁ g₂ : X → ℂ\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nhf₁ : Bornology.IsBounded (range f₁)\nh2f₁ : HasCompactSupport f₁\nhf₂ : Bornology.IsBounded (range f₂)\nh2f₂ : HasCompactSupport f₂\n⊢ ↑‖∫ (x : X),\n          adjointCarlesonSum ((fun x => t.𝔗 x) u₁) g₁ x *\n            (starRingEnd ℂ) (adjointCarlesonSum ((fun x => t.𝔗 x) u₂) g₂ x)‖₊ ≤\n    ↑(C7_4_4 a n) *\n        eLpNorm (fun x => ((↑(𝓘 u₁) ∩ ↑(𝓘 u₂)).indicator (t.adjointBoundaryOperator u₁ g₁) x).toReal) 2 volume *\n      eLpNorm (fun x => ((↑(𝓘 u₁) ∩ ↑(𝓘 u₂)).indicator (t.adjointBoundaryOperator u₂ g₂) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "21e98d33c842da0b8a9dfa507c8c0a3b218b2a126cc0bd736f0e22d1dc343bac"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 255,
      "start_column": 2,
      "end_line": 255,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn j : ℕ\nt : Forest X n\nf : X → ℂ\nhj : j < 2 ^ n\nhg : BoundedCompactSupport f\nh2f : ∀ (x : X), ‖f x‖ ≤ G.indicator 1 x\n⊢ eLpNorm (∑ u ∈ {p | p ∈ t.rowDecomp j}, adjointCarlesonSum ((fun x => t.𝔗 x) u) f) 2 volume ≤\n    ↑(C7_7_2_1 a n) * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5ec26505c5d27a1809261c859101c4ca93a0703ed52561c1971d211a82b08b23"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 262,
      "start_column": 2,
      "end_line": 262,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn j : ℕ\nt : Forest X n\nu : 𝔓 X\nf : X → ℂ\nhj : j < 2 ^ n\nhf : BoundedCompactSupport f\nh2f : ∀ (x : X), ‖f x‖ ≤ G.indicator 1 x\n⊢ eLpNorm ((∑ u ∈ {p | p ∈ t.rowDecomp j}, F.indicator) (adjointCarlesonSum ((fun x => t.𝔗 x) u) f)) 2 volume ≤\n    ↑(C7_7_2_2 a n) * dens₂ (⋃ u ∈ t, (fun x => t.𝔗 x) u) ^ 2⁻¹ * eLpNorm f 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "189f0b1e011dcc5f7972e95e055f27bd5655a2de5faff1d289fe40c78149ca6d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 276,
      "start_column": 2,
      "end_line": 276,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn j j' : ℕ\nt : Forest X n\nf₁ f₂ : X → ℂ\nhjj' : j < j'\nhj' : j' < 2 ^ n\nhf₁ : Bornology.IsBounded (range f₁)\nh2f₁ : HasCompactSupport f₁\nh3f₁ : ∀ (x : X), ‖f₁ x‖ ≤ G.indicator 1 x\nhf₂ : Bornology.IsBounded (range f₂)\nh2f₂ : HasCompactSupport f₂\nh3f₂ : ∀ (x : X), ‖f₂ x‖ ≤ G.indicator 1 x\n⊢ ↑‖∫ (x : X),\n          (∑ u ∈ {p | p ∈ t.rowDecomp j}, adjointCarlesonSum ((fun x => t.𝔗 x) u) f₁ x) *\n            ∑ u ∈ {p | p ∈ t.rowDecomp j'}, adjointCarlesonSum ((fun x => t.𝔗 x) u) f₂ x‖₊ ≤\n    ↑(C7_7_3 a n) * eLpNorm f₁ 2 volume * eLpNorm f₂ 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9b07894f7d8ad30e35e87d859858543d5fc2574fc7497d546e08d9fdc540301f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 346,
      "start_column": 2,
      "end_line": 346,
      "end_column": 7,
      "file": "Carleson/ForestOperator/Forests.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\n𝔉 : Forest X n\nf g : X → ℂ\nhf : Measurable f\nh2f : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhg : Measurable g\nh2g : Bornology.IsBounded (support g)\n⊢ ↑‖∫ (x : X), (starRingEnd ℂ) (g x) * ∑ u ∈ {p | p ∈ 𝔉}, carlesonSum ((fun x => 𝔉.𝔗 x) u) f x‖₊ ≤\n    ↑(C2_0_4 (↑a) q n) * dens₂ (⋃ u ∈ 𝔉, (fun x => 𝔉.𝔗 x) u) ^ (q⁻¹ - 2⁻¹) * eLpNorm f 2 volume * eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/Forests.lean#L346"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6e86ac46e8b53c6748f5f525b75b04aa05b7d30bb539ceb386b3a703c7fe1d64"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7,
      "file": "Carleson/ForestOperator/RemainingTiles.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf : X → ℂ\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nh2u : 𝓘 u₁ ≤ 𝓘 u₂\nhf : Bornology.IsBounded (range f)\nh2f : HasCompactSupport f\nh3f : AEStronglyMeasurable f volume\n⊢ eLpNorm (approxOnCube (t.𝓙₆ u₁) fun x => ‖adjointCarlesonSum ((fun x => t.𝔗 x) u₂ \\ t.𝔖₀ u₁ u₂) f x‖) 2 volume ≤\n    ↑(C7_6_2 a n) * eLpNorm ((↑(𝓘 u₁)).indicator fun x => (MB volume 𝓑 c𝓑 r𝓑 (fun x => ‖f x‖) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "4d015f611f4aaf2a01974bcaff01986b9180ceeac03d5716da495e1d2717d512"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 385,
      "start_column": 2,
      "end_line": 385,
      "end_column": 7,
      "file": "Carleson/ForestOperator/RemainingTiles.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf₁ f₂ g₁ g₂ : X → ℂ\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nh2u : 𝓘 u₁ ≤ 𝓘 u₂\nhf₁ : Bornology.IsBounded (range f₁)\nh2f₁ : HasCompactSupport f₁\nhf₂ : Bornology.IsBounded (range f₂)\nh2f₂ : HasCompactSupport f₂\n⊢ ↑‖∫ (x : X),\n          adjointCarlesonSum ((fun x => t.𝔗 x) u₁) g₁ x *\n            (starRingEnd ℂ) (adjointCarlesonSum ((fun x => t.𝔗 x) u₂ \\ t.𝔖₀ u₁ u₂) g₂ x)‖₊ ≤\n    ↑(C7_4_6 a n) * eLpNorm (fun x => ((↑(𝓘 u₁)).indicator (t.adjointBoundaryOperator u₁ g₁) x).toReal) 2 volume *\n      eLpNorm (fun x => ((↑(𝓘 u₁)).indicator (t.adjointBoundaryOperator u₂ g₂) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/RemainingTiles.lean#L385"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "8cb6159b07625d48c00c7d86fc540744d67a6e3e114eed79458f2bbb660a8e3e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1471,
      "start_column": 2,
      "end_line": 1471,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf : X → ℂ\nJ : Grid X\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nh2u : 𝓘 u₁ ≤ 𝓘 u₂\nhJ : J ∈ t.𝓙₅ u₁ u₂\nhf : BoundedCompactSupport f\n⊢ ↑(⨆ x ∈ ball (c J) (8 * ↑D ^ s J), ‖adjointCarlesonSum ((fun x => t.𝔗 x) u₂ ∩ t.𝔖₀ u₁ u₂) f x‖₊) ≤\n    ⨅ x ∈ ball (c J) (8⁻¹ * ↑D ^ s J),\n      ↑‖adjointCarlesonSum ((fun x => t.𝔗 x) u₂) f x‖₊ + ↑(C7_5_10 a) * ⨅ x ∈ J, MB volume 𝓑 c𝓑 r𝓑 (fun x => ‖f x‖) x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1471"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3e5af1872ae08407ee90e3eac0d1240ca0de39efcceedca0bf7b85f740c605a8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1489,
      "start_column": 2,
      "end_line": 1489,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf₁ f₂ : X → ℂ\nJ : Grid X\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nh2u : 𝓘 u₁ ≤ 𝓘 u₂\nhJ : J ∈ t.𝓙₅ u₁ u₂\nhf₁ : Bornology.IsBounded (range f₁)\nh2f₁ : HasCompactSupport f₁\nhf₂ : Bornology.IsBounded (range f₂)\nh2f₂ : HasCompactSupport f₂\n⊢ HolderOnWith\n    (C7_5_4 a *\n        ((⨅ x ∈ ball (c J) (8⁻¹ * ↑D ^ s J), ‖adjointCarlesonSum ((fun x => t.𝔗 x) u₁) f₁ x‖₊) +\n          (⨅ x ∈ J, MB volume 𝓑 c𝓑 r𝓑 (fun x => ‖f₁ x‖) x).toNNReal) *\n      ((⨅ x ∈ ball (c J) (8⁻¹ * ↑D ^ s J), ‖adjointCarlesonSum ((fun x => t.𝔗 x) u₂) f₂ x‖₊) +\n        (⨅ x ∈ J, MB volume 𝓑 c𝓑 r𝓑 (fun x => ‖f₂ x‖) x).toNNReal))\n    nnτ (t.holderFunction u₁ u₂ f₁ f₂ J) (ball (c J) (8 * ↑D ^ s J))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1489"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f74815f5814774759ce140182d237b651e2816c81d4a7c7717e673e78cd0d9c0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1590,
      "start_column": 2,
      "end_line": 1590,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf₁ f₂ g₁ g₂ : X → ℂ\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nh2u : 𝓘 u₁ ≤ 𝓘 u₂\nhf₁ : Bornology.IsBounded (range f₁)\nh2f₁ : HasCompactSupport f₁\nhf₂ : Bornology.IsBounded (range f₂)\nh2f₂ : HasCompactSupport f₂\n⊢ ↑‖∫ (x : X),\n          adjointCarlesonSum ((fun x => t.𝔗 x) u₁) g₁ x *\n            (starRingEnd ℂ) (adjointCarlesonSum ((fun x => t.𝔗 x) u₂ ∩ t.𝔖₀ u₁ u₂) g₂ x)‖₊ ≤\n    ↑(C7_4_5 a n) * eLpNorm (fun x => ((↑(𝓘 u₁)).indicator (t.adjointBoundaryOperator u₁ g₁) x).toReal) 2 volume *\n      eLpNorm (fun x => ((↑(𝓘 u₁)).indicator (t.adjointBoundaryOperator u₂ g₂) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/ForestOperator/LargeSeparation.lean#L1590"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "26e629ab562912a8106cd781ac490c4717fde3b0b5d65acc2036af727f39a87c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 343,
      "start_column": 83,
      "end_line": 343,
      "end_column": 88,
      "file": "Carleson/Antichain/AntichainTileCount.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nϑ : Θ X\nN : ℕ\n⊢ ∑ p ∈ 𝔄_aux 𝔄 ϑ N, volume (E p ∩ G) ≤ ↑(C_6_3_4 a N) * dens₁ ↑𝔄 * volume (⋃ p ∈ 𝔄, ↑(𝓘 p))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L343"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-11-16T17:32:56+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "adc132913be3022f3730af799610f485f01120cd7ab74a685fb71670fef79372"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 357,
      "start_column": 2,
      "end_line": 357,
      "end_column": 7,
      "file": "Carleson/Antichain/AntichainTileCount.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 𝔄' : Finset (𝔓 X)\nh_le : 𝔄' ⊆ 𝔄\nϑ : Θ X\n⊢ eLpNorm\n      (∑ 𝔭 ∈ 𝔄',\n        (1 + dist_{𝔠 𝔭 ,↑D ^ 𝔰 𝔭 / 4} (𝒬 𝔭) ϑ) ^ (-1 / (2 * ↑a ^ 2 + ↑a ^ 3)) • (E 𝔭).indicator 1 * G.indicator 1)\n      (↑(Antichain.p a)) volume ≤\n    ↑(C_6_1_6 a) * dens₁ ↑𝔄 ^ (1 / ↑(Antichain.p a)) * volume (⋃ p ∈ 𝔄, ↑(𝓘 p)) ^ (1 / ↑(Antichain.p a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainTileCount.lean#L357"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-28T18:13:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "06f3fc55faced5482011d84f9d1ae1d8acaf7f54de575585ad39e36918fc8c96"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 329,
      "start_column": 6,
      "end_line": 329,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\np₁ : ℝ≥0 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp₁ : p₁ = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp₁_ge : 1 ≤ p₁\nhp₁_lt : p₁ < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < ⊤\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) (↑p₁) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p₁ 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n            (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume ≤\n    ↑(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))⁻¹) *\n      eLpNorm f 2 volume\nx✝ : X\n⊢ 3 * (2 * ↑nnq / (↑nnq + 1)) - 2 = ↑(3 * (2 * nnq / (nnq + 1)) - 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L329"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "8c1765e70683251fea028a23ac0b7340c8480c10ec4b5843d5d4d2fd814e4678"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 334,
      "start_column": 6,
      "end_line": 334,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\np₁ : ℝ≥0 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp₁ : p₁ = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp₁_ge : 1 ≤ p₁\nhp₁_lt : p₁ < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < ⊤\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) (↑p₁) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p₁ 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n            (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume ≤\n    ↑(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))⁻¹) *\n      eLpNorm f 2 volume\n⊢ ↑(2 ^ (2 * a)) * (3 * (↑(2 * nnq) / ↑(nnq + 1)) - 2) / (2 * (↑(2 * nnq) / ↑(nnq + 1)) - 2) =\n    ↑(CMB (↑(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        ↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))⁻¹)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "da54b74fccee08845a7f0951246a3ae63d24ea0c97c518704d24d356956d5b72"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 312,
      "start_column": 6,
      "end_line": 312,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\np₁ : ℝ≥0 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp₁ : p₁ = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp₁_ge : 1 ≤ p₁\nhp₁_lt : p₁ < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < ⊤\n⊢ HasStrongType (fun f x => (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) (↑p₁) f x).toReal) 2 2 volume volume\n    (C2_0_6 (2 ^ a) p₁ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/Antichain/AntichainOperator.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "50248e80408268fca85717aa466c8a09571a3e7de3f6820511951d7dea65568f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 379,
      "start_column": 86,
      "end_line": 379,
      "end_column": 91,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nha : 4 ≤ a\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\ng : X → ℂ\nhg : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 ≤ 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) ≤ nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)⁻¹ ≤ 3 * (nnq - 1)⁻¹\n⊢ (MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) fun x => ‖f x‖) ≤\n    maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n      (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) fun x =>\n      ‖f x‖ * (dens₂ ↑𝔄).toReal ^ ((2 * ↑nnq / (↑nnq + 1))⁻¹ - 2⁻¹)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L379"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a65910d5fb7f63889e11885ed3543e8ccf74f82360ccd62d73d8aac6d7d90403"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 385,
      "start_column": 4,
      "end_line": 385,
      "end_column": 9,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nha : 4 ≤ a\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\ng : X → ℂ\nhg : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 ≤ 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) ≤ nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)⁻¹ ≤ 3 * (nnq - 1)⁻¹\nhMB_le :\n  (MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) fun x => ‖f x‖) ≤\n    maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n      (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) fun x =>\n      ‖f x‖ * (dens₂ ↑𝔄).toReal ^ ((2 * ↑nnq / (↑nnq + 1))⁻¹ - 2⁻¹)\n⊢ eLpNorm (fun x => ↑↑(MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) f x).toNNReal) 2 volume ≤\n    eLpNorm\n        (fun x =>\n          ↑↑(maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n                  (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens₂ ↑𝔄",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L385"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "e66468d344f740ee9c32dfd9cba7699cb20dedd7ce74cb44e72738ffa76b9016"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 420,
      "start_column": 6,
      "end_line": 420,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nha : 4 ≤ a\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\ng : X → ℂ\nhg : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 ≤ 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) ≤ nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)⁻¹ ≤ 3 * (nnq - 1)⁻¹\nhMB_le :\n  (MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) fun x => ‖f x‖) ≤\n    maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n      (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) fun x =>\n      ‖f x‖ * (dens₂ ↑𝔄).toReal ^ ((2 * ↑nnq / (↑nnq + 1))⁻¹ - 2⁻¹)\nhMB_le' :\n  eLpNorm (fun x => ↑↑(MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) f x).toNNReal) 2 volume ≤\n    eLpNorm\n        (fun x =>\n          ↑↑(maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n                  (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens₂ ↑𝔄\nh_div_le_div :\n  (3 * (2 * ↑nnq / (↑nnq + 1)) - 2) / (2 * (2 * ↑nnq / (↑nnq + 1)) - 2) ≤ 2 ^ 2 / (2 * ↑nnq / (↑nnq + 1) - 1)\nhMBp₁_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n            (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) f x).toReal)\n      2 volume ≤\n    2 ^ (2 * a + 2) / (2 * ↑nnq / (↑nnq + 1) - 1) * eLpNorm f 2 volume\n⊢ ↑‖∫ (x : X), (starRingEnd ℂ) (g x) * ∑ p ∈ 𝔄, carlesonOn p f x‖₊ ≤\n    eLpNorm g 2 volume * eLpNorm (∑ p ∈ 𝔄, carlesonOn p f) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L420"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "fdaac9a729117fda775fcc30f221a6df6b6bbe2d5ef259c2aafeef241aa53a1b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 434,
      "start_column": 8,
      "end_line": 434,
      "end_column": 13,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nha : 4 ≤ a\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\ng : X → ℂ\nhg : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 ≤ 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) ≤ nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)⁻¹ ≤ 3 * (nnq - 1)⁻¹\nhMB_le :\n  (MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) fun x => ‖f x‖) ≤\n    maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n      (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) fun x =>\n      ‖f x‖ * (dens₂ ↑𝔄).toReal ^ ((2 * ↑nnq / (↑nnq + 1))⁻¹ - 2⁻¹)\nhMB_le' :\n  eLpNorm (fun x => ↑↑(MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) f x).toNNReal) 2 volume ≤\n    eLpNorm\n        (fun x =>\n          ↑↑(maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n                  (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens₂ ↑𝔄\nh_div_le_div :\n  (3 * (2 * ↑nnq / (↑nnq + 1)) - 2) / (2 * (2 * ↑nnq / (↑nnq + 1)) - 2) ≤ 2 ^ 2 / (2 * ↑nnq / (↑nnq + 1) - 1)\nhMBp₁_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n            (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) f x).toReal)\n      2 volume ≤\n    2 ^ (2 * a + 2) / (2 * ↑nnq / (↑nnq + 1) - 1) * eLpNorm f 2 volume\nh2 : 2 ^ (107 * a ^ 3) = ↑‖2 ^ (107 * a ^ 3)‖₊\nz : X\n⊢ MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) f z ≠ ⊤",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L434"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d4b881520eea376d1e741f6574d04f2f72ae4a9ea8529be360fb69f16e36b50f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 449,
      "start_column": 6,
      "end_line": 449,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nha : 4 ≤ a\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\ng : X → ℂ\nhg : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nx : X\nhf1 : f = F.indicator 1 * f\nhq0 : 0 < nnq\nh1q' : 1 ≤ 2 * nnq / (nnq + 1)\nhqq' : 2 * nnq / (nnq + 1) ≤ nnq\nhq'_inv : (2 * nnq / (nnq + 1) - 1)⁻¹ ≤ 3 * (nnq - 1)⁻¹\nhMB_le :\n  (MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) fun x => ‖f x‖) ≤\n    maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n      (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) fun x =>\n      ‖f x‖ * (dens₂ ↑𝔄).toReal ^ ((2 * ↑nnq / (↑nnq + 1))⁻¹ - 2⁻¹)\nhMB_le' :\n  eLpNorm (fun x => ↑↑(MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) f x).toNNReal) 2 volume ≤\n    eLpNorm\n        (fun x =>\n          ↑↑(maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n                  (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) f x).toNNReal)\n        2 volume *\n      dens₂ ↑𝔄\nh_div_le_div :\n  (3 * (2 * ↑nnq / (↑nnq + 1)) - 2) / (2 * (2 * ↑nnq / (↑nnq + 1)) - 2) ≤ 2 ^ 2 / (2 * ↑nnq / (↑nnq + 1) - 1)\nhMBp₁_le :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n            (2 * (2 * ↑nnq / (↑nnq + 1)) / (3 * (2 * ↑nnq / (↑nnq + 1)) - 2)) f x).toReal)\n      2 volume ≤\n    2 ^ (2 * a + 2) / (2 * ↑nnq / (↑nnq + 1) - 1) * eLpNorm f 2 volume\n⊢ eLpNorm (fun x => ↑↑(MB volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) f x).toNNReal) 2 volume ≤\n    2 ^ (2 * a + 2) *\n      (↑(2 * nnq / (nnq + 1) - 1)⁻¹ * (dens₂ ↑𝔄 ^ ((2 * ↑nnq / (↑nnq + 1))⁻¹ - 2⁻¹) * eLpNorm f 2 volume))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L449"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2024-08-09T16:06:25+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "da5097657100e02172a7422229c556d28bf7428304eeb7d36a8e9a5fb237db93"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 511,
      "start_column": 51,
      "end_line": 511,
      "end_column": 56,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Set (𝔓 X)\nf g : X → ℂ\nhf : Measurable f\nhf1 : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) 𝔄\n⊢ ↑‖∫ (x : X), (starRingEnd ℂ) (g x) * carlesonSum 𝔄 f x‖₊ ≤\n    ↑(C_2_0_3 ↑a nnq) * dens₁ 𝔄 ^ ((q - 1) / (8 * ↑a ^ 4)) * dens₂ 𝔄 ^ (q⁻¹ - 2⁻¹) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/Antichain/AntichainOperator.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-01-09T16:08:11+01:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "4d02ec0de229e53442cd8d7d10fef21977c2bbb137a6e7a812b11e2cc537ad2d"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 359,
      "start_column": 2,
      "end_line": 359,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\np p' : 𝔓 X\nhle : 𝔰 p' ≤ 𝔰 p\ng : X → ℂ\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\n⊢ ↑‖∫ (y : X), adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y)‖₊ ≤\n    ↑(C_6_1_5 a) * (1 + dist_{𝔠 p' ,↑D ^ 𝔰 p' / 4} (𝒬 p') (𝒬 p)) ^ (-1 / (2 * ↑a ^ 2 + ↑a ^ 3)) /\n        ↑(volume.nnreal ↑(𝓘 p)) *\n      ∫ (y : X) in E p', ‖g y‖ * ∫ (y : X) in E p, ‖g y‖",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L359"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "edffe990c24946bdfd096d7d425b0c720841deb29ce19499d59cfc36be0645f7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "case intro\nX : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\np p' : 𝔓 X\nhle : 𝔰 p' ≤ 𝔰 p\ng : X → ℂ\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nhpp' : ¬↑(𝓘 p) ⊆ ball (𝔠 p) (15 * ↑D ^ 𝔰 p)\nh0 : ¬‖∫ (y : X), adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y)‖₊ = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y) ≠ 0\n⊢ ↑(𝓘 p) ⊆ ball (𝔠 p) (15 * ↑D ^ 𝔰 p)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "44ce6540a88da0802e894ee902ce4c82444ab5be883869d39a93054cd1579559"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 368,
      "start_column": 84,
      "end_line": 368,
      "end_column": 89,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\np p' : 𝔓 X\nhle : 𝔰 p' ≤ 𝔰 p\ng : X → ℂ\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nhpp' : ¬↑(𝓘 p) ⊆ ball (𝔠 p) (15 * ↑D ^ 𝔰 p)\nh0 : ¬‖∫ (y : X), adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y)‖₊ = 0\n⊢ ∃ y, adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y) ≠ 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/Antichain/TileCorrelation.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0ae5a937f31822b7e0e1866f76c40b62dd3c1e5691225fb8795f24a418d1c197"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 121,
      "start_column": 2,
      "end_line": 121,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\nx x' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\nhx : dist x x' ≤ r\n⊢ ↑(nndist (czOperator K r g x) (czOperator K r g x')) ≤ ↑(C10_1_2 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d24c562a103f9d5c5263b1edb4991cdd2efb5914bdd754323a3ae5da4bb9bf3b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 131,
      "start_column": 2,
      "end_line": 131,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr R : ℝ\nK : X → X → ℂ\nx x' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : r ∈ Ioc 0 R\nhx : dist x x' ≤ R / 4\n⊢ ‖czOperator K R g x‖ₑ ≤\n    ‖czOperator K r ((ball x (R / 2))ᶜ.indicator g) x'‖ₑ + ↑(C10_1_3 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0b9032e3a8c6b06e3363eeb38edeeacd8b8b1e21bb113cbef55de9d6e6e08aad"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr R : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\n⊢ volume {x' | x' ∈ ball x (R / 4) ∧ 4 * globalMaximalFunction volume 1 (czOperator K r g) x < ‖czOperator K r g x'‖ₑ} ≤\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "96ed4696e3ff93212edaa6857e86be54312e9e7c762e4b49b6aa69aa1dce032f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 153,
      "start_column": 2,
      "end_line": 153,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr R : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\n⊢ volume\n      {x' |\n        x' ∈ ball x (R / 4) ∧\n          ↑(C10_1_4 a) * globalMaximalFunction volume 1 g x < ‖czOperator K r ((ball x (R / 2)).indicator g) x'‖ₑ} ≤\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L153"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "b4b1117d1cddd63c605a19612f286428bcde49fe93b21cdf6c8ef9aa261d48b2"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr R : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : r ∈ Ioc 0 R\n⊢ ‖czOperator K R g x‖ₑ ≤\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + ↑(C10_1_5 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "4f535c614e2276213415136b01e0d556f2972cb9853994652b369b213132f397"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 175,
      "start_column": 2,
      "end_line": 175,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n⊢ HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "10a0528a1cd1de6cd54bcfc5f41dc722d76f5229096d9dd69b0b3049dbdddbbb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 183,
      "start_column": 2,
      "end_line": 183,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : 0 ≤ r\n⊢ HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume (C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "f0d5865f4327a57b55c4dd78ad977758ecd22d168459b7f309fbebddd35ff44b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 190,
      "start_column": 2,
      "end_line": 190,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nK : X → X → ℂ\nx' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\nf : X → ℂ\nhf : BoundedFiniteSupport f volume\nR₁ : ℝ\n⊢ Continuous fun R₂ => ∫ (y : X) in {y | dist x' y ∈ Ioo R₁ R₂}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L190"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "0cb8ab414f4fae5a46c97491e27da5e532b8557bbcb82d7ecd79398c9517f44b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nK : X → X → ℂ\nx' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\nf : X → ℂ\nhf : BoundedFiniteSupport f volume\nR₂ : ℝ\n⊢ Continuous fun R₁ => ∫ (y : X) in {y | dist x' y ∈ Ioo R₁ R₂}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "79798fe1e067378119b2470abc930f8f47c29dc8edf9c8ae2aa186e95802b96c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nf : X → ℂ\nhf : BoundedFiniteSupport f volume\n⊢ nontangentialOperator K f x =\n    ⨆ R₁, ⨆ R₂, ⨆ (_ : R₁ < R₂), ⨆ x', ⨆ (_ : dist x x' ≤ R₁), ‖∫ (y : X) in ball x' R₂ \\ ball x' R₁, K x' y * f y‖ₑ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f75932ec36b847e24e448f9f58942e52044d986e1e03bf721a6b45525dbcdf33"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 216,
      "start_column": 2,
      "end_line": 216,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume (C10_1_6 a)\n⊢ HasStrongType (nontangentialOperator K) 2 2 volume volume (C10_0_2 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "b295d887e2ebe1477bd0d8fe9b63eb5d7df204ff8de62209e1d2f1d9c97c01f1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "568cd953edd45f2bc231af421de6bfdb23a7cca8",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/MainTheorem.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.IsConjExponent q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, carlesonOperator K f x ≤ ↑(C10_0_1 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/568cd953edd45f2bc231af421de6bfdb23a7cca8/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-01T05:55:53.575852+00:00"
    },
    "id": "55316ee7ff6bda7ee05ebd30d9336efbccd10baa858aaaf4189189bade66565c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 31,
      "end_line": 36,
      "end_column": 36,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nthis : C10_2_1 a = ↑(defaultA a) ^ 4\n⊢ ∀ (f : X → ℂ), MemLp f 1 volume → ∀ᵐ (x : X), globalMaximalFunction volume 1 f x ≠ ⊤",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6ac2db58396b0d5a22eac364b7897d17af11ae2c24dd334ab114c859afb215d3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 50,
      "start_column": 2,
      "end_line": 50,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nhf : BoundedFiniteSupport f volume\n⊢ ∀ᵐ (x : X),\n    ∃ c r,\n      Tendsto (fun i => ⨍ (y : X) in ball (c i) (r i), f y) atTop (𝓝 (f x)) ∧\n        Tendsto r atTop (𝓝[>] 0) ∧ ∀ (i : ℕ), x ∈ ball (c i) (r i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6ab79ba19ffd9d83a9efd5388b98fc21700dbe0057fb2b8f629355096e42b702"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nO : Set X\nhO : IsOpen O ∧ O ≠ univ\n⊢ ∃ c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) ∧\n      ⋃ i, ball (c i) (3 * r i) = O ∧\n        (∀ (i : ℕ), ¬Disjoint (ball (c i) (7 * r i)) Oᶜ) ∧\n          ∀ x ∈ O, Cardinal.mk ↑{i | x ∈ ball (c i) (3 * r i)} ≤ ↑(2 ^ (6 * a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "35d3cfe2ed3aedcece1c8d313be0fb81b531c0944b6610729384c0c547c840fc"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 82,
      "start_column": 2,
      "end_line": 82,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nh : ¬GeneralCase f α\n⊢ volume univ < ⊤",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "76edf11015d2f4e455b520626d92be74d43df7b418716a280bb9c24a6e9b60c6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\n⊢ IsOpen (globalMaximalFunction volume 1 f ⁻¹' Ioi α) ∧ globalMaximalFunction volume 1 f ⁻¹' Ioi α ≠ univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d7951e9db5640cfd60b6d0161639c6ca82c9aa0645c59afcc612c840e7b8111"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\ny : X\nhy : α < globalMaximalFunction volume 1 f y\n⊢ {i | y ∈ czBall3 hf hX i}.Finite",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "661be72b888469d048015fea1f8c9d57038fc53605017cf96a5dd937b7bdb83f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\ni : ℕ\n⊢ czBall hf hX i ⊆ czPartition hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "ea0a98ee2716e72972242a884616109837af0f597078a6106827fd6620b58aef"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\n⊢ univ.PairwiseDisjoint fun i => czPartition hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "bc1271ca08a2e565e762e5fdcd27f56d20d2ce16d3fd506a42ff28e2ecff551e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nx : X\ni j : ℕ\nhi : x ∈ czPartition hf hX i\nhj : x ∈ czPartition hf hX j\n⊢ i = j",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "bef8fe270fc7854e5072d5f060598b8e16f7ca0ca926c01bb2db901821d1d994"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\n⊢ ⋃ i, czPartition hf hX i = globalMaximalFunction volume 1 f ⁻¹' Ioi α",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a4881259c4913b7a297f4e4f189fa8db9be67ed1a9577dadf4d8368a150619bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nτ C r R : ℝ\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\nx✝ x' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nx : X\n⊢ ∑ᶠ (i : ℕ), czRemainder' hf hX i x = czRemainder hf α x",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T17:21:05+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "e9485aa0ceb780aa7fd852f0848204116d95496da780b1c892b80daad0a10300"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 202,
      "start_column": 2,
      "end_line": 202,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\n⊢ Measurable (czApproximation hf α)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "8d0e7125c9131b2e2fd18f757ffeb3b3c78c2cf47e5fe55ade95ac2376652080"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ < α\n⊢ ∀ᵐ (x : X), ‖czApproximation hf α x‖ₑ ≤ 2 ^ (3 * a) * α",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c5fae2a6f3ed0f2133638fb2e7851a7a9d12cfb67471f4ed6314796db5417547"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\n⊢ ∀ᵐ (x : X), ‖czApproximation hf α x‖ₑ ≤ 2 ^ (3 * a) * α",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "f99dc4074ffc88be450cc84023bdb9e6006f7291f13d937c1bd05a08030f7806"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhα : 0 < α\n⊢ eLpNorm (czApproximation hf α) 1 volume ≤ eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "92ca7c7a65aee32ce23b03e64882af6a75d379ffc8da735c4f0f852e0c9039d7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 230,
      "start_column": 2,
      "end_line": 230,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\ni : ℕ\n⊢ support (czRemainder' hf hX i) ⊆ czBall3 hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "8cb9b98a34d7e4033311fb7ef06bedd0f504ad8eafd787b6fc9ba27c9ada6204"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 236,
      "start_column": 2,
      "end_line": 236,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\ni : ℕ\n⊢ ∫ (x : X), czRemainder' hf hX i x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "57e3d229379484c7daf59b8728f3b24972459d5a69756e708c2eeb1464f44016"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 241,
      "start_column": 2,
      "end_line": 241,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ ∫ (x : X), czRemainder hf α x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0859f73bf06334982076ba8ef93b00810fda286cd33540d19e049f703b659f06"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\ni : ℕ\n⊢ eLpNorm (czRemainder' hf hX i) 1 volume ≤ 2 ^ (2 * a + 1) * α * volume (czBall3 hf hX i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c621919be3af7d0b02fef8b661d98ef314017303af4c879916217944935339bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 252,
      "start_column": 2,
      "end_line": 252,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ eLpNorm (czRemainder hf α) 1 volume ≤ 2 ^ (2 * a + 1) * α * volume univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L252"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "576e1bd794657e644ec7aca795dd3f3a9791a3aa8dd3bbd75d7bd022d8e842c0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\n⊢ ∑' (i : ℕ), volume (czBall3 hf hX i) ≤ 2 ^ (4 * a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a367981a94d8d52068531989a85ecbb5fa1d0efb88b129fdb2f928bd47517229"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 262,
      "start_column": 2,
      "end_line": 262,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ volume univ ≤ 2 ^ (4 * a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "f4abb6415f63d2fdcc807fd089730c9aadbf2bc009b5b3a94c36fb1b826e62d3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 268,
      "start_column": 2,
      "end_line": 268,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\n⊢ ∑' (i : ℕ), eLpNorm (czRemainder' hf hX i) 1 volume ≤ 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L268"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "33f6c66298c7e80eca6b4b4dc521d0bbea420eac7d881b7e14238a4e323f5989"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 274,
      "start_column": 2,
      "end_line": 274,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ eLpNorm (czRemainder hf α) 1 volume ≤ 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L274"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "98202fd18d17752300cdee85000ef432cbfd9f88595c7e0bb0a7e221625b2a9b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 292,
      "start_column": 2,
      "end_line": 292,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\n⊢ distribution (czOperator K r (czApproximation hf α)) (α / 2) volume ≤ ↑(C10_2_6 a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L292"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "01b926c6b7a70c907f205655a86e324866173858ca317c72a8647d1f4030b588"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 307,
      "start_column": 2,
      "end_line": 307,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\nhx : x ∈ (Ω hf α)ᶜ\nhX : GeneralCase f α\n⊢ ‖czOperator K r (czRemainder hf α) x‖ₑ ≤ 3 * czOperatorBound hf hX x + α / 8",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L307"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "a18a6174579adfc88f25bf9de4e93002f771db35b364318b5712401d66586e5e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 317,
      "start_column": 2,
      "end_line": 317,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\nhX : GeneralCase f α\n⊢ volume ((Ω hf α)ᶜ ∩ czOperatorBound hf hX ⁻¹' Ioi (α / 8)) ≤ ↑(C10_2_8 a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L317"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "0dba88cfa78cb53fd805d5fa5edce059644a81b5090c9633861f73d9b0c92dfb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "4a50e68d584e8b969077c9fccaade753eb7ef77a",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 328,
      "start_column": 2,
      "end_line": 328,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\nhX : GeneralCase f α\n⊢ distribution (czOperator K r (czRemainder hf α)) (α / 2) volume ≤ ↑(C10_2_9 a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/4a50e68d584e8b969077c9fccaade753eb7ef77a/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L328"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-06T23:35:01.286663+00:00"
    },
    "id": "c3655a201bc62093a5dabb7ad9fd9e981517d16735637f3b9bbf084f6cd3db19"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 344,
      "start_column": 2,
      "end_line": 344,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\n⊢ HasBoundedWeakType (czOperator K r) 1 1 volume volume (C10_0_3 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L344"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "84dd636a123b0d04f995de2b8db851c6dacdc0df4e39a318c0e5a5efb899f749"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 84,
      "start_column": 21,
      "end_line": 84,
      "end_column": 26,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "ρ : Weight 0\nc : ℂ\nx : GL (Fin 0) (DedekindDomain.FiniteAdeleRing ℤ ℚ)\n⊢ ⊤.FG",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L84"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-01-18T16:24:18+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "9e387459881cd06e272e824be590ae23b8dbeea7f8a795b138793d41827a9361"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 128,
      "start_column": 19,
      "end_line": 128,
      "end_column": 24,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ IsSmooth fun x => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "82d1219a31ec6248c082e52254b9ea0e5469453722467bd455f48ca7e8bab7e5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 129,
      "start_column": 21,
      "end_line": 129,
      "end_column": 26,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ ∀ (g : GL (Fin n) ℚ) (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing ℤ ℚ)) (y : GL (Fin n) ℝ),\n    (fun x => z)\n        (((algebraMap ℚ (DedekindDomain.FiniteAdeleRing ℤ ℚ)).GL (Fin n)) g * x, ((algebraMap ℚ ℝ).GL (Fin n)) g * y) =\n      (fun x => z) (x, y)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L129"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "6ca591f359cc5cfe62ef7ba54fe8a2445a82ffceb099ddc8af7ea10afd209a65"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 130,
      "start_column": 30,
      "end_line": 130,
      "end_column": 35,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ ∀ (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing ℤ ℚ)), IsSlowlyIncreasing fun y => (fun x => z) (x, y)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "acb487a3f803ef24437362c40783ccfc64dd3ed0312143596ae842f3acf31bb9"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 132,
      "start_column": 26,
      "end_line": 132,
      "end_column": 31,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ ∃ U, IsConstantOn U fun x => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:32:34+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "3e33fcaa7e39bed563d6e4aff873004a6260a2d06811154a0d3104466c513cba"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 131,
      "start_column": 23,
      "end_line": 131,
      "end_column": 28,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ ∀ (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing ℤ ℚ)),\n    FiniteDimensional ℂ\n      (↥(Z (GL (Fin n) ℝ) (Matrix (Fin n) (Fin n) ℝ)) ⧸\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) ℝ) (Matrix (Fin n) (Fin n) ℝ)).toLinearMap\n          (annihilator ⟨fun y => (fun x => z) (x, y), ⋯⟩))",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:29:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2d14df01adfe386a57e34463a79d0a34952873d53b218d69ae2cd9df1efbffbe"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 137,
      "start_column": 28,
      "end_line": 137,
      "end_column": 33,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "ρ : Weight 0\nz : ℂ\n⊢ ρ.IsTrivial",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L137"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "7308b79f890354ea9fd42f982e1334101ff8882e1e369f274cf2162ce59e77d1"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 138,
      "start_column": 14,
      "end_line": 138,
      "end_column": 19,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "ρ : Weight 0\n⊢ Function.LeftInverse (fun z => ofComplex z ρ ⋯) fun f => f.toFun 1",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "acf4aa7f710e488628f0cc7f15a91896a6cbdb0ce427d958d0e340411919c730"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 139,
      "start_column": 15,
      "end_line": 139,
      "end_column": 20,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "ρ : Weight 0\n⊢ Function.RightInverse (fun z => ofComplex z ρ ⋯) fun f => f.toFun 1",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/GlobalLanglandsConjectures/GLzero.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "313d43ba40c7115106eb34b2e8729d3f504d3a4cd15597114f845635c8d50803"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 67,
      "start_column": 87,
      "end_line": 67,
      "end_column": 92,
      "file": "FLT/HaarMeasure/MeasurableSpacePadics.lean"
    },
    "debug_info": {
      "goal": "p : ℕ\ninst✝ : Fact (Nat.Prime p)\ns : Set ℤ_[p]\n⊢ volume (Subtype.val '' s) = volume s",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/HaarMeasure/MeasurableSpacePadics.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4248b9ccf6199b196ebb612bb6ff5d1e4daf76992d0480cdfe62a068dbe79d3c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 324,
      "start_column": 93,
      "end_line": 324,
      "end_column": 98,
      "file": "FLT/Basic/Reductions.lean"
    },
    "debug_info": {
      "goal": "P : FreyPackage\n⊢ IsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L324"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-04-30T10:03:06+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2189ad07df84bb378d050a31805a1b39aa348c4bcc7fd1399b8309cbf8ec24dd"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 334,
      "start_column": 95,
      "end_line": 334,
      "end_column": 100,
      "file": "FLT/Basic/Reductions.lean"
    },
    "debug_info": {
      "goal": "P : FreyPackage\n⊢ ¬IsSimpleModule (ZMod P.p) (P.FreyCurve.torsionGaloisRepresentation P.p Qbar).asModule",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Basic/Reductions.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-04-30T10:03:06+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "410ec6dd9751afc45db92cf2f11470387a0ed41450c95a0d3be2793f315dda10"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 26,
      "end_line": 35,
      "end_column": 31,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst✝¹ : Field k\nE : WeierstrassCurve k\ninst✝ : E.IsElliptic\nn : ℕ\n⊢ ∀ (x : E.n_torsion n), n • x = 0",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T22:55:14+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "aad435e98450cc8eda7ac39deb77c6ff11556d4d50eba3ab1e97c6debebb802c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 39,
      "start_column": 91,
      "end_line": 39,
      "end_column": 96,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst✝¹ : Field k\nE : WeierstrassCurve k\ninst✝ : E.IsElliptic\nn : ℕ\nhn : 0 < n\n⊢ Finite (E.n_torsion n)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "cb8a28cde12be451040d5770e1012634fd01b89b2ed581e35d36e870d0deca49"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 44,
      "start_column": 38,
      "end_line": 44,
      "end_column": 43,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst✝² : Field k\nE : WeierstrassCurve k\ninst✝¹ : E.IsElliptic\ninst✝ : IsSepClosed k\nn : ℕ\nhn : ↑n ≠ 0\n⊢ Nat.card (E.n_torsion n) = n ^ 2",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-03-23T17:52:39+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "55e067881a3bc4db5dd8fdc930d16748550c26f26f88575d27b1df7d31413933"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 49,
      "start_column": 66,
      "end_line": 49,
      "end_column": 71,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "d : ℕ\nA : Type u_1\ninst✝ : AddCommGroup A\nn : ℕ\nhn : 0 < n\nr : ℕ\nh : ∀ (d : ℕ), d ∣ n → Nat.card ↥(Submodule.torsionBy ℤ A ↑d) = d ^ r\n⊢ ∃ φ, True",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-01T22:28:50+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "66701e276775a8dd04353eb1fd9883a918acb022aa8aefedce517788f5ae6950"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 55,
      "start_column": 56,
      "end_line": 55,
      "end_column": 61,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst✝² : Field k\nE : WeierstrassCurve k\ninst✝¹ : E.IsElliptic\ninst✝ : IsSepClosed k\nn : ℕ\nhn : ↑n ≠ 0\n⊢ ∃ φ, True",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L55"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-03-23T18:21:01+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "c796ca5dc0d4e3f5fe9881a7858514e417553f2de717e7690240cb4dc73fe01d"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 64,
      "start_column": 73,
      "end_line": 64,
      "end_column": 78,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst✝³ : Field k\nE : WeierstrassCurve k\ninst✝² : E.IsElliptic\nK : Type u\ninst✝¹ : Field K\ninst✝ : Algebra k K\n⊢ map E (AlgHom.id k K) = AddMonoidHom.id E⟮K⟯",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4fcf2fb55e3a98d5f1d6aa5a573795d7cef32383f7c213f3e1c13947a7ed6977"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 69,
      "start_column": 48,
      "end_line": 69,
      "end_column": 53,
      "file": "FLT/EllipticCurve/Torsion.lean"
    },
    "debug_info": {
      "goal": "k : Type u\ninst✝⁷ : Field k\nE : WeierstrassCurve k\ninst✝⁶ : E.IsElliptic\nK L M : Type u\ninst✝⁵ : Field K\ninst✝⁴ : Field L\ninst✝³ : Field M\ninst✝² : Algebra k K\ninst✝¹ : Algebra k L\ninst✝ : Algebra k M\nf : K →ₐ[k] L\ng : L →ₐ[k] M\n⊢ (map E g).comp (map E f) = map E (g.comp f)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/EllipticCurve/Torsion.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2024-11-30T14:53:27+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "4f65649d399b1e7211a7f204454bf8b25786f4755c28d5124477820cdbd0fb32"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 307,
      "start_column": 28,
      "end_line": 307,
      "end_column": 33,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "x : QHat\n⊢ (∃ N z, IsCoprime N z ∧ x = (1 / ↑↑N) ⊗ₜ[ℤ] z) ∧\n    ∀ (N₁ N₂ : ℕ+) (z₁ z₂ : ZHat),\n      IsCoprime N₁ z₁ ∧ IsCoprime N₂ z₂ ∧ (1 / ↑↑N₁) ⊗ₜ[ℤ] z₁ = (1 / ↑↑N₂) ⊗ₜ[ℤ] z₂ → N₁ = N₂ ∧ z₁ = z₂",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L307"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-06T01:01:13+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "575d2cf03b8e1b190f9460c549e6e9d5aebdd328d5045a25c142b9574e245895"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 472,
      "start_column": 66,
      "end_line": 472,
      "end_column": 71,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "⊢ unitsratsub ⊔ unitszHatsub = ⊤",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L472"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-06T01:54:08+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d8ab1086af92400d1e0380d15a45467deea7fec9e374a5c825c96c069c3e31b3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1052,
      "start_column": 29,
      "end_line": 1052,
      "end_column": 34,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "⊢ Function.Injective ⇑j₁",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1052"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "33b3f9cd03be709077d97d6ef55afbb006d2898a3b3672787c86ae7d431acfcb"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1059,
      "start_column": 29,
      "end_line": 1059,
      "end_column": 34,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "⊢ Function.Injective ⇑j₂",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1059"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "548f6e54bb2a1566d16586c1aa7c3db3e24b4f98b4831cbf2392ed436a0339b1"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1063,
      "start_column": 2,
      "end_line": 1063,
      "end_column": 7,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "z : D^\n⊢ ∃ N z', z = j₁ ((↑↑N)⁻¹ ⊗ₜ[ℤ] 1) * j₂ z'",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1063"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2787052271a8828db0e207fce679f14d06b8a668073ef9e75b1f74a474723eb3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1065,
      "start_column": 82,
      "end_line": 1065,
      "end_column": 87,
      "file": "FLT/AutomorphicRepresentation/Example.lean"
    },
    "debug_info": {
      "goal": "z : D^ˣ\n⊢ ∃ u v, ↑z = j₁ ↑u * j₂ ↑v",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicRepresentation/Example.lean#L1065"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-05-10T01:13:22+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "0189f8fb7c76b0126de4da39ec0923b904fae293f823025aa22d951c879d993b"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 172,
      "start_column": 2,
      "end_line": 172,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝¹ : Field F\ninst✝ : NumberField F\nv : HeightOneSpectrum (𝓞 F)\n⊢ IsOpen (localFullLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L172"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "918aec9a99e7efdf6acae4f19f1ff000d0f0099f69f15b8ae1b316e1debcb987"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 176,
      "start_column": 2,
      "end_line": 176,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝¹ : Field F\ninst✝ : NumberField F\nv : HeightOneSpectrum (𝓞 F)\n⊢ IsCompact (localFullLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L176"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "8e2146f4a30a231a6ec61953a7bcc51ec68dd4e083a7dd704cce2ca9124ba2d2"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 261,
      "start_column": 2,
      "end_line": 261,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝¹ : Field F\ninst✝ : NumberField F\nv : HeightOneSpectrum (𝓞 F)\n⊢ IsOpen (localTameLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L261"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "99a782dc181aa18fb17525521ae429273904e3c9e4fb090c48c5041cc34f6c36"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝¹ : Field F\ninst✝ : NumberField F\nv : HeightOneSpectrum (𝓞 F)\n⊢ IsCompact (localTameLevel v).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "248b4e4e5486e631159f9cea279a858ad0466f02199900a86296183031358d1f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 313,
      "start_column": 2,
      "end_line": 313,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝¹ : Field F\ninst✝ : NumberField F\nS : Finset (HeightOneSpectrum (𝓞 F))\n⊢ IsOpen (TameLevel S).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L313"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "6c7aa55333f8b9c8af3c3aefe47d0554f084198b4f6c91d4445d22955c00e61f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 316,
      "start_column": 2,
      "end_line": 316,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝¹ : Field F\ninst✝ : NumberField F\nS : Finset (HeightOneSpectrum (𝓞 F))\n⊢ IsCompact (TameLevel S).carrier",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L316"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-27T16:12:15+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d83950d603e9af205e68da765af229ff2154e74689a46b81a82e7d4ee37f189e"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 92,
      "start_column": 2,
      "end_line": 92,
      "end_column": 7,
      "file": "FLT/NumberField/Completion.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\nL : Type u_2\ninst✝³ : Field K\ninst✝² : Field L\ninst✝¹ : Algebra K L\nv : InfinitePlace K\ninst✝ : NumberField L\n⊢ Module.finrank v.Completion ((w : ExtensionPlace L v) → (↑w).Completion) =\n    Module.finrank v.Completion (L ⊗[K] v.Completion)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/Completion.lean#L92"
    },
    "metadata": {
      "blame_email_hash": "82b95686a14c",
      "blame_date": "2025-03-27T09:14:59+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "782b95147e01ec113f6da3ea5d044879f88d4007fb0204c9c9292fb3fce89924"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 26,
      "start_column": 2,
      "end_line": 26,
      "end_column": 7,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst✝¹ : Field K\ninst✝ : NumberField K\n⊢ LocallyCompactSpace (AdeleRing (𝓞 K) K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L26"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-12-02T00:05:18+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "b138b46a0b4c5fb6cdcb7311b498a989628285d1f315b824553507dd9747e4cb"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 73,
      "start_column": 2,
      "end_line": 73,
      "end_column": 7,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\nL : Type u_2\ninst✝⁴ : Field K\ninst✝³ : NumberField K\ninst✝² : Field L\ninst✝¹ : NumberField L\ninst✝ : Algebra K L\nl : L\n⊢ (baseChangeEquiv K L) (l ⊗ₜ[K] 1) = (algebraMap L (AdeleRing (𝓞 L) L)) l",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-21T18:04:24+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "ca08523a05645c7a469b0c92a7d78139914b44d6921fc6fed5527c1b6165f122"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 289,
      "start_column": 2,
      "end_line": 289,
      "end_column": 7,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "⊢ CompactSpace (AdeleRing (𝓞 ℚ) ℚ ⧸ AdeleRing.principalSubgroup (𝓞 ℚ) ℚ)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/NumberField/AdeleRing.lean#L289"
    },
    "metadata": {
      "blame_email_hash": "82b95686a14c",
      "blame_date": "2025-02-08T15:57:20+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a8e1eca51621562e4746e894e62391e5bcb7122f667f9165071496ee611a6f14"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 39,
      "start_column": 87,
      "end_line": 39,
      "end_column": 92,
      "file": "FLT/DivisionAlgebra/Finiteness.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst✝³ : Field K\ninst✝² : NumberField K\nD : Type u_2\ninst✝¹ : DivisionRing D\ninst✝ : Algebra K D\n⊢ Module.Finite (FiniteAdeleRing (𝓞 K) K) (D ⊗[K] FiniteAdeleRing (𝓞 K) K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-09T16:34:07+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a742558194f888ebbac37922e95767e75bb780311206c816d1622563d7014e02"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 71,
      "start_column": 2,
      "end_line": 71,
      "end_column": 7,
      "file": "FLT/DivisionAlgebra/Finiteness.lean"
    },
    "debug_info": {
      "goal": "K : Type u_1\ninst✝⁵ : Field K\ninst✝⁴ : NumberField K\nD : Type u_2\ninst✝³ : DivisionRing D\ninst✝² : Algebra K D\ninst✝¹ : FiniteDimensional K D\ninst✝ : Algebra.IsCentral K D\nU : Subgroup (Dfx K D)\nhU : IsOpen ↑U\n⊢ Finite (Doset.Quotient (Set.range ⇑(incl₁ K D)) ↑U)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DivisionAlgebra/Finiteness.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-10-18T18:57:02+01:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "1a8380d1447b935db0d1ad4785a60c3805b6767069dc936941198d22530f6cea"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 420,
      "start_column": 2,
      "end_line": 420,
      "end_column": 7,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\nv : HeightOneSpectrum A\n⊢ Function.Bijective ⇑(tensorAdicCompletionComapAlgHom A K L B v)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L420"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "d59614c30f225289f5dc68ec7b021ad171d7c0860d47de2f0862a732e62e9e90"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 531,
      "start_column": 77,
      "end_line": 531,
      "end_column": 82,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\n⊢ ∃ S,\n    ∀ v ∉ S,\n      ((AlgHom.restrictScalars B (tensorAdicCompletionComapAlgHom A K L B v)).comp\n            (tensorAdicCompletionIntegersTo A K L B v)).range =\n        Subalgebra.pi Set.univ fun x => adicCompletionIntegersSubalgebra L ↑x",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L531"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "285fac86127eaef84d7a8be7da5ff815b52b6acc28cfd9af039a473477dba02c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 684,
      "start_column": 4,
      "end_line": 684,
      "end_column": 9,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\n⊢ Function.Bijective ⇑(baseChange A K L B).baseChange_of_algebraMap",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L684"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "93ea3a69f3f41ec84425f5c095279a6fb97c151f848b3fcf5161bad08cc0412f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 613,
      "start_column": 84,
      "end_line": 613,
      "end_column": 89,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\nx : ProdAdicCompletions A K\n⊢ x.IsFiniteAdele ↔ ((baseChange A K L B) x).IsFiniteAdele",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L613"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-11-26T09:29:45+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "8f8520d9be73c10e7f377bd42e354d0a9d34242aa641e396e9e4d07ef2d48f64"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 621,
      "start_column": 2,
      "end_line": 621,
      "end_column": 7,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\nx : ProdAdicCompletions A K\n⊢ x.IsFiniteAdele ↔ ((baseChangeEquiv A K L B) (1 ⊗ₜ[K] x)).IsFiniteAdele",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L621"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-11-26T09:29:45+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "e6e8ac5c2400d8826cf13ae192c9b32fe2cb894cd7dfe3a0ff81acac99fa7bd7"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 673,
      "start_column": 2,
      "end_line": 673,
      "end_column": 7,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\n⊢ IsModuleTopology (FiniteAdeleRing A K) (FiniteAdeleRing B L)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L673"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "dab045ce4cb80848b486b7a8626887c53ac68f2f800ffa6f32e8c94a2cf93b46"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 689,
      "start_column": 22,
      "end_line": 689,
      "end_column": 27,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\n⊢ Continuous __spread✝⁻⁰.toFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L689"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "7b1b679e889c62f5a98a5fc2c2e10604fcc43253e250c09a356cb22f6860dbf4"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 690,
      "start_column": 23,
      "end_line": 690,
      "end_column": 28,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\n⊢ Continuous __spread✝⁻⁰.invFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "a4a59ea585620cffd1aa9966388bb1b2b8495f30f5af7edd10c89b95c2972fec"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7,
      "file": "FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean"
    },
    "debug_info": {
      "goal": "p : ℕ\ninst✝ : Fact (Nat.Prime p)\nx : ℤ_[p]\ns : Submodule ℤ_[p] ℚ_[p]\n⊢ ↑((x • s.toAddSubgroup).relindex s.toAddSubgroup) = ‖x‖₊⁻¹",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/NumberTheory/Padics/PadicIntegers.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "5dc4f2b0a450cca89e5a7ff72ad3bf79061e16dad7aea67468dad24672a44f43"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 25,
      "start_column": 69,
      "end_line": 25,
      "end_column": 74,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\nα : Type u_2\ninst✝³ : Group G\ninst✝² : MeasurableSpace G\ninst✝¹ : MeasurableSpace α\nH K : Subgroup G\ninst✝ : MeasurableInv G\n⊢ Measurable Inv.inv",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "b98d560670085a3ba260dbe34619c1b043c776f4f0df313a2f7c05b4c9b07660"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 32,
      "start_column": 28,
      "end_line": 32,
      "end_column": 33,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\nα : Type u_2\ninst✝³ : Group G\ninst✝² : MeasurableSpace G\ninst✝¹ : MeasurableSpace α\nH K : Subgroup G\ninst✝ : MeasurableMul G\nc : ↥H\n⊢ Measurable fun x => c * x",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2921651c760a6e7e8e29f855c99114c250cc1ac7f8eea546ca1d6f83d63bc615"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 37,
      "start_column": 28,
      "end_line": 37,
      "end_column": 33,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\nα : Type u_2\ninst✝⁴ : Group G\ninst✝³ : MeasurableSpace G\ninst✝² : MeasurableSpace α\nH K : Subgroup G\ninst✝¹ : MeasurableMul G\nμ : Measure G\ninst✝ : μ.IsMulLeftInvariant\ng : ↥H\n⊢ Measure.map (fun x => g * x) (Measure.comap Subtype.val μ) = Measure.comap Subtype.val μ",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "107a8792b910065b42e216ff8e1445758550991b6dda03f6b33be351f711ae1d"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 42,
      "start_column": 29,
      "end_line": 42,
      "end_column": 34,
      "file": "FLT/Mathlib/MeasureTheory/Group/Action.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\nα : Type u_2\ninst✝⁴ : Group G\ninst✝³ : MeasurableSpace G\ninst✝² : MeasurableSpace α\nH K : Subgroup G\ninst✝¹ : MeasurableMul G\nμ : Measure G\ninst✝ : μ.IsMulRightInvariant\ng : ↥H\n⊢ Measure.map (fun x => x * g) (Measure.comap Subtype.val μ) = Measure.comap Subtype.val μ",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/MeasureTheory/Group/Action.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-11T00:03:10+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "5b4b43ac80720372f1359ebd97893520b6afe1c0b62f0a5ed6c5876436a41253"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 169,
      "start_column": 2,
      "end_line": 169,
      "end_column": 7,
      "file": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\nM : Type u_3\ninst✝¹² : CommRing R\ninst✝¹¹ : TopologicalSpace R\ninst✝¹⁰ : IsTopologicalRing R\ninst✝⁹ : CommRing S\ninst✝⁸ : TopologicalSpace S\ninst✝⁷ : IsTopologicalRing S\ninst✝⁶ : Algebra R S\ninst✝⁵ : Module.Finite R S\ninst✝⁴ : IsModuleTopology R S\ninst✝³ : AddCommGroup M\ninst✝² : Module R M\ninst✝¹ : Module S M\ninst✝ : IsScalarTower R S M\n⊢ moduleTopology R M = moduleTopology S M",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-30T11:02:34+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "f60d24236ef7b3ebc4273e895f4b413884192e0695143f47ed910a475dabe454"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 204,
      "start_column": 2,
      "end_line": 204,
      "end_column": 7,
      "file": "FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nS : Type u_2\ninst✝⁶ : CommRing R\ninst✝⁵ : TopologicalSpace R\ninst✝⁴ : IsTopologicalRing R\ninst✝³ : CommRing S\ninst✝² : TopologicalSpace S\ninst✝¹ : IsTopologicalRing S\ninst✝ : Algebra R S\nhcont : Continuous ⇑(algebraMap R S)\nhopen : IsOpenMap ⇑(algebraMap R S)\n⊢ IsModuleTopology R S",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/Mathlib/Topology/Algebra/Module/ModuleTopology.lean#L204"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-01-30T11:02:34+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "54c98af769c9ca6879828e3ad7b55a94e4b5d02db766da1edf5f07c97bdc7b81"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 20,
      "start_column": 2,
      "end_line": 20,
      "end_column": 7,
      "file": "FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝⁶ : Field F\ninst✝⁵ : NumberField F\ninst✝⁴ : IsTotallyReal F\nD : Type u_2\ninst✝³ : Ring D\ninst✝² : Algebra F D\ninst✝¹ : IsQuaternionAlgebra F D\nK : Type u_3\ninst✝ : Field K\nU : Subgroup (D ⊗[F] FiniteAdeleRing (𝓞 F) F)ˣ\n⊢ FiniteDimensional K (WeightTwoAutomorphicFormOfLevel U K)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/FiniteDimensional.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "2f4c6b7472cd6724b1396e8d3fa00a413e50315f0cf763f1fa9a103e24e2af18"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 39,
      "start_column": 2,
      "end_line": 39,
      "end_column": 7,
      "file": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝³ : Field F\ninst✝² : NumberField F\nD : Type u_2\ninst✝¹ : Ring D\ninst✝ : Algebra F D\n⊢ (incl₂ F D).range ≤ Subgroup.center (Dfx F D)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "de75557e0fe14dab1d7baca3364d1230e4b0dd856849bde1b66eef6dbb32d84a"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 178,
      "start_column": 2,
      "end_line": 178,
      "end_column": 7,
      "file": "FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean"
    },
    "debug_info": {
      "goal": "G : Type u_4\ninst✝² : Group G\ninst✝¹ : TopologicalSpace G\ninst✝ : IsTopologicalGroup G\nU : Subgroup G\nhU : IsOpen ↑U\ng : ConjAct G\n⊢ IsOpen ↑(g • U)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/AutomorphicForm/QuaternionAlgebra/Defs.lean#L178"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-03-15T18:40:46+00:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "61effcac3c2120fde9211c249603d077ef88f3854416c72690411f22cadbd327"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/quote4",
      "branch": "stable",
      "commit": "0e05c2f090b7dd7a2f530bdc48a26b546f4837c7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 16,
      "start_column": 18,
      "end_line": 16,
      "end_column": 23,
      "file": "examples/introQ.lean"
    },
    "debug_info": {
      "goal": "«$P» : ∀ {n : Nat}, n = 1\n$fst✝ : Nat\n«$m» : $fst✝ = 1\n⊢ $fst✝ = 1",
      "url": "https://github.com/leanprover-community/quote4/blob/0e05c2f090b7dd7a2f530bdc48a26b546f4837c7/examples/introQ.lean#L16"
    },
    "metadata": {
      "blame_email_hash": "1c4ac4603b04",
      "blame_date": "2023-07-14T18:25:43-07:00",
      "inclusion_date": "2025-04-01T06:53:57.698796+00:00"
    },
    "id": "4a596dc45a099ab4825721aa3116636a61dedcf62aa39d13f71a9d0257939471"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 13,
      "end_line": 35,
      "end_column": 18,
      "file": "Duper/Tests/lastAsylum.lean"
    },
    "debug_info": {
      "goal": "ax1 : ∀ (x : Inhab), Peculiar x ↔ (Sane x ↔ ¬Doctor x)\nax2 : ∀ (x : Inhab), Special x ↔ ∀ (y : Inhab), ¬Doctor y ↔ (Sane y ↔ Peculiar x)\nax3 : ∀ (x y : Inhab), (Sane x ↔ Special y) → (Sane (bf x) ↔ ¬Doctor y)\nax4 : Sane Tarr ↔ ∀ (x : Inhab), Doctor x → Sane x\nax5 : Sane Fether ↔ ∀ (x : Inhab), ¬Doctor x → ¬Sane x\nax6 : Sane Fether ↔ Sane Tarr\n⊢ False",
      "url": "https://github.com/leanprover-community/duper/blob/e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4/Duper/Tests/lastAsylum.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "d9c480704efb",
      "blame_date": "2022-08-01T22:37:02-04:00",
      "inclusion_date": "2025-04-17T23:35:43.089654+00:00"
    },
    "id": "5f8931515d1dc44fc9e729e87dd4ce870879c1b1c7234a9a7823508fbc9962d2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 18,
      "start_column": 50,
      "end_line": 18,
      "end_column": 55,
      "file": "Duper/Tests/test_continuity.lean"
    },
    "debug_info": {
      "goal": "a : Real\n⊢ dist a a = zero",
      "url": "https://github.com/leanprover-community/duper/blob/e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4/Duper/Tests/test_continuity.lean#L18"
    },
    "metadata": {
      "blame_email_hash": "4ac7eab8a488",
      "blame_date": "2023-06-05T10:39:00+02:00",
      "inclusion_date": "2025-04-17T23:35:43.089654+00:00"
    },
    "id": "b966b1b22abc4e5fcbce08d9256b604f5cc81bbbb6813fc17f9fd07bbfad6965"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/duper",
      "branch": "dev",
      "commit": "e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 20,
      "start_column": 48,
      "end_line": 20,
      "end_column": 53,
      "file": "Duper/Tests/test_continuity.lean"
    },
    "debug_info": {
      "goal": "a : Real\n⊢ lt zero one",
      "url": "https://github.com/leanprover-community/duper/blob/e28c4e11389116ccb6a48ff0fe9c3d1a9d7642e4/Duper/Tests/test_continuity.lean#L20"
    },
    "metadata": {
      "blame_email_hash": "4ac7eab8a488",
      "blame_date": "2023-06-05T10:39:00+02:00",
      "inclusion_date": "2025-04-17T23:35:43.089654+00:00"
    },
    "id": "567af2ce88922b7d056f8a3aad8263d50c1f37bb62f9ea737e4918503646aed5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "8b2c6bb629570ca44d5217890c2218e202eb9160",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 37,
      "start_column": 64,
      "end_line": 37,
      "end_column": 69,
      "file": "BatteriesTest/lintsimp.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\ninst✝ : Mul α\na x y : αᵐᵒᵖ\n⊢ SemiconjBy a.unop y.unop x.unop ↔ SemiconjBy a x y",
      "url": "https://github.com/leanprover-community/batteries/blob/8b2c6bb629570ca44d5217890c2218e202eb9160/BatteriesTest/lintsimp.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "8a7dcd08b95f",
      "blame_date": "2022-12-18T15:51:52-05:00",
      "inclusion_date": "2025-04-23T00:02:56.249476+00:00"
    },
    "id": "ac65a26000d288f420f51a6446c65564a1fd01d81b3ca09bf6b956eff2609859"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "8b2c6bb629570ca44d5217890c2218e202eb9160",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 7,
      "start_column": 2,
      "end_line": 7,
      "end_column": 7,
      "file": "BatteriesTest/lintunused.lean"
    },
    "debug_info": {
      "goal": "h : 1 = 1\n⊢ True",
      "url": "https://github.com/leanprover-community/batteries/blob/8b2c6bb629570ca44d5217890c2218e202eb9160/BatteriesTest/lintunused.lean#L7"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-08T02:17:31+02:00",
      "inclusion_date": "2025-04-23T00:02:56.249476+00:00"
    },
    "id": "9a8f972018ef15e61bb9d42c8edae501b7240b6742bc5712461b1fb4b848f8da"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "8b2c6bb629570ca44d5217890c2218e202eb9160",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 23,
      "start_column": 2,
      "end_line": 24,
      "end_column": 5,
      "file": "BatteriesTest/lint_unreachableTactic.lean"
    },
    "debug_info": {
      "goal": "⊢ 1 = 1",
      "url": "https://github.com/leanprover-community/batteries/blob/8b2c6bb629570ca44d5217890c2218e202eb9160/BatteriesTest/lint_unreachableTactic.lean#L23"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-26T11:27:15+01:00",
      "inclusion_date": "2025-04-23T00:02:56.249476+00:00"
    },
    "id": "71518fe1bc1f2d2fb32d6236546c9c48b7dd928b58a9fdbde75ca7bbacaffa6f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/batteries",
      "branch": "docs",
      "commit": "8b2c6bb629570ca44d5217890c2218e202eb9160",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 31,
      "start_column": 33,
      "end_line": 31,
      "end_column": 38,
      "file": "BatteriesTest/lint_unreachableTactic.lean"
    },
    "debug_info": {
      "goal": "aa : Nat\n⊢ aa = 0 → t aa = 0",
      "url": "https://github.com/leanprover-community/batteries/blob/8b2c6bb629570ca44d5217890c2218e202eb9160/BatteriesTest/lint_unreachableTactic.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "45b5ed8e3c8e",
      "blame_date": "2023-08-26T11:27:15+01:00",
      "inclusion_date": "2025-04-23T00:02:56.249476+00:00"
    },
    "id": "ab0df0e3f6765e87b2db3473f012b3a1ac87f28999a6fbf74b51aa82421eec90"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst\nα β γ δ ι : Type\np q : MyProd α β\n⊢ p.fst = q.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "c3229030ad831325954035a5f33f9029581a2092a6f0bac30408489ea8d45a80"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 30,
      "start_column": 12,
      "end_line": 30,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd\nα β γ δ ι : Type\np q : MyProd α β\n⊢ p.snd = q.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "be79c28e3a06d6dd4228684903c0c50e5cd9b53fb4b76b9fdf6dec9370cad4cf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst\nα β γ δ ι : Type\np q : MyProd α (MyProd β γ)\n⊢ p.fst = q.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "b569dd2ed098ab4ff9f2491ffb734b81b26283e69489b058fc4927802aa2ea7e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd.fst\nα β γ δ ι : Type\np q : MyProd α (MyProd β γ)\n⊢ p.snd.fst = q.snd.fst",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "fe29e2a6c3c87ab8d89b7a9b934bfa86db3ec7bb6397076079052344ce6b040e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 46,
      "start_column": 12,
      "end_line": 46,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd.snd\nα β γ δ ι : Type\np q : MyProd α (MyProd β γ)\n⊢ p.snd.snd = q.snd.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "50daf915780aa645c8c851eba9520e52aa0d67bcc42c149286051ec97252df33"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst.h\nα β γ δ ι : Type\np q : MyProd (α → β) γ\nx : α\n⊢ p.fst x = q.fst x",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "05ed17f87adcb422dd34101ef4fb78dbff79ffe1869435cd1df9dfa8f9838358"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 61,
      "start_column": 12,
      "end_line": 61,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd\nα β γ δ ι : Type\np q : MyProd (α → β) γ\n⊢ p.snd = q.snd",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "a97d0f1ed7d8f285916ccdc7e6e5e33b530a05a54153a5ed2bbf71131f6ccfe5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 78,
      "start_column": 12,
      "end_line": 78,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case fst.h\nα β γ δ ι : Type\np q : (α → β) × (γ → δ → ι)\nx : α\n⊢ p.fst x = q.fst x",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "97cfb78db7fb078651e7fc5a3ba8030f92fcee370e92075555909c66277c008d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 78,
      "start_column": 12,
      "end_line": 78,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case snd.h.h\nα β γ δ ι : Type\np q : (α → β) × (γ → δ → ι)\nx : γ\nx_1 : δ\n⊢ p.snd x x_1 = q.snd x x_1",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-06-07T02:10:37+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "3894cd22be47604e5d2f5e116c6c82de4bae7a502bec2642655afe11325fbf42"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 103,
      "start_column": 12,
      "end_line": 103,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case a\nα β γ δ ι : Type\nx y : T\n⊢ u = v",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L103"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-09-10T21:14:20+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "7c57f355a27694db1d671e93d37daeaef694c70087489db22c8e6ee6fdd504fc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/aesop",
      "branch": "rpinf-precomp",
      "commit": "dd78c1426f5fc783ec1ba23ad769471cc69bb8b4",
      "lean_version": "v4.17.0-rc1"
    },
    "location": {
      "start_line": 103,
      "start_column": 12,
      "end_line": 103,
      "end_column": 17,
      "file": "AesopTest/ExtScript.lean"
    },
    "debug_info": {
      "goal": "case a\nα β γ δ ι : Type\nx y : T\nu v : U\n⊢ u = v",
      "url": "https://github.com/leanprover-community/aesop/blob/dd78c1426f5fc783ec1ba23ad769471cc69bb8b4/AesopTest/ExtScript.lean#L103"
    },
    "metadata": {
      "blame_email_hash": "555bc3b21621",
      "blame_date": "2024-09-10T21:14:20+02:00",
      "inclusion_date": "2025-04-11T00:07:12.176717+00:00"
    },
    "id": "f40601536a7fdf2e3b89401ddecea18ce3ed8c7a0b62ac2eafbae48eb95bbc5e"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\nG : SimpleGraph α\na : α\nw : G.Walk a a\nhw : Odd w.length\n⊢ ∃ b p, Odd (↑p).length",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "3fababf521479205121d8c5d356f11f4379b01bfe5254e0acd46873dd1ea8bb5"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 57,
      "start_column": 2,
      "end_line": 57,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\ninst✝¹ : Fintype α\nG : SimpleGraph α\ninst✝ : DecidableRel G.Adj\n⊢ ∃ a b, a ≠ b ∧ G.degree a = G.degree b",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L57"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "08da4736142fa7a1d8c4eb311d41f6d79ba1ecbffb9963c088bcbf82cb223967"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 70,
      "start_column": 2,
      "end_line": 70,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "case intro\nα : Type u_2\ninst✝¹ : Finite α\ninst✝ : Nontrivial α\nG : SimpleGraph α\nhG : G.Connected\nval✝ : Fintype α\n⊢ ∃ a, (⊤.deleteVerts {a}).coe.Connected",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2022-11-20T17:08:07+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "49df9f5015484baca6cec40b158d4beb5f5910da9c1451abcf8baa72b3abbdde"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 83,
      "start_column": 2,
      "end_line": 83,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "case inr\nα : Type u_2\ninst✝² : Fintype α\ninst✝¹ : DecidableEq α\nG : SimpleGraph α\ninst✝ : DecidableRel G.Adj\nhG : G.IsAcyclic\nh✝ : Nonempty α\n⊢ G.edgeFinset.card ≤ card α - 1",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2022-11-20T17:08:07+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "ad56b7c35b389fc6a6b18bcc0f5d2556d4ff65c1d05f6632f14f3d1268872611"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 101,
      "start_column": 2,
      "end_line": 101,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\ninst✝ : Fintype α\ns : Multiset ℕ\nhs : s.card = card α\nh₀ : 0 ∉ s\n⊢ s.sum = 2 * card α - 2 ↔ ∃ G x, degreeSequence G = s",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L101"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "63d07dffb67aae4cdb0cac3b28801a01b2dbc0aa7fd1faef1eac94a6f7fef6cd"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "ι : Type u_1\nα : Type u_2\nG : SimpleGraph α\nhG : G.IsAcyclic\ns : Finset ι\nf : ι → G.Subgraph\nhf : ∀ i ∈ s, (f i).coe.IsAcyclic\nh : ∀ i ∈ s, ∀ j ∈ s, f i ⊓ f j ≠ ⊥\n⊢ s.inf f ≠ ⊥",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "7e1a9acc63453eb56c72fc36e8fb4a586692e8334f82d5132f9886faf6f693af"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 128,
      "start_column": 2,
      "end_line": 128,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\ninst✝¹ : Fintype α\nG : SimpleGraph α\ninst✝ : DecidableRel G.Adj\n⊢ ∃ H x, ∀ (a : α), averageDegree G / 2 ≤ ↑(H.degree a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "0aecd8513d95a3c39227c935c1102befbd938dec0b9c8f84ce14971e67bf005d"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 145,
      "start_column": 2,
      "end_line": 145,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\ninst✝¹ : Fintype α\nG : SimpleGraph α\ninst✝ : DecidableRel G.Adj\n⊢ (∃ 𝒜,\n      (∀ (p q : (a : α) × G.Path a a), (↑p.snd).edges.Disjoint (↑q.snd).edges) ∧\n        ∀ (e : Sym2 α), ∃ p ∈ 𝒜, e ∈ (↑p.snd).edges) ↔\n    ∀ (a : α), Even (G.degree a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L145"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "e18b741608d51b5343b83ac7b78641ebab6b97898412be2361ec9ea2de5b3391"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\ninst✝¹ : Fintype α\ninst✝ : DecidableEq α\nn : ℕ\n⊢ (∃ G x k, G.IsRegularOfDegree k ∧ G.cliqueNum = n) ↔ n ≤ card α / 2 ∨ n = card α",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "73b3514c20e2905044afc2ae1e3c8eab4a78093554d46b6e1b158c22a5495558"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 181,
      "start_column": 2,
      "end_line": 181,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\ninst✝¹ : DecidableEq α\nG : SimpleGraph α\ninst✝ : DecidableRel G.Adj\ns : Finset α\n⊢ ∃ u v,\n    Disjoint u v ∧\n      u ∪ v = s ∧ (∀ a ∈ u, Even #{ x // x ∈ {b ∈ u | G.Adj a b} }) ∧ ∀ a ∈ v, Even #{ x // x ∈ {b ∈ v | G.Adj a b} }",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L181"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "9b32dab5d4cb28f91d6b01b4aa1011a4f891c4c36c835c30743b93a363c49b0a"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\nβ : Type u_3\ninst✝ : Finite α\ng : β ↪ α\nf : β → α → α\nhf : IsLatin f\n⊢ ∃ f', f' ∘ ⇑g = f ∧ IsLatin f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "2a76f7b8970defcfa191b88a9ff249b73e9aa9fdbf6fc6ded13772215f4de3ac"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 214,
      "start_column": 2,
      "end_line": 214,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "⊢ ∃ r, (∀ (A : Finset ℕ), ↑A.card ≤ #↑(Rel.image r ↑A)) ∧ ∀ (f : ℕ → ℕ), Injective f → ∃ n, ¬r n (f n)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "cc184c9b5d49cb6bd85611b690f265e6aa231d9a088cf9156737b6c2c641ba21"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\nβ : Type u_3\ninst✝³ : DecidableEq β\ninst✝² : Countable α\ninst✝¹ : Countable β\nr : α → β → Prop\ninst✝ : (a : α) → Fintype ↑(Rel.image r {a})\nhr : ∀ (A : Finset α), A.card ≤ card ↑(Rel.image r ↑A)\n⊢ ∃ f, Injective f ∧ ∀ (a : α), r a (f a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "a05f5644a4d4a9b5ad5797593855787dd0ce1f64781a9dd776f6556ea9193197"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "α : Type u_2\nβ : Type u_3\ninst✝¹ : DecidableEq β\nr : α → β → Prop\ninst✝ : (a : α) → Fintype ↑(Rel.image r {a})\nhr : ∀ (A : Finset α), A.card ≤ card ↑(Rel.image r ↑A)\n⊢ ∃ f, Injective f ∧ ∀ (a : α), r a (f a)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "b71d4dcbae717b600f350c424fc32ff538de132fa91831662726efef555e04ec"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "⊢ ∃ ε, 0 < ε ∧ ∀ (α : Type u_5) [inst : Fintype α], ∃ x, ∀ (f : α → ℝ × ℝ), ε * √↑(card α) ≤ distortion f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "8e26cd54b8be1340d8d563c8684323358197b445960de25fa966dc98367ab182"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 252,
      "start_column": 2,
      "end_line": 252,
      "end_column": 7,
      "file": "LeanCamCombi/GraphTheory/ExampleSheet1.lean"
    },
    "debug_info": {
      "goal": "⊢ ∃ ε, 0 < ε ∧ ∀ (α : Type u_5) [inst : Fintype α], ∃ x, ∀ (f : α → ℝ × ℝ), ε * ↑(card α) ≤ distortion f",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GraphTheory/ExampleSheet1.lean#L252"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "8b867f6b08c33bef9844ac470761aa75a51758590ce5d5645a0dc7c8663125c3"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 46,
      "start_column": 75,
      "end_line": 46,
      "end_column": 80,
      "file": "LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nΩ : Type u_2\ninst✝ : MeasurableSpace Ω\nG : Ω → SimpleGraph α\np : ℝ≥0\nμ : Measure Ω\nhG : IsBinomialRandomGraph G p μ\n⊢ iIndepFun (fun e ω => e ∈ (G ω).edgeSet) μ",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BinomialRandomGraph.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-06T17:45:28+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "46b51bb59c19a979862a472d54fe0443db1e06fd4900df7d9725c480a4a05693"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 117,
      "start_column": 8,
      "end_line": 117,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_1.refine_1\nα : Type u_1\nΩ : Type u_2\ninst✝¹ : MeasurableSpace Ω\nX Y : Ω → Set α\nμ : Measure Ω\np q : ℝ≥0\nhX : IsBernoulliSeq X p μ\nhY : IsBernoulliSeq Y q μ\ninst✝ : IsProbabilityMeasure μ\nh : IndepFun X Y μ\ni : α\n⊢ MeasurableSet fun ω => X ω i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L117"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "c06097e51866c5822f2ad5c1f1270bafce0377529b89ed6cb91d59de11397399"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 118,
      "start_column": 8,
      "end_line": 118,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_1.refine_2\nα : Type u_1\nΩ : Type u_2\ninst✝¹ : MeasurableSpace Ω\nX Y : Ω → Set α\nμ : Measure Ω\np q : ℝ≥0\nhX : IsBernoulliSeq X p μ\nhY : IsBernoulliSeq Y q μ\ninst✝ : IsProbabilityMeasure μ\nh : IndepFun X Y μ\ni : α\n⊢ MeasurableSet fun ω => Y ω i",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L118"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "c5663979c4e4160eb9e17548e7362b1b6a1e30575570fc12969c59fdaf579ebc"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 126,
      "start_column": 8,
      "end_line": 126,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.refine_1\nα : Type u_1\nΩ : Type u_2\ninst✝¹ : MeasurableSpace Ω\nX Y : Ω → Set α\nμ : Measure Ω\np q : ℝ≥0\nhX : IsBernoulliSeq X p μ\nhY : IsBernoulliSeq Y q μ\ninst✝ : IsProbabilityMeasure μ\nh : IndepFun X Y μ\ns : Finset α\ni : α\nhi : i ∈ s\n⊢ MeasurableSet {ω | X ω i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "2d1ba1571cdeea5db20afd81a9e33e81b25c72235079eeeba0fbfcd78bcbaede"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 127,
      "start_column": 8,
      "end_line": 127,
      "end_column": 13,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.refine_2\nα : Type u_1\nΩ : Type u_2\ninst✝¹ : MeasurableSpace Ω\nX Y : Ω → Set α\nμ : Measure Ω\np q : ℝ≥0\nhX : IsBernoulliSeq X p μ\nhY : IsBernoulliSeq Y q μ\ninst✝ : IsProbabilityMeasure μ\nh : IndepFun X Y μ\ns : Finset α\ni : α\nhi : i ∈ s\n⊢ MeasurableSet {ω | Y ω i}",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L127"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "bc51c379889ca30374c7178ae2623e99043d06fd3c005f816ba5bebedcd3509a"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 130,
      "start_column": 6,
      "end_line": 130,
      "end_column": 11,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.hs\nα : Type u_1\nΩ : Type u_2\ninst✝¹ : MeasurableSpace Ω\nX Y : Ω → Set α\nμ : Measure Ω\np q : ℝ≥0\nhX : IsBernoulliSeq X p μ\nhY : IsBernoulliSeq Y q μ\ninst✝ : IsProbabilityMeasure μ\nh : IndepFun X Y μ\ns : Finset α\n⊢ MeasurableSet (⋂ i ∈ s, {ω | X ω i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L130"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "0183bd953d3b7d8140d29187a408e2af62297dfb521544521b74627a89e2ee62"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 131,
      "start_column": 6,
      "end_line": 131,
      "end_column": 11,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "case refine_2.ht\nα : Type u_1\nΩ : Type u_2\ninst✝¹ : MeasurableSpace Ω\nX Y : Ω → Set α\nμ : Measure Ω\np q : ℝ≥0\nhX : IsBernoulliSeq X p μ\nhY : IsBernoulliSeq Y q μ\ninst✝ : IsProbabilityMeasure μ\nh : IndepFun X Y μ\ns : Finset α\n⊢ MeasurableSet (⋂ i ∈ s, {ω | Y ω i})",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "06324b761a5af46b48dd70c49ede9cbd3c0668d0e42d231cd7f1e810746e51ab"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 132,
      "start_column": 11,
      "end_line": 132,
      "end_column": 16,
      "file": "LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nΩ : Type u_2\ninst✝¹ : MeasurableSpace Ω\nX Y : Ω → Set α\nμ : Measure Ω\np q : ℝ≥0\nhX : IsBernoulliSeq X p μ\nhY : IsBernoulliSeq Y q μ\ninst✝ : IsProbabilityMeasure μ\nh : IndepFun X Y μ\na : α\n⊢ Measure.map (fun ω => a ∈ X ω ∩ Y ω) μ = (PMF.bernoulli' (p * q) ⋯).toMeasure",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BernoulliSeq.lean#L132"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "532f84982618eda07d712d8400024a254e9e844c3d41a1de312c949aefc0ee38"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nβ : Type u_2\nΩ : Type u_3\ninst✝⁴ : Fintype β\nG : ℕ → Ω → SimpleGraph α\nH : SimpleGraph β\ninst✝³ : Fintype ↑H.edgeSet\ninst✝² : (n : ℕ) → (ω : Ω) → DecidableRel (G n ω).Adj\ninst✝¹ : MeasurableSpace Ω\nμ : Measure Ω\ninst✝ : IsProbabilityMeasure μ\np : ℕ → ℝ≥0\nhp : (fun n => ↑(p n)) =o[atTop] fun n => ↑n ^ (-↑H.maxEdgeSubdensity⁻¹)\n⊢ Tendsto (fun n => μ {ω | H ⊑ G n ω}) atTop (𝓝 0)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "f91cda7e4cffbd3704db63e56f69d9308223c66e0e6a13fac8e83defeaa77450"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 37,
      "start_column": 2,
      "end_line": 37,
      "end_column": 7,
      "file": "LeanCamCombi/ExtrProbCombi/BollobasContainment.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nβ : Type u_2\nΩ : Type u_3\ninst✝⁴ : Fintype β\nG : ℕ → Ω → SimpleGraph α\nH : SimpleGraph β\ninst✝³ : Fintype ↑H.edgeSet\ninst✝² : (n : ℕ) → (ω : Ω) → DecidableRel (G n ω).Adj\ninst✝¹ : MeasurableSpace Ω\nμ : Measure Ω\ninst✝ : IsProbabilityMeasure μ\np : ℕ → ℝ≥0\nhp : (fun n => ↑n ^ (-↑H.maxEdgeSubdensity⁻¹)) =o[atTop] fun n => ↑(p n)\n⊢ Tendsto (fun n => μ {ω | H ⊑ G n ω}) atTop (𝓝 1)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/ExtrProbCombi/BollobasContainment.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "38c11c492591e4f1eaa791522219fb7aa5c05d2305da24cc98dd50cebd619d6f"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 97,
      "start_column": 72,
      "end_line": 97,
      "end_column": 77,
      "file": "LeanCamCombi/PlainCombi/VanDenBergKesten.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\ninst✝¹ : DecidableEq α\ninst✝ : Fintype α\n𝒜 ℬ : Finset (Finset α)\n⊢ 2 ^ Fintype.card α * #(𝒜 □ ℬ) ≤ #𝒜 * #ℬ",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/VanDenBergKesten.lean#L97"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-21T08:29:20+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "0fcbdc47a490598239e7f1e78eaa58164a051ca492662eb6f40959b437097dc1"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "LeanCamCombi/PlainCombi/LittlewoodOfford.lean"
    },
    "debug_info": {
      "goal": "case insert.intro.intro.intro.intro.intro\nι : Type u_1\nE : Type u_2\ninst✝² : NormedAddCommGroup E\ninst✝¹ : NormedSpace ℝ E\ns✝ : Finset ι\nf : ι → E\nr : ℝ\ninst✝ : DecidableEq ι\nhr : 0 < r\ni : ι\ns : Finset ι\nhi : i ∉ s\nhf : ∀ i_1 ∈ insert i s, r ≤ ‖f i_1‖\nP : Finpartition s.powerset\nhP : #P.parts = (#s).choose (#s / 2)\nhs : ∀ 𝒜 ∈ P.parts, ∀ t ∈ 𝒜, t ⊆ s\nhPr : ∀ 𝒜 ∈ P.parts, (↑𝒜).Pairwise fun u v => r ≤ dist (∑ i ∈ u, f i) (∑ i ∈ v, f i)\ng : E →L[ℝ] ℝ\nhg : ‖g‖ = 1\nhgf : g (f i) = ↑‖f i‖\nt : Finset (Finset ι) → Finset ι\nht : ∀ 𝒜 ∈ P.parts, t 𝒜 ∈ 𝒜 ∧ ∀ x' ∈ 𝒜, g (∑ i ∈ x', f i) ≤ g (∑ i ∈ t 𝒜, f i)\n⊢ ∃ P,\n    #P.parts = (#(insert i s)).choose (#(insert i s) / 2) ∧\n      (∀ 𝒜 ∈ P.parts, ∀ t ∈ 𝒜, t ⊆ insert i s) ∧\n        ∀ 𝒜 ∈ P.parts, (↑𝒜).Pairwise fun u v => r ≤ dist (∑ i ∈ u, f i) (∑ i ∈ v, f i)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/PlainCombi/LittlewoodOfford.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2023-09-10T12:10:37-07:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "25b2db5be9910c4c534877f6d268145ded7f52147caef0fa9dbe2b1d44b27387"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 38,
      "start_column": 42,
      "end_line": 38,
      "end_column": 47,
      "file": "LeanCamCombi/StableCombi/Rel.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nβ : Type u_2\nn : ℕ\nr : α → β → Prop\nhr : IsStableRelWith n r\n⊢ IsTreeBoundedRelWith (2 ^ n + 1) r",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T20:50:42+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "ac26d5ff17429f369dcb78856730b3664538c3a71d3cf04649cc583df6c86224"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 41,
      "start_column": 33,
      "end_line": 41,
      "end_column": 38,
      "file": "LeanCamCombi/StableCombi/Rel.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nβ : Type u_2\nn : ℕ\nr : α → β → Prop\nhr : IsTreeBoundedRelWith n r\n⊢ IsStableRelWith (2 ^ n) r",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/StableCombi/Rel.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-12-17T20:50:42+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "7b02aff6f66f487495b5f76843ba7dc3a04ce36bc3b154104ed8f1992544b205"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 25,
      "start_column": 60,
      "end_line": 25,
      "end_column": 65,
      "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst✝¹ : Fintype n\ninst✝ : DecidableEq n\nC₀ : ℝ\nhC₀ : ↑(Fintype.card n) < C₀\nK : ℝ\n⊢ ∃ δ,\n    ∀ (A : Finset (GL n ℂ)),\n      IsApproximateSubgroup K ↑A → (∀ a ∈ A, ‖↑a‖ ≤ C₀) → ∃ γ ∈ A ^ 2, δ * ↑(#A) ≤ ↑(#({x ∈ A ^ 4 | Commute γ x}))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "9e9e2251f953eab398c6e3389c032592aa31c5dbd9c2c8f24144e38875d630eb"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 30,
      "start_column": 30,
      "end_line": 30,
      "end_column": 35,
      "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
    },
    "debug_info": {
      "goal": "K C₀ : ℝ\n⊢ ∃ C > 0,\n    ∀ (A : Set SL(2, ℂ)),\n      IsApproximateSubgroup K A → ∃ Z, ∃ (_ : ∀ x ∈ Z, ∀ y ∈ Z, Commute x y), ∃ F, #F ≤ C ∧ A ⊆ ↑F * ↑Z",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "bc809e511427e236c2df25fd3d34a06f10fae32fc59b42754634786397cca7ff"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 41,
      "start_column": 69,
      "end_line": 41,
      "end_column": 74,
      "file": "LeanCamCombi/GrowthInGroups/Lecture4.lean"
    },
    "debug_info": {
      "goal": "C : ℝ\nG : Type u_2\ninst✝¹ : Group G\ninst✝ : DecidableEq G\nS : Finset G\nhSsymm : S⁻¹ = S\nhSgen : ↑(Subgroup.closure ↑S) = Set.univ\nd : ℕ\nhS : ∀ (n : ℕ), ↑(#(S ^ n)) ≤ C * ↑n ^ d\n⊢ IsVirtuallyNilpotent G",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/GrowthInGroups/Lecture4.lean#L41"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-11-16T11:30:19+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "27ebd927086c4db93549c5a98d6cf30a84d8c7108f91354d83a57fe135fc2189"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 24,
      "start_column": 6,
      "end_line": 24,
      "end_column": 11,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case refine_2\nι : Type u_2\nG : ι → Type u_3\ninst✝¹ : Fintype ι\ninst✝ : (i : ι) → Group (G i)\nA : (i : ι) → Set (G i)\nK : ι → ℝ\nhA : ∀ (i : ι), IsApproximateSubgroup (K i) (A i)\nF : (i : ι) → Finset (G i)\nhF : ∀ (i : ι), ↑(#(F i)) ≤ K i\nhFS : ∀ (i : ι), A i ^ 2 ⊆ ↑(F i) • A i\n⊢ Set.univ.pi A ^ 2 ⊆ ↑(Fintype.piFinset F) • Set.univ.pi A",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L24"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "edd13d8191b120ebea432442b2ba6f559c7fac2d3401253ce8d4c99e15ebfac8"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 42,
      "start_column": 64,
      "end_line": 42,
      "end_column": 69,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case h\nG : Type u_1\ninst✝¹ : Group G\nK : ℝ\ninst✝ : DecidableEq G\nA : Finset G\nhA₀ : A.Nonempty\nhA : ↑(#(A ^ 2)) ≤ K * ↑(#A)\nhK : 1 ≤ K\nS : Finset G := {g ∈ A⁻¹ * A | ↑(#A) / (2 * K) ≤ ↑(#(A <• g ∩ A))}\nhS₁ : 1 ∈ S\nhS₀ : S.Nonempty\nhSA : S ⊆ A⁻¹ * A\na✝ : G\n⊢ a✝ ∈ A⁻¹ * A → (↑(#A) / (2 * K) ≤ ↑(#((MulOpposite.op a✝)⁻¹ •> A ∩ A)) ↔ ↑(#A) / (2 * K) ≤ ↑(#(A <• a✝ ∩ A)))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L42"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "cb50e1caabd09046920c755e06c55399a308100ee27c75b2936f66ac91ebb5f0"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 59,
      "start_column": 4,
      "end_line": 59,
      "end_column": 9,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_2\nG : Type u_1\ninst✝¹ : Group G\nK : ℝ\ninst✝ : DecidableEq G\nA : Finset G\nhA₀ : A.Nonempty\nhA : ↑(#(A ^ 2)) ≤ K * ↑(#A)\nhK : 1 ≤ K\nS : Finset G := {g ∈ A⁻¹ * A | ↑(#A) / (2 * K) ≤ ↑(#(A <• g ∩ A))}\nhS₁ : 1 ∈ S\nhS₀ : S.Nonempty\nhSA : S ⊆ A⁻¹ * A\nhSsymm : S⁻¹ = S\nhScard : ↑(#S) ≤ K ^ 2 * ↑(#A)\nF : Finset G\nhFA : F ⊆ A\nhFcard : ↑(#F) ≤ 2 * K\nhASF : A ⊆ S * F\n⊢ ↑(#(S ^ 2)) ≤ 16 * K ^ 12 * ↑(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "721cb512ffad45e7933f66dd12e701f60a41596bd9a7b5c7473e45302bb65d93"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 60,
      "start_column": 4,
      "end_line": 60,
      "end_column": 9,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.refine_3\nG : Type u_1\ninst✝¹ : Group G\nK : ℝ\ninst✝ : DecidableEq G\nA : Finset G\nhA₀ : A.Nonempty\nhA : ↑(#(A ^ 2)) ≤ K * ↑(#A)\nhK : 1 ≤ K\nS : Finset G := {g ∈ A⁻¹ * A | ↑(#A) / (2 * K) ≤ ↑(#(A <• g ∩ A))}\nhS₁ : 1 ∈ S\nhS₀ : S.Nonempty\nhSA : S ⊆ A⁻¹ * A\nhSsymm : S⁻¹ = S\nhScard : ↑(#S) ≤ K ^ 2 * ↑(#A)\nF : Finset G\nhFA : F ⊆ A\nhFcard : ↑(#F) ≤ 2 * K\nhASF : A ⊆ S * F\n⊢ ∃ a ∈ A, ↑(#A) / (2 * K) ≤ ↑(#(A ∩ S ^ 2 <• a))",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-03-05T14:51:44+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "3e635215843fdf70c6597f1bfed9e55c9faceff82c41ca1fc138b5ddcacd4ffd"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 45,
      "start_column": 22,
      "end_line": 45,
      "end_column": 27,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst✝¹ : Group G\nK : ℝ\ninst✝ : DecidableEq G\nA : Finset G\nhA₀ : A.Nonempty\nhA : ↑(#(A ^ 2)) ≤ K * ↑(#A)\nhK : 1 ≤ K\nS : Finset G := {g ∈ A⁻¹ * A | ↑(#A) / (2 * K) ≤ ↑(#(A <• g ∩ A))}\nhS₁ : 1 ∈ S\nhS₀ : S.Nonempty\nhSA : S ⊆ A⁻¹ * A\nhSsymm : S⁻¹ = S\n⊢ ↑(#(A⁻¹ * A)) ≤ K ^ 2 * ↑(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L45"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "58fc57b29c1148d6decafbb5b43525f88aa71e1cffaea3fcc32a423d64b34705"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 46,
      "start_column": 69,
      "end_line": 46,
      "end_column": 74,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst✝¹ : Group G\nK : ℝ\ninst✝ : DecidableEq G\nA : Finset G\nhA₀ : A.Nonempty\nhA : ↑(#(A ^ 2)) ≤ K * ↑(#A)\nhK : 1 ≤ K\nS : Finset G := {g ∈ A⁻¹ * A | ↑(#A) / (2 * K) ≤ ↑(#(A <• g ∩ A))}\nhS₁ : 1 ∈ S\nhS₀ : S.Nonempty\nhSA : S ⊆ A⁻¹ * A\nhSsymm : S⁻¹ = S\nhScard : ↑(#S) ≤ K ^ 2 * ↑(#A)\n⊢ ∃ F ⊆ A, ↑(#F) ≤ 2 * K ∧ A ⊆ S * F",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L46"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "19c0481c5bc3939a05949d6d735fc88f540a6fac6a649b96ac38c8dacf7ded32"
  },
  {
    "repo": {
      "remote": "https://github.com/YaelDillies/LeanCamCombi",
      "branch": "master",
      "commit": "5df79658756ef6d112f2464eec3aece31e35cc83",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 29,
      "end_line": 54,
      "end_column": 34,
      "file": "LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst✝¹ : Group G\nK : ℝ\ninst✝ : DecidableEq G\nA : Finset G\nhA₀ : A.Nonempty\nhA : ↑(#(A ^ 2)) ≤ K * ↑(#A)\nhK : 1 ≤ K\nS : Finset G := {g ∈ A⁻¹ * A | ↑(#A) / (2 * K) ≤ ↑(#(A <• g ∩ A))}\nhS₁ : 1 ∈ S\nhS₀ : S.Nonempty\nhSA : S ⊆ A⁻¹ * A\nhSsymm : S⁻¹ = S\nhScard : ↑(#S) ≤ K ^ 2 * ↑(#A)\nF : Finset G\nhFA : F ⊆ A\nhFcard : ↑(#F) ≤ 2 * K\nhASF : A ⊆ S * F\n⊢ ↑(#(A * S ^ 3 * A⁻¹)) ≤ 8 * K ^ 11 * ↑(#A)",
      "url": "https://github.com/YaelDillies/LeanCamCombi/blob/5df79658756ef6d112f2464eec3aece31e35cc83/LeanCamCombi/Mathlib/Combinatorics/Additive/ApproximateSubgroup.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2025-01-24T23:15:34+00:00",
      "inclusion_date": "2025-04-18T00:01:05.296811+00:00"
    },
    "id": "03aa836926fe6e9fa2eb93286d620ec46ac808bb6783d3f72983bf8b132889ef"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2275,
      "start_column": 61,
      "end_line": 2275,
      "end_column": 66,
      "file": "PrimeNumberTheoremAnd/Wiener.lean"
    },
    "debug_info": {
      "goal": "A x : ℝ\nG : ℂ → ℂ\nf : ℕ → ℝ\nhpos : 0 ≤ f\nhG : ContinuousOn G {s | 1 ≤ s.re}\nhG' : EqOn G (fun s => LSeries (fun n => ↑(f n)) s - ↑A / (s - 1)) {s | 1 < s.re}\nhf : ∀ (σ' : ℝ), 1 < σ' → Summable (nterm (fun n => ↑(f n)) σ')\nψ : CS 2 ℂ\nhψpos : ∀ (y : ℝ), 0 ≤ (𝓕 ψ.toFun y).re ∧ (𝓕 ψ.toFun y).im = 0\nhx : 1 ≤ x\n⊢ ∑' (n : ℕ), ↑(f n) / ↑n * 𝓕 ψ.toFun (1 / (2 * π) * Real.log (↑n / x)) -\n      ↑A * ∫ (u : ℝ) in Ici (-Real.log x), 𝓕 ψ.toFun (u / (2 * π)) =\n    ∫ (t : ℝ), G (1 + ↑t * I) * ψ.toFun t * ↑x ^ (↑t * I)",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/Wiener.lean#L2275"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-04-04T12:17:01-07:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "bf42e60cb656be3afbf004c04698b3eaef26c35ce22b8517b85496962752fa3e"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2297,
      "start_column": 90,
      "end_line": 2297,
      "end_column": 95,
      "file": "PrimeNumberTheoremAnd/Wiener.lean"
    },
    "debug_info": {
      "goal": "A : ℝ\nG : ℂ → ℂ\nf : ℕ → ℝ\nhpos : 0 ≤ f\nhG : ContinuousOn G {s | 1 ≤ s.re}\nhG' : EqOn G (fun s => LSeries (fun n => ↑(f n)) s - ↑A / (s - 1)) {s | 1 < s.re}\nhf : ∀ (σ' : ℝ), 1 < σ' → Summable (nterm (fun n => ↑(f n)) σ')\nψ : CS 2 ℂ\nhψpos : ∀ (y : ℝ), 0 ≤ (𝓕 ψ.toFun y).re ∧ (𝓕 ψ.toFun y).im = 0\n⊢ ∃ B, ∀ (x : ℝ), 0 < x → ‖∑' (n : ℕ), ↑(f n) / ↑n * 𝓕 ψ.toFun (1 / (2 * π) * Real.log (↑n / x))‖ ≤ B",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/Wiener.lean#L2297"
    },
    "metadata": {
      "blame_email_hash": "4d01d7c10d46",
      "blame_date": "2024-04-16T02:15:35+02:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "520457e1f0d2e7250f0878b0209d6145b18befc38cc01b64f39f34a1e7dc7d0f"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2315,
      "start_column": 2,
      "end_line": 2315,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Wiener.lean"
    },
    "debug_info": {
      "goal": "A : ℝ\nG : ℂ → ℂ\nf : ℕ → ℝ\nhpos : 0 ≤ f\nhf : ∀ (σ' : ℝ), 1 < σ' → Summable (nterm (fun n => ↑(f n)) σ')\nhG : ContinuousOn G {s | 1 ≤ s.re}\nhG' : EqOn G (fun s => LSeries (fun n => ↑(f n)) s - ↑A / (s - 1)) {s | 1 < s.re}\n⊢ cheby fun n => ↑(f n)",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/Wiener.lean#L2315"
    },
    "metadata": {
      "blame_email_hash": "4d01d7c10d46",
      "blame_date": "2024-04-16T02:15:35+02:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "b95d2c7a770490b019b59c2ded7e2de30f5e5f9b2c1006481198e3b0cc5605f3"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 328,
      "start_column": 2,
      "end_line": 328,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\ndiffSmoothingF : ContDiff ℝ 1 SmoothingF\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\nX✝ : ℝ\nC : ℝ := sorry\nCpos : 0 < C\nX : ℝ\nX_ge_C : C < X\nε : ℝ\nεpos : 0 < ε\nε_lt_one : ε < 1\n⊢ ‖↑(∑' (n : ℕ), Λ n * Smooth1 SmoothingF ε (↑n / X)) - ↑((Finset.range ⌊X⌋₊).sum ⇑Λ)‖ ≤ C * ε * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L328"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "5f3104a917032b249932ce6f08c0c08e464ff200ddc7419e5587a268f0caa950"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 319,
      "start_column": 23,
      "end_line": 319,
      "end_column": 28,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\ndiffSmoothingF : ContDiff ℝ 1 SmoothingF\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\nX : ℝ\nC : ℝ := sorry\n⊢ 0 < C",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L319"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-14T14:09:55-05:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "d31421907a8b6b41381cf2b924520747406162ce8610f001d46fc402352275bb"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 365,
      "start_column": 2,
      "end_line": 365,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\nε : ℝ\nε_pos : 0 < ε\nX σ₀ : ℝ\nσ₀_pos : 0 < σ₀\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF ε X) (Icc σ₀ 2 ×ℂ univ \\ {1})\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\n⊢ Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF ε X (2 + ↑t * I)) volume",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L365"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-28T10:57:09-05:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "1e012fa8e721c16a5a5609079fc52308969208b5e434f92efa975840c2832c11"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 399,
      "start_column": 2,
      "end_line": 399,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\nε : ℝ\nε_pos : 0 < ε\nX T : ℝ\nT_pos : 0 < T\nσ₀ : ℝ\nσ₀_pos : 0 < σ₀\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF ε X) (Icc σ₀ 2 ×ℂ univ \\ {1})\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\n⊢ (1 / (2 * ↑π * I)) •\n      ((I • ∫ (t : ℝ) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF ε X (↑2 + ↑t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF ε X) 2 (-T) T +\n        I • ∫ (t : ℝ) in Ici T, SmoothedChebyshevIntegrand SmoothingF ε X (↑2 + ↑t * I)) =\n    𝓜 (fun x => ↑(Smooth1 SmoothingF ε x)) 1 * ↑X +\n      1 / (2 * ↑π * I) *\n        (((((I * ∫ (t : ℝ) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF ε X (2 + ↑t * I)) -\n                ∫ (s : ℝ) in Icc σ₀ 2, SmoothedChebyshevIntegrand SmoothingF ε X (↑s - ↑T * I)) +\n              I * ∫ (t : ℝ) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF ε X (↑σ₀ + ↑t * I)) +\n            ∫ (s : ℝ) in Icc σ₀ 2, SmoothedChebyshevIntegrand SmoothingF ε X (↑s + ↑T * I)) +\n          I * ∫ (t : ℝ) in Ici T, SmoothedChebyshevIntegrand SmoothingF ε X (2 + ↑t * I))",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-10T12:59:29-05:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "8a5f497557d4896ce8c37874eca4b8585364a3abd8ceb30f6ee6171d8482ad06"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 511,
      "start_column": 2,
      "end_line": 511,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "c : ℝ := sorry\ncpos : 0 < c\nC : ℝ := sorry\nX₀ : ℝ := sorry\nX : ℝ\nX_ge_X₀ : X ≥ X₀\n⊢ ‖(ChebyshevPsi - id) X‖ ≤ C * ‖X * rexp (-c * Real.log X ^ (1 / 10))‖",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "06d286d38a1822df79fb6cecfe97f52dcda8255daa248e6e5fdc68bffcf5f982"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 501,
      "start_column": 23,
      "end_line": 501,
      "end_column": 28,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "c : ℝ := sorry\n⊢ 0 < c",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/MediumPNT.lean#L501"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-14T15:25:09-05:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "7abbc3ed8d442ac777ee7b24e56250ba81752a871d4e15f84b9af0dfdd5cdc40"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1843,
      "start_column": 2,
      "end_line": 1843,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "⊢ ∃ c, (c =o[atTop] fun x => 1) ∧ ∀ (n : ℕ), ↑(nth Nat.Prime n) = (1 + c n) * ↑n * log ↑n",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/Consequences.lean#L1843"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "854705ad4af4af94ae067b9a2008bd912742cbed7e7b331468ef90c00e9a103d"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "update-cheby",
      "commit": "c943e3626cec55ca113ec72a5167a88618171835",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2060,
      "start_column": 2,
      "end_line": 2060,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "ε : ℝ\nhε : 0 < ε\n⊢ ∀ᶠ (x : ℝ) in atTop, ∃ p, Nat.Prime p ∧ x < ↑p ∧ ↑p < (1 + ε) * x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/c943e3626cec55ca113ec72a5167a88618171835/PrimeNumberTheoremAnd/Consequences.lean#L2060"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-20T23:27:10.006326+00:00"
    },
    "id": "8f32d4cd9141fba408c69d0b4d3d2cb1465d2f10b14b4223ae279c08bb27f689"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2574,
      "start_column": 81,
      "end_line": 2574,
      "end_column": 86,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "⊢ (fun x => ∑ n ∈ range ⌊x⌋₊, μ n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/Consequences.lean#L2574"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "4c6a0455a8b34b52a7f64e32b417e8316186eaa3044d52e3d6bb7f5dd6b6c930"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2610,
      "start_column": 2,
      "end_line": 2610,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "⊢ (fun x => ∑ n ∈ range ⌊x⌋₊, (-1) ^ Ω n) =o[atTop] fun x => x",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/Consequences.lean#L2610"
    },
    "metadata": {
      "blame_email_hash": "11451cd2f124",
      "blame_date": "2024-02-19T02:44:41-08:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "c7459a88ec8bad35d847133968a3043cc0982421b5b59fe3e1dd7365c8a117a2"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "main",
      "commit": "89c431184f7af947a3127c71c18730224e168bda",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2634,
      "start_column": 98,
      "end_line": 2634,
      "end_column": 103,
      "file": "PrimeNumberTheoremAnd/Consequences.lean"
    },
    "debug_info": {
      "goal": "⊢ (fun x => ∑ n ∈ range ⌊x⌋₊, ↑(μ n) / ↑n) =o[atTop] fun x => 1",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/89c431184f7af947a3127c71c18730224e168bda/PrimeNumberTheoremAnd/Consequences.lean#L2634"
    },
    "metadata": {
      "blame_email_hash": "5ecb8fcfe98c",
      "blame_date": "2025-02-06T17:41:08+01:00",
      "inclusion_date": "2025-04-21T23:18:04.027780+00:00"
    },
    "id": "66776fc89f5135769ea9e5f5bfb90ce7fba07bcf07c1a95cc8a671b1390a8799"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 70,
      "start_column": 44,
      "end_line": 70,
      "end_column": 49,
      "file": "InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean"
    },
    "debug_info": {
      "goal": "K : Type u\ninst✝¹ : Category.{v, u} K\ninst✝ : InfinityCosmos K\nX Y X' Y' : K\nf : X ↠ Y\ng : X' ↠ Y'\n⊢ IsIsofibration (prod.map ↑f ↑g)",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/InfinityCosmos/Isofibrations.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "eaaeec08515d",
      "blame_date": "2024-12-03T11:33:30-05:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "76c8504fdd8e486111651526b1cea668d0f1e6f547032ca4ea7086750d71f6f2"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 133,
      "start_column": 50,
      "end_line": 133,
      "end_column": 55,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf✝ g✝ f g h : A _⦋1⦌\nH₁ : HomotopyL f g\nH₂ : HomotopyL f h\nσ : Subpresheaf.toPresheaf Λ[3, 1] ⟶ A := sorry\nτ : A _⦋3⦌ := sorry\n⊢ SimplicialObject.δ A 0 τ = (SimplicialObject.δ A 0 ≫ SimplicialObject.σ A 0 ≫ SimplicialObject.σ A 0) g",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "cfd3dc29049763dfb7ec03d093b090ff50e67fd456005bc3a48eb351e6a948c3"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 134,
      "start_column": 36,
      "end_line": 134,
      "end_column": 41,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf✝ g✝ f g h : A _⦋1⦌\nH₁ : HomotopyL f g\nH₂ : HomotopyL f h\nσ : Subpresheaf.toPresheaf Λ[3, 1] ⟶ A := sorry\nτ : A _⦋3⦌ := sorry\nτ₀ : SimplicialObject.δ A 0 τ = (SimplicialObject.δ A 0 ≫ SimplicialObject.σ A 0 ≫ SimplicialObject.σ A 0) g\n⊢ SimplicialObject.δ A 2 τ = H₂.simplex",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "c99a8d113bee64a70cf1bcbe629fa772aa7fbb91c729b58868bedda1057ee67d"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 135,
      "start_column": 36,
      "end_line": 135,
      "end_column": 41,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf✝ g✝ f g h : A _⦋1⦌\nH₁ : HomotopyL f g\nH₂ : HomotopyL f h\nσ : Subpresheaf.toPresheaf Λ[3, 1] ⟶ A := sorry\nτ : A _⦋3⦌ := sorry\nτ₀ : SimplicialObject.δ A 0 τ = (SimplicialObject.δ A 0 ≫ SimplicialObject.σ A 0 ≫ SimplicialObject.σ A 0) g\nτ₂ : SimplicialObject.δ A 2 τ = H₂.simplex\n⊢ SimplicialObject.δ A 3 τ = H₁.simplex",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-17T23:14:43+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "1528c409e6d9f4b249cb94a57aa78f1be7ddfed06270f1e227b9d44a90aa57c2"
  },
  {
    "repo": {
      "remote": "https://github.com/emilyriehl/infinity-cosmos",
      "branch": "main",
      "commit": "bf1885e46ff0fde2a1cde218001d9b90307f4224",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 159,
      "start_column": 39,
      "end_line": 159,
      "end_column": 44,
      "file": "InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean"
    },
    "debug_info": {
      "goal": "A : SSet\nf g : A _⦋1⦌\ninst✝ : A.Quasicategory\n⊢ HomotopicL f g ↔ HomotopicR f g",
      "url": "https://github.com/emilyriehl/infinity-cosmos/blob/bf1885e46ff0fde2a1cde218001d9b90307f4224/InfinityCosmos/ForMathlib/AlgebraicTopology/SimplicialSet/Homotopy.lean#L159"
    },
    "metadata": {
      "blame_email_hash": "f0d6831918ab",
      "blame_date": "2024-12-05T19:17:58+01:00",
      "inclusion_date": "2025-04-03T01:40:20.137259+00:00"
    },
    "id": "e249ec833ea90c2ddfe12e1930391d2504dbfc2f252d7d4181076bbdae672197"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 144,
      "start_column": 4,
      "end_line": 144,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Logic\ninst✝ : L.QuasiNormal\nΓ : FormulaFinset ℕ\nh : Finset.conj Γ ∈ L\nφ : Formula ℕ\nhφ : φ ∈ Γ\n⊢ φ ∈ L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "c5258f811bdb8990e381525f91fc584e6cb3b4038502d5aeb75ae949e5a660f3"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 146,
      "start_column": 4,
      "end_line": 146,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "case mpr\nL : Logic\ninst✝ : L.QuasiNormal\nΓ : FormulaFinset ℕ\nh : ∀ φ ∈ Γ, φ ∈ L\n⊢ Finset.conj Γ ∈ L",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "dda53ec29b1103f63934ec7e08f1fc466f776cddfb338f1434e28180443cb4bf"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 209,
      "start_column": 104,
      "end_line": 209,
      "end_column": 109,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁹ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁸ : L.DecidableEq\nT₀ T✝ : Theory L\ninst✝⁷ : T₀ ⪯ T✝\ninst✝⁶ : Diagonalization T₀\nM : Type u_1\ninst✝⁵ : Nonempty M\ninst✝⁴ : Structure L M\n𝔅 : ProvabilityPredicate T₀ T✝\ninst✝³ : 𝔅.HBL\ninst✝² : 𝔅.Justified M\nA B : Modal.Formula ℕ\nT : Theory ℒₒᵣ\ninst✝¹ : 𝐏𝐀 ⪯ T\ninst✝ : T.Delta1Definable\n⊢ (𝐏𝐀.standardDP T).Justified ℕ",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T08:00:57+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "b8820a4c9889e8e022e61aef8ecebe5e16ccf681866bbde93fe2f724ed9e175c"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 219,
      "start_column": 86,
      "end_line": 219,
      "end_column": 91,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "A : Modal.Formula ℕ\nh : □A ∈ Logic.S\nf : Realization ℒₒᵣ\n⊢ ∀ {σ : Sentence ℒₒᵣ}, 𝐏𝐀 ⊢!. σ → ℕ ⊧ₘ₀ σ",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-02T11:19:40+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "18f138ae18ab351667f062caf8c16ae0777df0e5485811ea46d9c7283c4d148b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 247,
      "start_column": 6,
      "end_line": 247,
      "end_column": 11,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "case hSound\nL : Language\ninst✝⁷ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁶ : L.DecidableEq\nT₀ T : Theory L\ninst✝⁵ : T₀ ⪯ T\ninst✝⁴ : Diagonalization T₀\nM : Type u_1\ninst✝³ : Nonempty M\ninst✝² : Structure L M\n𝔅 : ProvabilityPredicate T₀ T\ninst✝¹ : 𝔅.HBL\ninst✝ : 𝔅.Justified M\nA : Modal.Formula ℕ\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\nh : A ∈ Logic.S\nf : Realization L\n⊢ ∀ {σ : Sentence L}, T ⊢!. σ → M ⊧ₘ₀ σ",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "14cb0ffdb4fd72cb29857360d735a756714be047f41508d11574a2f4ff5af3c8"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 326,
      "start_column": 27,
      "end_line": 326,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁷ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁶ : L.DecidableEq\nT₀ T : Theory L\ninst✝⁵ : T₀ ⪯ T\ninst✝⁴ : Diagonalization T₀\nM : Type u_1\ninst✝³ : Nonempty M\ninst✝² : Structure L M\n𝔅 : ProvabilityPredicate T₀ T\ninst✝¹ : 𝔅.HBL\ninst✝ : 𝔅.Justified M\nA : Modal.Formula ℕ\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization L), M ⊧ₘ₀ f.interpret 𝔅 A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀✝ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, Satisfies M₀ (Sum.inr r₁) φ\nhA₂ : ¬Satisfies M₀ (Sum.inr r₁) A\nσ : SolovaySentences 𝔅 M₁.toFrame r₁ := sorry\nr₀ : (M₁.extendRoot r₁).World := Model.extendRoot.root\nB : Modal.Formula ℕ\nihB :\n  B ∈ A.subformulas →\n    (Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ σ.realization.interpret 𝔅 B) ∧\n      (¬Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 B)\nB_sub : □B ∈ A.subformulas\nh : Satisfies M₀ (Sum.inr r₁) (□B)\nthis : T₀ ⊢!. (⩖ j, σ.σ j) ➝ σ.realization.interpret 𝔅 B\n⊢ T₀.alt ⊢! ⩖ j, σ.σ j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L326"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "120a42e014cab0523fb7de3073411dd4250d7695a529d99a3f29445438fb4c63"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 339,
      "start_column": 61,
      "end_line": 339,
      "end_column": 66,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁷ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁶ : L.DecidableEq\nT₀ T : Theory L\ninst✝⁵ : T₀ ⪯ T\ninst✝⁴ : Diagonalization T₀\nM : Type u_1\ninst✝³ : Nonempty M\ninst✝² : Structure L M\n𝔅 : ProvabilityPredicate T₀ T\ninst✝¹ : 𝔅.HBL\ninst✝ : 𝔅.Justified M\nA : Modal.Formula ℕ\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization L), M ⊧ₘ₀ f.interpret 𝔅 A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀✝ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, Satisfies M₀ (Sum.inr r₁) φ\nhA₂ : ¬Satisfies M₀ (Sum.inr r₁) A\nσ : SolovaySentences 𝔅 M₁.toFrame r₁ := sorry\nr₀ : (M₁.extendRoot r₁).World := Model.extendRoot.root\nH :\n  ∀ B ∈ A.subformulas,\n    (Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ σ.realization.interpret 𝔅 B) ∧\n      (¬Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 B)\nthis : T₀ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 A\n⊢ M ⊧ₘ₀ σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 A",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L339"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "9302abeca2fc455412c4e7fd0a618c79821702497ccc1e71686a2b9d83943d7f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "c46560f83a9b19eaa4a76edae702441896ef08ea",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 341,
      "start_column": 20,
      "end_line": 341,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁷ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁶ : L.DecidableEq\nT₀ T : Theory L\ninst✝⁵ : T₀ ⪯ T\ninst✝⁴ : Diagonalization T₀\nM : Type u_1\ninst✝³ : Nonempty M\ninst✝² : Structure L M\n𝔅 : ProvabilityPredicate T₀ T\ninst✝¹ : 𝔅.HBL\ninst✝ : 𝔅.Justified M\nA : Modal.Formula ℕ\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization L), M ⊧ₘ₀ f.interpret 𝔅 A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀✝ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, Satisfies M₀ (Sum.inr r₁) φ\nhA₂ : ¬Satisfies M₀ (Sum.inr r₁) A\nσ : SolovaySentences 𝔅 M₁.toFrame r₁ := sorry\nr₀ : (M₁.extendRoot r₁).World := Model.extendRoot.root\nH :\n  ∀ B ∈ A.subformulas,\n    (Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ σ.realization.interpret 𝔅 B) ∧\n      (¬Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 B)\nthis✝ : T₀ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 A\nthis : M ⊧ₘ₀ σ.σ r₀ → ¬M ⊧ₘ₀ σ.realization.interpret 𝔅 A\n⊢ M ⊧ₘ₀ σ.σ r₀",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/c46560f83a9b19eaa4a76edae702441896ef08ea/Foundation/ProvabilityLogic/S/Basic.lean#L341"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-03T01:44:16.361764+00:00"
    },
    "id": "dff1e90350cbcf3332f10cbce3b9fa17e3f6ad3eb3e449f2fb49a3269c7abe7e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Carleson/LinearizedMetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : CompatibleFunctions ℝ X (defaultA a)\ninst✝¹ : IsCancellative X (defaultτ a)\ninst✝ : IsOneSidedKernel a K\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (Θ X)\nθ : Θ X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (⇑Q) θ K x1 x2).toReal) 2 2 volume volume\n    (C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, linearizedCarlesonOperator (⇑Q) K f x ≤ ↑(C1_0_3 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "3dfb5cb6b310a05e71f8ab04822baf7038e7ca458e900e3ea3a118873ae6f925"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 443,
      "start_column": 55,
      "end_line": 443,
      "end_column": 60,
      "file": "Carleson/HolderVanDerCorput.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝¹ : MetricSpace X\ninst✝ : ProofData a q K σ₁ σ₂ F G\nz : X\nR : ℝ≥0\nhR : 0 < R\nϕ : X → ℂ\nhϕ : support ϕ ⊆ ball z ↑R\nh2ϕ : iHolENorm ϕ z ↑R < ⊤\nf g : Θ X\n⊢ ↑‖∫ (x : X), cexp (I * (↑(f x) - ↑(g x))) * ϕ x‖₊ ≤\n    ↑(C2_0_5 ↑a) * volume (ball z ↑R) * iHolENorm ϕ z ↑R * (1 + ↑(nndist_{z ,↑R} f g)) ^ (2 * ↑a ^ 2 + ↑a ^ 3)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/HolderVanDerCorput.lean#L443"
    },
    "metadata": {
      "blame_email_hash": "4f0774fdf1b5",
      "blame_date": "2024-07-01T23:56:16+08:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1d019c5d4b2138efdb149a15b6c4d49735c43c43addb334f4bce8845432268a8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Carleson/MetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : CompatibleFunctions ℝ X (defaultA a)\ninst✝¹ : IsCancellative X (defaultτ a)\ninst✝ : IsOneSidedKernel a K\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume (C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, carlesonOperator K f x ≤ ↑(C1_0_2 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "fa42f2793513a76e639cd89fb0b256f0689665b97fd5d71ea672ea914d79501c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1598,
      "start_column": 2,
      "end_line": 1598,
      "end_column": 7,
      "file": "Carleson/ForestOperator/LargeSeparation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\nn : ℕ\nt : Forest X n\nu₁ u₂ : 𝔓 X\nf₁ f₂ g₁ g₂ : X → ℂ\nhu₁ : u₁ ∈ t\nhu₂ : u₂ ∈ t\nhu : u₁ ≠ u₂\nh2u : 𝓘 u₁ ≤ 𝓘 u₂\nhf₁ : Bornology.IsBounded (range f₁)\nh2f₁ : HasCompactSupport f₁\nhf₂ : Bornology.IsBounded (range f₂)\nh2f₂ : HasCompactSupport f₂\n⊢ ‖∫ (x : X),\n        adjointCarlesonSum ((fun x => t.𝔗 x) u₁) g₁ x *\n          (starRingEnd ℂ) (adjointCarlesonSum ((fun x => t.𝔗 x) u₂ ∩ t.𝔖₀ u₁ u₂) g₂ x)‖ₑ ≤\n    ↑(C7_4_5 a n) * eLpNorm (fun x => ((↑(𝓘 u₁)).indicator (t.adjointBoundaryOperator u₁ g₁) x).toReal) 2 volume *\n      eLpNorm (fun x => ((↑(𝓘 u₁)).indicator (t.adjointBoundaryOperator u₂ g₂) x).toReal) 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ForestOperator/LargeSeparation.lean#L1598"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-09-27T15:17:13+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "680ce4eddb77eea9d9020204336fe3b5341d6a2ff7516f54d1947d6afa1d1e60"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 499,
      "start_column": 51,
      "end_line": 499,
      "end_column": 56,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Set (𝔓 X)\nf g : X → ℂ\nhf : Measurable f\nhf1 : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) 𝔄\n⊢ ‖∫ (x : X), (starRingEnd ℂ) (g x) * carlesonSum 𝔄 f x‖ₑ ≤\n    ↑(C_2_0_3 ↑a nnq) * dens₁ 𝔄 ^ ((q - 1) / (8 * ↑a ^ 4)) * dens₂ 𝔄 ^ (q⁻¹ - 2⁻¹) * eLpNorm f 2 volume *\n      eLpNorm g 2 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L499"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-01-09T16:08:11+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7bfdea9f30e10565b6dc8fc3168ed3461d57aca5edfbfe2b35d98acfb19e2a3c"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/MainTheorem.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume (C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, carlesonOperator K f x ≤ ↑(C10_0_1 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "f2f88b4c32ecc0ef187ca775dfbff34415214457612d1d89800c0465daf678ea"
  },
  {
    "repo": {
      "remote": "https://github.com/frenzymath/jixia",
      "branch": "main",
      "commit": "e6d1448771f53b540a450fdf5180f1217efaaab8",
      "lean_version": "v4.16.0"
    },
    "location": {
      "start_line": 82,
      "start_column": 55,
      "end_line": 82,
      "end_column": 60,
      "file": "Example.lean"
    },
    "debug_info": {
      "goal": "α : Type u\n⊢ ¬none.IsSome",
      "url": "https://github.com/frenzymath/jixia/blob/e6d1448771f53b540a450fdf5180f1217efaaab8/Example.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "aa8cba96a488",
      "blame_date": "2024-06-20T19:17:07+08:00",
      "inclusion_date": "2025-04-17T23:34:54.132174+00:00"
    },
    "id": "fb6b54e94ab974a1669ade99e27f8f182289c98744606a2a314245d519821c12"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 60,
      "start_column": 2,
      "end_line": 60,
      "end_column": 7,
      "file": "LeanByExample/Attribute/Aesop.lean"
    },
    "debug_info": {
      "goal": "P : Prop\nhp : P\n⊢ MyAnd P P",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "9a3464a8a3704a49b2292a811715e854fc1a1287ea0a702edbd56d942da7a48e"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7,
      "file": "LeanByExample/Attribute/Aesop.lean"
    },
    "debug_info": {
      "goal": "⊢ NonEmpty (MyList.cons 1 MyList.nil)",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "1c30fc32ce15f669075451698d47ff13a411eeaeb7c51b6964ed5e274eeafc8f"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 107,
      "start_column": 2,
      "end_line": 107,
      "end_column": 7,
      "file": "LeanByExample/Attribute/Aesop.lean"
    },
    "debug_info": {
      "goal": "a b c d e : Nat\nh1 : a ≤ b\nh2 : b ≤ c\nh3 : c ≤ d\nh4 : d ≤ e\n⊢ a ≤ e",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Attribute/Aesop.lean#L107"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T22:40:33+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "6d2c3b7d4bcf5ccac594be3ea46f32f7f20d5aef868e6c6eace910f2a0097045"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 16,
      "start_column": 41,
      "end_line": 16,
      "end_column": 46,
      "file": "LeanByExample/Declarative/ProofWanted.lean"
    },
    "debug_info": {
      "goal": "n : Nat\n⊢ n + 0 = n",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Declarative/ProofWanted.lean#L16"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-06-19T23:24:32+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "e7484b8b8c96e92b312ed6bfd2f3ae436caea0a3b115e377e501d6e60857cfe7"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 12,
      "start_column": 2,
      "end_line": 12,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Sorry.lean"
    },
    "debug_info": {
      "goal": "⊢ FermatLastTheorem",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Sorry.lean#L12"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-01-08T13:38:12+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "c1a5136e850b138a20962c448ffd3c5e1cfdf7d06860186676464fba8bbbf968"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Ext.lean"
    },
    "debug_info": {
      "goal": "α : Type u\na b : Set α\nh : ∀ (x : α), x ∈ a ↔ x ∈ b\n⊢ a = b",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "a79fbc1f99b4e315596137033e19ea503dda427a7c0dce0aaa7b85b74fd76775"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 2,
      "end_line": 95,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Ext.lean"
    },
    "debug_info": {
      "goal": "α : Type\np q : Foo\nhx : p.x = q.x\nhy : p.y = q.y\n⊢ p = q",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ext.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-01-08T20:05:37+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "5f71aae7fe81842dbdfa9970601f6c62c5de0ff5b96d88d5fb78baef222d3b88"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 115,
      "start_column": 2,
      "end_line": 115,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Ring.lean"
    },
    "debug_info": {
      "goal": "m n : MyNat\n⊢ n * (n + m) = n * n + n * m",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Ring.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2025-02-17T22:51:43+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "6ac5c29f24a3d2073f45d3561bcfa69e5449133c0a3b6e198de77518f3f9c971"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 73,
      "start_column": 4,
      "end_line": 73,
      "end_column": 9,
      "file": "LeanByExample/Tactic/Induction.lean"
    },
    "debug_info": {
      "goal": "case succ\nn m : ℕ\nih : m + n = 0 → m = 0 ∧ n = 0\nh : m + 1 + n = 0\n⊢ False",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Induction.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-11-07T02:25:02+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "4073a2e11f09a3b4f06b8c8084495e26836cbcb4e795233322a7cd2114f983a8"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 133,
      "start_column": 6,
      "end_line": 133,
      "end_column": 11,
      "file": "LeanByExample/Tactic/Induction.lean"
    },
    "debug_info": {
      "goal": "n✝ n : ℕ\n⊢ sum (n + 1) = ↑(n + 1) * (↑(n + 1) + 1) / 2",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Induction.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-04-25T03:36:30+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "5c8c1665c596f5e7ae8f6116e6587169c97fe88c641a02ef6476d7e8223813ea"
  },
  {
    "repo": {
      "remote": "https://github.com/lean-ja/lean-by-example",
      "branch": "main",
      "commit": "3ebe85bea550147ea661babd12b968bf8e97a7ed",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 67,
      "start_column": 2,
      "end_line": 67,
      "end_column": 7,
      "file": "LeanByExample/Tactic/Plausible.lean"
    },
    "debug_info": {
      "goal": "⊢ ∀ (a b : MyNat), a = b",
      "url": "https://github.com/lean-ja/lean-by-example/blob/3ebe85bea550147ea661babd12b968bf8e97a7ed/LeanByExample/Tactic/Plausible.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "a84937a2d49e",
      "blame_date": "2024-11-25T09:56:34+09:00",
      "inclusion_date": "2025-04-13T23:49:22.692160+00:00"
    },
    "id": "2923421152e5be64de021405d7350f597dee8d1e824b49847a8ac1aec39e67b6"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 262,
      "start_column": 105,
      "end_line": 262,
      "end_column": 110,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝¹⁰ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁹ : L.DecidableEq\nT₀ T✝ : Theory L\ninst✝⁸ : T₀ ⪯ T✝\ninst✝⁷ : Diagonalization T₀\nM : Type u_1\ninst✝⁶ : Nonempty M\ninst✝⁵ : Structure L M\ninst✝⁴ : M ⊧ₘ* T✝\n𝔅 : ProvabilityPredicate T₀ T✝\ninst✝³ : 𝔅.HBL\ninst✝² : 𝔅.Justified M\nA B : Modal.Formula ℕ\nT : Theory ℒₒᵣ\ninst✝¹ : 𝐏𝐀 ⪯ T\ninst✝ : T.Delta1Definable\n⊢ ∀ {σ : Sentence ℒₒᵣ}, T ⊢!. σ ↔ ℕ ⊧ₘ₀ ↑(𝐏𝐀.standardDP T) σ",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L262"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T11:15:03+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "281bc26d3b1b574f84087a8e0af4b52ab8dad41d9e415b472ca5e30288168d47"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 378,
      "start_column": 27,
      "end_line": 378,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁸ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁷ : L.DecidableEq\nT₀ T : Theory L\ninst✝⁶ : T₀ ⪯ T\ninst✝⁵ : Diagonalization T₀\nM : Type u_1\ninst✝⁴ : Nonempty M\ninst✝³ : Structure L M\ninst✝² : M ⊧ₘ* T\n𝔅 : ProvabilityPredicate T₀ T\ninst✝¹ : 𝔅.HBL\ninst✝ : 𝔅.Justified M\nA : Modal.Formula ℕ\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization L), M ⊧ₘ₀ f.interpret 𝔅 A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀✝ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, Satisfies M₀ (Sum.inr r₁) φ\nhA₂ : ¬Satisfies M₀ (Sum.inr r₁) A\nσ : SolovaySentences 𝔅 M₁.toFrame r₁ := sorry\nr₀ : (M₁.extendRoot r₁).World := Model.extendRoot.root\nB : Modal.Formula ℕ\nihB :\n  B ∈ A.subformulas →\n    (Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ σ.realization.interpret 𝔅 B) ∧\n      (¬Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 B)\nB_sub : □B ∈ A.subformulas\nh : Satisfies M₀ (Sum.inr r₁) (□B)\nthis : T₀ ⊢!. (⩖ j, σ.σ j) ➝ σ.realization.interpret 𝔅 B\n⊢ T₀.alt ⊢! ⩖ j, σ.σ j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L378"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T09:24:01+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "815da39e1f4ae2018ba3376dbcfc478597f566520ff058234a2607fcb58a784a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 393,
      "start_column": 20,
      "end_line": 393,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Basic.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁸ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁷ : L.DecidableEq\nT₀ T : Theory L\ninst✝⁶ : T₀ ⪯ T\ninst✝⁵ : Diagonalization T₀\nM : Type u_1\ninst✝⁴ : Nonempty M\ninst✝³ : Structure L M\ninst✝² : M ⊧ₘ* T\n𝔅 : ProvabilityPredicate T₀ T\ninst✝¹ : 𝔅.HBL\ninst✝ : 𝔅.Justified M\nA : Modal.Formula ℕ\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization L), M ⊧ₘ₀ f.interpret 𝔅 A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀✝ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, Satisfies M₀ (Sum.inr r₁) φ\nhA₂ : ¬Satisfies M₀ (Sum.inr r₁) A\nσ : SolovaySentences 𝔅 M₁.toFrame r₁ := sorry\nr₀ : (M₁.extendRoot r₁).World := Model.extendRoot.root\nH :\n  ∀ B ∈ A.subformulas,\n    (Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ σ.realization.interpret 𝔅 B) ∧\n      (¬Satisfies M₀ (Sum.inr r₁) B → T₀ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret 𝔅 B)\nthis✝ : M ⊧ₘ* T₀\nthis : M ⊧ₘ₀ σ.σ r₀ → ¬M ⊧ₘ₀ σ.realization.interpret 𝔅 A\n⊢ M ⊧ₘ₀ σ.σ r₀",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/S/Basic.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "bcba129cb76ab930cd07720444e2484f4cad12efe6794d3da0d66fd69e2c2819"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 2452,
      "start_column": 2,
      "end_line": 2452,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/ZetaBounds.lean"
    },
    "debug_info": {
      "goal": "case h\nA : ℝ\nhA : A ∈ Ioc 0 (1 / 2)\nh✝ :\n  ∃ C,\n    ∃ (_ : 0 < C),\n      ∀ (σ t : ℝ),\n        3 < |t| →\n          σ ∈ Ico (1 - A / Real.log |t| ^ 9) 1 → ‖deriv ζ (↑σ + ↑t * I) / ζ (↑σ + ↑t * I)‖ ≤ C * Real.log |t| ^ 9\nT : ℝ\nT_gt : 3 < T\n⊢ HolomorphicOn (fun s => deriv ζ s / ζ s) (Ioc (1 - A / Real.log T ^ 9) 2 ×ℂ Icc (-T) T \\ {1})",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/ZetaBounds.lean#L2452"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-07T16:45:37-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "ff893eaaec46b69d8a2462e16a6c7dcd102c794c5b57ed51c4d58eadcac3abae"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 362,
      "start_column": 2,
      "end_line": 362,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\ndiffSmoothingF : ContDiff ℝ 1 SmoothingF\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\nX✝ : ℝ\nC : ℝ := sorry\nC_gt : 3 < C\nX : ℝ\nX_ge_C : C < X\nε : ℝ\nεpos : 0 < ε\nε_lt_one : ε < 1\n⊢ ‖↑(∑' (n : ℕ), ArithmeticFunction.vonMangoldt n * Smooth1 SmoothingF ε (↑n / X)) -\n        ↑((Finset.range ⌊X⌋₊).sum ⇑ArithmeticFunction.vonMangoldt)‖ ≤\n    C * ε * X * Real.log X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L362"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2024-03-11T23:23:22-04:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "bd25bc916d585ad5539838dbc6d5171e3e2c975a9ac8bd87c129b78b3d666606"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 353,
      "start_column": 23,
      "end_line": 353,
      "end_column": 28,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\ndiffSmoothingF : ContDiff ℝ 1 SmoothingF\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\nX : ℝ\nC : ℝ := sorry\n⊢ 3 < C",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L353"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-08T10:26:01-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "7cd7f714bb60d5fceb755f385d9fc4575549abc79bdfff0a0cd095a8765828dd"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 431,
      "start_column": 2,
      "end_line": 431,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\nε : ℝ\nε_pos : 0 < ε\nX T : ℝ\nT_pos : 0 < T\nσ₀ : ℝ\nσ₀_pos : 0 < σ₀\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF ε X) (Icc σ₀ 2 ×ℂ univ \\ {1})\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\n⊢ Integrable (fun t => SmoothedChebyshevIntegrand SmoothingF ε X (↑(1 + (Real.log X)⁻¹) + ↑t * I)) volume",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L431"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-03-07T17:04:05-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "3ec42e380be1018b541105196279d6fa12aca71336e2f1701cda98424bc2d9f9"
  },
  {
    "repo": {
      "remote": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd",
      "branch": "AK_work",
      "commit": "4250adfc9aab5e09d276549d7a645627cb2dce39",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 437,
      "start_column": 2,
      "end_line": 437,
      "end_column": 7,
      "file": "PrimeNumberTheoremAnd/MediumPNT.lean"
    },
    "debug_info": {
      "goal": "SmoothingF : ℝ → ℝ\nε : ℝ\nε_pos : 0 < ε\nX T : ℝ\nT_pos : 0 < T\nσ₀ : ℝ\nσ₀_pos : 0 < σ₀\nholoOn : HolomorphicOn (SmoothedChebyshevIntegrand SmoothingF ε X) (Icc σ₀ 2 ×ℂ univ \\ {1})\nsuppSmoothingF : support SmoothingF ⊆ Icc (1 / 2) 2\nSmoothingFnonneg : ∀ x > 0, 0 ≤ SmoothingF x\nmass_one : ∫ (x : ℝ) in Ioi 0, SmoothingF x / x = 1\n⊢ (1 / (2 * ↑π * I)) •\n      ((I • ∫ (t : ℝ) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF ε X (↑(1 + (Real.log X)⁻¹) + ↑t * I)) +\n          VIntegral (SmoothedChebyshevIntegrand SmoothingF ε X) (1 + (Real.log X)⁻¹) (-T) T +\n        I • ∫ (t : ℝ) in Ici T, SmoothedChebyshevIntegrand SmoothingF ε X (↑(1 + (Real.log X)⁻¹) + ↑t * I)) =\n    1 / (2 * ↑π * I) *\n        (((((I * ∫ (t : ℝ) in Iic (-T), SmoothedChebyshevIntegrand SmoothingF ε X (1 + ↑(Real.log X)⁻¹ + ↑t * I)) -\n                ∫ (s : ℝ) in Icc σ₀ (1 + (Real.log X)⁻¹), SmoothedChebyshevIntegrand SmoothingF ε X (↑s - ↑T * I)) +\n              I * ∫ (t : ℝ) in Icc (-T) T, SmoothedChebyshevIntegrand SmoothingF ε X (↑σ₀ + ↑t * I)) +\n            ∫ (s : ℝ) in Icc σ₀ (1 + (Real.log X)⁻¹), SmoothedChebyshevIntegrand SmoothingF ε X (↑s + ↑T * I)) +\n          I * ∫ (t : ℝ) in Ici T, SmoothedChebyshevIntegrand SmoothingF ε X (1 + ↑(Real.log X)⁻¹ + ↑t * I)) +\n      𝓜 (fun x => ↑(Smooth1 SmoothingF ε x)) 1 * ↑X",
      "url": "https://github.com/AlexKontorovich/PrimeNumberTheoremAnd/blob/4250adfc9aab5e09d276549d7a645627cb2dce39/PrimeNumberTheoremAnd/MediumPNT.lean#L437"
    },
    "metadata": {
      "blame_email_hash": "4bcdc021face",
      "blame_date": "2025-02-10T12:59:29-05:00",
      "inclusion_date": "2025-04-15T23:18:41.650749+00:00"
    },
    "id": "ecd44a7a707ebebc71b1e4682d85c9e61e62d794d9e09df4485d21bdfaf279c9"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "8dd6f415d456277d098fea761f015a635c09769e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.25135 ∈ ↑ys then ?m.25164 else y\n⊢ NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
    },
    "id": "f81b74aae3103e71f48752698c13e903a86def12b61579cde195e801f908775f"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "8dd6f415d456277d098fea761f015a635c09769e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.25135 ∈ ↑ys then ?m.25164 else y\nhg1 : NSequence n k g1 := sorry\n⊢ ⟨g1, hg1⟩ ∈ {g | ψ n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/8dd6f415d456277d098fea761f015a635c09769e/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-06T23:00:41.347633+00:00"
    },
    "id": "747528909d823ad66c5be55364bd463d8d47429fefedb47c7d201864a676e9d6"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 37,
      "start_column": 50,
      "end_line": 37,
      "end_column": 55,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝ : Semiterm.Operator.GoedelNumber L (Sentence L)\nT₀ T : Theory L\n𝔅 : ProvabilityPredicate T₀ T\nn : ℕ+\nσ : Sentence L\n⊢ (𝔅^[n + 1])/[⌜σ⌝] = ↑𝔅 ((𝔅^[n])/[⌜σ⌝])",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L37"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T09:21:39+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "6dcb0d6b1dacb386ec78231da3a1460d503041b76010a501338b8e79288c95ba"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 179,
      "start_column": 2,
      "end_line": 179,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝ : Semiterm.Operator.GoedelNumber L (Sentence L)\nT₀ T U : Theory L\n𝔅 : ProvabilityPredicate T₀ T\n⊢ WellFounded fun a b => a < b ∧ a ∈ provabilityHeightSet U 𝔅 ∧ b ∈ provabilityHeightSet U 𝔅",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L179"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "c0a7740449e84840c053ef6013b2f860ab0f97fb569841faf7e442806bc0d69a"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 189,
      "start_column": 4,
      "end_line": 189,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst✝ : Semiterm.Operator.GoedelNumber L (Sentence L)\nT₀ T U : Theory L\n𝔅 : ProvabilityPredicate T₀ T\n⊢ (provabilityHeightSet U 𝔅).Nonempty → provabilityHeight U 𝔅 ≠ 0",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L189"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "f0a04e7a5a29ab70dd975a193b8284e3d114a3284a4fc7bddbf9d0f5b0796fa9"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 217,
      "start_column": 4,
      "end_line": 217,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst✝ : Semiterm.Operator.GoedelNumber L (Sentence L)\nT₀ T : Theory L\n𝔅 : ProvabilityPredicate T₀ T\nn : ℕ+\nh : Theory.provabilityHeight T 𝔅 = ↑n\n⊢ ∀ (A : Modal.Formula ℕ), (∀ {f : Realization L}, T ⊢!. f.interpret 𝔅 A) ↔ A ∈ Logic.GLBB n",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L217"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "3f93f32d684a3cce34eaa0404e2cedd284f19677a3b468d55a932a5e2fbd01d5"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 219,
      "start_column": 4,
      "end_line": 219,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mpr\nL : Language\ninst✝ : Semiterm.Operator.GoedelNumber L (Sentence L)\nT₀ T : Theory L\n𝔅 : ProvabilityPredicate T₀ T\nn : ℕ+\nh : ∀ (A : Modal.Formula ℕ), (∀ {f : Realization L}, T ⊢!. f.interpret 𝔅 A) ↔ A ∈ Logic.GLBB n\n⊢ Theory.provabilityHeight T 𝔅 = ↑n",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "8d3279d9fe07b8f6f4a9b57cee8a31c02646091d17f284e46d8381157e838840"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "GL-height-crassify",
      "commit": "4039e2ec63c90beb405cef22556f24665de67668",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 227,
      "start_column": 4,
      "end_line": 227,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/GL/Height.lean"
    },
    "debug_info": {
      "goal": "case mp\nL : Language\ninst✝ : Semiterm.Operator.GoedelNumber L (Sentence L)\nT₀ T : Theory L\n𝔅 : ProvabilityPredicate T₀ T\nh : Theory.provabilityHeight T 𝔅 = 0\nthis : ∀ (n : ℕ+), T ⊬. (𝔅^[n])/[⌜⊥⌝]\n⊢ ∀ (A : Modal.Formula ℕ), (∀ {f : Realization L}, T ⊢!. f.interpret 𝔅 A) ↔ A ∈ Logic.GL",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/4039e2ec63c90beb405cef22556f24665de67668/Foundation/ProvabilityLogic/GL/Height.lean#L227"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-04T11:09:14+09:00",
      "inclusion_date": "2025-04-04T23:25:12.175409+00:00"
    },
    "id": "218f14961eda369ebfcba1337b7a9bfd0e1c3b80692aab999af2fe184089d2ef"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 2,
      "end_line": 30,
      "end_column": 7,
      "file": "Carleson/LinearizedMetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : CompatibleFunctions ℝ X (defaultA a)\ninst✝¹ : IsCancellative X (defaultτ a)\ninst✝ : IsOneSidedKernel a K\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.HolderConjugate q'\nQ : SimpleFunc X (Θ X)\nθ : Θ X\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT :\n  HasBoundedStrongType (fun x1 x2 => (linearizedNontangentialOperator (⇑Q) θ K x1 x2).toReal) 2 2 volume volume\n    ↑(C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, linearizedCarlesonOperator (⇑Q) K f x ≤ ↑(C1_0_3 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/LinearizedMetricCarleson.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-07-30T10:31:30+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "46571c141c45661b939dbb755ff9dc42ab02217902ab23e25c5e0dd5ce4c3333"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 2,
      "end_line": 33,
      "end_column": 7,
      "file": "Carleson/MetricCarleson.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : CompatibleFunctions ℝ X (defaultA a)\ninst✝¹ : IsCancellative X (defaultτ a)\ninst✝ : IsOneSidedKernel a K\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : HasBoundedStrongType (fun x1 x2 => nontangentialOperator K x1 x2) 2 2 volume volume ↑(C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, carlesonOperator K f x ≤ ↑(C1_0_2 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/MetricCarleson.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2024-06-16T22:39:23+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7564bdd3b6d99f989b43bcf6f05d99a593eecc27bf75a45907f2fe2d60b714f4"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "Carleson/Classical/HilbertStrongType.lean"
    },
    "debug_info": {
      "goal": "r : ℝ\nhr : 0 < r\n⊢ HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts 4)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Classical/HilbertStrongType.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-23T00:03:48+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "8215191805f0a59d6d72345d9a51bf38c624746c20917526d6e49b2e7796071e"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 469,
      "start_column": 2,
      "end_line": 469,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\nι : Type u_3\n𝓑 : Set ι\nc : ι → X\nr : ι → ℝ\ninst✝⁴ : BorelSpace X\ninst✝³ : IsFiniteMeasureOnCompacts μ\ninst✝² : ProperSpace X\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nh𝓑 : 𝓑.Countable\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ ≤ p₂\nv : X → E\nmlpv : MemLp v (↑p₂) μ\n⊢ AEStronglyMeasurable ((fun u x => maximalFunction μ 𝓑 c r (↑p₁) u x) v) μ ∧\n    wnorm ((fun u x => maximalFunction μ 𝓑 c r (↑p₁) u x) v) (↑p₂) μ ≤ ↑A ^ 2 * eLpNorm v (↑p₂) μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L469"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "cdca701e71c81765753bb5eca58fe2c8541741e0de1f81e615706d3e2918dad9"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case a\nX : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : ProperSpace X\ninst✝³ : BorelSpace X\ninst✝² : IsFiniteMeasureOnCompacts μ\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ ≤ p₂\nthis : ↑p₂ ≠ 0\n⊢ HasWeakType\n      (fun u x =>\n        (↑A ^ 2).toReal * (maximalFunction μ (⋯.choose ×ˢ univ) (fun x => x.1) (fun x => 2 ^ x.2) (↑p₁) u x).toReal)\n      (↑p₂) (↑p₂) μ μ (↑A ^ 4) ↔\n    MemLp ?convert_4 (↑p₂) μ →\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) μ ∧\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (↑p₂) μ ≤ ‖A ^ 2‖ₑ * ↑A ^ 2 * eLpNorm ?convert_4 (↑p₂) μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1b8ceb4a3627eb18cd924f0b5c8dac8101b0dc2757319bfd9d2b3f318a9a6769"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : ProperSpace X\ninst✝³ : BorelSpace X\ninst✝² : IsFiniteMeasureOnCompacts μ\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ ≤ p₂\nthis : ↑p₂ ≠ 0\n⊢ HasWeakType sorry (↑p₂) (↑p₂) μ μ (↑A ^ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a14850251f9f3be49295603c5034136e361ae1afdf316c66d134e31e74728ccd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 329,
      "start_column": 6,
      "end_line": 329,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_3.h.e'_5.h.h.e'_1.h.e'_11.e_a\nX : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\np₁ : ℝ≥0 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp₁ : p₁ = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp₁_ge : 1 ≤ p₁\nhp₁_lt : p₁ < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < ⊤\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) (↑p₁) f x).toReal) 2 2 volume volume\n    ↑(C2_0_6 (2 ^ a) p₁ 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n            (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume ≤\n    ↑(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))⁻¹) *\n      eLpNorm f 2 volume\nx✝ : X\n⊢ 3 * (2 * ↑nnq / (↑nnq + 1)) - 2 = ↑(3 * (2 * nnq / (nnq + 1)) - 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L329"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "1f49331d276e06d74ad989aa99269a948b369080bae089d711399bab04b4ea06"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 334,
      "start_column": 6,
      "end_line": 334,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "case h.e'_4.h.e'_5\nX : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\np₁ : ℝ≥0 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp₁ : p₁ = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp₁_ge : 1 ≤ p₁\nhp₁_lt : p₁ < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < ⊤\nthis :\n  HasStrongType (fun f x => (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) (↑p₁) f x).toReal) 2 2 volume volume\n    ↑(C2_0_6 (2 ^ a) p₁ 2)\nhh :\n  eLpNorm\n      (fun x =>\n        (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭)\n            (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) f x).toReal)\n      2 volume ≤\n    ↑(CMB (2 ^ a) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n          (↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)))⁻¹) *\n      eLpNorm f 2 volume\n⊢ ↑(2 ^ (2 * a)) * (3 * (↑(2 * nnq) / ↑(nnq + 1)) - 2) / (2 * (↑(2 * nnq) / ↑(nnq + 1)) - 2) =\n    ↑(CMB (↑(2 ^ a)) (2 / (2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))) ^\n        ↑(2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2))⁻¹)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c0532c467566b54cd19f2aa89de565551e24a98abf7879a8690de41dc4fd35d1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 312,
      "start_column": 6,
      "end_line": 312,
      "end_column": 11,
      "file": "Carleson/Antichain/AntichainOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\n𝔄 : Finset (𝔓 X)\nh𝔄 : IsAntichain (fun x1 x2 => x1 ≤ x2) ↑𝔄\nf : X → ℂ\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\nhfm : Measurable f\np₁ : ℝ≥0 := 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\nhp₁ : p₁ = 2 * (2 * nnq / (nnq + 1)) / (3 * (2 * nnq / (nnq + 1)) - 2)\naux : 0 < 3 * (2 * nnq / (nnq + 1)) - 2\nhp₁_ge : 1 ≤ p₁\nhp₁_lt : p₁ < 2\nhf1 : AEStronglyMeasurable f volume\nhf_top : eLpNorm f 2 volume < ⊤\n⊢ HasStrongType (fun f x => (maximalFunction volume (↑𝔄) 𝔠 (fun 𝔭 => 8 * ↑D ^ 𝔰 𝔭) (↑p₁) f x).toReal) 2 2 volume volume\n    ↑(C2_0_6 (2 ^ a) p₁ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/AntichainOperator.lean#L312"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-07T15:59:11+02:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0d934dafcedfd3ab16de4de2c207aa447b16a86db0d052b61a83f6c369ae37b1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr R : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\n⊢ volume {x' | x' ∈ ball x (R / 4) ∧ 4 * globalMaximalFunction volume 1 (czOperator K r g) x < ‖czOperator K r g x'‖ₑ} ≤\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "aff385a33dcb5171acfabc1e9a315be577e30cf7e8ec55f92801061ec1f8489f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 153,
      "start_column": 2,
      "end_line": 153,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr R : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\n⊢ volume\n      {x' |\n        x' ∈ ball x (R / 4) ∧\n          ↑(C10_1_4 a) * globalMaximalFunction volume 1 g x < ‖czOperator K r ((ball x (R / 2)).indicator g) x'‖ₑ} ≤\n    volume (ball x (R / 4)) / 4",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L153"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a41be9b67abe3200e531b835f4dabcadd8423f68b675ccce8eb20ac618cd8527"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr R : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : r ∈ Ioc 0 R\n⊢ ‖czOperator K R g x‖ₑ ≤\n    4 * globalMaximalFunction volume 1 (czOperator K r g) x + ↑(C10_1_5 a) * globalMaximalFunction volume 1 g x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "919e5b39318e059741806ac04c912fb734c86c9a25ecb28d40c5d2fa9002dc94"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 175,
      "start_column": 2,
      "end_line": 175,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : 0 < r\n⊢ HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume ↑(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L175"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "c046998b5798fb0ba303d374d736df52a0c164a8b4a846d1a7eea7b9e9e1c296"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 183,
      "start_column": 2,
      "end_line": 183,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nhr : 0 ≤ r\n⊢ HasStrongType (simpleNontangentialOperator K r) 2 2 volume volume ↑(C10_1_6 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L183"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9235b215f8a0b47574db3fa31bcb41fe27c1d4415b53c9211a3c754a7982b2c6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 190,
      "start_column": 2,
      "end_line": 190,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nK : X → X → ℂ\nx' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\nf : X → ℂ\nhf : BoundedFiniteSupport f volume\nR₁ : ℝ\n⊢ Continuous fun R₂ => ∫ (y : X) in {y | dist x' y ∈ Ioo R₁ R₂}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L190"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "68043d4b83c3a985c85b1f715d566ec65d21702238dd0803230118ba162480b0"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nK : X → X → ℂ\nx' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\nf : X → ℂ\nhf : BoundedFiniteSupport f volume\nR₂ : ℝ\n⊢ Continuous fun R₁ => ∫ (y : X) in {y | dist x' y ∈ Ioo R₁ R₂}, K x' y * f y",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f7669c8b9c084ac9b1e73bec44bb0c9f2d04bb0f516e79de96d0a42db13701bb"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 216,
      "start_column": 2,
      "end_line": 216,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/NontangentialOperator.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\ng : X → ℂ\nhg : BoundedFiniteSupport g volume\nthis : HasStrongType (simpleNontangentialOperator K 0) 2 2 volume volume ↑(C10_1_6 a)\n⊢ HasStrongType (nontangentialOperator K) 2 2 volume volume ↑(C10_0_2 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/NontangentialOperator.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T15:28:23+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9ef4ba451768e4c88e0b3a27fbe99fec4cae64d33e6b0d89a596a18001e4b6aa"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/MainTheorem.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhq : q ∈ Ioc 1 2\nhqq' : q.HolderConjugate q'\nhF : MeasurableSet F\nhG : MeasurableSet G\nhT : ∀ r > 0, HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\nf : X → ℂ\nhmf : Measurable f\nhf : ∀ (x : X), ‖f x‖ ≤ F.indicator 1 x\n⊢ ∫⁻ (x : X) in G, carlesonOperator K f x ≤ ↑(C10_0_1 a q) * volume G ^ (↑q')⁻¹ * volume F ^ (↑q)⁻¹",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/MainTheorem.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "452ca98a69e0649b0cd0f73b1979bcc99e085da756a52f7b120126a834d248db"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 348,
      "start_column": 2,
      "end_line": 348,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nhr : 0 < r\nhT : HasBoundedStrongType (czOperator K r) 2 2 volume volume ↑(C_Ts ↑a)\n⊢ HasBoundedWeakType (czOperator K r) 1 1 volume volume ↑(C10_0_3 a)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L348"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "28c66ec2bcc65f61d744c44879e6c03962867d579c6338c765c99b572475a8a1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case a\nX : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : ProperSpace X\ninst✝³ : BorelSpace X\ninst✝² : IsFiniteMeasureOnCompacts μ\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ ≤ p₂\nthis : ↑p₂ ≠ 0\n⊢ HasWeakType\n      (fun u x =>\n        (↑A ^ 2).toReal * (maximalFunction μ (⋯.choose ×ˢ univ) (fun x => x.1) (fun x => 2 ^ x.2) (↑p₁) u x).toReal)\n      (↑p₂) (↑p₂) μ μ (A ^ 4) ↔\n    MemLp ?convert_4 (↑p₂) μ →\n      AEStronglyMeasurable ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) μ ∧\n        wnorm ((fun f x => A ^ 2 * ?convert_2 f x) ?convert_4) (↑p₂) μ ≤\n          ↑(‖A ^ 2‖₊ * A ^ 2) * eLpNorm ?convert_4 (↑p₂) μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "0d9aee127c8f347b0bb1e30e57bd700904d28c75c0ce542cb6e1e8c93cd8b977"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-leanoptions",
      "commit": "d309c77ab38cf0bbb8502c49471cf1f00085c535",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 551,
      "start_column": 9,
      "end_line": 551,
      "end_column": 14,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "case convert_3\nX : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : ProperSpace X\ninst✝³ : BorelSpace X\ninst✝² : IsFiniteMeasureOnCompacts μ\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ ≤ p₂\nthis : ↑p₂ ≠ 0\n⊢ HasWeakType sorry (↑p₂) (↑p₂) μ μ (A ^ 2)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d309c77ab38cf0bbb8502c49471cf1f00085c535/Carleson/ToMathlib/HardyLittlewood.lean#L551"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T17:09:00+02:00",
      "inclusion_date": "2025-04-05T00:22:31.974081+00:00"
    },
    "id": "ed26d0428aed69bbe7e40b125abb6bb124bc00c6fc837132db120f9d3007342c"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-rigidification-refactor",
      "commit": "aa6d8c9e1d5f5b404fac024c800062d156669ef0",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 213,
      "start_column": 87,
      "end_line": 213,
      "end_column": 92,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝⁴ : Field F\ninst✝³ : NumberField F\nD : Type u_2\ninst✝² : Ring D\ninst✝¹ : Algebra F D\ninst✝ : IsQuaternionAlgebra F D\nS : Finset (HeightOneSpectrum (𝓞 F))\n⊢ Module.Finite (FiniteAdeleRing (𝓞 F) F) (D ⊗[F] FiniteAdeleRing (𝓞 F) F)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/aa6d8c9e1d5f5b404fac024c800062d156669ef0/FLT/QuaternionAlgebra/NumberField.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T17:21:54+01:00",
      "inclusion_date": "2025-04-05T01:25:01.623280+00:00"
    },
    "id": "77d883852a3a57f13c9c67e2b2b4a11a04b867d157857bff82e2313ea837a85f"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 66,
      "start_column": 2,
      "end_line": 66,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "M : Type u_3\nN : Type u_4\ninst✝³ : Monoid M\ninst✝² : Monoid N\ninst✝¹ : TopologicalSpace M\ninst✝ : TopologicalSpace N\nf : M →* N\nhf : IsOpenMap ⇑f\n⊢ IsOpenMap fun u => { val := f ↑u, inv := f ↑u⁻¹, val_inv := ⋯, inv_val := ⋯ }",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T09:45:19+01:00",
      "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
    },
    "id": "afd41ed70417ad4135fcbab1dfec134972d96099d85e20347bbe4ba85e6769d5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "464ae0dba10c7aa3460d147aa375eaa865f2f552",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 82,
      "start_column": 2,
      "end_line": 82,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "F : Type u_1\ninst✝⁴ : Field F\ninst✝³ : NumberField F\nD : Type u_2\ninst✝² : Ring D\ninst✝¹ : Algebra F D\ninst✝ : IsQuaternionAlgebra F D\nv : HeightOneSpectrum (𝓞 F)\n⊢ IsOpenMap ⇑(Units.map ↑(HeightOneSpectrum.adicCompletionIntegers F v).subtype.mapMatrix)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/464ae0dba10c7aa3460d147aa375eaa865f2f552/FLT/QuaternionAlgebra/NumberField.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-04T09:45:19+01:00",
      "inclusion_date": "2025-04-05T01:35:42.149777+00:00"
    },
    "id": "be1cf925cb078da15ecb1bd227b47a63c3b7c6aa5cf8e03a733fc38ffd1e4c47"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 50,
      "start_column": 77,
      "end_line": 50,
      "end_column": 82,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\nΩ' : Type u\nY : Fin p.m × Fin p.m → Ω' → G\nhΩ' : MeasureSpace Ω'\ninst✝ : IsFiniteMeasure ℙ\n⊢ I[∑ i, ∑ j, ↑↑i • Y (i, j) : ∑ i, ∑ j, ↑↑j • Y (i, j)|∑ i, ∑ j, Y (i, j)] ≤ 4 * ↑p.m ^ 2 * p.η * multiTau p Ω hΩ X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L50"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "98735a10acb5a7bc5abf67cfa46478b3c359bf0d874a18624b81e3d09011393c"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 52,
      "start_column": 77,
      "end_line": 52,
      "end_column": 82,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\nΩ' : Type u\nY : Fin p.m × Fin p.m → Ω' → G\nhΩ' : MeasureSpace Ω'\ninst✝ : IsFiniteMeasure ℙ\n⊢ I[∑ i, ∑ j, ↑↑i • Y (i, j) : ∑ i, ∑ j, (-↑↑i - ↑↑j) • Y (i, j)|∑ i, ∑ j, Y (i, j)] ≤\n    4 * ↑p.m ^ 2 * p.η * multiTau p Ω hΩ X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L52"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "fee3a567bc7cda147b664bb160c06767e4b1e54d07160e5d1ed6250cf2efe99a"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 77,
      "end_line": 54,
      "end_column": 82,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\nΩ' : Type u\nY : Fin p.m × Fin p.m → Ω' → G\nhΩ' : MeasureSpace Ω'\ninst✝ : IsFiniteMeasure ℙ\n⊢ I[∑ i, ∑ j, ↑↑j • Y (i, j) : ∑ i, ∑ j, (-↑↑i - ↑↑j) • Y (i, j)|∑ i, ∑ j, Y (i, j)] ≤\n    4 * ↑p.m ^ 2 * p.η * multiTau p Ω hΩ X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-09-30T22:19:50+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "451fb0015c6418b9727b1aee983e4d8fbc52cc07f588aac5fd1254c79e4cb470"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 58,
      "start_column": 74,
      "end_line": 58,
      "end_column": 79,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\nΩ' : Type u\nY : Fin p.m × Fin p.m → Ω' → G\nhΩ' : MeasureSpace Ω'\ninst✝ : IsFiniteMeasure ℙ\nm : ℝ\n⊢ H[∑ i, ∑ j, Y (i, j)] ≤ (2 * ↑p.m - 1) * multiTau p Ω hΩ X + m⁻¹ * ∑ i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L58"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "0381ab7073b4982159ac5623798bea6ea615a71bf007c9a54a9124baf57d9669"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 61,
      "start_column": 94,
      "end_line": 61,
      "end_column": 99,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\nΩ' : Type u\nY : Fin p.m × Fin p.m → Ω' → G\nhΩ' : MeasureSpace Ω'\ninst✝ : IsFiniteMeasure ℙ\nm : ℝ\n⊢ H[∑ i, ∑ j, ↑↑j • Y (i, j)] ≤ (8 * ↑p.m ^ 2 - 16 * ↑p.m + 1) * multiTau p Ω hΩ X + m⁻¹ * ∑ i, H[X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "a1754d8ebf63b6090e9d889d468987275ebe12e78c5241969d575d4d138b7f52"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 64,
      "start_column": 60,
      "end_line": 64,
      "end_column": 65,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\nΩ' : Type u\nY : Fin p.m × Fin p.m → Ω' → G\nhΩ' : MeasureSpace Ω'\ninst✝ : IsFiniteMeasure ℙ\n⊢ I[∑ i, ∑ j, Y (i, j) : ∑ i, ∑ j, ↑↑j • Y (i, j)] ≤ 2 * (↑p.m - 1) * multiTau p Ω hΩ X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "42173fa706de4b468e991e3c9cc0fb7a25a22e64790e6cc5f3790bc6d33784c2"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 67,
      "start_column": 88,
      "end_line": 67,
      "end_column": 93,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\nΩ' : Type u\nY : Fin p.m × Fin p.m → Ω' → G\nhΩ' : MeasureSpace Ω'\ninst✝ : IsFiniteMeasure ℙ\n⊢ ∑ i, d[X i # ∑ i, ∑ j, ↑↑j • Y (i, j) | ∑ i, ∑ j, Y (i, j)] ≤ 8 * (↑p.m ^ 3 - ↑p.m ^ 2) * multiTau p Ω hΩ X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T08:58:11-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "eed20aa9302fa53c3ee24795645044bcd19beff22e6a6cffb96c8c4289ca24ab"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 79,
      "start_column": 397,
      "end_line": 79,
      "end_column": 402,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst✝¹ : MeasureableFinGroup G\nΩ : Type u_2\ninst✝ : MeasureSpace Ω\nT₁ T₂ T₃ : Ω → G\nhsum : T₁ + T₂ + T₃ = 0\nn : ℕ\nΩ' : Fin n → Type u_3\nhΩ' : (i : Fin n) → MeasureSpace (Ω' i)\nY : (i : Fin n) → Ω' i → G\nα : ℝ\nhα : α > 0\n⊢ ∃ Ω'' hΩ'' U,\n    d[U # U] + α * ∑ i, d[Y i # U] ≤ (2 + α * ↑n / 2) * (I[T₁ : T₂] + I[T₁ : T₃] + I[T₂ : T₃]) + α * ∑ i, d[Y i # T₂]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T13:32:08-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "589b6eb9ca9c451198965ef7ebbaa2ccd20c0c60114aa013cd464123662c01d0"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 82,
      "start_column": 27,
      "end_line": 82,
      "end_column": 32,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝¹ : MeasureableFinGroup G\ninst✝ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Fin p.m → Type u\nhΩ : (i : Fin p.m) → MeasureSpace (Ω i)\nX : (i : Fin p.m) → Ω i → G\n⊢ multiTau p Ω hΩ X = 0",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L82"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-28T21:28:18-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "84f0778f7071126744e5c65437819cb64c2020cfacc9fcc47dd1b9643db7f788"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 89,
      "start_column": 54,
      "end_line": 89,
      "end_column": 59,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst✝⁴ : AddCommGroup G\ninst✝³ : Fintype G\ninst✝² : MeasurableSpace G\ninst✝¹ : MeasurableSingletonClass G\nm : ℕ\nhm : m ≥ 2\nhtorsion : ∀ (x : G), m • x = 0\nΩ : Type u_2\ninst✝ : MeasureSpace Ω\nX : Ω → G\n⊢ ∃ H Ω' mΩ U, IsUniform (↑H) U ℙ ∧ d[X # U] ≤ 64 * ↑m ^ 3 * d[X # X]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L89"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-28T21:28:18-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "affce0b8ad784ae4fb1eb28a54faf85650fdcc5be46728fc59806179c398bedc"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 102,
      "start_column": 64,
      "end_line": 102,
      "end_column": 69,
      "file": "PFR/TorsionEndgame.lean"
    },
    "debug_info": {
      "goal": "G : Type u_1\ninst✝² : AddCommGroup G\ninst✝¹ : Fintype G\nm : ℕ\nhm : m ≥ 2\nhtorsion : ∀ (x : G), m • x = 0\nA : Set G\ninst✝ : Finite ↑A\nK : ℝ\nh₀A : A.Nonempty\nhA : ↑(Nat.card ↑(A + A)) ≤ K * ↑(Nat.card ↑A)\n⊢ ∃ H c,\n    ↑(Nat.card ↑c) ≤ K ^ (64 * ↑m ^ 3 + 2) * ↑(Nat.card ↑A) ^ (1 / 2) * ↑(Nat.card ↥H) ^ (-1 / 2) ∧\n      ↑(Nat.card ↥H) ≤ K ^ (64 * ↑m ^ 3) * ↑(Nat.card ↑A) ∧\n        ↑(Nat.card ↑A) ≤ K ^ (64 * ↑m ^ 3) * ↑(Nat.card ↥H) ∧ A ⊆ c + ↑H",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/TorsionEndgame.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2024-08-18T18:37:52+02:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "3085fe5ba6be89da3feb7a4eb697270268198ff4fcaccf59d4748e54b4cbdbdc"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 36,
      "start_column": 79,
      "end_line": 36,
      "end_column": 84,
      "file": "PFR/BoundingMutual.lean"
    },
    "debug_info": {
      "goal": "G Ωₒ : Type u\ninst✝² : MeasureableFinGroup G\ninst✝¹ : MeasureSpace Ωₒ\np : multiRefPackage G Ωₒ\nΩ : Type u\nhΩ : MeasureSpace Ω\nX : Fin p.m → Ω → G\nh_indep : iIndepFun X ℙ\nh_min : multiTauMinimizes p (fun x => Ω) (fun x => hΩ) X\nΩ' : Type u_1\ninst✝ : MeasureSpace Ω'\nX' : Fin p.m × Fin p.m → Ω' → G\nh_indep' : iIndepFun X' ℙ\nhperm : ∀ (j : Fin p.m), ∃ e, IdentDistrib (fun ω i => X' (i, j) ω) (fun ω i => X (e i) ω) ℙ ℙ\n⊢ I[fun ω j => ∑ i, X' (i, j) ω : fun ω i => ∑ j, X' (i, j) ω|fun ω => ∑ i, ∑ j, X' (i, j) ω] ≤\n    4 * ↑p.m ^ 2 * p.η * D[X ; fun x => hΩ]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/BoundingMutual.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "1bbff35f827b226473c16ec439932d644591efee74849ae8e1338c81a2fe5eeb"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 527,
      "start_column": 2,
      "end_line": 527,
      "end_column": 7,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "Ω : Type u_1\nG : Type u_5\nmΩ : MeasurableSpace Ω\nμ : Measure Ω\nhG : MeasurableSpace G\ninst✝³ : MeasurableSingletonClass G\ninst✝² : AddCommGroup G\ninst✝¹ : Countable G\ninst✝ : IsProbabilityMeasure μ\nI : Type u_8\ns t : Finset I\nhdisj : Disjoint s t\nhs : s.Nonempty\nht : t.Nonempty\nX : I → Ω → G\nhX : ∀ (i : I), Measurable (X i)\nhX' : ∀ (i : I), FiniteRange (X i)\nh_indep : iIndepFun X μ\nf : I → I\nhf : Finset.image f t ⊆ s\n⊢ H[∑ i ∈ t, X i ; μ] ≤ H[∑ i ∈ s, X i ; μ] + ∑ i ∈ t, (H[X i - X (f i) ; μ] - H[X (f i) ; μ])",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L527"
    },
    "metadata": {
      "blame_email_hash": "6e8091041644",
      "blame_date": "2024-05-31T19:35:50+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "5d9c9e71b3d011a58367ab200edbd4389ca7807d30811a3006cf68b2abe21737"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 760,
      "start_column": 62,
      "end_line": 760,
      "end_column": 67,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst✝² : AddCommGroup G\ninst✝¹ : MeasurableSingletonClass G\ninst✝ : Countable G\nm : ℕ\nΩ : Type u_9\nhΩ : MeasureSpace Ω\nX : Fin m → Ω → G\nh_indep : iIndepFun X ℙ\n⊢ D[X ; fun x => hΩ] = H[∑ i, X i] - (∑ i, H[X i]) / ↑m",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L760"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-22T09:31:46-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "53952a34d0aa5bb64a0888247bda3172fe2169cc81bf4d400733ade08457c553"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 857,
      "start_column": 105,
      "end_line": 857,
      "end_column": 110,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst✝² : AddCommGroup G\ninst✝¹ : MeasurableSingletonClass G\ninst✝ : Countable G\nm : ℕ\nhm : m ≥ 2\nΩ : Fin m → Type u_9\nhΩ : (i : Fin m) → MeasureSpace (Ω i)\nX : (i : Fin m) → Ω i → G\n⊢ (∑ j, ∑ k, if j = k then 0 else d[X j # X k]) ≤ ↑m * (↑m - 1) * D[X ; hΩ]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L857"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "9de8ea8429dbd769777e03886a061a9d6d1fea2772386257a7abea2d694c9251"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 862,
      "start_column": 69,
      "end_line": 862,
      "end_column": 74,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst✝² : AddCommGroup G\ninst✝¹ : MeasurableSingletonClass G\ninst✝ : Countable G\nm : ℕ\nhm : m ≥ 2\nΩ : Fin m → Type u_9\nhΩ : (i : Fin m) → MeasureSpace (Ω i)\nX : (i : Fin m) → Ω i → G\n⊢ ∑ j, d[X j # X j] ≤ 2 * ↑m * D[X ; hΩ]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L862"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "02a6bfca12778b8d54058abf6a2be8276203ac786965e258b31668ea565b4848"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 868,
      "start_column": 108,
      "end_line": 868,
      "end_column": 113,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst✝² : AddCommGroup G\ninst✝¹ : MeasurableSingletonClass G\ninst✝ : Countable G\nm : ℕ\nhm : m ≥ 2\nΩ : Fin m → Type u_9\nhΩ : (i : Fin m) → MeasureSpace (Ω i)\nX : (i : Fin m) → Ω i → G\nhidenT : ∀ (j k : Fin m), IdentDistrib (X j) (X k) ℙ ℙ\n⊢ ∀ (i : Fin m), D[X ; hΩ] ≤ ↑m * d[X i # X i]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L868"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "48ea0753abd67fbe6fe270d0a60c2749648b01ff3c66fd725d932e1a3aeeeae7"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 873,
      "start_column": 82,
      "end_line": 873,
      "end_column": 87,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst✝² : AddCommGroup G\ninst✝¹ : MeasurableSingletonClass G\ninst✝ : Countable G\nm : ℕ\nhm : m ≥ 2\nΩ : Type u_9\nhΩ : MeasureSpace Ω\nX : Fin m → Ω → G\nh_indep : iIndepFun X ℙ\n⊢ d[∑ i, X i # ∑ i, X i] ≤ 2 * D[X ; fun x => hΩ]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L873"
    },
    "metadata": {
      "blame_email_hash": "7d87c0724495",
      "blame_date": "2025-03-07T08:53:46+01:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "c2520a606cf7e2d5f451db4e8ba0e272bcf4c9aa6a21d0424c7abe5524c58452"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 877,
      "start_column": 235,
      "end_line": 877,
      "end_column": 240,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_8\nhG : MeasurableSpace G\ninst✝² : AddCommGroup G\ninst✝¹ : MeasurableSingletonClass G\ninst✝ : Countable G\nm : ℕ\nhm : m ≥ 2\nΩ : Fin m → Type u_9\nhΩ : (i : Fin m) → MeasureSpace (Ω i)\nX : (i : Fin m) → Ω i → G\nhvanish : D[X ; hΩ] = 0\n⊢ ∀ (i : Fin m), ∃ H U, Measurable U ∧ IsUniform (↑H) U ℙ ∧ d[X i # U] = 0",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L877"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "c52d6e6eb7a0dded9b209c517f5a02052305d773f48d73baaa445693f6829613"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1504,
      "start_column": 8,
      "end_line": 1504,
      "end_column": 13,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "case bc.h.e_11\nm : ℕ\nhm : m > 0\nG : Fin (m + 1) → Type u_8\nhG : (i : Fin (m + 1)) → MeasurableSpace (G i)\nhGs : ∀ (i : Fin (m + 1)), MeasurableSingletonClass (G i)\nhGa : (i : Fin (m + 1)) → AddCommGroup (G i)\nhGcount : (i : Fin (m + 1)) → Fintype (G i)\nφ : (i : Fin m) → G i.succ →+ G i.castSucc\nπ : (d : Fin (m + 1)) → G ↑m →+ G d\nhπ0 : π 0 = 0\nhcomp : ∀ (i : Fin m), ⇑(π i.castSucc) = ⇑(φ i) ∘ ⇑(π i.succ)\nΩ : Type u_9\nhΩ : MeasureSpace Ω\nX : Fin m → Ω → G ↑m\nhX : ∀ (i : Fin m), Measurable (X i)\nh_indep : iIndepFun X ℙ\nthis✝ : IsProbabilityMeasure ℙ\nthis : NeZero m\nf : Fin m → ℝ :=\n  fun i => I[∑ i', X i' : fun ω i' => (π i.succ) (X i' ω)|⟨⇑(π i.succ) ∘ ∑ i', X i', fun ω i' => (π ↑↑i) (X i' ω)⟩]\nhf : ∀ (i : Fin m), 0 ≤ f i\nF : G 1 → G 1 × (Fin m → G 0) := fun x => (x, fun x => 0)\nhF : Injective F\n⊢ HEq (fun x => (∑ x_1, (π 1) (X x_1 x), fun x => 0))\n    (⟨fun x => ∑ x_1, (π (Fin.succ 0)) (X x_1 x), fun ω i' => (π ↑0) (X i' ω)⟩)",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1504"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-14T04:44:11+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "7249c84cd6c3a75dd2d0ba153f332dc341ed72e13fe5478ca8df0d5bbf887cc9"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1518,
      "start_column": 54,
      "end_line": 1518,
      "end_column": 59,
      "file": "PFR/MoreRuzsaDist.lean"
    },
    "debug_info": {
      "goal": "G : Type u_5\nhG : MeasurableSpace G\ninst✝³ : MeasurableSingletonClass G\ninst✝² : AddCommGroup G\ninst✝¹ : Countable G\ninst✝ : Fintype G\nm : ℕ\nhm : m ≥ 1\nΩ : Type u_8\nhΩ : MeasureSpace Ω\nX : Fin (m + 1) × Fin (m + 1) → Ω → G\nh_indep : iIndepFun X ℙ\n⊢ I[fun ω j => ∑ i, X (i, j) ω : fun ω i => ∑ j, X (i, j) ω|∑ p, X p] ≤\n    ∑ j,\n          (D[fun i => X (i, j) ; fun x => hΩ] -\n            D[fun i => X (i, j) | fun i => ∑ k ∈ Finset.Ici j, X (i, k) ; fun x => hΩ]) +\n        D[fun i => X (i, ↑m) ; fun x => hΩ] -\n      D[fun i => ∑ j, X (i, j) ; fun x => hΩ]",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MoreRuzsaDist.lean#L1518"
    },
    "metadata": {
      "blame_email_hash": "97e8591fe714",
      "blame_date": "2024-10-17T18:26:36+00:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "52a1721dbb8c0782862edb4930da8a40c05f7962f40ed2c64d0bf263ae0810ea"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 111,
      "end_line": 54,
      "end_column": 116,
      "file": "PFR/MultiTauFunctional.lean"
    },
    "debug_info": {
      "goal": "G Ω₀ : Type u\ninst✝⁴ : MeasureableFinGroup G\ninst✝³ : TopologicalSpace G\ninst✝² : DiscreteTopology G\ninst✝¹ : BorelSpace G\ninst✝ : MeasureSpace Ω₀\np : multiRefPackage G Ω₀\n⊢ Continuous fun μ => multiTau p (fun x => G) (fun i => MeasureSpace.mk ↑(μ i)) fun x => id",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-06-29T09:57:28-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "0c8f0ab87fd932f370996a1f8af2a028fe9d72d6d44d76818ccf2c803d381e05"
  },
  {
    "repo": {
      "remote": "https://github.com/teorth/pfr",
      "branch": "master",
      "commit": "0010cb5c36c6605a2d0e957390ab4955e6c9e3ff",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 57,
      "start_column": 222,
      "end_line": 57,
      "end_column": 227,
      "file": "PFR/MultiTauFunctional.lean"
    },
    "debug_info": {
      "goal": "G Ω₀ : Type u\ninst✝¹ : MeasureableFinGroup G\ninst✝ : MeasureSpace Ω₀\np : multiRefPackage G Ω₀\n⊢ ∃ Ω hΩ X, multiTauMinimizes p Ω hΩ X",
      "url": "https://github.com/teorth/pfr/blob/0010cb5c36c6605a2d0e957390ab4955e6c9e3ff/PFR/MultiTauFunctional.lean#L57"
    },
    "metadata": {
      "blame_email_hash": "d7f0e4a42bbb",
      "blame_date": "2024-08-18T19:14:43-07:00",
      "inclusion_date": "2025-04-05T02:25:45.802608+00:00"
    },
    "id": "046a4809402ab4f13c0d6b2294f7b92b3ade7aee4fc484f440dc900a17c4a088"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 79,
      "start_column": 43,
      "end_line": 79,
      "end_column": 48,
      "file": "Carleson/ToMathlib/ENorm.lean"
    },
    "debug_info": {
      "goal": "ε : Type u_9\nε' : Type u_10\ninst✝³ : TopologicalSpace ε\ninst✝² : ContinuousENorm ε\ninst✝¹ : TopologicalSpace ε'\ninst✝ : ContinuousENorm ε'\nα : Type u_11\nm0 : MeasurableSpace α\nμ : Measure α\nf : α → ε\ng : α → ε'\nc : ℝ≥0\nh : ∀ᵐ (x : α) ∂μ, ‖f x‖ₑ ≤ ↑c * ‖g x‖ₑ\np : ℝ\nhp : 0 < p\n⊢ eLpNorm' f p μ ≤ c • eLpNorm' g p μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-05T21:50:03+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "81c61f87d56a75a64a440ada9e33545c4d24b088778c74663b9d71ad5e93debf"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 83,
      "start_column": 90,
      "end_line": 83,
      "end_column": 95,
      "file": "Carleson/ToMathlib/ENorm.lean"
    },
    "debug_info": {
      "goal": "ε : Type u_9\nε' : Type u_10\ninst✝³ : TopologicalSpace ε\ninst✝² : ContinuousENorm ε\ninst✝¹ : TopologicalSpace ε'\ninst✝ : ContinuousENorm ε'\nα : Type u_11\nm0 : MeasurableSpace α\nμ : Measure α\nf : α → ε\ng : α → ε'\nc : ℝ≥0\nh : ∀ᵐ (x : α) ∂μ, ‖f x‖ₑ ≤ ↑c * ‖g x‖ₑ\n⊢ eLpNormEssSup f μ ≤ c • eLpNormEssSup g μ",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/ENorm.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-05T21:50:03+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "b845d5c723853d801ec19af37505f118126947084cb0f03384055585a5e985fe"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "MR-generalise-weaktype",
      "commit": "d6273ee1eced7a38fd1d3db0010c6c7ab14b5316",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 533,
      "start_column": 2,
      "end_line": 533,
      "end_column": 7,
      "file": "Carleson/ToMathlib/HardyLittlewood.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nE : Type u_2\nA : ℝ≥0\ninst✝⁸ : MetricSpace X\ninst✝⁷ : MeasurableSpace X\nμ : Measure X\ninst✝⁶ : μ.IsDoubling A\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : ProperSpace X\ninst✝³ : BorelSpace X\ninst✝² : IsFiniteMeasureOnCompacts μ\ninst✝¹ : Nonempty X\ninst✝ : μ.IsOpenPosMeasure\np₁ p₂ : ℝ≥0\nhp₁ : 1 ≤ p₁\nhp₁₂ : p₁ < p₂\n⊢ HasStrongType\n    (fun u x =>\n      (↑A ^ 2).toReal * (maximalFunction μ (⋯.choose ×ˢ univ) (fun x => x.1) (fun x => 2 ^ x.2) (↑p₁) u x).toReal)\n    (↑p₂) (↑p₂) μ μ ↑(A ^ 2 * C2_0_6 A p₁ p₂)",
      "url": "https://github.com/fpvandoorn/carleson/blob/d6273ee1eced7a38fd1d3db0010c6c7ab14b5316/Carleson/ToMathlib/HardyLittlewood.lean#L533"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-04T23:13:58+02:00",
      "inclusion_date": "2025-04-05T23:48:05.381022+00:00"
    },
    "id": "61e81a0a60df1dee63473d6d592c13a9baa9ca1ca59d46690dab11a133343760"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 121,
      "start_column": 21,
      "end_line": 121,
      "end_column": 26,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ GL (Fin n) ℚ → GL (Fin n) (DedekindDomain.FiniteAdeleRing ℤ ℚ) → GL (Fin n) ℝ → z = z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L121"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "7104965d4fd8eeff3884bc6da037f0e14cc01966382f94d4298a2896447174ec"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 122,
      "start_column": 30,
      "end_line": 122,
      "end_column": 35,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ GL (Fin n) (DedekindDomain.FiniteAdeleRing ℤ ℚ) → IsSlowlyIncreasing fun y => z",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L122"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T14:33:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "56d4a469ae49648e66a7c86fdc91bcd12296e4cf2f0bc90c6e0f56c5a4b0fe09"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 123,
      "start_column": 23,
      "end_line": 123,
      "end_column": 28,
      "file": "FLT/GlobalLanglandsConjectures/GLzero.lean"
    },
    "debug_info": {
      "goal": "z : ℂ\nn : ℕ\nρ : Weight n\nhρ : ρ.IsTrivial\n⊢ ∀ (x : GL (Fin n) (DedekindDomain.FiniteAdeleRing ℤ ℚ)),\n    FiniteDimensional ℂ\n      (↥(Z (GL (Fin n) ℝ) (Matrix (Fin n) (Fin n) ℝ)) ⧸\n        Submodule.comap (actionTensorCAlg'3 (GL (Fin n) ℝ) (Matrix (Fin n) (Fin n) ℝ)).toLinearMap\n          (annihilator ⟨fun y => z, ⋯⟩))",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/GlobalLanglandsConjectures/GLzero.lean#L123"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2024-06-12T23:29:04+02:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "275a47fb62ec9d1334905a53daf10d5b0b1ad9e08c8373e7b7836effda52de65"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 690,
      "start_column": 22,
      "end_line": 690,
      "end_column": 27,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\n⊢ Continuous (baseChangeAlgEquiv A K L B).toFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L690"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "fba969b0c1b7f96394ee4cef57111ab977ab330798b7c4eeed7c7753417432f5"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-odlyzko",
      "commit": "3a75e961a10b407cf89f41418e5d23989fb56d62",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 691,
      "start_column": 23,
      "end_line": 691,
      "end_column": 28,
      "file": "FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean"
    },
    "debug_info": {
      "goal": "A : Type u_1\nK : Type u_2\nL : Type u_3\nB : Type u_4\ninst✝²⁰ : CommRing A\ninst✝¹⁹ : CommRing B\ninst✝¹⁸ : Algebra A B\ninst✝¹⁷ : Field K\ninst✝¹⁶ : Field L\ninst✝¹⁵ : Algebra A K\ninst✝¹⁴ : IsFractionRing A K\ninst✝¹³ : Algebra B L\ninst✝¹² : IsDedekindDomain A\ninst✝¹¹ : Algebra K L\ninst✝¹⁰ : Algebra A L\ninst✝⁹ : IsScalarTower A B L\ninst✝⁸ : IsScalarTower A K L\ninst✝⁷ : IsIntegralClosure B A L\ninst✝⁶ : FiniteDimensional K L\ninst✝⁵ : Algebra.IsSeparable K L\ninst✝⁴ : IsDomain B\ninst✝³ : Algebra.IsIntegral A B\ninst✝² : Module.Finite A B\ninst✝¹ : IsDedekindDomain B\ninst✝ : IsFractionRing B L\n⊢ Continuous (baseChangeAlgEquiv A K L B).invFun",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/3a75e961a10b407cf89f41418e5d23989fb56d62/FLT/DedekindDomain/FiniteAdeleRing/BaseChange.lean#L691"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-02-02T13:44:48+00:00",
      "inclusion_date": "2025-04-15T00:09:51.407826+00:00"
    },
    "id": "856bd9a2207cc21cc19cdf70843c95d8df860134913b418a70a3dbbbe24e05c1"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 251,
      "start_column": 57,
      "end_line": 251,
      "end_column": 62,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁶ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁵ : L.DecidableEq\nT₀ T : Theory ℒₒᵣ\ninst✝⁴ : T₀ ⪯ T\ninst✝³ : Diagonalization T₀\n𝔅 : ProvabilityPredicate T₀ T\ninst✝² : 𝔅.HBL\ninst✝¹ : ℕ ⊧ₘ* T\ninst✝ : 𝔅.Justified ℕ\nA B : Modal.Formula ℕ\n⊢ Arith.SoundOn 𝐈𝚺₁ (Arith.Hierarchy 𝚷 2)",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L251"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "561aea2f41ccdded4a549bba38c20c7aff4ca18aed7fa403980d371473caf511"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 253,
      "start_column": 81,
      "end_line": 253,
      "end_column": 86,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "L : Language\ninst✝⁸ : Semiterm.Operator.GoedelNumber L (Sentence L)\ninst✝⁷ : L.DecidableEq\nT₀ T : Theory ℒₒᵣ\ninst✝⁶ : T₀ ⪯ T\ninst✝⁵ : Diagonalization T₀\n𝔅 : ProvabilityPredicate T₀ T\ninst✝⁴ : 𝔅.HBL\ninst✝³ : ℕ ⊧ₘ* T\ninst✝² : 𝔅.Justified ℕ\nA B : Modal.Formula ℕ\ninst✝¹ : 𝐈𝚺₁ ⪯ T\ninst✝ : T.Delta1Definable\n⊢ ∀ {σ : Sentence ℒₒᵣ}, T ⊢!. σ ↔ ℕ ⊧ₘ₀ ↑(𝐈𝚺₁.standardDP T) σ",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "258a7b918aeb06e842e71f2a126f95eb9e77b9b4822bcaaa065e40580452cc13"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 375,
      "start_column": 27,
      "end_line": 375,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory ℒₒᵣ\ninst✝³ : ℕ ⊧ₘ* T\nA : Modal.Formula ℕ\ninst✝² : T.Delta1Definable\ninst✝¹ : 𝐈𝚺₁ ⪯ T\ninst✝ : SoundOn T (Hierarchy 𝚷 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization ℒₒᵣ), ℕ ⊧ₘ₀ f.interpret (𝐈𝚺₁.standardDP T) A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀✝ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, Satisfies M₀ (Sum.inr r₁) φ\nhA₂ : ¬Satisfies M₀ (Sum.inr r₁) A\nthis✝ : Fintype (M₁.extendRoot r₁).World\nσ : SolovaySentences (𝐈𝚺₁.standardDP T) (M₁.extendRoot r₁).toFrame r₀✝ :=\n  SolovaySentence.standard (M₁.extendRoot r₁).toFrame Frame.extendRoot.root\nr₀ : (M₁.extendRoot r₁).World := Model.extendRoot.root\nB : Modal.Formula ℕ\nihB :\n  B ∈ A.subformulas →\n    (Satisfies M₀ (Sum.inr r₁) B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ σ.realization.interpret (𝐈𝚺₁.standardDP T) B) ∧\n      (¬Satisfies M₀ (Sum.inr r₁) B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret (𝐈𝚺₁.standardDP T) B)\nB_sub : □B ∈ A.subformulas\nh : Satisfies M₀ (Sum.inr r₁) (□B)\nthis : 𝐈𝚺₁ ⊢!. (⩖ j, σ.σ j) ➝ σ.realization.interpret (𝐈𝚺₁.standardDP T) B\n⊢ 𝐈𝚺₁.alt ⊢! ⩖ j, σ.σ j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L375"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
    },
    "id": "d7a66edadb2d3aea140f4728c8b1dd14daaa81c197de56e13742652f79511831"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue303",
      "commit": "d773e9c193bd4782c94b32ea63ede4aae696573a",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 393,
      "start_column": 20,
      "end_line": 393,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory ℒₒᵣ\ninst✝³ : ℕ ⊧ₘ* T\nA : Modal.Formula ℕ\ninst✝² : T.Delta1Definable\ninst✝¹ : 𝐈𝚺₁ ⪯ T\ninst✝ : SoundOn T (Hierarchy 𝚷 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization ℒₒᵣ), ℕ ⊧ₘ₀ f.interpret (𝐈𝚺₁.standardDP T) A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀✝ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, Satisfies M₀ (Sum.inr r₁) φ\nhA₂ : ¬Satisfies M₀ (Sum.inr r₁) A\nthis✝¹ : Fintype (M₁.extendRoot r₁).World\nσ : SolovaySentences (𝐈𝚺₁.standardDP T) (M₁.extendRoot r₁).toFrame r₀✝ :=\n  SolovaySentence.standard (M₁.extendRoot r₁).toFrame Frame.extendRoot.root\nr₀ : (M₁.extendRoot r₁).World := Model.extendRoot.root\nH :\n  ∀ B ∈ A.subformulas,\n    (Satisfies M₀ (Sum.inr r₁) B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ σ.realization.interpret (𝐈𝚺₁.standardDP T) B) ∧\n      (¬Satisfies M₀ (Sum.inr r₁) B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret (𝐈𝚺₁.standardDP T) B)\nthis✝ : ℕ ⊧ₘ* 𝐈𝚺₁\nthis : ℕ ⊧ₘ₀ σ.σ r₀ → ¬ℕ ⊧ₘ₀ σ.realization.interpret (𝐈𝚺₁.standardDP T) A\n⊢ ℕ ⊧ₘ₀ σ.σ r₀",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/d773e9c193bd4782c94b32ea63ede4aae696573a/Foundation/ProvabilityLogic/S/Completeness.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-06T23:10:57.403358+00:00"
    },
    "id": "6f057b9e862a642dde34e8e6af4174370ecc50c1eac8f84693a55e360e8f3448"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-adele-refactor",
      "commit": "c5f85a01641c0135f6e95906e74b59461497f5cf",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 170,
      "start_column": 4,
      "end_line": 170,
      "end_column": 9,
      "file": "FLT/NumberField/AdeleRing.lean"
    },
    "debug_info": {
      "goal": "case h.refine_1.ht\nintegralAdeles : Set (FiniteAdeleRing (𝓞 ℚ) ℚ) :=\n  {f |\n    ∀ (v : IsDedekindDomain.HeightOneSpectrum (𝓞 ℚ)),\n      f v ∈ IsDedekindDomain.HeightOneSpectrum.adicCompletionIntegers ℚ v}\n⊢ IsOpen integralAdeles",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/c5f85a01641c0135f6e95906e74b59461497f5cf/FLT/NumberField/AdeleRing.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-06T18:09:43+01:00",
      "inclusion_date": "2025-04-14T23:44:51.413177+00:00"
    },
    "id": "7ff98dbd552c3feaca88b99da397b1db5fd47b3a853e70778b49ce125fcec19d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "RD_erealStieltjes",
      "commit": "d2f1f177e8408f47342c6a02c9fcc745d21dcf3d",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1226,
      "start_column": 2,
      "end_line": 1226,
      "end_column": 7,
      "file": "Mathlib/MeasureTheory/Measure/ERealStieltjes.lean"
    },
    "debug_info": {
      "goal": "f : ERealStieltjes\n⊢ SFinite f.measure",
      "url": "https://github.com/leanprover-community/mathlib4/blob/d2f1f177e8408f47342c6a02c9fcc745d21dcf3d/Mathlib/MeasureTheory/Measure/ERealStieltjes.lean#L1226"
    },
    "metadata": {
      "blame_email_hash": "d765cd676b3d",
      "blame_date": "2025-04-09T09:41:05+02:00",
      "inclusion_date": "2025-04-09T23:09:10.124596+00:00"
    },
    "id": "1179c281c69582647601ca4de1353620f50570af58f80f961882d8cb1e002d5f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 462,
      "start_column": 6,
      "end_line": 462,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\na : ℕ := ↑(finProdFinEquiv.symm.toFun t✝).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t✝).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u✝).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u✝).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ house (↑(c₁ K α' β' γ') ^ (n K q - 1) * ↑(c₁ K α' β' γ') ^ (m K * q) * ↑(c₁ K α' β' γ') ^ (m K * q)) *\n          house\n            ((↑↑(finProdFinEquiv.symm.toFun t).1 + 1 + (↑↑(finProdFinEquiv.symm.toFun t).2 + 1) * β') ^\n              ↑(finProdFinEquiv.symm.toFun u).2) *\n        house (α' ^ ((↑(finProdFinEquiv.symm.toFun t).1 + 1) * (↑(finProdFinEquiv.symm.toFun u).1 + 1))) *\n      house (γ' ^ ((↑(finProdFinEquiv.symm.toFun t).2 + 1) * (↑(finProdFinEquiv.symm.toFun u).1 + 1))) ≤\n    house (↑(c₁ K α' β' γ') ^ (n K q - 1) * ↑(c₁ K α' β' γ') ^ (m K * q) * ↑(c₁ K α' β' γ') ^ (m K * q)) *\n          house ((↑a + ↑b * β') ^ k) *\n        house (α' ^ (a * l)) *\n      house (γ' ^ (b * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L462"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "c18faff69f09228240341a2dcf4a17551a1c4190ad8e2ea1a2c6292ed81f9c7e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 466,
      "start_column": 6,
      "end_line": 466,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\na : ℕ := ↑(finProdFinEquiv.symm.toFun t✝).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t✝).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u✝).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u✝).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ |↑(c_coeffs K α' β' γ' q)| *\n          house\n            ((↑(↑(finProdFinEquiv.symm.toFun t✝).1 + 1) + (↑(finProdFinEquiv.symm.toFun t✝).2 + 1) • β') ^\n              ↑(finProdFinEquiv.symm.toFun u✝).2) *\n        house (α' ^ ((↑(finProdFinEquiv.symm.toFun t✝).1 + 1) * (↑(finProdFinEquiv.symm.toFun u✝).1 + 1))) *\n      house (γ' ^ ((↑(finProdFinEquiv.symm.toFun t✝).2 + 1) * (↑(finProdFinEquiv.symm.toFun u✝).1 + 1))) ≤\n    let a := ↑(finProdFinEquiv.symm.toFun t).1 + 1;\n    let b := ↑(finProdFinEquiv.symm.toFun t).2 + 1;\n    let k := ↑(finProdFinEquiv.symm.toFun u).2;\n    let l := ↑(finProdFinEquiv.symm.toFun u).1 + 1;\n    1 ⊔ |↑(c_coeffs K α' β' γ' q)| * house ((↑a + b • β') ^ k) * house (α' ^ (a * l)) * house (γ' ^ (b * l))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L466"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "0235c952ffd9324b86bbd044d68259fb50db3f23ebef366b68d89c91f535a097"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 480,
      "start_column": 4,
      "end_line": 480,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc.step\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\na : ℕ := ↑(finProdFinEquiv.symm.toFun t✝).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t✝).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u✝).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u✝).1 + 1\nu : Fin (m K * n K q)\nt : Fin (q * q)\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ c₃ K α' β' γ' q u t ^ ↑(n K q) * ↑(n K q) ^ ((↑(n K q) - 1) / 2) ≤\n    c₃ K α' β' γ' q u✝ t✝ ^ ↑(n K q) * ↑(n K q) ^ ((↑(n K q) - 1) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9ede7cc59c6c010bd09ea5f1342aba8ee0d71f9ac6d21bb13430dff5204b9412"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 594,
      "start_column": 6,
      "end_line": 594,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case neg\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nq : ℕ\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 →\n    ¬(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : ¬(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\n⊢ ¬↑(↑(finProdFinEquiv.symm.toFun i).1 + 1) + (↑(finProdFinEquiv.symm.toFun i).2 + 1) • β =\n      ↑(↑(finProdFinEquiv.symm.toFun j).1 + 1) + (↑(finProdFinEquiv.symm.toFun j).2 + 1) • β",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L594"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ac77ca4b7191ceaf64dad19943fbe8a2ac751f23565a0cc09a4b395e5d34ebc3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 674,
      "start_column": 2,
      "end_line": 674,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : ℂ\nhR : ∑ t, σ ↑(η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t) * cexp (ρ α β q t * x) = 0\n⊢ ((fun t => σ ↑(η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t)) ᵥ* vandermonde fun t => ρ α β q t) = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L674"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T00:24:25+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "921f85881b2e7bdf297989acac8cfcb3ae979d90b3495745d8e5c3704cda62fd"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 739,
      "start_column": 2,
      "end_line": 739,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case a.h.h\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nx : ℂ\nhdistinct : ∀ (i j : Fin (q * q)), i ≠ j → ρ α β q i ≠ ρ α β q j\nH : R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t✝ x = 0\nHC✝ : ∀ (x : Fin (q * q)), ↑(η K α β hirr htriv σ hd α' β' γ' habc q h2mq u x hq0 x) = 0\nt : Fin (q * q)\nHC : η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t = 0\n⊢ η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t✝ ?hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L739"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "722a7424ddc03322cb20178c049ff38d9c8490931c3894ad50038d94ba7d3eea"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 740,
      "start_column": 2,
      "end_line": 740,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hq0\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nx : ℂ\nhdistinct : ∀ (i j : Fin (q * q)), i ≠ j → ρ α β q i ≠ ρ α β q j\nH : R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t x = 0\nHC : ∀ (x : Fin (q * q)), ↑(η K α β hirr htriv σ hd α' β' γ' habc q h2mq u x hq0 x) = 0\n⊢ 0 < q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L740"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9c55146b3e4ea72bd5fa5060f7bb6c314730becd0dc8e9a325425c9d12b3983c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 779,
      "start_column": 2,
      "end_line": 779,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hR.h\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nhdistinct : ∀ (i j : Fin (q * q)), i ≠ j → ρ α β q i ≠ ρ α β q j\nk : Fin (q * q)\nl : Fin (m K)\nhl : ↑l < n K q\nx : ℂ\nt : Fin (q * q)\nht : t ∈ Finset.univ\nH :\n  R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 = 0 →\n    (fun t => σ ↑(η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t)) = 0\nthis : A K α' β' γ' q h2mq hq0 *ᵥ η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 = 0\n⊢ η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L779"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:10:19+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "104be27b1167a4a721504ad8b5dc420ef85d3d106504f8e6906b60683ac99317"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 791,
      "start_column": 92,
      "end_line": 791,
      "end_column": 97,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n⊢ (Exists.choose ⋯).order ≥ n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L791"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:29:48+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "9e430d82ad2132edeac14be7f8eca6326db9146e44417146098a7e8f74e8e93b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 793,
      "start_column": 80,
      "end_line": 793,
      "end_column": 85,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n⊢ r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 ≥ n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L793"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "83102d5f7f548c91cc42030de1e8ae208b14107890047209b45754828c087d60"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 797,
      "start_column": 67,
      "end_line": 797,
      "end_column": 72,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nhq0 : 0 < q\nt : Fin (q * q)\n⊢ ∃ l₀,\n    iteratedDeriv (r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0)\n        (R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t) ↑↑l₀ ≠\n      0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L797"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "e7e8888fa6f6eb61e9dc68c3f523beb481e8196f4a62124e25d6813a600bfb23"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 822,
      "start_column": 2,
      "end_line": 822,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nthis : ¬⋯.choose = 0\nH : ⋯.choose t = 0\n⊢ ⋯.choose = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L822"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-01T02:10:10+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "29c9e004acac74b2369d248130afbbb37a1717d468bf0bae29ef8c77f8028ea9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1026,
      "start_column": 2,
      "end_line": 1026,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n⊢ IsIntegral ℤ\n    (cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 •\n      (algebraMap (𝓞 K) K) (η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1026"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8b1e888e8279cba1149b83df9362c290242be2102e5d71ae9edef4e505d4ec82"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 867,
      "start_column": 6,
      "end_line": 867,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nthis : ↑(h K) * ↑r + ↑(h K) * (2 * ↑(m K) * ↑q) = ↑(h K) * ↑r + ↑(h K) * 2 * ↑(m K) * ↑q\n⊢ ↑c₁ ^ (↑(h K) * ↑r + ↑(h K) * 2 * ↑(m K) * ↑q) < c₅ ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L867"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "4d52e56c26a7aed30845bcbd3649a164e7d061272c2c607a84b5d381d5737d23"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 868,
      "start_column": 6,
      "end_line": 868,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.ha\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\n⊢ 0 < c₅ ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L868"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5e8ce56e1c74a450e14dda6ce6f79ea84da7ac5c43e6ea9dbc22749e10e3722b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 869,
      "start_column": 6,
      "end_line": 869,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.hb\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\n⊢ 0 < ↑c₁ ^ (↑(h K) * (↑r + 2 * ↑(m K) * ↑q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L869"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "6790cd97a655463d452f9cb9f35222e1d4ef1c416bf856132745c51729fb4058"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 870,
      "start_column": 4,
      "end_line": 870,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\n⊢ ↑c₁ ^ (-↑(h K) * (↑r + 2 * ↑(m K) * ↑q)) < ‖(Algebra.norm ℚ) ρ‖",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L870"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5b47b9529867a39550c94b62ca8d85854d866a4193ba6552fa50549e9ab10b3a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 897,
      "start_column": 4,
      "end_line": 897,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q u t\n⊢ c₄ ^ ↑(n K q) * ↑(n K q) ^ (1 / 2 * (n K q + 1)) ≤\n    ↑↑t * c₄ * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * (c₆ * ↑q) ^ n K q * c₇ ^ ↑q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L897"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "55bf0e831868323ba86ff7bb6a4ed70b5a51a84c454ecc2cc0b059ff122032bf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 898,
      "start_column": 4,
      "end_line": 898,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q u t\n⊢ ↑↑t * c₄ * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * (c₆ * ↑q) ^ n K q * c₇ ^ ↑q ≤ c₈ ^ r * ↑r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L898"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "a4c334d81cdd8bea76f85afbbbc5daf9fa792c0a5ab84c0f1dc46926859d3c4e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 912,
      "start_column": 4,
      "end_line": 912,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\n⊢ let r := r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let S := S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let l₀ := l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  DifferentiableAt ℂ S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L912"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "98d35623a629a18d8978bd9e5129c588e63eb5d552ad952e6655aeb03d2dea12"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 926,
      "start_column": 4,
      "end_line": 926,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hd\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ DifferentiableOn ℂ (S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (↑(m K) * (1 + ↑(r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0) / ↑q)))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L926"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "b7dfe85e337c62782d81d9b7ced6d74fefa4787bb56c7aa07982a9b0dd5e99e3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 931,
      "start_column": 6,
      "end_line": 931,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 < m K",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L931"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "867c91750524d482a06f6d4be3135841e60840fa3d48d979a9a5b78a43278edb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1193,
      "start_column": 8,
      "end_line": 1193,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hb.intro.intro.intro\nK : Type\ninst✝¹ : Field K\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhirr : ∀ (i j : ℤ), σ β' ≠ ↑i / ↑j\nleft : σ α' ≠ 0\nright : σ α' ≠ 1\nright_1 : σ α' ^ σ β' = σ γ'\nl₀ : ℕ := _root_.l₀ K (σ α') (σ β') hirr ⋯ σ hd α' β' γ' ⋯ q h2mq u t hq0\nthis : _root_.l₀ K (σ α') (σ β') ⋯ ⋯ σ hd α' β' γ' ⋯ q h2mq u t hq0 < m K\n⊢ 0 < r K (σ α') (σ β') ⋯ ⋯ σ hd α' β' γ' ⋯ q h2mq u t hq0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1193"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f4d80544d130781ab4fc62ddcc6abaed3a6f05a29e69b888e1688d260d840353"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 968,
      "start_column": 8,
      "end_line": 968,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hb\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nthis : ↑l₀ < ↑(m K)\n⊢ 1 < 1 + ↑r / ↑q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L968"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "0e747424280355a68aac241a6e0c8109ddb5fcea76519a73aa4dd474c77749ce"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 972,
      "start_column": 4,
      "end_line": 972,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hc\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nx : ℂ\nhx : ‖x‖ ≤ ↑(m K) * (1 + ↑(_root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0) / ↑q)\n⊢ ContinuousWithinAt (_root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0)\n    (Metric.closedBall 0 (↑(m K) * (1 + ↑(_root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0) / ↑q))) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L972"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "7e62ba673e651ac51de0a7af0fd238c9de1fbcc620eb9edd65276f393ec4e887"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 979,
      "start_column": 4,
      "end_line": 979,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case intro\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nz : ℂ\nhzabs : ‖z‖ < ↑(m K) * (1 + ↑r / ↑q)\nhzneq : ¬z = ↑l₀\n⊢ DifferentiableAt ℂ S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L979"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "e5a0e4111ac070844d418d361969508675a2e7d7d6df186ceefc6984483df674"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 963,
      "start_column": 29,
      "end_line": 963,
      "end_column": 34,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ↑l₀ < ↑(m K)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L963"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "5faf5f86e1806fdc46a8c70abbd7d33b3334389faa4e231dbd941afce81087a7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1010,
      "start_column": 4,
      "end_line": 1010,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ σ (rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0) = Complex.log α ^ (-↑r) * S ↑l₀",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1010"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "2c86848954dd97fb7728c8540e7d30195a1c07a92cdbd4a7a91969fdf2a54b0f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1037,
      "start_column": 4,
      "end_line": 1037,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q u t\n⊢ ‖_root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t z‖ ≤\n    ↑q ^ 2 * ‖σ ↑(η t)‖ * Real.exp ((↑q + ↑q * ‖β‖) * Real.log ‖α‖ * ↑(m K) * (1 + ↑r / ↑q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1037"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "4e8e77040d99c3327083ad6f4a8e175b2ea2f6bedbac4a827587d57a63373a71"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1038,
      "start_column": 4,
      "end_line": 1038,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q u t\n⊢ ↑q ^ 2 * ‖σ ↑(η t)‖ * Real.exp ((↑q + ↑q * ‖β‖) * Real.log ‖α‖ * ↑(m K) * (1 + ↑r / ↑q)) ≤\n    ↑q ^ 2 * c₄ ^ n K q * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * c₉ ^ (r + q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1038"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ed69a399692192c562277a3c8e38274d418ec21ee3f814ce7a52becf71817ab5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1039,
      "start_column": 4,
      "end_line": 1039,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q u t\n⊢ ↑q ^ 2 * c₄ ^ n K q * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * c₉ ^ (r + q) ≤ c₁₀ ^ r * ↑r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1039"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1fbb30a28ae522eb300c1a7094d153db0d0af6d1573dbee84056ff458362c1ba"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1064,
      "start_column": 4,
      "end_line": 1064,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR✝ : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr✝ : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀✝ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS✝ : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ✝ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη✝ : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nhz : z ∈ Metric.sphere 0 (↑(m K) * (1 + ↑r / ↑q))\n⊢ ↑(m K) * ↑r / ↑q = ↑(m K) * (1 + ↑r / ↑q) - ↑(m K)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1064"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ebcfe16a308e25788cab3c686cae35f7a2187a5c6eed3c1ad3c4106810dd2af1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1068,
      "start_column": 8,
      "end_line": 1068,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR✝ : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr✝ : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀✝ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS✝ : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ✝ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη✝ : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nhz : z ∈ Metric.sphere 0 (↑(m K) * (1 + ↑r / ↑q))\n⊢ l₀ < m K",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1068"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "cf97aa12a87229bcb00b80a9f5741ef6fb0e9820f48ca35fd23324b4ebc8bea3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1070,
      "start_column": 4,
      "end_line": 1070,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR✝ : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr✝ : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀✝ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS✝ : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ✝ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη✝ : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nhz : z ∈ Metric.sphere 0 (↑(m K) * (1 + ↑r / ↑q))\nthis : ↑l₀ < ↑(m K)\n⊢ ↑(m K) * (1 + ↑r / ↑q) - ↑(m K) ≤ ‖z‖ - ↑l₀",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1070"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "ac975c9beae6949194039d9e808495473906ff76589becdf222a5201a65be58e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1329,
      "start_column": 4,
      "end_line": 1329,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.hz\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nhz : z ∈ Metric.sphere 0 (↑(m K) * (1 + ↑r / ↑q))\n⊢ z ∈ Metric.sphere 0 (↑(m K) * (1 + ↑(_root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0) / ↑q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1329"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "59e05b3dc741450705fba28231a57fd5560cb1c5a4d0eaff1d212abb0860b5cf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1330,
      "start_column": 4,
      "end_line": 1330,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz k : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nhz : z ∈ Metric.sphere 0 (↑(m K) * (1 + ↑r / ↑q))\n⊢ ‖z - ↑l₀‖ ≤ ‖z - k‖",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1330"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "0bf98d08c0cffde06e93cfd5e7c05c29be843989d7887a4322600e5d9039be36"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1345,
      "start_column": 41,
      "end_line": 1345,
      "end_column": 46,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\n⊢ let R := R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t;\n  let r := r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let l₀ := l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let S := S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let ρ := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let η := η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  z ∈ Metric.sphere 0 (↑(m K) * (1 + ↑r / ↑q)) →\n    ‖(z - ↑l₀) ^ (-↑r) * ∏ k ∈ Finset.range (m K + 1) \\ {l₀}, ((↑l₀ - ↑k) / (z - ↑k)) ^ r‖ ≤\n      c₁₁ ^ r * (↑q / ↑r) ^ (m K * r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1345"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a6bce69f636e0bef9ca1d2c3dbeefaa280160f83d07ee0f5049db46d2258955c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1128,
      "start_column": 2,
      "end_line": 1128,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ let R := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t;\n  let r := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let l₀ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let S := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let ρ := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let η := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  ‖S z‖ ≤ c₁₂ ^ r * ((3 - ↑(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1128"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1214a1d0d21f20a6cee8d9b8a00f0a743b70a087b96b2224d2105ad2954712e3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1398,
      "start_column": 52,
      "end_line": 1398,
      "end_column": 57,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nhα : IsAlgebraic ℚ α\nhβ : IsAlgebraic ℚ β\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nhdistinct : ∀ (i j : Fin (q * q)), i ≠ j → ρ α β q i ≠ ρ α β q j\n⊢ let R := R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t;\n  let r := r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let l₀ := l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let S := S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let ρ := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let η := η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  σ ρ = ↑(2 * Real.pi)⁻¹ * ∮ (z : ℂ) in C(0, ↑(m K) * (1 + ↑r / ↑q)), (z - ↑l₀)⁻¹ * S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1398"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "538bc7c81c1f7ef2b9df699872e2a04126f4e0de069ee854f109e1aa508e37bb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1426,
      "start_column": 4,
      "end_line": 1426,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ‖(2 * Real.pi)⁻¹‖ * ‖∮ (z : ℂ) in C(0, ↑(m K) * (1 + ↑r / ↑q)), (z - ↑l₀)⁻¹ * S z‖ ≤\n    ‖Complex.log α‖ ^ (-↑r) * ↑(m K) * (1 + ↑r / ↑q) * c₁₂ ^ r * ↑r ^ (r * (3 - m K) / 2 + 3 / 2) * ↑q / (↑(m K) * ↑r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1426"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b1b42d2a67fc3cef09e65f1400866e41dc1442e39e73d9b906796f554477de24"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1427,
      "start_column": 4,
      "end_line": 1427,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_4\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ‖Complex.log α‖ ^ (-↑r) * ↑(m K) * (1 + ↑r / ↑q) * c₁₂ ^ r * ↑r ^ (r * (3 - m K) / 2 + 3 / 2) * ↑q / (↑(m K) * ↑r) ≤\n    c₁₃ ^ r * ↑r ^ (r * (3 - m K) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1427"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "49bbbf0cdd89c31d90eba4098e9d4b1588805da406a22b8d7c68f25c9782ac3c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1220,
      "start_column": 4,
      "end_line": 1220,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ↑((Algebra.norm ℚ) ρ) ≤ c₁₄ ^ r * ↑r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1220"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "1d236988296720703db9e6a8c8ebd0a049f83d6aae0b2eb5062aeada0bf9c59a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1221,
      "start_column": 4,
      "end_line": 1221,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ c₁₄ ^ r * ↑r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c₁₄ ^ r * ↑r ^ (-↑r / 2 + 3 * ↑(h K) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1221"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "dafff168f96d20962236891a8a4cc766e21c33ea6f14594a6388624d6438c85e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1460,
      "start_column": 2,
      "end_line": 1460,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h.right\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n⊢ ↑(r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0) ^\n      ((r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 - 3 * h K) / 2) ≥\n    c₁₅ ^ r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1460"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T02:58:34+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3edb81b63e4b2932eb334f938aab8cc72abec5eb559ed8f8bd98041975a6d9f6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "f4c2564463e0bfe4f08117ccd3c72b94061bb19b",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1246,
      "start_column": 4,
      "end_line": 1246,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ↑(_root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0) ^\n      (_root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 / 2 - 3 * h K / 2) <\n    c₁₄ ^ r * c₅ ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/f4c2564463e0bfe4f08117ccd3c72b94061bb19b/Mathlib/NumberTheory/h7.lean#L1246"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-09T23:18:51.078271+00:00"
    },
    "id": "2dfb0de1ca23bd1b9aab32cf53cc50b316611b0ff82798934c9756709dba09c4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1480,
      "start_column": 2,
      "end_line": 1480,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case intro.intro.intro.intro.intro.intro.intro.intro.intro.intro\nK✝ : Type\ninst✝¹ : Field K✝\nα β : ℂ\nhα : IsAlgebraic ℚ α\nhβ : IsAlgebraic ℚ β\nσ✝ : K✝ →+* ℂ\nα'✝ β'✝ γ'✝ : K✝\ninst✝ : NumberField K✝\nq : ℕ\nu : Fin (m K✝ * n K✝ q)\nhγ : IsAlgebraic ℚ (α ^ β)\nK : Type\nhK : Field K\nhNK : NumberField K\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nha : α = σ α'\nhb : β = σ β'\nhc : α ^ β = σ γ'\n⊢ False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "c26874e43979047d038540167cc6cf0f0808c5d5de18e89a12c26c7514223057"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "a5795764142a42265d7046750165aa183184fc94",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 685,
      "start_column": 2,
      "end_line": 685,
      "end_column": 7,
      "file": "Mathlib/Combinatorics/MyGraph/Basic.lean"
    },
    "debug_info": {
      "goal": "V : Type u\nG H : MyGraph V\nh : H ≤ G\n⊢ G \\ (G \\ H) = H",
      "url": "https://github.com/leanprover-community/mathlib4/blob/a5795764142a42265d7046750165aa183184fc94/Mathlib/Combinatorics/MyGraph/Basic.lean#L685"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-09T23:24:48.994862+00:00"
    },
    "id": "0c1a4056a338c9060ee38e933527c2904aafab92e75d2c2eae5c0fc86ae26560"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1034,
      "start_column": 2,
      "end_line": 1034,
      "end_column": 7,
      "file": "Mathlib/Combinatorics/MyGraph/Basic.lean"
    },
    "debug_info": {
      "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\nh : Disjoint G (fromEdgeSet s)\ne : Sym2 V\nhe : e ∈ G.edgeSet\nhf : e ∈ s\n⊢ False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1034"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
    },
    "id": "46471fe2402bf29d56294f82728c19182e92c7d2dd858813536369af1d30af14"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "jt496_blowups",
      "commit": "6d9ab24b3600824cb6a52d96519dca7dde2a5734",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 1037,
      "start_column": 2,
      "end_line": 1037,
      "end_column": 7,
      "file": "Mathlib/Combinatorics/MyGraph/Basic.lean"
    },
    "debug_info": {
      "goal": "V : Type u\nG : MyGraph V\ns : Set (Sym2 V)\n⊢ Disjoint (fromEdgeSet s) G ↔ Disjoint s G.edgeSet",
      "url": "https://github.com/leanprover-community/mathlib4/blob/6d9ab24b3600824cb6a52d96519dca7dde2a5734/Mathlib/Combinatorics/MyGraph/Basic.lean#L1037"
    },
    "metadata": {
      "blame_email_hash": "8580f8c44a06",
      "blame_date": "2025-04-09T17:01:03+01:00",
      "inclusion_date": "2025-04-14T23:18:30.363465+00:00"
    },
    "id": "45d30a90910e455b19093a1a0d1bc85c86b593011c423ff84b5f65bd0f9ab0cc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mans0954/bipolar-theorem",
      "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 65,
      "start_column": 2,
      "end_line": 65,
      "end_column": 7,
      "file": "Mathlib/Analysis/LocallyConvex/Bipolar.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁶ : RCLike 𝕜\ninst✝⁵ : AddCommGroup E\ninst✝⁴ : AddCommGroup F\ninst✝³ : Module 𝕜 E\ninst✝² : Module 𝕜 F\nB : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜\ninst✝¹ : Module ℝ E\ninst✝ : IsScalarTower ℝ 𝕜 E\nf₁ : WeakBilin B →L[𝕜] 𝕜\n⊢ ∃ a, (WeakBilin.eval B) a = f₁",
      "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L65"
    },
    "metadata": {
      "blame_email_hash": "b075c7797d16",
      "blame_date": "2025-04-09T08:31:51+01:00",
      "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
    },
    "id": "6fb6962af2f299b3e0f28708b03dab08b6d6bfadf361083ee2a93015c9a30da9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mans0954/bipolar-theorem",
      "commit": "beefe9101a489b1887d0b4590e63c145ecf60952",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 102,
      "start_column": 4,
      "end_line": 102,
      "end_column": 9,
      "file": "Mathlib/Analysis/LocallyConvex/Bipolar.lean"
    },
    "debug_info": {
      "goal": "case a.intro.intro.intro\n𝕜 : Type u_1\nE : Type u_2\nF : Type u_3\ninst✝⁷ : RCLike 𝕜\ninst✝⁶ : AddCommGroup E\ninst✝⁵ : AddCommGroup F\ninst✝⁴ : Module 𝕜 E\ninst✝³ : Module 𝕜 F\ninst✝² : Module ℝ E\ninst✝¹ : IsScalarTower ℝ 𝕜 E\nB : E →ₗ[𝕜] F →ₗ[𝕜] 𝕜\ns : Set E\ninst✝ : Nonempty ↑s\nh : B.Nondegenerate\nx : E\nhx : x ∉ (closedAbsConvexHull 𝕜) s\nf : WeakBilin B →L[𝕜] 𝕜\nu : ℝ\nhf₁ : ∀ a ∈ (closedAbsConvexHull 𝕜) s, RCLike.re (f a) < u\nhf₂ : u < RCLike.re (f x)\ne3 : 0 < u\ng : WeakBilin B →L[𝕜] 𝕜 := (1 / u) • f\nfg : g = (1 / u) • f\nhg₁ : ∀ a ∈ (closedAbsConvexHull 𝕜) s, RCLike.re (g a) < 1\n⊢ x ∈ (B.flip.polar (B.polar s))ᶜ",
      "url": "https://github.com/leanprover-community/mathlib4/blob/beefe9101a489b1887d0b4590e63c145ecf60952/Mathlib/Analysis/LocallyConvex/Bipolar.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "b075c7797d16",
      "blame_date": "2025-04-09T08:31:51+01:00",
      "inclusion_date": "2025-04-12T23:18:50.419123+00:00"
    },
    "id": "ed306d8ef427052daefa01ae9155736ec4e25bb70fee346f016285c260266d81"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.24977 ∈ ↑ys then ?m.25006 else y\n⊢ NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
    },
    "id": "aaa1785e9906507f71d6fda052deb608b0e68f8c29a5702e5c749538052c200d"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "d7915e51e5f6c7e0d276f031fb95092ad278ef9e",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.24977 ∈ ↑ys then ?m.25006 else y\nhg1 : NSequence n k g1 := sorry\n⊢ ⟨g1, hg1⟩ ∈ {g | ψ n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/d7915e51e5f6c7e0d276f031fb95092ad278ef9e/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-09T23:33:34.448447+00:00"
    },
    "id": "92c4519c020b562fbd1913f0b0df29cc4ac6f33da9857d9d1bf7729825848dfc"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 32,
      "start_column": 2,
      "end_line": 32,
      "end_column": 7,
      "file": "Compfiles/Imo2020P3.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nc : Fin (4 * n) → Fin n\nh : ∀ (i : Fin n), #{j | c j = i} = 4\n⊢ ∃ S, ∑ i ∈ S, (↑i + 1) = ∑ i ∈ Sᶜ, (↑i + 1) ∧ ∀ (i : Fin n), #({j ∈ S | c j = i}) = 2",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2020P3.lean#L32"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2025-04-08T13:09:24-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70eb82b882388275af62794a7d8761678aee0776c17f603eefa6183ecd229e75"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 379,
      "start_column": 27,
      "end_line": 379,
      "end_column": 32,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory ℒₒᵣ\ninst✝³ : ℕ ⊧ₘ* T\nA : Modal.Formula ℕ\ninst✝² : T.Delta1Definable\ninst✝¹ : 𝐈𝚺₁ ⪯ T\ninst✝ : SoundOn T (Hierarchy 𝚷 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization ℒₒᵣ), ℕ ⊧ₘ₀ f.interpret (𝐈𝚺₁.standardDP T) A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, r₁ ⊧ φ\nhA₂ : ¬r₁ ⊧ A\nthis✝¹ : (M₁.extendRoot r₁).IsFiniteTree r₀\nthis✝ : Fintype (M₁.extendRoot r₁).World\nσ : SolovaySentences (𝐈𝚺₁.standardDP T) (M₁.extendRoot r₁).toFrame r₀ :=\n  SolovaySentences.standard (M₁.extendRoot r₁).toFrame Frame.extendRoot.root\nB : Modal.Formula ℕ\nihB :\n  B ∈ A.subformulas →\n    (r₁ ⊧ B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ σ.realization.interpret (𝐈𝚺₁.standardDP T) B) ∧\n      (¬r₁ ⊧ B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret (𝐈𝚺₁.standardDP T) B)\nB_sub : □B ∈ A.subformulas\nh : r₁ ⊧ □B\nthis : 𝐈𝚺₁ ⊢!. (⩖ j, σ.σ j) ➝ σ.realization.interpret (𝐈𝚺₁.standardDP T) B\n⊢ 𝐈𝚺₁.alt ⊢! ⩖ j, σ.σ j",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L379"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-06T15:53:13+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "0b6e09e771d72bdfa1de4fc09d3d2a5adacb06abd1b9f5a3905e63f3ca1ba35f"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "palalansouki/issue303",
      "commit": "a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 397,
      "start_column": 20,
      "end_line": 397,
      "end_column": 25,
      "file": "Foundation/ProvabilityLogic/S/Completeness.lean"
    },
    "debug_info": {
      "goal": "T : Theory ℒₒᵣ\ninst✝³ : ℕ ⊧ₘ* T\nA : Modal.Formula ℕ\ninst✝² : T.Delta1Definable\ninst✝¹ : 𝐈𝚺₁ ⪯ T\ninst✝ : SoundOn T (Hierarchy 𝚷 2)\ntfae_1_to_2 : Finset.conj A.rflSubformula ➝ A ∈ Logic.GL → A ∈ Logic.S\ntfae_2_to_3 : A ∈ Logic.S → ∀ (f : Realization ℒₒᵣ), ℕ ⊧ₘ₀ f.interpret (𝐈𝚺₁.standardDP T) A\nhA : Finset.conj A.rflSubformula ➝ A ∉ Logic.GL\nM₁ : Model\nr₁ : M₁.World\nleft✝ : M₁.IsFiniteTree r₁\nM₀ : Model := M₁.extendRoot r₁\nr₀ : M₀.World := Model.extendRoot.root\nhA₁ : ∀ φ ∈ A.rflSubformula, r₁ ⊧ φ\nhA₂ : ¬r₁ ⊧ A\nthis✝² : (M₁.extendRoot r₁).IsFiniteTree r₀\nthis✝¹ : Fintype (M₁.extendRoot r₁).World\nσ : SolovaySentences (𝐈𝚺₁.standardDP T) (M₁.extendRoot r₁).toFrame r₀ :=\n  SolovaySentences.standard (M₁.extendRoot r₁).toFrame Frame.extendRoot.root\nH :\n  ∀ B ∈ A.subformulas,\n    (r₁ ⊧ B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ σ.realization.interpret (𝐈𝚺₁.standardDP T) B) ∧\n      (¬r₁ ⊧ B → 𝐈𝚺₁ ⊢!. σ.σ r₀ ➝ ∼σ.realization.interpret (𝐈𝚺₁.standardDP T) B)\nthis✝ : ℕ ⊧ₘ* 𝐈𝚺₁\nthis : ℕ ⊧ₘ₀ σ.σ r₀ → ¬ℕ ⊧ₘ₀ σ.realization.interpret (𝐈𝚺₁.standardDP T) A\n⊢ ℕ ⊧ₘ₀ σ.σ r₀",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/a2cbf6a6c08a4e59a8ac27e0e85e5c562af7bb32/Foundation/ProvabilityLogic/S/Completeness.lean#L397"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-03T06:54:28+09:00",
      "inclusion_date": "2025-04-10T00:17:12.335006+00:00"
    },
    "id": "6175f8f733d259760ce20c2111278a5626f776ba0f081f606bcca07919386ced"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/04Exists.lean"
    },
    "debug_info": {
      "goal": "p q r : Prop\n⊢ p → q → r ↔ p ∧ q → r",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "bb36c9f0700cd368a28bc3e7c148ad8af786765657869345caab4c06078e390a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 88,
      "start_column": 2,
      "end_line": 88,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/04Exists.lean"
    },
    "debug_info": {
      "goal": "a b c : ℤ\nh₁ : a ∣ b\nh₂ : b ∣ c\n⊢ a ∣ c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L88"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:40:08+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6e8dfe06b5de9c65fc459c3eedfb7d0895dabb7829c32e99cf9f49f0ecdc77f9"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 99,
      "start_column": 2,
      "end_line": 99,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/04Exists.lean"
    },
    "debug_info": {
      "goal": "f g : ℝ → ℝ\nh : Surjective (g ∘ f)\n⊢ Surjective g",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/04Exists.lean#L99"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:40:08+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "cca57761aa32a28c1c157c04030d5dde73edea00e8cb654ba2760e7e8fe5890b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 49,
      "start_column": 2,
      "end_line": 49,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\n⊢ (a + b) * (a - b) = a ^ 2 - b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L49"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "31a5c50bc8f96522862b4303c089fc16706625428b5e663bddbb981f9687ae54"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 70,
      "start_column": 2,
      "end_line": 70,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\nf : ℝ → ℝ\n⊢ f ((a + b) ^ 2 - 2 * a * b) = f (a ^ 2 + b ^ 2)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L70"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "56045fc7a2a5f07e56b7af107ee02d0de6c29e0d3e5f026a4473b6ed402952ad"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 141,
      "start_column": 2,
      "end_line": 141,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\nh : a = -b\nh' : b + c = 0\n⊢ b * (a - c) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c3bc2343a7911f11fa21469a80ed666c865ccadc6a53a52b0140a457d159a1a7"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\nh : b ≤ a\n⊢ a + b ≤ 2 * a",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e57a5fef819badaadd91aa164b6b22187e1553dc5b482df2123cd7453bbca2c3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 220,
      "start_column": 2,
      "end_line": 220,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f : ℝ → ℝ\nhf : even_fun f\n⊢ f (-5) = f 5",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L220"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "2937a41edd3de8c752c6b129e657374667bef5ec7292903ef130c18946c5da79"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 317,
      "start_column": 2,
      "end_line": 317,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f g : ℝ → ℝ\nhf : even_fun f\n⊢ even_fun (g ∘ f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L317"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5e83520fe483aebbc15c3b371f4cea2e27fa9860485aba462a373e1da7f24b7f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 388,
      "start_column": 2,
      "end_line": 388,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f g : ℝ → ℝ\nhf : non_decreasing f\nhg : non_increasing g\n⊢ non_increasing (g ∘ f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L388"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f91f8dba73adccc676d4a7383327b45a3aa87eb3990ccbef77c79aa72695de5e"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 422,
      "start_column": 2,
      "end_line": 422,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "x : ℝ\nX Y : Set ℝ\nhx : x ∈ X\n⊢ x ∈ X ∩ Y ∪ X \\ Y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L422"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e0836a3038ac3eb1e90b7c1680a0f14eb150703de1c5e0c06c8a6e9604e3bb0f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 433,
      "start_column": 2,
      "end_line": 433,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "f : ℝ → ℝ\nhf : Continuous f\nh2f : HasCompactSupport f\n⊢ ∃ x, ∀ (y : ℝ), f x ≤ f y",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L433"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "be8f295507469a3db48b45b6d922648ea0e9115a6e6ac5d8e6f5e956b52ed0f2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 475,
      "start_column": 2,
      "end_line": 475,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "a b c : ℤ\nh₁ : a ∣ b\nh₂ : a ∣ c\n⊢ a ∣ b + c",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L475"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4d893776777622c144b4bd2d87dbb1eebd4ff1209029061640aa825847f29a90"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 570,
      "start_column": 2,
      "end_line": 570,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nl : ℝ\nw v : ℕ → ℝ\nhu : seq_limit u l\nhw : seq_limit w l\nh : ∀ (n : ℕ), u n ≤ v n\nh' : ∀ (n : ℕ), v n ≤ w n\n⊢ seq_limit v l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L570"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ea2fa22461118eb86a0523e0e7523686172d7457abf6b58eaf01b8a0a9f03b9c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 585,
      "start_column": 2,
      "end_line": 585,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "case h\nu : ℕ → ℝ\nl l' : ℝ\nhl : seq_limit u l\nhl' : seq_limit u l'\n⊢ ∀ ε > 0, |l - l'| ≤ ε",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L585"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "0ad303d64e58d190162841b6aa8bd82c7ebb230771497f9800f0b4df2bbda801"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 628,
      "start_column": 2,
      "end_line": 628,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "φ : ℕ → ℕ\n⊢ extraction φ → ∀ (N N' : ℕ), ∃ n ≥ N', φ n ≥ N",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L628"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "acc2a016c137284d9ca15d47d4a8a99b51f367fb5c2afa582db2266a934c2ead"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 639,
      "start_column": 2,
      "end_line": 639,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\na : ℝ\n⊢ cluster_point u a → ∀ ε > 0, ∀ (N : ℕ), ∃ n ≥ N, |u n - a| ≤ ε",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L639"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4e017b7c43c78766663bf5dda65f42b58bce962c75c8f9b55dd3c2d16801d84b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 646,
      "start_column": 2,
      "end_line": 646,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nl : ℝ\nφ : ℕ → ℕ\nh : seq_limit u l\nhφ : extraction φ\n⊢ seq_limit (u ∘ φ) l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L646"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "1e49d681ba41e0e4a2ab26478663a210c8933e17f0fceca8fdbc866174cfece4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 651,
      "start_column": 2,
      "end_line": 651,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nl a : ℝ\nhl : seq_limit u l\nha : cluster_point u a\n⊢ a = l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L651"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "891762023ca5d7a2e0fe80e3ebe9feb6afc28a23a15fb66a8405dcfce8a09110"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 660,
      "start_column": 2,
      "end_line": 660,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Shorter.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\n⊢ (∃ l, seq_limit u l) → CauchySequence u",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Shorter.lean#L660"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2025-02-24T23:33:44+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "25dff7d0235178f2ab9d996cd0a31220b3057d04bae4e4e39333b0ffe0063196"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 38,
      "start_column": 2,
      "end_line": 38,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\nha : 0 < a\nhb : 0 < b\n⊢ 0 < a ^ 2 + b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L38"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "24474570a46cf4820ca87b3a80fcd08740f51144d4aba7d232428e6195744c0d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\n⊢ a + c ≤ b + c ↔ a ≤ b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "02e06b673c1531e0bba24a3274762bf270601aa4bd8d8239502518445aa1c569"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\nhb : 0 ≤ b\n⊢ a ≤ a + b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e671b92c749db96f2ff31a0c49a1f444f275899fd5307c04ca753d3d754e847a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/02Iff.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\n⊢ a = b ↔ b - a = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/02Iff.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "af74a24efcbfbcc004a32e3704f1791eafc6abce3422852977f1ed47ad287397"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 28,
      "start_column": 2,
      "end_line": 28,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\n⊢ (a + b) ^ 2 = a ^ 2 + 2 * a * b + b ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L28"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "de92c314abcf62e9ca5b1da7aecfbc50fcdbbaf5c170d264defa167c350e8d4b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c d : ℝ\nh : b = d + d\nh' : a = b + c\n⊢ a + b = c + 4 * d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-10T10:38:53+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d74d3bfe1bcfd98b943fb8f5f517a9c405633b2bc2fbf38b0f1a7b75e1b080d2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 120,
      "start_column": 2,
      "end_line": 120,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\n⊢ exp (a + b - c) = exp a * exp b / (exp c * exp 0)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L120"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c1431370423f1eae606d3620bb9fda39696eaa3d4d01d6f1b14a1058becf212b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 144,
      "start_column": 2,
      "end_line": 144,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c d : ℝ\nh : a = b + b\nh' : b = c\nh'' : a = d\n⊢ b + c = d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d5a17e9d265fc341d06b520ee0dd71b387a71dd165430c3375e7124dae627d65"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 186,
      "start_column": 58,
      "end_line": 186,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\nh : a = b + c\n⊢ exp (2 * a) = exp (2 * (b + c))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L186"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d43ee6d505f38cd990eb9ce051d0c1d7ca14b703e2e5c29044af87224d26fef3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 187,
      "start_column": 58,
      "end_line": 187,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\nh : a = b + c\n⊢ exp (2 * (b + c)) = exp (b + b + (c + c))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L187"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "689222f0e1ae05839fb1a6505ade73e33fef66dffc91f2779af0d2f525933a7b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 188,
      "start_column": 58,
      "end_line": 188,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\nh : a = b + c\n⊢ exp (b + b + (c + c)) = exp (b + b) * exp (c + c)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L188"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "dad4759a559caddaff10d5186a63bf01cb0b48285ff5152c9c86ea503b0f7ea9"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 189,
      "start_column": 58,
      "end_line": 189,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\nh : a = b + c\n⊢ exp (b + b) * exp (c + c) = exp b * exp b * (exp c * exp c)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L189"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4fa1f44a57c1127bba667d73de33020143acfd861d9e0c5c6b503fbcbd1e6bc5"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 190,
      "start_column": 58,
      "end_line": 190,
      "end_column": 63,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c : ℝ\nh : a = b + c\n⊢ exp b * exp b * (exp c * exp c) = exp b ^ 2 * exp c ^ 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L190"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4ec83107c241e45019522ee278e5d2363d0e6dbb29d026dcdc973f9d59503486"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 205,
      "start_column": 2,
      "end_line": 205,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/01Rewriting.lean"
    },
    "debug_info": {
      "goal": "a b c d : ℝ\nh : c = d * a + b\nh' : b = a * d\n⊢ c = 2 * a * d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/01Rewriting.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f947dbb38ee5858bfbc2a9d9b481c33c915a88c284f8bd90aec01a218fede757"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 2,
      "end_line": 35,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst✝ : PartialOrder X\ns : Set X\nx₀ : X\nh : isInf s x₀\n⊢ x₀ ∈ lowerBounds s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "fb48b482aa0856682fcacb4dea51b4ad8d30b953af0c7720d8cbb444aabda786"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 40,
      "start_column": 2,
      "end_line": 40,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst✝ : PartialOrder X\ns : Set X\nx₀ x₁ : X\nhx₀ : isInf s x₀\nhx₁ : isInf s x₁\n⊢ x₀ = x₁",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L40"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ed81f4a0fca149c4e2d4f2601720b079632accc9e4cc44547948fd7aa9538a35"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\ninst✝ : PartialOrder X\nI : Set X → X\nh : isInfFun I\n⊢ isSupFun fun s => I (upperBounds s)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e246e54cdc4e25d003aa48ce1159528038601bda72ecf8b8a283dd9a9362b481"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 148,
      "start_column": 2,
      "end_line": 148,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst✝¹ : PartialOrder X\ninst✝ : CompleteLattice X\ns t : Set X\nh : s ⊆ t\n⊢ Inf t ≤ Inf s",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L148"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "3d7f7264d7733abd1f987d1949ad0c68569e4bcc98f85e4c412a2c2cd038934b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst✝¹ : PartialOrder X\ninst✝ : CompleteLattice X\nx x' : X\n⊢ x ≤ x' ↔ Inf {x, x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "be92e50e481731da569cbd7f0eb900290ea45e528159033b330e0954a489d36b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst✝¹ : PartialOrder X\ninst✝ : CompleteLattice X\nx : X\n⊢ Inf {x' | x ≤ x'} = x",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "489561954e76809c197271bd602e8a2166160596238361e21379495f38054f7c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 173,
      "start_column": 2,
      "end_line": 173,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "Y : Type\nS : Set (Set Y)\n⊢ isInf S (⋂₀ S)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L173"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a6093176ad78b0fa55c64b8611fb8c03c92b12eaed3f927dc3a2bbcdf77fc4cc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "Y : Type\nS : Set (Set Y)\n⊢ isSup S (⋃₀ S)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a40887c50ab269636bd32d17efd62f8ce4673949aff59e07a0230296c7695955"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\nY : Type u_2\ninst✝¹ : PartialOrder X\ninst✝ : PartialOrder Y\nl : X → Y\nr : Y → X\nh : adjunction l r\n⊢ adjunction r l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "784c4d681e0f1ffb524b11b6c17486390c329fbc8be374651f3710c14ea5ecfd"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 248,
      "start_column": 2,
      "end_line": 248,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X Y : Type\ninst✝³ : PartialOrder X\ninst✝² : CompleteLattice X\ninst✝¹ : PartialOrder Y\ninst✝ : CompleteLattice Y\nl : X → Y\nh : ∀ (s : Set X), l (Sup s) = Sup (l '' s)\n⊢ adjunction l (mk_right l)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L248"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "70c0026107c402b07f2812a615d812915b8e891da23c7b6322d9d32a9bae980a"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 383,
      "start_column": 2,
      "end_line": 383,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X Y : Type\nf : X → Y\nt : Set (Topology X)\n⊢ f⁎ (Sup t) = Sup (f⁎ '' t)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L383"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T08:05:37+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "656c3fc3ab9df2e87ac412b99e2f243fd8ee1214f053153e35b2c08b80bcafb8"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 396,
      "start_column": 2,
      "end_line": 396,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "ι : Type\nX : ι → Type\nT : Π (i : ι), Topology (X i)\nZ : Type\nTZ : Topology Z\nf : Z → Π (i : ι), X i\n⊢ Continuous TZ (ProductTopology T) f ↔ ∀ (i : ι), Continuous TZ (T i) fun z => f z i",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L396"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "263aba893955dd29a3222b96894aca1518324e6a50f33c7a36740674214f4c94"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 422,
      "start_column": 4,
      "end_line": 422,
      "end_column": 9,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst✝ : Group G\ns : Set (Subgroup G)\n⊢ 1 ∈ ⋂ H ∈ s, H.carrier",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L422"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c186b3b3f79bfdb8cb8013f818f0a3252faea0eb1475773541581572ffa2f0b3"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 436,
      "start_column": 2,
      "end_line": 436,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst✝ : Group G\n⊢ isInfFun SubgroupInf",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L436"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "16c306087fbed5df2e20cf4771a7e2e9bec1df661cb6ece6b11b26211cf4d935"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 449,
      "start_column": 2,
      "end_line": 449,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst✝ : Group G\n⊢ adjunction generate forget",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L449"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "45f059b615def0bc21f423f85c71cbe400c192038d83189b3feb5ef1ecd51494"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 457,
      "start_column": 4,
      "end_line": 457,
      "end_column": 9,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst✝¹ : Group G\nG' : Type\ninst✝ : Group G'\nf : G →* G'\nH' : Subgroup G'\n⊢ 1 ∈ ⇑f ⁻¹' H'.carrier",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L457"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "d782436a4cf9f1eba597dfe6ae7c243e06fef5ed3745957340d22c4a6512285c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 474,
      "start_column": 2,
      "end_line": 474,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst✝¹ : Group G\nG' : Type\ninst✝ : Group G'\nf : G →* G'\n⊢ adjunction (push f) (pull f)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L474"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "848a88221b50f594184c0b37f1d804f3ec5df7f6a1efaa9b6df1b12de9623cbe"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 490,
      "start_column": 2,
      "end_line": 490,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst✝¹ : PartialOrder X\nY : Type\ninst✝ : PartialOrder Y\nl l' : X → Y\nr : Y → X\nh : adjunction l r\nh' : adjunction l' r\n⊢ l = l'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L490"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4d9727093500ea892db102c584888d894a3db80e2826660cea74274a134c3d56"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 495,
      "start_column": 2,
      "end_line": 495,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst✝¹ : PartialOrder X\nY : Type\ninst✝ : PartialOrder Y\nl : X → Y\nr r' : Y → X\nh : adjunction l r\nh' : adjunction l r'\n⊢ r = r'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L495"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "7a41dbeb8df1efc710d5af31bae9c9671e774809648ea3f54475aacd9e26736b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 502,
      "start_column": 2,
      "end_line": 502,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "X : Type\ninst✝² : PartialOrder X\nY : Type\ninst✝¹ : PartialOrder Y\nZ : Type\ninst✝ : PartialOrder Z\nl : X → Y\nr : Y → X\nh : adjunction l r\nl' : Y → Z\nr' : Z → Y\nh' : adjunction l' r'\n⊢ adjunction (l' ∘ l) (r ∘ r')",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L502"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "9da1e288f0382366952ec611bc92d3d6a7c8b743353cb1d1d97ba8d0d524253e"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 517,
      "start_column": 2,
      "end_line": 517,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean"
    },
    "debug_info": {
      "goal": "G : Type\ninst✝¹ : Group G\nG' : Type\ninst✝ : Group G'\nf : G →* G'\n⊢ push f ∘ generate = generate ∘ Set.image ⇑f",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/GaloisAdjunctions.lean#L517"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-11T14:40:50+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "8435d8cd698bdfceeb8217861a91d74480d58eefa5607186cd3033e9fcdbe33b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 54,
      "start_column": 2,
      "end_line": 54,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\n⊢ IndepSet A B → IndepSet B A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L54"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "2f9731105fae795b1ca7739f54772f72f05c51adec11b26fa333257973f8fd31"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 64,
      "start_column": 2,
      "end_line": 64,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\nhA : MeasurableSet A\nhB : MeasurableSet B\n⊢ IndepSet A B → IndepSet A Bᶜ",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L64"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ddadc8968c74f61b562b9d11dc06f3747e3e596bfe5d52314d62ebacd1c24b2b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 71,
      "start_column": 2,
      "end_line": 71,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\nhA : MeasurableSet A\nhB : MeasurableSet B\n⊢ IndepSet A Bᶜ ↔ IndepSet A B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L71"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "67addfe9d8c814b350ca38bee763cec3b650b9c3262e865cfe7f79eea442a813"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\nhA : MeasurableSet A\nhB : MeasurableSet B\nh : IndepSet A B\n⊢ IndepSet Aᶜ B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "3577f3cf5999bad2f3b6bd7ce1a7b4b43afe49b10f7643e474cff5dfb1aa018b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 86,
      "start_column": 2,
      "end_line": 86,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA : Set Ω\nh : IndepSet A A\n⊢ ℙ A = 0 ∨ ℙ A = 1",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L86"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "926e207c68bf5e0eee2705fbb68f26df59dede909b1f81f8c8ef961360bae260"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 108,
      "start_column": 2,
      "end_line": 108,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\nhA : ℙ A = 0\n⊢ ℙ(A|B) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L108"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "212f9d566f3205e8383b7539fb3aef5fba81877c8733ec919faed61dcbe31141"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 113,
      "start_column": 2,
      "end_line": 113,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\nhB : ℙ B = 0\n⊢ ℙ(A|B) = 0",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L113"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "fb467e8a702c20860b6ab5281b83e6c6694b2764003c2bd702f1823787f01990"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 126,
      "start_column": 2,
      "end_line": 126,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\nhA : ℙ A ≠ 0\nhB : ℙ B ≠ 0\n⊢ ℙ(A|B) = ℙ A * ℙ(B|A) / ℙ B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "b9b6d794bf0fd543ef37805109dacd50932254d635086815acf843d35d79ff06"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 136,
      "start_column": 2,
      "end_line": 136,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\n⊢ ℙ(A|B) = ℙ A * ℙ(B|A) / ℙ B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "62759d0fbdfa04ae04a63e63ec6fd0e75081cac92966d39e10e50fa9921fb367"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 140,
      "start_column": 2,
      "end_line": 140,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/Probability.lean"
    },
    "debug_info": {
      "goal": "Ω : Type\ninst✝¹ : MeasureSpace Ω\ninst✝ : IsProbabilityMeasure ℙ\nA B : Set Ω\nh : IndepSet B A\nhB : ℙ B ≠ 0\n⊢ ℙ(A|B) = ℙ A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/Probability.lean#L140"
    },
    "metadata": {
      "blame_email_hash": "369c5f9cb018",
      "blame_date": "2025-03-07T14:30:17+01:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e71ea4e4994260377362f7ab9f19a72614d1c65d2db29a224809e16a77bf1f14"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 27,
      "start_column": 2,
      "end_line": 27,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "a b : ℝ\nha : 0 ≤ a\nhb : 0 ≤ b\n⊢ 0 ≤ a + b",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L27"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5e0b11f48ec32e4fb9f580a36abeea035cfb9c11c4d3a9b9ef235a89a81cb8da"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 31,
      "start_column": 2,
      "end_line": 31,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "a b c d : ℝ\nhab : a ≤ b\nhcd : c ≤ d\n⊢ a + c ≤ b + d",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L31"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4047482a5125962dd4206849a3a1d90c01c6e3131b432523aebc5cf90dbbfda6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nl : ℝ\nh : ∀ (n : ℕ), u n = l\n⊢ seq_limit u l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "f51bdd3ef5cef0938f1aa098b662d8c9e4ab9293e4d6b993c87d05613f6f3d68"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 90,
      "start_column": 2,
      "end_line": 90,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nl : ℝ\nh : seq_limit u l\nhl : l > 0\n⊢ ∃ N, ∀ n ≥ N, u n ≥ l / 2",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L90"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6364d6640c356bc88ffa68816c8c375a10af34f630025c14c6980e86d29e04a6"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 146,
      "start_column": 2,
      "end_line": 146,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nl l' : ℝ\n⊢ seq_limit u l → seq_limit u l' → l = l'",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5b33a5c1ef3874031f3fab4e6b21b7e7bb1dbe446ce79180044fcd97fa7919bc"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 161,
      "start_column": 2,
      "end_line": 161,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nM : ℝ\nh : is_seq_sup M u\nh' : non_decreasing u\n⊢ seq_limit u M",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L161"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "28ef10d7c175fa2e6ea6552770b9507dc76c47d53ae04700c59a92c30f976631"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 239,
      "start_column": 2,
      "end_line": 239,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/SequenceLimits.lean"
    },
    "debug_info": {
      "goal": "u : ℕ → ℝ\nl : ℝ\nhu : CauchySequence u\nhl : cluster_point u l\n⊢ seq_limit u l",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/SequenceLimits.lean#L239"
    },
    "metadata": {
      "blame_email_hash": "c28576c1d1dd",
      "blame_date": "2023-05-09T00:00:04+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "4de6998a49e29646ebbaeea23f3785ef9690cc9fff66f4152c603b032872c954"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 61,
      "start_column": 2,
      "end_line": 61,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable → Prop\n⊢ IsTrue v ⊤",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L61"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ecccb0e6df9670b5d97a10320bcf4772173f5c0bd5576a9426bb61e9fb74a8af"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 65,
      "start_column": 2,
      "end_line": 65,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable → Prop\nA B : Formula\n⊢ IsTrue v (A ⇔ B) ↔ (IsTrue v A ↔ IsTrue v B)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L65"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a0f840df63e15439057b7521bdf33a12c5446670d81a8be1af13925867381097"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 72,
      "start_column": 2,
      "end_line": 72,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable → Prop\nA B : Formula\n⊢ Valid (~~A ⇔ A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L72"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c40cb3b87752db627ed06f0bfc1d9e9b46018e1bc73dd83b7ef1cc3b26c1ed2d"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 134,
      "start_column": 2,
      "end_line": 134,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable → Prop\nA B : Formula\nΓ Δ : Set Formula\n⊢ Provable (~~A ⇔ A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L134"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "6169fe714e5d27b56699f26c0aa6e7ef5684ce6db8e580ff2fbf4a9ef78072a0"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 139,
      "start_column": 2,
      "end_line": 139,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable → Prop\nA B : Formula\nΓ Δ : Set Formula\n⊢ Provable (A || ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e981025cfcacb89dcd6244a88b683282276414dd4adc8b34b6611d2a39a60e2f"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 146,
      "start_column": 2,
      "end_line": 146,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "v : Variable → Prop\nA B : Formula\nΓ Δ : Set Formula\n⊢ Provable (~(A && B) ⇔ ~A || ~B)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L146"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "5a74c7843caca4e3710b76569d4a6909699e80388cb9de80cfcfcca16816e57c"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 158,
      "start_column": 2,
      "end_line": 158,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A : Formula\nΓ Δ : Set Formula\nh : Γ ⊢ A\nh2 : Γ ⊆ Δ\n⊢ Δ ⊢ A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L158"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "b14186637c0a77bf03232e739ab08d9546e6f14cf6821b88100b549e24f0f964"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 165,
      "start_column": 2,
      "end_line": 165,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A B : Formula\nΓ : Set Formula\nh : Γ ⊢ A\n⊢ Insert.insert B Γ ⊢ A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L165"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "48ce864a03f707474b99089f447ae45277b3d1dd8cfe7ac37a1b25cfddbbcfee"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 170,
      "start_column": 2,
      "end_line": 170,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A B : Formula\nΓ : Set Formula\nh : Γ ⊢ A\n⊢ insert (A ⇒ B) Γ ⊢ B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L170"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "1231075a51ae17e2266eae7591b69c9175b837c4f912d30cac559f457d1ef444"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 174,
      "start_column": 2,
      "end_line": 174,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A B : Formula\nΓ : Set Formula\nh1 : Provable (A ⇒ B)\nh2 : Γ ⊢ A\n⊢ Γ ⊢ B",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L174"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a8bc81a374100a209a5526800daca7238aeb6df805025e7e355f27a2c49d2ebb"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 180,
      "start_column": 2,
      "end_line": 180,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A : Formula\nΓ : Set Formula\nh : Γ ⊢ A\n⊢ Γ ⊨ A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L180"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "a84a62258e746b6f066cf1329098fc2cc38a8612df923293bd5261ac0d55df49"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "A : Formula\nh : Provable A\n⊢ Valid A",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/ClassicalPropositionalLogic.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "c2205d9f50f1f04d953c9fe79ca96ff9ee75e18ac8c40d93769670a385ebea12"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 68,
      "start_column": 2,
      "end_line": 68,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst✝ : HeytingAlgebra H\nv : Variable → H\n⊢ eval v top = ⊤",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "99efeed5557f8dafaff773b546ba0b450091c2c6482b62b2adaa841095010519"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 73,
      "start_column": 2,
      "end_line": 73,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type u_1\ninst✝ : HeytingAlgebra H\nv : Variable → H\nA B : Formula\n⊢ eval v (A ⇔ B) = (eval v A ⇨ eval v B) ⊓ (eval v B ⇨ eval v A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L73"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "ea4e3f0cd850382fdb7a240f0e210c67568cb8318e0d71351296d192993865d1"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 79,
      "start_column": 2,
      "end_line": 79,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.16048\ninst✝ : HeytingAlgebra H\nv : Variable → H\nA B : Formula\n⊢ Valid ~(A && ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L79"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "e4ee464fba46aaa64d553d6212f4664b0995dc9db1a3ccbcd2f62457b6d273a4"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 126,
      "start_column": 2,
      "end_line": 126,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.21261\ninst✝ : HeytingAlgebra H\nv : Variable → H\nA B : Formula\nΓ Δ : Set Formula\n⊢ Provable (~A || ~B ⇒ ~(A && B))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "366b639d760eaf79eb4c11e0a411b22f1169ba867b78da31f145f95f3e94372b"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 131,
      "start_column": 2,
      "end_line": 131,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.21285\ninst✝ : HeytingAlgebra H\nv : Variable → H\nA B : Formula\nΓ Δ : Set Formula\n⊢ Provable ~(A && ~A)",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L131"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "7893b4193d726e8de8ff7cfb2c03d8ec9a6c05446f9ce9725ace15890f040de2"
  },
  {
    "repo": {
      "remote": "https://github.com/PatrickMassot/GlimpseOfLean",
      "branch": "master",
      "commit": "435db8d6c9b3c72e68e0fcf95563921a3e17c88b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 136,
      "start_column": 2,
      "end_line": 136,
      "end_column": 7,
      "file": "GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean"
    },
    "debug_info": {
      "goal": "H : Type ?u.21309\ninst✝ : HeytingAlgebra H\nv : Variable → H\nA B : Formula\nΓ Δ : Set Formula\n⊢ Provable (~A && ~B ⇒ ~(A || B))",
      "url": "https://github.com/PatrickMassot/GlimpseOfLean/blob/435db8d6c9b3c72e68e0fcf95563921a3e17c88b/GlimpseOfLean/Exercises/Topics/IntuitionisticPropositionalLogic.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2023-07-08T19:51:30+02:00",
      "inclusion_date": "2025-04-16T23:24:19.102810+00:00"
    },
    "id": "73addb2e899f0e32fd7ab1d3f3523c9008a2c9166ee317c5415b1377acc0f744"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 59,
      "start_column": 2,
      "end_line": 59,
      "end_column": 7,
      "file": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean"
    },
    "debug_info": {
      "goal": "R : Type u_10\nM : Type u_11\nM' : Type u_12\ninst✝⁶ : Ring R\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : TopologicalSpace M'\ninst✝³ : AddCommGroup M\ninst✝² : AddCommGroup M'\ninst✝¹ : Module R M\ninst✝ : Module R M'\np : Submodule R M\nq : Submodule R M'\nhp : p.ClosedComplemented\nhq : q.ClosedComplemented\n⊢ (p.prod q).ClosedComplemented",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L59"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:14:52+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "e639724d572ac7132bbd070cea59560b8e90cf9834c65e2652d4a861f121346f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 196,
      "start_column": 8,
      "end_line": 196,
      "end_column": 13,
      "file": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_7\ninst✝⁹ : RCLike 𝕜\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\ninst✝⁶ : NormedAddCommGroup F\ninst✝⁵ : NormedSpace 𝕜 F\ninst✝⁴ : NormedAddCommGroup G\ninst✝³ : NormedSpace 𝕜 G\ninst✝² : CompleteSpace E\ninst✝¹ : CompleteSpace F\ninst✝ : CompleteSpace G\nf : E →L[𝕜] F\ng : F →L[𝕜] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (⇑g ∘ ⇑f))\nF' : Submodule 𝕜 F := hf.complement\nthis✝ : IsClosed ↑(Submodule.map g F')\nthis : IsClosed ↑hg.complement\nu : ℕ → G\nu₀ : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u₀)\nhu : ∀ (n : ℕ), ∃ y ∈ Submodule.map g F', ∃ z ∈ hg.complement, y + z = u n\nx : ℕ → ↥(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => ⟨y, ⋯⟩) (Classical.choose ⋯) ⋯) (Classical.choose ⋯) ⋯\ny : ℕ → ↥hg.complement := fun n => (fun y x => (fun z x => ⟨z, ⋯⟩) (Classical.choose ⋯) ⋯) (Classical.choose ⋯) ⋯\nn : ℕ\n⊢ u n = Classical.choose ⋯ + Classical.choose ⋯",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L196"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T18:37:52+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "d735b65c20dd1c714075139151a998871c404733e306e976b3a03ca4267c1cef"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 205,
      "start_column": 6,
      "end_line": 205,
      "end_column": 11,
      "file": "Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean"
    },
    "debug_info": {
      "goal": "case refine_1\n𝕜 : Type u_7\ninst✝⁹ : RCLike 𝕜\nE : Type u_8\nF : Type u_10\nG : Type u_12\ninst✝⁸ : NormedAddCommGroup E\ninst✝⁷ : NormedSpace 𝕜 E\ninst✝⁶ : NormedAddCommGroup F\ninst✝⁵ : NormedSpace 𝕜 F\ninst✝⁴ : NormedAddCommGroup G\ninst✝³ : NormedSpace 𝕜 G\ninst✝² : CompleteSpace E\ninst✝¹ : CompleteSpace F\ninst✝ : CompleteSpace G\nf : E →L[𝕜] F\ng : F →L[𝕜] G\nhg : g.Splits\nhf : f.Splits\nh : IsClosed (range (⇑g ∘ ⇑f))\nF' : Submodule 𝕜 F := hf.complement\nthis✝¹ : IsClosed ↑(Submodule.map g F')\nthis✝ : IsClosed ↑hg.complement\nu : ℕ → G\nu₀ : G\nhconv : Filter.Tendsto u Filter.atTop (nhds u₀)\nhu : ∀ (n : ℕ), ∃ y ∈ Submodule.map g F', ∃ z ∈ hg.complement, y + z = u n\nx : ℕ → ↥(Submodule.map g F') :=\n  fun n => (fun y x => (fun z x_1 => ⟨y, ⋯⟩) (Classical.choose ⋯) ⋯) (Classical.choose ⋯) ⋯\ny : ℕ → ↥hg.complement := fun n => (fun y x => (fun z x => ⟨z, ⋯⟩) (Classical.choose ⋯) ⋯) (Classical.choose ⋯) ⋯\nthis : ∀ (n : ℕ), u n = ↑(x n) + ↑(y n)\n⊢ u₀ ∈ ↑(Submodule.map g F' + hg.complement)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Analysis/NormedSpace/HahnBanach/Splits.lean#L205"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-21T15:28:47+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "38ae2d124a4315e9deab759f0d74fe148daa609f0b64db8dabafc861b76208bb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 394,
      "start_column": 4,
      "end_line": 394,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "case hinv\n𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\nH : Type u_4\ninst✝⁵ : TopologicalSpace H\nG : Type u_5\ninst✝⁴ : TopologicalSpace G\nI : ModelWithCorners 𝕜 E H\nJ : ModelWithCorners 𝕜 F G\nM : Type u_6\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nN : Type u_7\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nn : WithTop ℕ∞\nf : M → N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 ≤ n\nhf'' : MDifferentiableAt I J f x\nhg'' : MDifferentiableAt J I (↑hf.localInverse.toPartialEquiv) (f x)\n⊢ mfderiv I I (↑hf.localInverse.toPartialEquiv ∘ f) x =\n    (mfderiv J I (↑hf.localInverse.toPartialEquiv) (f x)).comp (mfderiv I J f x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L394"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "820166d2e0046078d1eb65a0d795262dca9514c98d58fa5a752dd6dd76ae990c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 404,
      "start_column": 4,
      "end_line": 404,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "case hinv\n𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\nH : Type u_4\ninst✝⁵ : TopologicalSpace H\nG : Type u_5\ninst✝⁴ : TopologicalSpace G\nI : ModelWithCorners 𝕜 E H\nJ : ModelWithCorners 𝕜 F G\nM : Type u_6\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nN : Type u_7\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nn : WithTop ℕ∞\nf : M → N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 ≤ n\nhf'' : MDifferentiableAt I J f x\nhf''' : MDifferentiableAt I J f (↑hf.localInverse.toPartialEquiv (f x))\nhg'' : MDifferentiableAt J I (↑hf.localInverse.toPartialEquiv) (f x)\n⊢ mfderiv J J (f ∘ ↑hf.localInverse.toPartialEquiv) (f x) =\n    (mfderiv I J f x).comp (mfderiv J I (↑hf.localInverse.toPartialEquiv) (f x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L404"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "9cc28994dd7842c314c2d585301269412459e82069343f483c92cf1e5b400155"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 399,
      "start_column": 68,
      "end_line": 399,
      "end_column": 73,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\nH : Type u_4\ninst✝⁵ : TopologicalSpace H\nG : Type u_5\ninst✝⁴ : TopologicalSpace G\nI : ModelWithCorners 𝕜 E H\nJ : ModelWithCorners 𝕜 F G\nM : Type u_6\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nN : Type u_7\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nn : WithTop ℕ∞\nf : M → N\ns : Set M\nx : M\nI' : ?m.85479\nhf : IsLocalDiffeomorphAt I J n f x\nhn : 1 ≤ n\nhf'' : MDifferentiableAt I J f x\n⊢ MDifferentiableAt I J f (↑hf.localInverse.toPartialEquiv (f x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L399"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T19:15:52+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "65fe6a2b3588cb6e7b89acf16543a28739e97eb89c31af3cd6c7e0def6519259"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-define-immersions",
      "commit": "93f7c1d0aa3d8a9ed50990ace8b079dbca48e3bc",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 90,
      "start_column": 2,
      "end_line": 90,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁸ : RCLike 𝕜\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst✝¹⁷ : NormedAddCommGroup E\ninst✝¹⁶ : NormedSpace 𝕜 E\ninst✝¹⁵ : NormedAddCommGroup E'\ninst✝¹⁴ : NormedSpace 𝕜 E'\ninst✝¹³ : NormedAddCommGroup F\ninst✝¹² : NormedSpace 𝕜 F\nH : Type u_7\ninst✝¹¹ : TopologicalSpace H\nH' : Type u_8\ninst✝¹⁰ : TopologicalSpace H'\nG : Type u_9\ninst✝⁹ : TopologicalSpace G\nG' : Type u_10\ninst✝⁸ : TopologicalSpace G'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 F G\nJ' : ModelWithCorners 𝕜 F G'\nM : Type u_11\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nM' : Type u_12\ninst✝⁵ : TopologicalSpace M'\ninst✝⁴ : ChartedSpace H' M'\nN : Type u_13\ninst✝³ : TopologicalSpace N\ninst✝² : ChartedSpace G N\nN' : Type u_14\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\nf : M → M'\nx : M\ny : N\nhf : (mfderiv I I' f x).Splits\ng : N → N'\nhg : (mfderiv J J' g y).Splits\n⊢ (mfderiv (I.prod J) (I'.prod J') (Prod.map f g) (x, y)).Splits",
      "url": "https://github.com/leanprover-community/mathlib4/blob/93f7c1d0aa3d8a9ed50990ace8b079dbca48e3bc/Mathlib/Geometry/Manifold/MSplits.lean#L90"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T21:07:14+02:00",
      "inclusion_date": "2025-04-10T23:05:43.788477+00:00"
    },
    "id": "3d02382d075469e2476d9ae7ff5dc6fd167506688d81e930e109c48063257328"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 100,
      "start_column": 2,
      "end_line": 100,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝⁶ : RCLike 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nH : Type u_7\ninst✝³ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_11\ninst✝² : TopologicalSpace M\ninst✝¹ : ChartedSpace H M\nn : WithTop ℕ∞\ninst✝ : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e ∈ IsManifold.maximalAtlas I n M\nhx : x ∈ (chartAt H x).source\n⊢ ↑(extend_mfderiv_toContinousLinearEquiv he hx) = mfderiv I (modelWithCornersSelf 𝕜 E) (↑(e.extend I)) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L100"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T11:03:10+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "920c396e25529401e975bb1ba0d8f058d53fbb6611e0992ee0d8925232385ea6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 110,
      "start_column": 79,
      "end_line": 110,
      "end_column": 84,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝⁶ : RCLike 𝕜\nE : Type u_2\ninst✝⁵ : NormedAddCommGroup E\ninst✝⁴ : NormedSpace 𝕜 E\nH : Type u_7\ninst✝³ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_11\ninst✝² : TopologicalSpace M\ninst✝¹ : ChartedSpace H M\nn : WithTop ℕ∞\ninst✝ : IsManifold I 1 M\ne : PartialHomeomorph M H\nx : M\nhe : e ∈ IsManifold.maximalAtlas I n M\nhx : x ∈ (chartAt H x).source\n⊢ ↑(extend_symm_mfderiv_toContinousLinearEquiv he hx) =\n    mfderiv (modelWithCornersSelf 𝕜 E) I (↑(e.extend I).symm) (↑(e.extend I) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L110"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T11:03:10+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "ce98dcd65000cf10fd8c9cb3514aff43846ae5338d85e23858bc661666a55293"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 193,
      "start_column": 4,
      "end_line": 193,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁸ : RCLike 𝕜\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst✝¹⁷ : NormedAddCommGroup E\ninst✝¹⁶ : NormedSpace 𝕜 E\ninst✝¹⁵ : NormedAddCommGroup E'\ninst✝¹⁴ : NormedSpace 𝕜 E'\ninst✝¹³ : NormedAddCommGroup F\ninst✝¹² : NormedSpace 𝕜 F\nH : Type u_7\ninst✝¹¹ : TopologicalSpace H\nH' : Type u_8\ninst✝¹⁰ : TopologicalSpace H'\nG : Type u_9\ninst✝⁹ : TopologicalSpace G\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 F G\nM : Type u_11\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nM' : Type u_12\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nN : Type u_13\ninst✝⁴ : TopologicalSpace N\ninst✝³ : ChartedSpace G N\nn : WithTop ℕ∞\nf : M → M'\nx : M\ninst✝² : CompleteSpace E\ninst✝¹ : CompleteSpace F\ninst✝ : CompleteSpace E'\ng : M' → N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 ≤ n\nh : MSplitsAt I J (g ∘ f) x\nhg' : IsLocalDiffeomorphAt J I' n (↑hg.localInverse.toPartialEquiv) (g (f x))\nthis : ↑hg.localInverse.toPartialEquiv ∘ g =ᶠ[nhds (f x)] id\n⊢ ContinuousAt (↑hg.localInverse.toPartialEquiv) ((g ∘ f) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L193"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:02:21+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "0407ffbd75c2ac985d142451d950cc971056408eb5a275bb94ec89760cc718f0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 197,
      "start_column": 4,
      "end_line": 197,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/MSplits.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁸ : RCLike 𝕜\nE : Type u_2\nE' : Type u_3\nF : Type u_4\ninst✝¹⁷ : NormedAddCommGroup E\ninst✝¹⁶ : NormedSpace 𝕜 E\ninst✝¹⁵ : NormedAddCommGroup E'\ninst✝¹⁴ : NormedSpace 𝕜 E'\ninst✝¹³ : NormedAddCommGroup F\ninst✝¹² : NormedSpace 𝕜 F\nH : Type u_7\ninst✝¹¹ : TopologicalSpace H\nH' : Type u_8\ninst✝¹⁰ : TopologicalSpace H'\nG : Type u_9\ninst✝⁹ : TopologicalSpace G\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 F G\nM : Type u_11\ninst✝⁸ : TopologicalSpace M\ninst✝⁷ : ChartedSpace H M\nM' : Type u_12\ninst✝⁶ : TopologicalSpace M'\ninst✝⁵ : ChartedSpace H' M'\nN : Type u_13\ninst✝⁴ : TopologicalSpace N\ninst✝³ : ChartedSpace G N\nn : WithTop ℕ∞\nf : M → M'\nx : M\ninst✝² : CompleteSpace E\ninst✝¹ : CompleteSpace F\ninst✝ : CompleteSpace E'\ng : M' → N\nhg : IsLocalDiffeomorphAt I' J n g (f x)\nhn : 1 ≤ n\nh : MSplitsAt I J (g ∘ f) x\nhg' : IsLocalDiffeomorphAt J I' n (↑hg.localInverse.toPartialEquiv) (g (f x))\nthis : ↑hg.localInverse.toPartialEquiv ∘ g =ᶠ[nhds (f x)] id\naux : ContinuousAt (↑hg.localInverse.toPartialEquiv ∘ g ∘ f) x\n⊢ ContinuousAt f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/MSplits.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:02:21+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "9b35cd17037a51e8bbfb1ca1034a7abdf9a2dea29bad43022421ac48fd7fd960"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 120,
      "start_column": 6,
      "end_line": 120,
      "end_column": 11,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹² : RCLike 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝⁵ : TopologicalSpace H\nH' : Type u_7\ninst✝⁴ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nM' : Type u_11\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf g : M → M'\nx : M\nh : IsImmersionAt F I I' n f x\nh' : f =ᶠ[𝓝 x] g\ns : Set M\nhxs : s ∈ 𝓝 x\nhfg : EqOn f g s\n⊢ EqOn (↑(h.codChart.extend I') ∘ g ∘ ↑(h.domChart.extend I).symm)\n    (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm) (h.domChart.extend I).target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L120"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T17:10:59+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "c3629c50b43e4172f0a2bcfed7846ad830df3b6996af2d32c5b2853ed48ee59b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 128,
      "start_column": 2,
      "end_line": 128,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝²⁰ : RCLike 𝕜\nE : Type u_2\ninst✝¹⁹ : NormedAddCommGroup E\ninst✝¹⁸ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁷ : NormedAddCommGroup E'\ninst✝¹⁶ : NormedSpace 𝕜 E'\nF : Type u_4\nF' : Type u_5\ninst✝¹⁵ : NormedAddCommGroup F\ninst✝¹⁴ : NormedSpace 𝕜 F\ninst✝¹³ : NormedAddCommGroup F'\ninst✝¹² : NormedSpace 𝕜 F'\nH : Type u_6\ninst✝¹¹ : TopologicalSpace H\nH' : Type u_7\ninst✝¹⁰ : TopologicalSpace H'\nG : Type u_8\ninst✝⁹ : TopologicalSpace G\nG' : Type u_9\ninst✝⁸ : TopologicalSpace G'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 F G\nJ' : ModelWithCorners 𝕜 F G'\nM : Type u_10\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nM' : Type u_11\ninst✝⁵ : TopologicalSpace M'\ninst✝⁴ : ChartedSpace H' M'\nN : Type u_12\ninst✝³ : TopologicalSpace N\ninst✝² : ChartedSpace G N\nN' : Type u_13\ninst✝¹ : TopologicalSpace N'\ninst✝ : ChartedSpace G' N'\nn : WithTop ℕ∞\nx : M\nf : M → N\ng : M' → N'\nx' : M'\nh : IsImmersionAt F I J n f x\nh' : IsImmersionAt F' I' J' n g x'\n⊢ IsImmersionAt (F × F') (I.prod I') (J.prod J') n (Prod.map f g) (x, x')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L128"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "e19a8772ed025db77e293f5302e878760e29646c54d24169b5fb21b4a3acd889"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 133,
      "start_column": 2,
      "end_line": 133,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹² : RCLike 𝕜\nE : Type u_2\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝⁵ : TopologicalSpace H\nH' : Type u_7\ninst✝⁴ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nM' : Type u_11\ninst✝¹ : TopologicalSpace M'\ninst✝ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\nx : M\nh : IsImmersionAt F I I' n f x\n⊢ ContinuousWithinAt f h.domChart.source x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L133"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-21T23:44:53+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "e68f36d16a05fea1f422485d34ee1ff5e700279aa311b6f3f025268fe60a1cf7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 153,
      "start_column": 6,
      "end_line": 153,
      "end_column": 11,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁴ : RCLike 𝕜\nE : Type u_2\ninst✝¹³ : NormedAddCommGroup E\ninst✝¹² : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹¹ : NormedAddCommGroup E'\ninst✝¹⁰ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝⁷ : TopologicalSpace H\nH' : Type u_7\ninst✝⁶ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nM' : Type u_11\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\nx : M\ninst✝¹ : IsManifold I n M\ninst✝ : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm) (⇑h.equiv ∘ fun x => (x, 0))\n    (h.domChart.extend I).target\n⊢ ContDiffWithinAt 𝕜 n (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (↑(h.domChart.extend I) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L153"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "5980547977ad012fa8402523f3bdf9fd4eb4c2753055687fd2736bad25a3a8fe"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 160,
      "start_column": 4,
      "end_line": 160,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case H\n𝕜 : Type u_1\ninst✝¹⁴ : RCLike 𝕜\nE : Type u_2\ninst✝¹³ : NormedAddCommGroup E\ninst✝¹² : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹¹ : NormedAddCommGroup E'\ninst✝¹⁰ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝⁷ : TopologicalSpace H\nH' : Type u_7\ninst✝⁶ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝⁵ : TopologicalSpace M\ninst✝⁴ : ChartedSpace H M\nM' : Type u_11\ninst✝³ : TopologicalSpace M'\ninst✝² : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\nx : M\ninst✝¹ : IsManifold I n M\ninst✝ : IsManifold I' n M'\nh : IsImmersionAt F I I' n f x\naux :\n  EqOn (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm) (⇑h.equiv ∘ fun x => (x, 0))\n    (h.domChart.extend I).target\nthis :\n  ContDiffWithinAt 𝕜 n (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm) (h.domChart.extend I).target\n    (↑(h.domChart.extend I) x)\n⊢ ↑h.domChart.symm ∘ ↑I.symm ⁻¹' h.domChart.source ⊆ ↑I.symm ⁻¹' h.domChart.target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T18:30:38+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "2418adeebbac7dac8b6de1787deb302ba406bd23d70cc98e675ee885204a7bd1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 182,
      "start_column": 8,
      "end_line": 182,
      "end_column": 13,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁹ : RCLike 𝕜\nE : Type u_2\ninst✝¹⁸ : NormedAddCommGroup E\ninst✝¹⁷ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁶ : NormedAddCommGroup E'\ninst✝¹⁵ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝¹² : TopologicalSpace H\nH' : Type u_7\ninst✝¹¹ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝¹⁰ : TopologicalSpace M\ninst✝⁹ : ChartedSpace H M\nM' : Type u_11\ninst✝⁸ : TopologicalSpace M'\ninst✝⁷ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\ninst✝⁶ : IsManifold I n M\ninst✝⁵ : IsManifold I' n M'\ninst✝⁴ : CompleteSpace E'\ninst✝³ : CompleteSpace E\ninst✝² : CompleteSpace F\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E →L[𝕜] E' := (↑h.equiv).comp ((ContinuousLinearMap.id 𝕜 E).prod 0)\n⊢ range ⇑((ContinuousLinearMap.id 𝕜 E).prod 0) = univ.prod {0}",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L182"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:13:02+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "aa13324e9d203061510224d0d1248488631baf9e5552e6bd91c67b6537bb819a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 206,
      "start_column": 20,
      "end_line": 206,
      "end_column": 25,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case left\n𝕜 : Type u_1\ninst✝¹⁹ : RCLike 𝕜\nE : Type u_2\ninst✝¹⁸ : NormedAddCommGroup E\ninst✝¹⁷ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁶ : NormedAddCommGroup E'\ninst✝¹⁵ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝¹² : TopologicalSpace H\nH' : Type u_7\ninst✝¹¹ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝¹⁰ : TopologicalSpace M\ninst✝⁹ : ChartedSpace H M\nM' : Type u_11\ninst✝⁸ : TopologicalSpace M'\ninst✝⁷ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\ninst✝⁶ : IsManifold I n M\ninst✝⁵ : IsManifold I' n M'\ninst✝⁴ : CompleteSpace E'\ninst✝³ : CompleteSpace E\ninst✝² : CompleteSpace F\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E →L[𝕜] E' := (↑h.equiv).comp ((ContinuousLinearMap.id 𝕜 E).prod 0)\nthis✝ : rhs.Splits\nthis : MSplitsAt 𝓘(𝕜, E) 𝓘(𝕜, E') (⇑rhs) (↑I (↑h.domChart x))\n⊢ range ↑I ∈ 𝓝 (↑I (↑h.domChart x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L206"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T00:32:59+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "565d8556848cfff07cc620e6b647fcb909b2da0b3df1e676e4b66f4dc6f3eaf2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 206,
      "start_column": 20,
      "end_line": 206,
      "end_column": 25,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case right\n𝕜 : Type u_1\ninst✝¹⁹ : RCLike 𝕜\nE : Type u_2\ninst✝¹⁸ : NormedAddCommGroup E\ninst✝¹⁷ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁶ : NormedAddCommGroup E'\ninst✝¹⁵ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝¹² : TopologicalSpace H\nH' : Type u_7\ninst✝¹¹ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝¹⁰ : TopologicalSpace M\ninst✝⁹ : ChartedSpace H M\nM' : Type u_11\ninst✝⁸ : TopologicalSpace M'\ninst✝⁷ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\ninst✝⁶ : IsManifold I n M\ninst✝⁵ : IsManifold I' n M'\ninst✝⁴ : CompleteSpace E'\ninst✝³ : CompleteSpace E\ninst✝² : CompleteSpace F\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E →L[𝕜] E' := (↑h.equiv).comp ((ContinuousLinearMap.id 𝕜 E).prod 0)\nthis✝ : rhs.Splits\nthis : MSplitsAt 𝓘(𝕜, E) 𝓘(𝕜, E') (⇑rhs) (↑I (↑h.domChart x))\n⊢ ↑I.symm ⁻¹' h.domChart.target ∈ 𝓝 (↑I (↑h.domChart x))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L206"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T00:32:59+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "fa8d80915b35517722c0f4a5c9bd4ddb3472dcfd6ba4afac31d0e28b7b70ab83"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 214,
      "start_column": 4,
      "end_line": 214,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁹ : RCLike 𝕜\nE : Type u_2\ninst✝¹⁸ : NormedAddCommGroup E\ninst✝¹⁷ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁶ : NormedAddCommGroup E'\ninst✝¹⁵ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝¹² : TopologicalSpace H\nH' : Type u_7\ninst✝¹¹ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝¹⁰ : TopologicalSpace M\ninst✝⁹ : ChartedSpace H M\nM' : Type u_11\ninst✝⁸ : TopologicalSpace M'\ninst✝⁷ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\ninst✝⁶ : IsManifold I n M\ninst✝⁵ : IsManifold I' n M'\ninst✝⁴ : CompleteSpace E'\ninst✝³ : CompleteSpace E\ninst✝² : CompleteSpace F\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E →L[𝕜] E' := (↑h.equiv).comp ((ContinuousLinearMap.id 𝕜 E).prod 0)\nthis✝² : rhs.Splits\nthis✝¹ : MSplitsAt 𝓘(𝕜, E) 𝓘(𝕜, E') (⇑rhs) (↑I (↑h.domChart x))\nthis✝ :\n  MSplitsAt 𝓘(𝕜, E) 𝓘(𝕜, E') (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm) (↑(h.domChart.extend I) x)\nthis : MSplitsAt I 𝓘(𝕜, E') (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm ∘ ↑(h.domChart.extend I)) x\n⊢ ↑(h.codChart.extend I') ∘ f =ᶠ[𝓝 x] ↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm ∘ ↑(h.domChart.extend I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:20:40+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "ad926bf8bbc060bab39704ac7e2540a250d9fd38368b312620b1a0cf5e12341b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁹ : RCLike 𝕜\nE : Type u_2\ninst✝¹⁸ : NormedAddCommGroup E\ninst✝¹⁷ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁶ : NormedAddCommGroup E'\ninst✝¹⁵ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝¹² : TopologicalSpace H\nH' : Type u_7\ninst✝¹¹ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝¹⁰ : TopologicalSpace M\ninst✝⁹ : ChartedSpace H M\nM' : Type u_11\ninst✝⁸ : TopologicalSpace M'\ninst✝⁷ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\ninst✝⁶ : IsManifold I n M\ninst✝⁵ : IsManifold I' n M'\ninst✝⁴ : CompleteSpace E'\ninst✝³ : CompleteSpace E\ninst✝² : CompleteSpace F\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nh : IsImmersionAt F I I' n f x\nrhs : E →L[𝕜] E' := (↑h.equiv).comp ((ContinuousLinearMap.id 𝕜 E).prod 0)\nthis✝⁴ : rhs.Splits\nthis✝³ : MSplitsAt 𝓘(𝕜, E) 𝓘(𝕜, E') (⇑rhs) (↑I (↑h.domChart x))\nthis✝² :\n  MSplitsAt 𝓘(𝕜, E) 𝓘(𝕜, E') (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm) (↑(h.domChart.extend I) x)\nthis✝¹ : MSplitsAt I 𝓘(𝕜, E') (↑(h.codChart.extend I') ∘ f ∘ ↑(h.domChart.extend I).symm ∘ ↑(h.domChart.extend I)) x\nthis✝ : MSplitsAt I 𝓘(𝕜, E') (↑(h.codChart.extend I') ∘ f) x\nthis : MSplitsAt I I' (↑(h.codChart.extend I').symm ∘ ↑(h.codChart.extend I') ∘ f) x\n⊢ f =ᶠ[𝓝 x] ↑(h.codChart.extend I').symm ∘ ↑(h.codChart.extend I') ∘ f",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-22T10:20:40+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "808cb01a9c51f079b909ded22fa8c794c0ac64adf4183f50cbb1f945148eb46b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 226,
      "start_column": 2,
      "end_line": 226,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁹ : RCLike 𝕜\nE : Type u_2\ninst✝¹⁸ : NormedAddCommGroup E\ninst✝¹⁷ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁶ : NormedAddCommGroup E'\ninst✝¹⁵ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝¹⁴ : NormedAddCommGroup F\ninst✝¹³ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝¹² : TopologicalSpace H\nH' : Type u_7\ninst✝¹¹ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝¹⁰ : TopologicalSpace M\ninst✝⁹ : ChartedSpace H M\nM' : Type u_11\ninst✝⁸ : TopologicalSpace M'\ninst✝⁷ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\ninst✝⁶ : IsManifold I n M\ninst✝⁵ : IsManifold I' n M'\ninst✝⁴ : CompleteSpace E'\ninst✝³ : CompleteSpace E\ninst✝² : CompleteSpace F\ninst✝¹ : IsManifold I 1 M\ninst✝ : IsManifold I' 1 M'\nx : M\nh : MSplitsAt I I' f x\n⊢ IsImmersionAt F I I' n f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L226"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-17T22:40:42+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "fd9a62b160cf32ccc75acaf97669629f77d88850fd2968f001084e2fa9b80770"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 288,
      "start_column": 2,
      "end_line": 288,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "case h\n𝕜 : Type u_1\ninst✝¹³ : RCLike 𝕜\nE : Type u_2\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝¹⁰ : NormedAddCommGroup E'\ninst✝⁹ : NormedSpace 𝕜 E'\nF : Type u_4\ninst✝⁸ : NormedAddCommGroup F\ninst✝⁷ : NormedSpace 𝕜 F\nH : Type u_6\ninst✝⁶ : TopologicalSpace H\nH' : Type u_7\ninst✝⁵ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_10\ninst✝⁴ : TopologicalSpace M\ninst✝³ : ChartedSpace H M\nM' : Type u_11\ninst✝² : TopologicalSpace M'\ninst✝¹ : ChartedSpace H' M'\nn : WithTop ℕ∞\nf : M → M'\ninst✝ : Nonempty M\nh : IsImmersion F I I' n f\ninhabited_h : Inhabited M\n⊢ ∃ domCharts codCharts,\n    ∀ (x : M),\n      x ∈ (domCharts x).source ∧\n        ∀ (x : M),\n          f x ∈ (codCharts x).source ∧\n            ∀ (x : M),\n              domCharts x ∈ IsManifold.maximalAtlas I n M ∧\n                ∀ (x : M),\n                  codCharts x ∈ IsManifold.maximalAtlas I' n M' ∧\n                    ∀ (x : M),\n                      EqOn (↑((codCharts x).extend I') ∘ f ∘ ↑((domCharts x).extend I).symm)\n                        (⇑⋯.equiv ∘ fun x => (x, 0)) ((domCharts x).extend I).target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L288"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-18T16:47:11+01:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "9096e53e16083fb8af471619797542f8b9af637e71e9b1c32c104765832e3432"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 324,
      "start_column": 29,
      "end_line": 324,
      "end_column": 34,
      "file": "Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝²⁶ : RCLike 𝕜\nE : Type u_2\ninst✝²⁵ : NormedAddCommGroup E\ninst✝²⁴ : NormedSpace 𝕜 E\nE' : Type u_3\ninst✝²³ : NormedAddCommGroup E'\ninst✝²² : NormedSpace 𝕜 E'\nF : Type u_4\nF' : Type u_5\ninst✝²¹ : NormedAddCommGroup F\ninst✝²⁰ : NormedSpace 𝕜 F\ninst✝¹⁹ : NormedAddCommGroup F'\ninst✝¹⁸ : NormedSpace 𝕜 F'\nH : Type u_6\ninst✝¹⁷ : TopologicalSpace H\nH' : Type u_7\ninst✝¹⁶ : TopologicalSpace H'\nG : Type u_8\ninst✝¹⁵ : TopologicalSpace G\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 F G\nM : Type u_10\ninst✝¹⁴ : TopologicalSpace M\ninst✝¹³ : ChartedSpace H M\nM' : Type u_11\ninst✝¹² : TopologicalSpace M'\ninst✝¹¹ : ChartedSpace H' M'\nN : Type u_12\ninst✝¹⁰ : TopologicalSpace N\ninst✝⁹ : ChartedSpace G N\nn : WithTop ℕ∞\nf : M → M'\ninst✝⁸ : IsManifold I n M\ninst✝⁷ : IsManifold I' n M'\ninst✝⁶ : CompleteSpace E\ninst✝⁵ : CompleteSpace E'\ninst✝⁴ : CompleteSpace F\ninst✝³ : CompleteSpace F'\ninst✝² : IsManifold I 1 M\ninst✝¹ : IsManifold I' 1 M'\ninst✝ : IsManifold J n N\ng : M' → N\nhg : IsImmersion F' I' J n g\nhf : IsImmersion F I I' n f\n⊢ IsManifold J 1 N",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/IsImmersionEmbedding.lean#L324"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T20:15:03+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "c006cbb45a0bcb9dddf4f6c1387a9f8c54be06e6ecd5a4c3431bf97d43cf67df"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-hidden-openClassical",
      "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 258,
      "start_column": 80,
      "end_line": 258,
      "end_column": 85,
      "file": "MathlibTest/LintStyle.lean"
    },
    "debug_info": {
      "goal": "this : ℕ → True\n⊢ Set.univ = ⋃ i, ⋃ j, {0, j}",
      "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L258"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2024-11-27T12:13:29+00:00",
      "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
    },
    "id": "f351a6e824f8f3ee292b3381888a5cab3079e131d00897202025514e936b6992"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-hidden-openClassical",
      "commit": "0da55a65cfc84e4bb157cee973b9670e12d3b58f",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 259,
      "start_column": 53,
      "end_line": 259,
      "end_column": 58,
      "file": "MathlibTest/LintStyle.lean"
    },
    "debug_info": {
      "goal": "this✝ : ℕ → True\nthis : Set.univ = ⋃ i, ⋃ j, {0, j}\n⊢ ∃ m, ⋃ i, Set.univ = ∅",
      "url": "https://github.com/leanprover-community/mathlib4/blob/0da55a65cfc84e4bb157cee973b9670e12d3b58f/MathlibTest/LintStyle.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2024-11-27T12:13:29+00:00",
      "inclusion_date": "2025-04-12T23:09:55.462374+00:00"
    },
    "id": "aaf32d27c1a0b931e36df890748a6031a30000c084331b157cd3e31f53d6d539"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 319,
      "start_column": 22,
      "end_line": 319,
      "end_column": 27,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n$a₁✝ «$a₂» «$a₁» : «$A»\n⊢ «$a₁» + Nat.rawCast 0 = «$a₁»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L319"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "88b35be1c8a9bc6c964f27cc7f922e809e723148541872db621bae530e0646e8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 322,
      "start_column": 22,
      "end_line": 322,
      "end_column": 27,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a₁» $a₂✝ «$a₂» : «$A»\n⊢ Nat.rawCast 0 + «$a₂» = «$a₂»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L322"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "eb9325db7d4b4597f0b1166d83d7e5fbc37aa126bd5f98bbb63f47bdd29cf964"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 331,
      "start_column": 38,
      "end_line": 331,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a₁» «$a₂» : «$A»\n$v✝ : Level\n$R✝ : Type v✝\n$sR✝ : CommSemiring $R✝\n$r✝ : $R✝\n$a✝ $b✝ : «$A»\n«$sAlg» : Algebra $R✝ «$A»\n$expr✝ : «$A»\n«$pt'» : $b✝ + 1 = $expr✝\n⊢ $r✝ • $a✝ + $b✝ + 1 = $r✝ • $a✝ + $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L331"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "21ced7a698401c53c9861c41dc979685ad7927114503f9c805b152b4f48b6045"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 334,
      "start_column": 38,
      "end_line": 334,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a₁» «$a₂» : «$A»\n$v✝ : Level\n$R✝ : Type v✝\n$sR✝ : CommSemiring $R✝\n$r✝ : $R✝\n$a✝ $b✝ : «$A»\n«$sAlg» : Algebra $R✝ «$A»\n$expr✝ : «$A»\n«$pt'» : $b✝ + 1 = $expr✝\n⊢ 1 + ($r✝ • $a✝ + $b✝) = $r✝ • $a✝ + $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L334"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "17f3befda0ab50e10b0c8bb77a822491d988d08cb6498ceebc3c2b56c8ab6ac2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 343,
      "start_column": 41,
      "end_line": 343,
      "end_column": 46,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n$a₁✝ $a₂✝ : «$A»\n$v✝¹ : Level\n«$R₁» : Type v✝\n«$sR₁» : CommSemiring «$R₁»\n«$r₁» : «$R₁»\n«$a₁» «$t₁» : «$A»\n«$sRA₁» : Algebra «$R₁» «$A»\n$v✝ : Level\n«$R₂» : Type v✝\n«$sR₂» : CommSemiring «$R₂»\n«$r₂» : «$R₂»\n«$a₂» «$t₂» : «$A»\n«$sRA₂» : Algebra «$R₂» «$A»\n$expr✝ : «$A»\n«$pt» : «$t₁» + («$r₂» • «$a₂» + «$t₂») = $expr✝\n⊢ «$r₁» • «$a₁» + «$t₁» + («$r₂» • «$a₂» + «$t₂») = «$r₁» • «$a₁» + $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L343"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e95546baf981dcb75849351adfcf6f79821665c157737f4473060816812c1db2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 347,
      "start_column": 41,
      "end_line": 347,
      "end_column": 46,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n$a₁✝ $a₂✝ : «$A»\n$v✝¹ : Level\n«$R₁» : Type v✝\n«$sR₁» : CommSemiring «$R₁»\n«$r₁» : «$R₁»\n«$a₁» «$t₁» : «$A»\n«$sRA₁» : Algebra «$R₁» «$A»\n$v✝ : Level\n«$R₂» : Type v✝\n«$sR₂» : CommSemiring «$R₂»\n«$r₂» : «$R₂»\n«$a₂» «$t₂» : «$A»\n«$sRA₂» : Algebra «$R₂» «$A»\n$expr✝ : «$A»\n«$pt» : «$t₂» + («$r₁» • «$a₁» + «$t₁») = $expr✝\n⊢ «$r₁» • «$a₁» + «$t₁» + («$r₂» • «$a₂» + «$t₂») = «$r₂» • «$a₂» + $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L347"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "304482c04da44010c20c8cb18abdd332adf8a5a1e3d0aff8123b14420f21a555"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 352,
      "start_column": 38,
      "end_line": 352,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "$u✝ : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n$a₁✝ $a₂✝ : «$A»\n$v✝¹ : Level\n«$R₁» : Type v✝\n«$sR₁» : CommSemiring «$R₁»\n«$r₁» : «$R₁»\n«$a₁» «$t₁» : «$A»\n«$sRA₁» : Algebra «$R₁» «$A»\n$v✝ : Level\n«$R₂» : Type v✝\n«$sR₂» : CommSemiring «$R₂»\n«$r₂» : «$R₂»\n«$a₂» «$t₂» : «$A»\n«$sRA₂» : Algebra «$R₂» «$A»\n$expr✝ : «$A»\n«$pt» : «$t₁» + «$t₂» = $expr✝\n«$u» : Level\n«$R» : Type u\n«$sR» : CommSemiring «$R»\n«$sRA» : Algebra «$R» «$A»\n«$r» : «$R»\n«$a» : «$A»\n«$par» : «$r₁» • «$a₁» + «$r₂» • «$a₂» = «$r» • «$a»\n⊢ «$r₁» • «$a₁» + «$t₁» + («$r₂» • «$a₂» + «$t₂») = «$r» • «$a» + $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L352"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-10T16:14:36+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f101b598c58371579d75e4dc168fa778d80b824c40f25c57b6bfc08dd2b2cc8b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 362,
      "start_column": 24,
      "end_line": 362,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n$A✝ : Type u\n$sA✝ : CommSemiring $A✝\n«$a₁» : $A✝\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a₂» : «$A»\n⊢ Nat.rawCast 0 * «$a₂» = Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L362"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "92dbde403e0e2d156407443088723fcc42044b211bac83b28afd18e0a95f3b6b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 365,
      "start_column": 32,
      "end_line": 365,
      "end_column": 37,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n$A✝ : Type u\n$sA✝ : CommSemiring $A✝\n«$a₁» : $A✝\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a₂» : «$A»\n⊢ 1 * «$a₂» = 1 • «$a₂» + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L365"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e30559227cd5b7eebc23360e2b21ac4b561459d7f7b98949f5fcdc617be2b148"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 370,
      "start_column": 38,
      "end_line": 370,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n$A✝ : Type u\n$sA✝ : CommSemiring $A✝\n«$a₁» : $A✝\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n$v✝ : Level\n«$R» : Type v✝\n«$sR» : CommSemiring «$R»\n«$r» : «$R»\n«$a» «$t» : «$A»\n«$sRA» : Algebra «$R» «$A»\n«$a₂» «$a'» : «$A»\n«$pa'» : «$a» * «$a₂» = «$a'»\n«$t'» : «$A»\n«$pt'» : «$t» * «$a₂» = «$t'»\n⊢ («$r» • «$a» + «$t») * «$a₂» = «$r» • «$a'» + «$t'»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "e70927f4f2859e45f3df5bf2ed5ebf2b3b507f496f563993c2a9996519f9bb37"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 378,
      "start_column": 24,
      "end_line": 378,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n$A✝ : Type u\n$sA✝ : CommSemiring $A✝\n«$a₂» : $A✝\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a₁» : «$A»\n⊢ «$a₁» * Nat.rawCast 0 = Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L378"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-09T00:17:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "51076a2b0119d234d94a21f2334ae42f51c7a6d32ae1e91c7636cce6194838fb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 451,
      "start_column": 37,
      "end_line": 451,
      "end_column": 42,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$v» : Level\n«$A» : Type v\n«$iA» : Semiring «$A»\n«$u₁» «$u₂» : Level\n«$R₂» : Type u₂\n«$iR₂» : CommSemiring «$R₂»\n«$iRA₂» : Algebra «$R₂» «$A»\n«$r₂» : «$R₂»\n«$a» : «$A»\n«$R₁» : Type u₂ := «$R₂»\n«$iR₁» : CommSemiring «$R₁»\n«$iRA₁» : Algebra «$R₁» «$A»\n«$r₁» : «$R₁»\n«$r₁'» : «$R₂» := «$r₁»\n«$r» : «$R₂»\n«$pr» : «$r₁'» * «$r₂» = «$r»\n⊢ «$r₁» • «$r₂» • «$a» = «$r» • «$a»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L451"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-08T17:33:25+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f52ad47f2959f73e0d6f68ba4b35c0cb5f83f9d58adc26eeb5ff41983dd03253"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 495,
      "start_column": 38,
      "end_line": 495,
      "end_column": 43,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» : Level\n«$R» : Type u\n«$A» : Type v\n«$sA» : CommSemiring «$A»\n«$sR» : CommSemiring «$R»\n«$sRA» : Algebra «$R» «$A»\n«$r» : «$R»\n$a✝ : «$A»\n$v✝ : Level\n«$S» : Type v✝\n«$sS» : CommSemiring «$S»\n«$s» : «$S»\n«$a» $b✝ : «$A»\n«$sSA» : Algebra «$S» «$A»\n«$et» : «$A»\n«$pt» : «$r» • $b✝ = «$et»\n«$u₁» : Level\n«$R₁» : Type u₁\n«$iR₁» : CommSemiring «$R₁»\n«$sR₁A» : Algebra «$R₁» «$A»\n«$r₁» : «$R₁»\n«$pr₁» : «$s» • «$r» • «$a» = «$r₁» • «$a»\n⊢ «$r» • («$s» • «$a» + $b✝) = «$r₁» • «$a» + «$et»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L495"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-03-31T18:54:54+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "8a760a1503c22d1615b738bcdfd78628353aa3f997b5e9c5c3ebc0bfaaf502cf"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 530,
      "start_column": 9,
      "end_line": 530,
      "end_column": 14,
      "file": "Mathlib/Tactic/Polynomial.lean"
    },
    "debug_info": {
      "goal": "a : ℚ\n⊢ a + a = 2 * a",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Polynomial.lean#L530"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-02-25T18:05:11+01:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "bb4e8a8b5fe4ac30d4496be459ded460c04b5cb009507b556d6a4260462c7620"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 530,
      "start_column": 9,
      "end_line": 530,
      "end_column": 14,
      "file": "Mathlib/Tactic/Polynomial.lean"
    },
    "debug_info": {
      "goal": "a : ℚ\n⊢ a * a = a ^ 2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Polynomial.lean#L530"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-02-25T18:05:11+01:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "519b40fe6363b33886691745570984819d01d9e8fa1d68f46a9da632e19bd843"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.25006 ∈ ↑ys then ?m.25035 else y\n⊢ NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
    },
    "id": "4c5cb6906595728836d3da67298bfe26022968ff57cd1e368ad752e9058524b0"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "1ede0a377753e5939309abe32082534aa76c92d2",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.25006 ∈ ↑ys then ?m.25035 else y\nhg1 : NSequence n k g1 := sorry\n⊢ ⟨g1, hg1⟩ ∈ {g | ψ n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/1ede0a377753e5939309abe32082534aa76c92d2/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-10T23:33:19.551061+00:00"
    },
    "id": "368788f8c327f5d1b524634ac8b5dd12311f38881459b2fb944f94afd96dd0a0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 68,
      "start_column": 14,
      "end_line": 68,
      "end_column": 19,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst✝¹⁵ : NormedAddCommGroup E\ninst✝¹⁴ : NormedSpace 𝕜 E\ninst✝¹³ : NormedAddCommGroup E'\ninst✝¹² : NormedSpace 𝕜 E'\ninst✝¹¹ : NormedAddCommGroup E''\ninst✝¹⁰ : NormedSpace 𝕜 E''\nF : Type u_5\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst✝⁷ : TopologicalSpace H\ninst✝⁶ : TopologicalSpace H'\ninst✝⁵ : TopologicalSpace H''\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 E'' H''\nM : Type u_9\nM' : Type u_10\ninst✝⁴ : TopologicalSpace M'\ninst✝³ : ChartedSpace H' M'\nn : WithTop ℕ∞\nG : Type u_11\ninst✝² : NormedAddCommGroup G\ninst✝¹ : NormedSpace 𝕜 G\ninst✝ : Unique G\n⊢ ∀ (x y : E × G),\n    (Equiv.prodUnique E G).toFun (x + y) = (Equiv.prodUnique E G).toFun x + (Equiv.prodUnique E G).toFun y",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L68"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T22:02:51+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "ba7962a1180548d3c6b1b39f21295df2c71c15e0647ff09c2b2f2124a8d3769f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 69,
      "start_column": 15,
      "end_line": 69,
      "end_column": 20,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst✝¹⁵ : NormedAddCommGroup E\ninst✝¹⁴ : NormedSpace 𝕜 E\ninst✝¹³ : NormedAddCommGroup E'\ninst✝¹² : NormedSpace 𝕜 E'\ninst✝¹¹ : NormedAddCommGroup E''\ninst✝¹⁰ : NormedSpace 𝕜 E''\nF : Type u_5\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst✝⁷ : TopologicalSpace H\ninst✝⁶ : TopologicalSpace H'\ninst✝⁵ : TopologicalSpace H''\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 E'' H''\nM : Type u_9\nM' : Type u_10\ninst✝⁴ : TopologicalSpace M'\ninst✝³ : ChartedSpace H' M'\nn : WithTop ℕ∞\nG : Type u_11\ninst✝² : NormedAddCommGroup G\ninst✝¹ : NormedSpace 𝕜 G\ninst✝ : Unique G\n⊢ ∀ (m : 𝕜) (x : E × G), (Equiv.prodUnique E G).toFun (m • x) = (RingHom.id 𝕜) m • (Equiv.prodUnique E G).toFun x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-10T22:02:51+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "173f5069843545787c030fbdd899c20d1030d0ad4dc2e6e3b7831f7e3637a1a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 83,
      "start_column": 4,
      "end_line": 83,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst✝¹⁵ : NormedAddCommGroup E\ninst✝¹⁴ : NormedSpace 𝕜 E\ninst✝¹³ : NormedAddCommGroup E'\ninst✝¹² : NormedSpace 𝕜 E'\ninst✝¹¹ : NormedAddCommGroup E''\ninst✝¹⁰ : NormedSpace 𝕜 E''\nF : Type u_5\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst✝⁷ : TopologicalSpace H\ninst✝⁶ : TopologicalSpace H'\ninst✝⁵ : TopologicalSpace H''\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 E'' H''\nM : Type u_9\nM' : Type u_10\ninst✝⁴ : TopologicalSpace M'\ninst✝³ : ChartedSpace H' M'\nn : WithTop ℕ∞\nG : Type u_11\ninst✝² : NormedAddCommGroup G\ninst✝¹ : NormedSpace 𝕜 G\ninst✝ : Unique G\n⊢ Continuous ⇑(Equiv.prodUnique E G).symm",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L83"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "f09d7dfb579135ab11ab68696e9b902e9e4fb39a5fd53da61b3cd8ab89a74b21"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 81,
      "end_line": 95,
      "end_column": 86,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝⁵ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁴ : NormedAddCommGroup E\ninst✝³ : NormedSpace 𝕜 E\nG : Type u_11\ninst✝² : NormedAddCommGroup G\ninst✝¹ : NormedSpace 𝕜 G\ninst✝ : Unique G\nx : E\n⊢ (prodUnique 𝕜 E).symm x = (x, sorry)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "1ea2b10ac8676611e0c87cdfa6390c7385e0d5f578263b28d28fc186f6588511"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 119,
      "start_column": 16,
      "end_line": 119,
      "end_column": 21,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst✝¹⁵ : NormedAddCommGroup E\ninst✝¹⁴ : NormedSpace 𝕜 E\ninst✝¹³ : NormedAddCommGroup E'\ninst✝¹² : NormedSpace 𝕜 E'\ninst✝¹¹ : NormedAddCommGroup E''\ninst✝¹⁰ : NormedSpace 𝕜 E''\nF : Type u_5\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst✝⁷ : TopologicalSpace H\ninst✝⁶ : TopologicalSpace H'\ninst✝⁵ : TopologicalSpace H''\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 E'' H''\nM : Type u_9\nM' : Type u_10\ninst✝⁴ : TopologicalSpace M'\ninst✝³ : ChartedSpace H' M'\nn : WithTop ℕ∞\nG : Type u_11\ninst✝² : NormedAddCommGroup G\ninst✝¹ : NormedSpace 𝕜 G\ninst✝ : Unique G\nh : SliceModel F I I'\n⊢ ↑(J.prod I') ∘ Prod.map id (SliceModel.map F I I') =\n    ⇑(let sdf := SliceModel.equiv I I';\n        sorry) ∘\n      (fun x => (x, 0)) ∘ ↑(J.prod I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L119"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "6a5133f0e83a8402fa65a0cb23bbd2f869f4fab26b37890f8d5ae9c3a659a00d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 126,
      "start_column": 16,
      "end_line": 126,
      "end_column": 21,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁶ : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\nE'' : Type u_4\ninst✝¹⁵ : NormedAddCommGroup E\ninst✝¹⁴ : NormedSpace 𝕜 E\ninst✝¹³ : NormedAddCommGroup E'\ninst✝¹² : NormedSpace 𝕜 E'\ninst✝¹¹ : NormedAddCommGroup E''\ninst✝¹⁰ : NormedSpace 𝕜 E''\nF : Type u_5\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\nH'' : Type u_8\ninst✝⁷ : TopologicalSpace H\ninst✝⁶ : TopologicalSpace H'\ninst✝⁵ : TopologicalSpace H''\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ : ModelWithCorners 𝕜 E'' H''\nM : Type u_9\nM' : Type u_10\ninst✝⁴ : TopologicalSpace M'\ninst✝³ : ChartedSpace H' M'\nn : WithTop ℕ∞\nG : Type u_11\ninst✝² : NormedAddCommGroup G\ninst✝¹ : NormedSpace 𝕜 G\ninst✝ : Unique G\nh : SliceModel F I I'\n⊢ ↑(I'.prod J) ∘ Prod.map (SliceModel.map F I I') id = ⇑sorry ∘ (fun x => (x, 0)) ∘ ↑(I.prod J)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L126"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T11:01:50+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "eb41f86ab8afe3880384c1a6fd5a01be4a3381f23e5d03297468f6b7b291a149"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 164,
      "start_column": 6,
      "end_line": 164,
      "end_column": 11,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹² : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\ninst✝¹¹ : NormedAddCommGroup E\ninst✝¹⁰ : NormedSpace 𝕜 E\ninst✝⁹ : NormedAddCommGroup E'\ninst✝⁸ : NormedSpace 𝕜 E'\nF : Type u_5\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\ninst✝⁵ : TopologicalSpace H\ninst✝⁴ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_9\nM' : Type u_10\ninst✝³ : TopologicalSpace M'\ninst✝² : TopologicalSpace M\ninst✝¹ : Nonempty H\nφ : PartialHomeomorph M' H'\nf : M → M'\ninst✝ : Nonempty M\nh : SliceModel F I I'\nhf : IsEmbedding f\nhyp : φ.source ⊆ range f\n⊢ ContinuousOn (Function.extend f id fun x => Classical.arbitrary M) (range f)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T16:41:06+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "0dac06d436277c25a07b756e98a9e44909ec08a760917518f6ef101230ba39c4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 337,
      "start_column": 4,
      "end_line": 337,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "case left\n𝕜 : Type u_1\ninst✝¹⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\ninst✝¹³ : NormedAddCommGroup E\ninst✝¹² : NormedSpace 𝕜 E\ninst✝¹¹ : NormedAddCommGroup E'\ninst✝¹⁰ : NormedSpace 𝕜 E'\nF : Type u_5\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\ninst✝⁷ : TopologicalSpace H\ninst✝⁶ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_9\nM' : Type u_10\ninst✝⁵ : TopologicalSpace M'\ninst✝⁴ : ChartedSpace H' M'\nn : WithTop ℕ∞\ninst✝³ : TopologicalSpace M\ninst✝² : IsManifold I' n M'\nh : SliceModel F I I'\ninst✝¹ : Nonempty H\ninst✝ : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\n⊢ ContDiffOn 𝕜 n\n    (↑I ∘\n      ((h.inverse ∘ ↑(chartAt H' (emb n h x')) ∘ emb n h) ∘\n          (extend (emb n h) id fun x => Classical.arbitrary M) ∘\n            ↑(chartAt H' (emb n h x)).symm ∘ SliceModel.map F I I') ∘\n        ↑I.symm)\n    (↑I.symm ⁻¹' (SliceModel.map F I I' ⁻¹' (chartAt H' (emb n h x)).target) ∩\n        ↑I.symm ⁻¹'\n          ((extend (emb n h) id fun x => Classical.arbitrary M) ∘\n              ↑(chartAt H' (emb n h x)).symm ∘ SliceModel.map F I I' ⁻¹'\n            (emb n h ⁻¹' (chartAt H' (emb n h x')).source)) ∩\n      range ↑I)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L337"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T19:38:29+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "c579f4b72707f4af460ad7abbda22e76ac31a89f741f5ff826c6563d1456d754"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-embedded-submanifolds",
      "commit": "2b3e4bc432be86334e6038bf31bffe586190c7f6",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 340,
      "start_column": 2,
      "end_line": 340,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean"
    },
    "debug_info": {
      "goal": "case right\n𝕜 : Type u_1\ninst✝¹⁴ : NontriviallyNormedField 𝕜\nE : Type u_2\nE' : Type u_3\ninst✝¹³ : NormedAddCommGroup E\ninst✝¹² : NormedSpace 𝕜 E\ninst✝¹¹ : NormedAddCommGroup E'\ninst✝¹⁰ : NormedSpace 𝕜 E'\nF : Type u_5\ninst✝⁹ : NormedAddCommGroup F\ninst✝⁸ : NormedSpace 𝕜 F\nH : Type u_6\nH' : Type u_7\ninst✝⁷ : TopologicalSpace H\ninst✝⁶ : TopologicalSpace H'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nM : Type u_9\nM' : Type u_10\ninst✝⁵ : TopologicalSpace M'\ninst✝⁴ : ChartedSpace H' M'\nn : WithTop ℕ∞\ninst✝³ : TopologicalSpace M\ninst✝² : IsManifold I' n M'\nh : SliceModel F I I'\ninst✝¹ : Nonempty H\ninst✝ : Nonempty M\ninst : IsImmersedSubmanifold F M M' n h\nx x' : M\nX : M' := emb n h x\nX' : M' := emb n h x'\n⊢ { property := fun f s => ContDiffOn 𝕜 n (↑I ∘ f ∘ ↑I.symm) (↑I.symm ⁻¹' s ∩ range ↑I), comp := ⋯, id_mem := ⋯,\n        locality := ⋯, congr := ⋯ }.property\n    (↑((inst.myChart x).symm ≫ₕ inst.myChart x').symm) ((inst.myChart x).symm ≫ₕ inst.myChart x').target",
      "url": "https://github.com/leanprover-community/mathlib4/blob/2b3e4bc432be86334e6038bf31bffe586190c7f6/Mathlib/Geometry/Manifold/EmbeddedSubmanifold.lean#L340"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-04-11T19:38:29+02:00",
      "inclusion_date": "2025-04-11T23:05:12.973334+00:00"
    },
    "id": "139bfe861986eda0e69845d32f898eab3561fc586db237733b0e182f035803d9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 30,
      "start_column": 60,
      "end_line": 30,
      "end_column": 65,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nM : Matroid α\ninst✝¹ : M.Finite\nR : Type u_2\ninst✝ : CommRing R\nx y : R\ne : α\nh : M.IsNonloop e\ns : Set α\nhs : s ∈ 𝒫(M.E \\ {e})\n⊢ summand M x y (insert e s) = summand (M ／ {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L30"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "71f9f703d175987ac21dc8a115393be772a88d9a1277b970c7830b27bbf3846e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 33,
      "start_column": 70,
      "end_line": 33,
      "end_column": 75,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nM : Matroid α\ninst✝¹ : M.Finite\nR : Type u_2\ninst✝ : CommRing R\nx y : R\ne : α\nh : M.IsLoop e\ns : Set α\nhs : s ∈ 𝒫(M.E \\ {e})\n⊢ summand M x y (insert e s) = (y - 1) * summand (M ／ {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L33"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "41324751a40fb3c4711ef762eb0172c2f64dbb5622d30b0d1c8f73e4a686ab86"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 36,
      "start_column": 49,
      "end_line": 36,
      "end_column": 54,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nM : Matroid α\ninst✝¹ : M.Finite\nR : Type u_2\ninst✝ : CommRing R\nx y : R\ne : α\nh : ¬M.IsColoop e\ns : Set α\nhs : s ∈ 𝒫(M.E \\ {e})\n⊢ summand M x y s = summand (M ＼ {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L36"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "596d86d173f26419af96e80de1885015a4554748e982fdb2f71c491862b7ec80"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "b-reinke/Tutte",
      "commit": "7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 39,
      "start_column": 59,
      "end_line": 39,
      "end_column": 64,
      "file": "Mathlib/Data/Matroid/Tutte/Basic.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nM : Matroid α\ninst✝¹ : M.Finite\nR : Type u_2\ninst✝ : CommRing R\nx y : R\ne : α\nh : M.IsColoop e\ns : Set α\nhs : s ∈ 𝒫(M.E \\ {e})\n⊢ summand M x y s = (x - 1) * summand (M ＼ {e}) x y s",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7b2f9b4cd9dbce9c5d722f28dbc2ee6d53dfc1c8/Mathlib/Data/Matroid/Tutte/Basic.lean#L39"
    },
    "metadata": {
      "blame_email_hash": "0b20d9cd07c4",
      "blame_date": "2025-04-11T16:25:04+02:00",
      "inclusion_date": "2025-04-11T23:14:10.772474+00:00"
    },
    "id": "2b7d561b710a2fb41774deb686cac812c13cf12b63d9352492101a8956477e3b"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 21,
      "end_line": 135,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.23757 ∈ ↑ys then ?m.23786 else y\n⊢ NSequence n k g1",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-26T13:51:19-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "f16d734974ce142a2d4897988e257460e0156c9b509fbcb490aa29a0d631f0c7"
  },
  {
    "repo": {
      "remote": "https://github.com/dwrensha/compfiles",
      "branch": "main",
      "commit": "fa63371f54d5353ab86e7e2b97473832c417e5ba",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 136,
      "start_column": 21,
      "end_line": 136,
      "end_column": 26,
      "file": "Compfiles/Imo2008P5.lean"
    },
    "debug_info": {
      "goal": "n k : ℕ\nhn : 0 < n\nhnk : n ≤ k\nhe : Even (k - n)\nf : { b // MSequence n k b }\nc : Fin n → ℕ := fun i => Nat.card ↑{j | ↑f j = ⟨↑i, ⋯⟩}\nhcp : ∀ (i : Fin n), 0 < c i\nhc : ∑ i, c i = k\nS : Type := (i : Fin n) → { s // Even s.card }\ncs : S\ng1 : Fin k → Fin (2 * n) :=\n  fun i =>\n    let y := ↑f ⟨↑i, ⋯⟩;\n    let y' := ⟨↑y, ⋯⟩;\n    let ys := cs y';\n    if ?m.23757 ∈ ↑ys then ?m.23786 else y\nhg1 : NSequence n k g1 := sorry\n⊢ ⟨g1, hg1⟩ ∈ {g | ψ n k g = f}",
      "url": "https://github.com/dwrensha/compfiles/blob/fa63371f54d5353ab86e7e2b97473832c417e5ba/Compfiles/Imo2008P5.lean#L136"
    },
    "metadata": {
      "blame_email_hash": "acdd9d7e744e",
      "blame_date": "2024-03-22T23:33:30-04:00",
      "inclusion_date": "2025-04-12T23:25:20.561445+00:00"
    },
    "id": "70ed2e7ecfab37f75b3ee0cceece0f0e3479bc791f74a440216a35de4ae16fe7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 67,
      "start_column": 14,
      "end_line": 67,
      "end_column": 19,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R : Type u\ninst✝³ : CommRing R\nM : ModuleCat R\nC : Type u\ninst✝² : Category.{v, u} C\ninst✝¹ : Abelian C\ninst✝ : HasExt C\nX Y : C\n⊢ ∀ (x y : Ext X Y 0), homEquiv₀.toFun (x + y) = homEquiv₀.toFun x + homEquiv₀.toFun y",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L67"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "7e20ae9362953f1e16980a52fbc2d71c5708a4552d45d3e3eded8ef89b61558a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 81,
      "start_column": 15,
      "end_line": 81,
      "end_column": 20,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R✝ : Type u\ninst✝⁸ : CommRing R✝\nM : ModuleCat R✝\nC✝ : Type u\ninst✝⁷ : Category.{v, u} C✝\ninst✝⁶ : Abelian C✝\ninst✝⁵ : HasExt C✝\nX✝ Y✝ : C✝\nC : Type u\ninst✝⁴ : Category.{v, u} C\ninst✝³ : Abelian C\ninst✝² : HasExt C\nR : Type u_1\ninst✝¹ : Ring R\ninst✝ : Linear R C\nX Y : C\n⊢ ∀ (m : R) (x : Ext X Y 0), (homEquiv₀_hom X Y).toFun (m • x) = (RingHom.id R) m • (homEquiv₀_hom X Y).toFun x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "c670d4377e4555381062f401ea5906c424124b8d9c0204fc874af4dd5c882220"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 93,
      "start_column": 18,
      "end_line": 93,
      "end_column": 23,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R✝ : Type u\ninst✝⁸ : CommRing R✝\nM : ModuleCat R✝\nC✝ : Type u\ninst✝⁷ : Category.{v, u} C✝\ninst✝⁶ : Abelian C✝\ninst✝⁵ : HasExt C✝\nX✝ Y✝ : C✝\nC : Type u\ninst✝⁴ : Category.{v, u} C\ninst✝³ : Abelian C\ninst✝² : HasExt C\nR : Type u_1\ninst✝¹ : CommRing R\ninst✝ : Linear R C\nX Y Z : C\na b c : ℕ\nh : a + b = c\nα : Ext X Y a\n⊢ ∀ (x y : Ext Y Z b), α.comp (x + y) h = α.comp x h + α.comp y h",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L93"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "b882c720e1280aa726cbe584960e70b808fc81e072f98e9065f6c2008456f6d4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 94,
      "start_column": 19,
      "end_line": 94,
      "end_column": 24,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R✝ : Type u\ninst✝⁸ : CommRing R✝\nM : ModuleCat R✝\nC✝ : Type u\ninst✝⁷ : Category.{v, u} C✝\ninst✝⁶ : Abelian C✝\ninst✝⁵ : HasExt C✝\nX✝ Y✝ : C✝\nC : Type u\ninst✝⁴ : Category.{v, u} C\ninst✝³ : Abelian C\ninst✝² : HasExt C\nR : Type u_1\ninst✝¹ : CommRing R\ninst✝ : Linear R C\nX Y Z : C\na b c : ℕ\nh : a + b = c\nα : Ext X Y a\n⊢ ∀ (m : R) (x : Ext Y Z b), α.comp (m • x) h = (RingHom.id R) m • α.comp x h",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L94"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "fafecbde3bb919f22939a4a03c47b33ef695ad647b16ae555f0aed1a6a1fc8f9"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 95,
      "start_column": 14,
      "end_line": 95,
      "end_column": 19,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R✝ : Type u\ninst✝⁸ : CommRing R✝\nM : ModuleCat R✝\nC✝ : Type u\ninst✝⁷ : Category.{v, u} C✝\ninst✝⁶ : Abelian C✝\ninst✝⁵ : HasExt C✝\nX✝ Y✝ : C✝\nC : Type u\ninst✝⁴ : Category.{v, u} C\ninst✝³ : Abelian C\ninst✝² : HasExt C\nR : Type u_1\ninst✝¹ : CommRing R\ninst✝ : Linear R C\nX Y Z : C\na b c : ℕ\nh : a + b = c\n⊢ ∀ (x y : Ext X Y a),\n    { toFun := fun β => (x + y).comp β h, map_add' := ⋯, map_smul' := ⋯ } =\n      { toFun := fun β => x.comp β h, map_add' := ⋯, map_smul' := ⋯ } +\n        { toFun := fun β => y.comp β h, map_add' := ⋯, map_smul' := ⋯ }",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "49ad769ac8de9aca932340b8c946afa02391e2571a0fdd21a4c4b0460ac23105"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "vanishing-of-induced-hom-between-ext",
      "commit": "4f23008d465d67afae37b603cd1c177518764aa8",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 96,
      "start_column": 15,
      "end_line": 96,
      "end_column": 20,
      "file": "Mathlib/RingTheory/Regular/Category.lean"
    },
    "debug_info": {
      "goal": "R✝ : Type u\ninst✝⁸ : CommRing R✝\nM : ModuleCat R✝\nC✝ : Type u\ninst✝⁷ : Category.{v, u} C✝\ninst✝⁶ : Abelian C✝\ninst✝⁵ : HasExt C✝\nX✝ Y✝ : C✝\nC : Type u\ninst✝⁴ : Category.{v, u} C\ninst✝³ : Abelian C\ninst✝² : HasExt C\nR : Type u_1\ninst✝¹ : CommRing R\ninst✝ : Linear R C\nX Y Z : C\na b c : ℕ\nh : a + b = c\n⊢ ∀ (m : R) (x : Ext X Y a),\n    { toFun := fun β => (m • x).comp β h, map_add' := ⋯, map_smul' := ⋯ } =\n      (RingHom.id R) m • { toFun := fun β => x.comp β h, map_add' := ⋯, map_smul' := ⋯ }",
      "url": "https://github.com/leanprover-community/mathlib4/blob/4f23008d465d67afae37b603cd1c177518764aa8/Mathlib/RingTheory/Regular/Category.lean#L96"
    },
    "metadata": {
      "blame_email_hash": "0aaeb3f219e2",
      "blame_date": "2025-04-11T11:20:08+08:00",
      "inclusion_date": "2025-04-14T23:24:22.774007+00:00"
    },
    "id": "efca452d6c486187ba3cd0cb05ea127d1a804352a47fd8c4b4e3f95067d88a28"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 277,
      "start_column": 38,
      "end_line": 277,
      "end_column": 43,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_1\ninst✝¹⁰ : NontriviallyNormedField 𝕜\nE : Type u_2\ninst✝⁹ : NormedAddCommGroup E\ninst✝⁸ : NormedSpace 𝕜 E\nF : Type u_3\ninst✝⁷ : NormedAddCommGroup F\ninst✝⁶ : NormedSpace 𝕜 F\nH : Type u_4\ninst✝⁵ : TopologicalSpace H\nG : Type u_5\ninst✝⁴ : TopologicalSpace G\nI : ModelWithCorners 𝕜 E H\nJ : ModelWithCorners 𝕜 F G\nM : Type u_6\ninst✝³ : TopologicalSpace M\ninst✝² : ChartedSpace H M\nN : Type u_7\ninst✝¹ : TopologicalSpace N\ninst✝ : ChartedSpace G N\nn : WithTop ℕ∞\nf : M → N\nx : M\nhdiff : Function.Bijective ⇑(mfderiv I J f x)\n⊢ IsLocalDiffeomorphAt I J n f x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "ee81358057c935f84a117a2766d854070f08222af30bb7922d37f7af6477a491"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 322,
      "start_column": 4,
      "end_line": 322,
      "end_column": 9,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "𝕜✝ : Type u_1\ninst✝³⁹ : NontriviallyNormedField 𝕜✝\nE✝ : Type u_2\ninst✝³⁸ : NormedAddCommGroup E✝\ninst✝³⁷ : NormedSpace 𝕜✝ E✝\nF✝ : Type u_3\ninst✝³⁶ : NormedAddCommGroup F✝\ninst✝³⁵ : NormedSpace 𝕜✝ F✝\nH✝ : Type u_4\ninst✝³⁴ : TopologicalSpace H✝\nG✝ : Type u_5\ninst✝³³ : TopologicalSpace G✝\nI✝ : ModelWithCorners 𝕜✝ E✝ H✝\nJ✝¹ : ModelWithCorners 𝕜✝ F✝ G✝\nM✝ : Type u_6\ninst✝³² : TopologicalSpace M✝\ninst✝³¹ : ChartedSpace H✝ M✝\nN✝¹ : Type u_7\ninst✝³⁰ : TopologicalSpace N✝¹\ninst✝²⁹ : ChartedSpace G✝ N✝¹\nn✝ : WithTop ℕ∞\nf✝ : M✝ → N✝¹\ns : Set M✝\nx✝ : M✝\n𝕜 : Type u_8\ninst✝²⁸ : NontriviallyNormedField 𝕜\nE : Type u_9\ninst✝²⁷ : NormedAddCommGroup E\ninst✝²⁶ : NormedSpace 𝕜 E\nE' : Type u_10\ninst✝²⁵ : NormedAddCommGroup E'\ninst✝²⁴ : NormedSpace 𝕜 E'\nF : Type u_11\ninst✝²³ : NormedAddCommGroup F\ninst✝²² : NormedSpace 𝕜 F\nH : Type u_12\ninst✝²¹ : TopologicalSpace H\nH' : Type u_13\ninst✝²⁰ : TopologicalSpace H'\nG : Type u_14\ninst✝¹⁹ : TopologicalSpace G\nG' : Type u_15\ninst✝¹⁸ : TopologicalSpace G'\nI : ModelWithCorners 𝕜 E H\nI' : ModelWithCorners 𝕜 E' H'\nJ✝ : ModelWithCorners 𝕜 F G\nJ' : ModelWithCorners 𝕜 F G'\nM : Type u_16\ninst✝¹⁷ : TopologicalSpace M\ninst✝¹⁶ : ChartedSpace H M\nM'✝ : Type u_17\ninst✝¹⁵ : TopologicalSpace M'✝\ninst✝¹⁴ : ChartedSpace H' M'✝\nN✝ : Type u_18\ninst✝¹³ : TopologicalSpace N✝\ninst✝¹² : ChartedSpace G N✝\nN'✝ : Type u_19\ninst✝¹¹ : TopologicalSpace N'✝\ninst✝¹⁰ : ChartedSpace G' N'✝\nn : WithTop ℕ∞\nJ : ModelWithCorners 𝕜 E' H\nM' : Type u_20\nM'' : Type u_21\nN : Type u_22\ninst✝⁹ : TopologicalSpace M'\ninst✝⁸ : ChartedSpace H M'\ninst✝⁷ : TopologicalSpace M''\ninst✝⁶ : ChartedSpace H M''\ninst✝⁵ : TopologicalSpace N\ninst✝⁴ : ChartedSpace H N\nN' : Type u_23\ninst✝³ : TopologicalSpace N'\ninst✝² : ChartedSpace H N'\ninst✝¹ : FiniteDimensional 𝕜 E\ninst✝ : FiniteDimensional 𝕜 E'\nx : M × N ⊕ M' × N\nf : M × N ⊕ M' × N ≃ (M ⊕ M') × N := (Equiv.sumProdDistrib M M' N).symm\nthis : ContMDiff (I.prod J) (I.prod J) n ⇑f\n⊢ Function.Injective ⇑(mfderiv (I.prod J) (I.prod J) (⇑f) x)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L322"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "b50ebc5f597441fd27a957da6dbd55b366fc9713892894016f10afef2b6f0dbe"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "MR-disjointUnion-prod-distributive",
      "commit": "7226c1923b384530a4e62e361a67df6eb0bee3df",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 337,
      "start_column": 2,
      "end_line": 337,
      "end_column": 7,
      "file": "Mathlib/Geometry/Manifold/LocalDiffeomorph.lean"
    },
    "debug_info": {
      "goal": "𝕜 : Type u_8\ninst✝¹³ : NontriviallyNormedField 𝕜\nE : Type u_9\ninst✝¹² : NormedAddCommGroup E\ninst✝¹¹ : NormedSpace 𝕜 E\nE' : Type u_10\ninst✝¹⁰ : NormedAddCommGroup E'\ninst✝⁹ : NormedSpace 𝕜 E'\nH : Type u_12\ninst✝⁸ : TopologicalSpace H\nI : ModelWithCorners 𝕜 E H\nM : Type u_16\ninst✝⁷ : TopologicalSpace M\ninst✝⁶ : ChartedSpace H M\nn : WithTop ℕ∞\nJ : ModelWithCorners 𝕜 E' H\nM' : Type u_20\nN : Type u_22\ninst✝⁵ : TopologicalSpace M'\ninst✝⁴ : ChartedSpace H M'\ninst✝³ : TopologicalSpace N\ninst✝² : ChartedSpace H N\ninst✝¹ : FiniteDimensional 𝕜 E\ninst✝ : FiniteDimensional 𝕜 E'\n⊢ (prodSumDistrib I M n J M' N).toEquiv = (Equiv.sumProdDistrib M M' N).symm",
      "url": "https://github.com/leanprover-community/mathlib4/blob/7226c1923b384530a4e62e361a67df6eb0bee3df/Mathlib/Geometry/Manifold/LocalDiffeomorph.lean#L337"
    },
    "metadata": {
      "blame_email_hash": "13ebe891461f",
      "blame_date": "2025-03-05T17:56:40+01:00",
      "inclusion_date": "2025-04-12T23:07:41.871027+00:00"
    },
    "id": "c3dc5a834847802c55b02a9c6c41232567b2ca0f3f7b782fcf69d834f92e5962"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 477,
      "start_column": 8,
      "end_line": 477,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h₁.h₁.h₂\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ house\n      ((↑(↑(finProdFinEquiv.symm.toFun t).1 + 1) + (↑(finProdFinEquiv.symm.toFun t).2 + 1) • β') ^\n        ↑(finProdFinEquiv.symm.toFun u).2) ≤\n    house (↑a + b • β') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L477"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16a01d2ef544bcced8e74aa1e11b21ec9cd5a0ac2ac7b19135ba48b2a5c2a0d3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 478,
      "start_column": 8,
      "end_line": 478,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h₁.h₁.c0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤\n    house\n      ((↑(↑(finProdFinEquiv.symm.toFun t).1 + 1) + (↑(finProdFinEquiv.symm.toFun t).2 + 1) • β') ^\n        ↑(finProdFinEquiv.symm.toFun u).2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L478"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1d037d346aad685ecccac686a49d8e649b474ee34a31e31984ca0ca8c5ee000c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 480,
      "start_column": 8,
      "end_line": 480,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h₁.h₂\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ house (α' ^ ((↑(finProdFinEquiv.symm.toFun t).1 + 1) * (↑(finProdFinEquiv.symm.toFun u).1 + 1))) ≤ house α' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L480"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8deeda4718e47dcea20ca9e27cd10aa48493d4a54d80239404b8799d85327e71"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 482,
      "start_column": 8,
      "end_line": 482,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h₁.b0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ house ↑(c_coeffs K α' β' γ' q) * house (↑a + b • β') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L482"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ae583f0a7a5865be87c4d93b94aa69f1d9f66c6082e7fd3aae895ecec05bad26"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 483,
      "start_column": 8,
      "end_line": 483,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h₂\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ house (γ' ^ ((↑(finProdFinEquiv.symm.toFun t).2 + 1) * (↑(finProdFinEquiv.symm.toFun u).1 + 1))) ≤ house γ' ^ (b * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L483"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3995eee619bc2234d3dd3d834cc74d35203f9e2b132588a21547c7184b4b9580"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 485,
      "start_column": 8,
      "end_line": 485,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case b0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ house ↑(c_coeffs K α' β' γ' q) * house (↑a + b • β') ^ k * house α' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L485"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e46d0b8e9e9b6a97b489edba77bb97e4a3f8fd62a0e26faa519aab3ac865ca3f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 499,
      "start_column": 10,
      "end_line": 499,
      "end_column": 15,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ |c₁ K α' β' γ'| = c₁ K α' β' γ'",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L499"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b0061f685d3e8c6ef4bdf8cd3614c27509ee268f60e868d3b1a3e6d3b35c9444"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 505,
      "start_column": 8,
      "end_line": 505,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₁.h₁.h₁\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\nthis : |c₁ K α' β' γ'| = c₁ K α' β' γ'\n⊢ |↑(c₁ K α' β' γ')| ^ (n K q - 1 + m K * q + m K * q) ≤ ↑(c₁ K α' β' γ') ^ (1 + 2 * m K * (2 * m K).sqrt)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L505"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "21ed3fe5836d13e50f057c1bed597016de0a5b7c36eb2a9d55075d37aa93057b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 510,
      "start_column": 8,
      "end_line": 510,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₁.h₁.h₂\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ house (↑a + ↑b * β') ^ k ≤ ↑(2 * m K).sqrt * (1 + house β')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L510"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e391fa3300cede2a3384840e62cd5b94f545fc1e34f27787d8e4a9c3d9557821"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 511,
      "start_column": 8,
      "end_line": 511,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₁.h₁.c0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ house (↑a + ↑b * β') ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L511"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "259517c756b76a44bc6e3a170c57caf84ae2ff43820f0dc426e62a372569a9b5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 513,
      "start_column": 8,
      "end_line": 513,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₁.h₁.b0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ c₂ K α' β' γ'",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L513"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8cf32ffb033df5e7b710c52a244a2598a3ae13a452667893cf8f905ac69b533b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 514,
      "start_column": 8,
      "end_line": 514,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₁.h₂\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ house α' ^ (a * l) ≤ house α' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "22f1c2df0142c6bae2959cd6f1d03d18515317fd6424ee42b0eb3f633fc60566"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 516,
      "start_column": 8,
      "end_line": 516,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₁.c0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ house α' ^ (a * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L516"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "3535841b7ef1c21dc8602efc55f6891a94e16f0ab7161087192a93cae16846d8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 517,
      "start_column": 8,
      "end_line": 517,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₁.b0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ c₂ K α' β' γ' * ↑(2 * m K).sqrt * (1 + house β')",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L517"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "b2cea7a75aed12c104bce5e71575d86ec567dbb91a7fdf45b866bd64e16f0d9d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 518,
      "start_column": 8,
      "end_line": 518,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.h₂\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ house γ' ^ (b * l) ≤ house γ' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L518"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a78e8756dd923bdc8379f9b6664b2abdca57089ab92adebaf0f932934122f795"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 519,
      "start_column": 8,
      "end_line": 519,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.c0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ house γ' ^ (b * l)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L519"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "59ea0d34dafdb3d44b26f96fa64c95d42cd221a1bbb389058c2ae8ae73e176a1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 520,
      "start_column": 8,
      "end_line": 520,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h.b0\nK : Type\ninst✝¹ : Field K\nα' β' γ' : K\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu✝ : Fin (m K * n K q)\nt✝ : Fin (q * q)\nhq0 : 0 < q\nu : Fin (m K * n K q)\nt : Fin (q * q)\na : ℕ := ↑(finProdFinEquiv.symm.toFun t).1 + 1\nb : ℕ := ↑(finProdFinEquiv.symm.toFun t).2 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nf : -1 / 2 + ↑(n K q) * (1 / 2) = (↑(n K q) - 1) / 2\n⊢ 0 ≤ c₂ K α' β' γ' * ↑(2 * m K).sqrt * (1 + house β') * house α' ^ (2 * m K ^ 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L520"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d9625605bdc86c35f4bec818bc261b0ffaa6dc7ec5a3af20390eb2381b0bac46"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 670,
      "start_column": 8,
      "end_line": 670,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "α β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nq : ℕ\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 →\n    ¬(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : ¬(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : ℕ := ↑(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : ℕ := ↑(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : ℕ := ↑(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : ℕ := ↑(finProdFinEquiv.symm.toFun j).1 + 1\nhb : β ≠ ↑(↑i1 - ↑j1) / ↑(↑j2 - ↑i2)\nH :\n  ↑(↑(finProdFinEquiv.symm.toFun i).2 + 1) * β + -(↑(↑(finProdFinEquiv.symm.toFun j).2 + 1) * β) +\n        -↑(↑(finProdFinEquiv.symm.toFun j).1 + 1) +\n      ↑(↑(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\n⊢ -((↑(↑j % q) + 1) * β) = (-↑(↑↑j % ↑q) - 1) * β",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L670"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "8b742443c017c3579a11bb0415e9dc31e0bf24c1f2b50d2cb3bbedd3291db9f3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 681,
      "start_column": 10,
      "end_line": 681,
      "end_column": 15,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "α β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nq : ℕ\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 →\n    ¬(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : ¬(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : ℕ := ↑(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : ℕ := ↑(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : ℕ := ↑(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : ℕ := ↑(finProdFinEquiv.symm.toFun j).1 + 1\nhb : β ≠ ↑(↑i1 - ↑j1) / ↑(↑j2 - ↑i2)\nH :\n  ↑(↑(finProdFinEquiv.symm.toFun i).2 + 1) * β + -(↑(↑(finProdFinEquiv.symm.toFun j).2 + 1) * β) +\n        -↑(↑(finProdFinEquiv.symm.toFun j).1 + 1) +\n      ↑(↑(finProdFinEquiv.symm.toFun i).1 + 1) =\n    0\nthis : -((↑(↑j % q) + 1) * β) = (-↑(↑j % q) - 1) * β\n⊢ (↑(↑i % q) + 1) * β + (-↑(↑j % q) - 1) * β = (↑(↑↑i % ↑q) + 1 + -(↑(↑↑j % ↑q) + 1)) * β",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L681"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "4b354e3e595d9ac9d669c19708cbb4105bde1efdb138410ba3f65692a8193a73"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 691,
      "start_column": 10,
      "end_line": 691,
      "end_column": 15,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "α β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nq : ℕ\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 →\n    ¬(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : ¬(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : ℕ := ↑(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : ℕ := ↑(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : ℕ := ↑(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : ℕ := ↑(finProdFinEquiv.symm.toFun j).1 + 1\nhb : β ≠ ↑(↑i1 - ↑j1) / ↑(↑j2 - ↑i2)\nthis✝ : -((↑(↑j % q) + 1) * β) = (-↑(↑j % q) - 1) * β\nthis :\n  ↑(↑(finProdFinEquiv.symm.toFun i).2 + 1) * β + -(↑(↑(finProdFinEquiv.symm.toFun j).2 + 1) * β) =\n    ↑(↑(↑(finProdFinEquiv.symm.toFun i).2 + 1) + -(↑↑(finProdFinEquiv.symm.toFun j).2 + 1)) * β\nH : (↑(↑↑i % ↑q) + 1 + (-1 + -↑(↑↑j % ↑q))) * β = -(-1 + -↑(↑j / q) + (↑(↑i / q) + 1))\n⊢ (↑(↑i % q) + 1 + (-1 + -↑(↑j % q))) * β = -(-1 + -↑(↑j / q) + (↑(↑i / q) + 1)) ↔\n    β = -(-1 + -↑(↑j / q) + (↑(↑i / q) + 1)) / (↑(↑i % q) + 1 + (-1 + -↑(↑j % q)))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L691"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d0c476a6a8f14102657bcfcf6d2bc6edc8174eaf178b9c9f89ac11f24711fc06"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 693,
      "start_column": 6,
      "end_line": 693,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case neg\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nq : ℕ\ni j : Fin (q * q)\nhij :\n  (finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2 →\n    ¬(finProdFinEquiv.symm.toFun i).1 = (finProdFinEquiv.symm.toFun j).1\nHeq : ¬(finProdFinEquiv.symm.toFun i).2 = (finProdFinEquiv.symm.toFun j).2\ni2 : ℕ := ↑(finProdFinEquiv.symm.toFun i).2 + 1\nj2 : ℕ := ↑(finProdFinEquiv.symm.toFun j).2 + 1\ni1 : ℕ := ↑(finProdFinEquiv.symm.toFun i).1 + 1\nj1 : ℕ := ↑(finProdFinEquiv.symm.toFun j).1 + 1\nhb : β ≠ ↑(↑i1 - ↑j1) / ↑(↑j2 - ↑i2)\nthis✝¹ : -((↑(↑j % q) + 1) * β) = (-↑(↑j % q) - 1) * β\nthis✝ :\n  ↑(↑(finProdFinEquiv.symm.toFun i).2 + 1) * β + -(↑(↑(finProdFinEquiv.symm.toFun j).2 + 1) * β) =\n    ↑(↑(↑(finProdFinEquiv.symm.toFun i).2 + 1) + -(↑↑(finProdFinEquiv.symm.toFun j).2 + 1)) * β\nH : (↑(↑↑i % ↑q) + 1 + (-1 + -↑(↑↑j % ↑q))) * β = -(-1 + -↑(↑j / q) + (↑(↑i / q) + 1))\nthis :\n  (↑(↑i % q) + 1 + (-1 + -↑(↑j % q))) * β = -(-1 + -↑(↑j / q) + (↑(↑i / q) + 1)) ↔\n    β = -(-1 + -↑(↑j / q) + (↑(↑i / q) + 1)) / (↑(↑i % q) + 1 + (-1 + -↑(↑j % q)))\n⊢ β = ↑(↑i1 - ↑j1) / ↑(↑j2 - ↑i2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L693"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2a6dc748e02d7a5c038cb659dffeda600ea04ba1f07c7508f6b6f8e14286dc6b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 795,
      "start_column": 2,
      "end_line": 795,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt✝¹ : Fin (q * q)\nhq0 : 0 < q\nk : ℕ\nhR : R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t✝¹ = 0\nt✝ : Fin (q * q)\nthis : ∀ (x : ℂ), iteratedDeriv k (fun x => R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t✝ x) x = 0\nderiv_eq :\n  (iteratedDeriv k fun x => R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t✝ x) = fun x =>\n    ∑ t, σ ↑(η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t) * cexp (ρ α β q t * x) * ρ α β q t ^ k\nderiv_eq_0 : iteratedDeriv k (fun x => R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t✝ x) 0 = 0\nt : Fin (q * q)\nht : t ∈ Finset.univ\n⊢ ρ α β q t ^ ↑t✝ = ρ α β q t ^ k",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L795"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T00:24:25+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "a7b4c434a5065ae1c080e92645409077dfb7d51f28bf4bdf9e36f0a118f9e3c5"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 926,
      "start_column": 2,
      "end_line": 926,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hR\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk : ℕ\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nhl : l < n K q\n⊢ R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t = 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L926"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-08T17:10:19+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "0961b94062999728c10a4c5d873627eac2b7df239f59bab7617e1d0500e6d0a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 957,
      "start_column": 2,
      "end_line": 957,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv this : iteratedDeriv k R ↑l = 0\n⊢ n K q ≤ (Exists.choose ⋯).order",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L957"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "23592e4d9edd52e29530f4a60d8fd67eb571ddda6a9264b24df3c27753922555"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 956,
      "start_column": 78,
      "end_line": 956,
      "end_column": 83,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nl : ℕ := ↑(finProdFinEquiv.symm.toFun u).1 + 1\nk : ℕ := ↑(finProdFinEquiv.symm.toFun u).2\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nhk : k < n K q\nhderiv : iteratedDeriv k R ↑l = 0\n⊢ ↑(finProdFinEquiv.symm.toFun u).1 + 1 < n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L956"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "23756589725c27826520e9640a1ff8edaa833abdcb6e234fc17a76157908b5b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 964,
      "start_column": 6,
      "end_line": 964,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nk l : ℕ\nhkn : k < n K q\n⊢ (Exists.choose ⋯).order ≥ n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L964"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f5704d4507aceae0f2aa51b9306d57707035c4017bee32354b5edc99dacda2d0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 979,
      "start_column": 50,
      "end_line": 979,
      "end_column": 55,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n⊢ let r := r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let R := R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t;\n  ∃ l₀, iteratedDeriv r R ↑↑l₀ ≠ 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L979"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-10T17:49:33+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ba8bc9c0b5c0a658690d2033337d422cc1b3284ab99cf62d3b51b53a835b1916"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1000,
      "start_column": 2,
      "end_line": 1000,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nH : η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 t = 0\n⊢ False",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1000"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-01T02:10:10+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "bd432ec37c5700b0d9776c266d43a497644476096dbf8586a50f0d8f2eff38fb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1030,
      "start_column": 4,
      "end_line": 1030,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n⊢ IsIntegral (𝓞 K)\n    (cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 • rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1030"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2d93563d376b94707e4ab26b556bfc9e67c937097baf27c33e767d5b016b441b"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1071,
      "start_column": 6,
      "end_line": 1071,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nc1ρ : 𝓞 K := _root_.c1ρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\ncρ : ℤ := _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nthis : ↑(h K) * ↑r + ↑(h K) * (2 * ↑(m K) * ↑q) = ↑(h K) * ↑r + ↑(h K) * 2 * ↑(m K) * ↑q\n⊢ ↑c₁ ^ (↑(h K) * ↑r + ↑(h K) * 2 * ↑(m K) * ↑q) < c₅ ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1071"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "853e0d77e539b251804a5bc56196240c2bc19604aeeac24f19a17767394273cb"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1072,
      "start_column": 6,
      "end_line": 1072,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.ha\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nc1ρ : 𝓞 K := _root_.c1ρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\ncρ : ℤ := _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ 0 < c₅ ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1072"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "606669bfd01ece1705b29ec23db54c1a0b7ddc15416015f690d8263681d91849"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1073,
      "start_column": 6,
      "end_line": 1073,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1.hb\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nc1ρ : 𝓞 K := _root_.c1ρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\ncρ : ℤ := _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ 0 < ↑c₁ ^ (↑(h K) * (↑r + 2 * ↑(m K) * ↑q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1073"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "7cea1217f82b127803488c4b8ba1d091a3a619666b1f3ca89924d3aaf8be7c4f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1089,
      "start_column": 6,
      "end_line": 1089,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nc1ρ : 𝓞 K := _root_.c1ρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\ncρ : ℤ := _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nthis : (Algebra.norm ℤ) ↑cρ = cρ ^ Module.finrank ℚ K\n⊢ |LinearMap.det\n        ((LinearMap.mul ℤ (𝓞 K))\n          (RingOfIntegers.restrict\n            (fun x =>\n              _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 •\n                rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0)\n            ⋯ ℤ))| =\n    |cρ * LinearMap.det ((LinearMap.mul ℤ K) ρ)|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1089"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "638a919557faf4cbf8f84703429c4a960e5a7e370f228aef27a9943ec4c1b64e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1093,
      "start_column": 4,
      "end_line": 1093,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nc1ρ : 𝓞 K := _root_.c1ρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\ncρ : ℤ := _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nthis✝ : (Algebra.norm ℤ) ↑cρ = cρ ^ Module.finrank ℚ K\nthis : |(Algebra.norm ℤ) c1ρ| = |(Algebra.norm ℤ) cρ| * |(Algebra.norm ℤ) ρ|\n⊢ ↑c₁ ^ (-↑(h K) * (↑r + 2 * ↑(m K) * ↑q)) < ↑|(Algebra.norm ℤ) ρ|",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1093"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "c08e7d9c7f53f303d7280eb4f2e560248bda1e229a19ae50c891eebfa9cefc5e"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1094,
      "start_column": 2,
      "end_line": 1094,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc.step\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nc1ρ : 𝓞 K := _root_.c1ρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\ncρ : ℤ := _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ↑|(Algebra.norm ℤ) ρ| < ‖(Algebra.norm ℚ) ρ‖",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1094"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1bb77735175bf54bf573205ae22d01467a990025fa90ebbab20286eb21617eb3"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1061,
      "start_column": 16,
      "end_line": 1061,
      "end_column": 21,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₁ : ℤ := _root_.c₁ K α' β' γ'\nc1ρ : 𝓞 K := _root_.c1ρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\ncρ : ℤ := _root_.cρ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ (c₅ ^ r)⁻¹ = c₅ ^ (-↑r)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1061"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "571ebd41b3d4ff4cc0ca7d6f6cf32c8eecb1662c6ccaa31685ff90c470dd74c7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1139,
      "start_column": 6,
      "end_line": 1139,
      "end_column": 11,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2.h₂\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q\nthis : c₄ ^ ↑(n K q) * ↑(n K q) ^ (1 / 2 * (n K q + 1)) = c₄ ^ ↑(n K q) * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * 1\n⊢ 1 ≤ ↑↑t * (c₆ * ↑q) ^ r * c₇ ^ q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1139"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16affe970001c9ef33437483cc7b586d1d945d16becdff3b2b2d8275af774a4c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1145,
      "start_column": 4,
      "end_line": 1145,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q\n⊢ c₄ ^ ↑(n K q) * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * (↑↑t * (c₆ * ↑q) ^ r * c₇ ^ ↑q) ≤ c₈ ^ r * ↑r ^ (r + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1145"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T00:04:24+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "d79d37f1406e19fa4f7de61e8bd4ce0d4507dd387fe4c34421079b5ffdab98c0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1159,
      "start_column": 4,
      "end_line": 1159,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\n⊢ let r := r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  let S := S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0;\n  DifferentiableAt ℂ S z",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1159"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T17:11:21+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "16ca67005d892418cf9e51eb2268b7eaf1e2a89123d29d2dd78fb4552eb1c4a8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1220,
      "start_column": 8,
      "end_line": 1220,
      "end_column": 13,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hb\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nthis : ↑l₀ < ↑(m K)\n⊢ 0 < ↑r / ↑q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1220"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "38f238d23ae462d5bedba7a0e04635706562cebe03d13d7cb75d120eea34383a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1225,
      "start_column": 4,
      "end_line": 1225,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case hc\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nx : ℂ\nhx : ‖x‖ ≤ ↑(m K) * (1 + ↑r / ↑q)\n⊢ ContinuousWithinAt S (Metric.closedBall 0 (↑(m K) * (1 + ↑r / ↑q))) x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1225"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "4319f3a02364602af95ffbddb11f5b1b496919e4c113a33559356eafa9c63e5a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1250,
      "start_column": 4,
      "end_line": 1250,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ σ ρ = Complex.log α ^ (-↑r) * S ↑l₀",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1250"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f4f9d52575496e3211263f295d7690860fa69887d035e4ca1fd56c2b940af777"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1273,
      "start_column": 4,
      "end_line": 1273,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q\n⊢ ‖R z‖ ≤ ↑q ^ 2 * ‖σ ↑(η t)‖ * Real.exp ((↑q + ↑q * ‖β‖) * Real.log ‖α‖ * ↑(m K) * (1 + ↑r / ↑q))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1273"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "2ceccf12ec59752e19baada91beef6f6d3e7cc08dd75b203d429f108a3143526"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1274,
      "start_column": 4,
      "end_line": 1274,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q\n⊢ ↑q ^ 2 * ‖σ ↑(η t)‖ * Real.exp ((↑q + ↑q * ‖β‖) * Real.log ‖α‖ * ↑(m K) * (1 + ↑r / ↑q)) ≤\n    ↑q ^ 2 * c₄ ^ n K q * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * c₉ ^ (r + q)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1274"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e6a9621a9e15c2cc273d2f35221d6681b44e345db0eb3c47076749fbc88b3cb4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1275,
      "start_column": 4,
      "end_line": 1275,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_3\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nc₄ : ℝ := _root_.c₄ K hd α' β' γ' q\n⊢ ↑q ^ 2 * c₄ ^ n K q * ↑(n K q) ^ (1 / 2 * (n K q + 1)) * c₉ ^ (r + q) ≤ c₁₀ ^ r * ↑r ^ (1 / 2 * (r + 3))",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1275"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "564c08711ec656026c89959340379b48c141322b3422836a881faef18ca334fc"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1361,
      "start_column": 2,
      "end_line": 1361,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nz : ℂ\nR : ℂ → ℂ := _root_.R K α β hirr htriv σ hd α' β' γ' habc q h2mq u hq0 t\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nρ : K := rho K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nη : Fin (q * q) → 𝓞 K := _root_.η K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ‖S z‖ ≤ c₁₂ ^ r * ((3 - ↑(m K)) / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1361"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "1acfb2b51abbcf5547166be07993300737d958780f8475cb8e72db076adb2bd2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1448,
      "start_column": 4,
      "end_line": 1448,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nthis : (↑(h K) - 1) * (↑r + 3 / 2) + (3 - ↑(m K)) * ↑r * 1 / 2 + 3 / 2 = -↑r / 2 + 3 * ↑(h K) / 2\n⊢ ↑((Algebra.norm ℚ) ρ) ≤ c₁₄ ^ r * ↑r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1448"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "e0374ba3e3de222b7291fba300e7eccaf078f60df672a882a2f17519c294ae1d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1449,
      "start_column": 4,
      "end_line": 1449,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_2\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nthis : (↑(h K) - 1) * (↑r + 3 / 2) + (3 - ↑(m K)) * ↑r * 1 / 2 + 3 / 2 = -↑r / 2 + 3 * ↑(h K) / 2\n⊢ c₁₄ ^ r * ↑r ^ ((h K - 1) * (r + 3 / 2) + (3 - m K) * r * 1 / 2 + 3 / 2) = c₁₄ ^ r * ↑r ^ (-↑r / 2 + 3 * ↑(h K) / 2)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1449"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "410ab0ee4709d8167a99827aa77ffcfc22ebd4330c8c4c5334f8b2634d12b198"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1444,
      "start_column": 32,
      "end_line": 1444,
      "end_column": 37,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "K : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ (↑(h K) - 1) * (↑r + 3 / 2) + (3 - ↑(m K)) * ↑r * 1 / 2 + 3 / 2 = -↑r / 2 + 3 * ↑(h K) / 2",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1444"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "ea9f2aeca05e5a24af299aa20dce0f4f7748493debe635788c023dff26d8ca6a"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1458,
      "start_column": 2,
      "end_line": 1458,
      "end_column": 7,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case h.left\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\n⊢ r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0 ≥ n K q",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1458"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-13T00:29:22+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "5ee0c3be5ed07e970fff36cc10e69d9e226a0786f6ea117a2184349673515b6d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "hilbert7",
      "commit": "9fe34f7836c61cccca67bd1bb46f753139c339c6",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 1473,
      "start_column": 4,
      "end_line": 1473,
      "end_column": 9,
      "file": "Mathlib/NumberTheory/h7.lean"
    },
    "debug_info": {
      "goal": "case calc_1\nK : Type\ninst✝¹ : Field K\nα β : ℂ\nhirr : ∀ (i j : ℤ), β ≠ ↑i / ↑j\nhtriv : α ≠ 0 ∧ α ≠ 1\nσ : K →+* ℂ\nhd : DecidableEq (K →+* ℂ)\nα' β' γ' : K\nhabc : α = σ α' ∧ β = σ β' ∧ α ^ β = σ γ'\ninst✝ : NumberField K\nq : ℕ\nh2mq : 2 * m K ∣ q ^ 2\nu : Fin (m K * n K q)\nt : Fin (q * q)\nhq0 : 0 < q\nr : ℕ := _root_.r K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nl₀ : ℕ := _root_.l₀ K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\nS : ℂ → ℂ := _root_.S K α β hirr htriv σ hd α' β' γ' habc q h2mq u t hq0\n⊢ ↑r ^ (r / 2 - 3 * h K / 2) < c₁₄ ^ r * c₅ ^ r",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9fe34f7836c61cccca67bd1bb46f753139c339c6/Mathlib/NumberTheory/h7.lean#L1473"
    },
    "metadata": {
      "blame_email_hash": "427ce08bc78e",
      "blame_date": "2025-04-09T15:43:20+02:00",
      "inclusion_date": "2025-04-12T23:16:13.801943+00:00"
    },
    "id": "f441878653743527aeca292226c3d46c74ca56d5bc7217f75ba749c7a7383a15"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 359,
      "start_column": 2,
      "end_line": 359,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\np p' : 𝔓 X\nhle : 𝔰 p' ≤ 𝔰 p\ng : X → ℂ\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\n⊢ ‖∫ (y : X), adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y)‖ₑ ≤\n    ↑(C_6_1_5 a) * (1 + ↑(nndist_{𝔠 p' ,↑D ^ 𝔰 p' / 4} (𝒬 p') (𝒬 p))) ^ (-1 / (2 * ↑a ^ 2 + ↑a ^ 3)) / volume ↑(𝓘 p) *\n      ∫⁻ (y : X) in E p', ‖g y‖ₑ * ∫⁻ (y : X) in E p, ‖g y‖ₑ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L359"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "6befc5da4481a4528f3242732f32719a5691e6c6c927ed944708da65178560d8"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 370,
      "start_column": 2,
      "end_line": 370,
      "end_column": 7,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "case intro\nX : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\np p' : 𝔓 X\nhle : 𝔰 p' ≤ 𝔰 p\ng : X → ℂ\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nhpp' : ¬↑(𝓘 p) ⊆ ball (𝔠 p) (15 * ↑D ^ 𝔰 p)\nh0 : ¬‖∫ (y : X), adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y)‖ₑ = 0\ny : X\nhy : adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y) ≠ 0\n⊢ ↑(𝓘 p) ⊆ ball (𝔠 p) (15 * ↑D ^ 𝔰 p)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L370"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "d424334e3a1ad3994ff5c918fd6646ef8d8aaa501b080bd8d088d93b8c202c91"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 368,
      "start_column": 84,
      "end_line": 368,
      "end_column": 89,
      "file": "Carleson/Antichain/TileCorrelation.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\nq : ℝ\nK : X → X → ℂ\nσ₁ σ₂ : X → ℤ\nF G : Set X\ninst✝² : MetricSpace X\ninst✝¹ : ProofData a q K σ₁ σ₂ F G\ninst✝ : TileStructure Q D κ S o\np p' : 𝔓 X\nhle : 𝔰 p' ≤ 𝔰 p\ng : X → ℂ\nhg : Measurable g\nhg1 : ∀ (x : X), ‖g x‖ ≤ G.indicator 1 x\nhpp' : ¬↑(𝓘 p) ⊆ ball (𝔠 p) (15 * ↑D ^ 𝔰 p)\nh0 : ¬‖∫ (y : X), adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y)‖ₑ = 0\n⊢ ∃ y, adjointCarleson p' g y * (starRingEnd ℂ) (adjointCarleson p g y) ≠ 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/Antichain/TileCorrelation.lean#L368"
    },
    "metadata": {
      "blame_email_hash": "44a80a4a9c95",
      "blame_date": "2024-10-31T20:12:54+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9c3d5b5761f571a87d4227105f50b7bccfd865b24a56a0fdbf266e2458bae263"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 62,
      "start_column": 2,
      "end_line": 62,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nha : 4 ≤ a\nO : Set X\nhO : IsOpen O ∧ O ≠ univ\n⊢ ∃ c r,\n    (univ.PairwiseDisjoint fun i => closedBall (c i) (r i)) ∧\n      ⋃ i, ball (c i) (3 * r i) = O ∧\n        (∀ (i : ℕ), ¬Disjoint (ball (c i) (7 * r i)) Oᶜ) ∧\n          ∀ x ∈ O, Cardinal.mk ↑{i | x ∈ ball (c i) (3 * r i)} ≤ ↑(2 ^ (6 * a))",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L62"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3a017eaecc2bd955c490e663dc39f0177e25ac66177746cac4f9ed1642644ae2"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 135,
      "start_column": 2,
      "end_line": 135,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\ny : X\nhy : α < globalMaximalFunction volume 1 f y\n⊢ {i | y ∈ czBall3 ha hf hX i}.Finite",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L135"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5ce4e2732fc83213332e0e708c567e326999e9aad40d5d7f6553df8e91abec9f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 143,
      "start_column": 2,
      "end_line": 143,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\ni : ℕ\n⊢ czBall ha hf hX i ⊆ czPartition ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L143"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "81b3c040dbd6d31256a2a93dbfef7ad20659e0772933eeb0fa79119594b01266"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\n⊢ univ.PairwiseDisjoint fun i => czPartition ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-01-27T19:00:57+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "a27202be503557b59aefe1efd5e8920c45bbb73361eb79f474f48a440b4c5828"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 156,
      "start_column": 2,
      "end_line": 156,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nx : X\ni j : ℕ\nhi : x ∈ czPartition ha hf hX i\nhj : x ∈ czPartition ha hf hX j\n⊢ i = j",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "ec528e4cc6b300527ebf683dbe6c018fc21a012a828028bcd2f14f1fc52d97b3"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 160,
      "start_column": 2,
      "end_line": 160,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\n⊢ ⋃ i, czPartition ha hf hX i = globalMaximalFunction volume 1 f ⁻¹' Ioi α",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L160"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "50cf553cb3438b8baea185bc4a42b2914c3ad299f3406aacb83f9c063d788543"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 197,
      "start_column": 2,
      "end_line": 197,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nτ C r R : ℝ\nq q' : ℝ≥0\nF G : Set X\nK : X → X → ℂ\nx✝ x' : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nx : X\n⊢ ∑ᶠ (i : ℕ), czRemainder' ha hf hX i x = czRemainder ha hf α x",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T17:21:05+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "dac93e4181a286b4ce040895c2ce36af15538c31d1a044a3259a4c6cebd93459"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 202,
      "start_column": 2,
      "end_line": 202,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\n⊢ Measurable (czApproximation ha hf α)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L202"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "731bba3c4cf19d17a5fa46050be1fc540bd2072f3ecf7a1243bf0bbf30fa4fee"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 213,
      "start_column": 2,
      "end_line": 213,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ < α\n⊢ ∀ᵐ (x : X), ‖czApproximation ha hf α x‖ₑ ≤ 2 ^ (3 * a) * α",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L213"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "e324ec1bf49367ba48bbb2830a2a53df6ff962571e5bbbaee4ab460901378bd1"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 219,
      "start_column": 2,
      "end_line": 219,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\n⊢ ∀ᵐ (x : X), ‖czApproximation ha hf α x‖ₑ ≤ 2 ^ (3 * a) * α",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0079b7190025f8a6a492a167ea4e5a90850fcbbc2965c9fc42d53cf9f88e2f9f"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 224,
      "start_column": 2,
      "end_line": 224,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhα : 0 < α\n⊢ eLpNorm (czApproximation ha hf α) 1 volume ≤ eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L224"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "41a517539345169a0cdd71e514728b588ec4f467863df7d09644e2613674c6a6"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 230,
      "start_column": 2,
      "end_line": 230,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\ni : ℕ\n⊢ support (czRemainder' ha hf hX i) ⊆ czBall3 ha hf hX i",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L230"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "075f798ec0455a651505323aaa2afb6faee16f0ac64b468f6e7f942ab26dc259"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 236,
      "start_column": 2,
      "end_line": 236,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\ni : ℕ\n⊢ ∫ (x : X), czRemainder' ha hf hX i x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L236"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "5c9d65b231d65742a9b722218a34a348d6b46cbe6a4928cb2910796502da34bd"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 241,
      "start_column": 2,
      "end_line": 241,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ ∫ (x : X), czRemainder ha hf α x = 0",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "127ee0ff2f31946c6700db45e7a2180f60ac1dafb91b1d7778728513dc5cc388"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 247,
      "start_column": 2,
      "end_line": 247,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\ni : ℕ\n⊢ eLpNorm (czRemainder' ha hf hX i) 1 volume ≤ 2 ^ (2 * a + 1) * α * volume (czBall3 ha hf hX i)",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L247"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "0562fd5a2d18ac401d0c2d2af9a2e4d77f87ce92be4c959975c958b53a4a5334"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 253,
      "start_column": 2,
      "end_line": 253,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ eLpNorm (czRemainder ha hf α) 1 volume ≤ 2 ^ (2 * a + 1) * α * volume univ",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L253"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "01f57c78818ef6e984d2ed7b5adfeeca57221442f50f663b6242b760e537ad62"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 259,
      "start_column": 2,
      "end_line": 259,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\n⊢ ∑' (i : ℕ), volume (czBall3 ha hf hX i) ≤ 2 ^ (4 * a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L259"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "b6fb3ac078fb792023e20451ec18349137d8f4ab5e6f55a4dd70a36e4c60387b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 265,
      "start_column": 2,
      "end_line": 265,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ volume univ ≤ 2 ^ (4 * a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L265"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "9840b78a053f26a2f377c3402ab45b7918ca6c06a9a62b2cf91114e61b4daec7"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 271,
      "start_column": 2,
      "end_line": 271,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : GeneralCase f α\nhα : 0 < α\n⊢ ∑' (i : ℕ), eLpNorm (czRemainder' ha hf hX i) 1 volume ≤ 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L271"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "4a18b036baa81ec20121dc0b8f8b12f48277ef1c0f73bbbbf6e6e3e171627a92"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 277,
      "start_column": 2,
      "end_line": 277,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhX : ¬GeneralCase f α\nhα : 0 < α\n⊢ eLpNorm (czRemainder ha hf α) 1 volume ≤ 2 * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "3a9b84009df5a5f861881b640665003321af7fc3cbc7118bdb54cc4234089f10"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 295,
      "start_column": 2,
      "end_line": 295,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\n⊢ distribution (czOperator K r (czApproximation ha hf α)) (α / 2) volume ≤ ↑(C10_2_6 a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L295"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "7720b5df73764559acd731ce3b79b35e9145ddb61c6da38f138811e50a2b5b4b"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 311,
      "start_column": 2,
      "end_line": 311,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\nx : X\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\nhx : x ∈ (Ω ha hf α)ᶜ\nhX : GeneralCase f α\n⊢ ‖czOperator K r (czRemainder ha hf α) x‖ₑ ≤ 3 * czOperatorBound ha hf hX x + α / 8",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L311"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "f3475267796ca2060b57dbda940d978c859d3228c9637c5c170bf14201e88e98"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 321,
      "start_column": 2,
      "end_line": 321,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝³ : MetricSpace X\ninst✝² : DoublingMeasure X ↑(defaultA a)\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\nhX : GeneralCase f α\n⊢ volume ((Ω ha hf α)ᶜ ∩ czOperatorBound ha hf hX ⁻¹' Ioi (α / 8)) ≤ ↑(C10_2_8 a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L321"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "dd7931a06397f2150ac2fcb0a6bd01a37f7768400617535a976ede5cfedcc452"
  },
  {
    "repo": {
      "remote": "https://github.com/fpvandoorn/carleson",
      "branch": "master",
      "commit": "596e40748eb59deb1cd6229204f84c13360bb7f3",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 332,
      "start_column": 2,
      "end_line": 332,
      "end_column": 7,
      "file": "Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean"
    },
    "debug_info": {
      "goal": "X : Type u_1\na : ℕ\ninst✝⁴ : MetricSpace X\ninst✝³ : DoublingMeasure X ↑(defaultA a)\nr : ℝ\nK : X → X → ℂ\ninst✝² : IsTwoSidedKernel a K\ninst✝¹ : CompatibleFunctions ℝ X (defaultA a)\ninst✝ : IsCancellative X (defaultτ a)\nf : X → ℂ\nα : ℝ≥0∞\nha : 4 ≤ a\nhf : BoundedFiniteSupport f volume\nhα : ⨍⁻ (x : X), ‖f x‖ₑ / ↑(c10_0_3 a) < α\nhX : GeneralCase f α\n⊢ distribution (czOperator K r (czRemainder ha hf α)) (α / 2) volume ≤ ↑(C10_2_9 a) / α * eLpNorm f 1 volume",
      "url": "https://github.com/fpvandoorn/carleson/blob/596e40748eb59deb1cd6229204f84c13360bb7f3/Carleson/TwoSidedCarleson/WeakCalderonZygmund.lean#L332"
    },
    "metadata": {
      "blame_email_hash": "0a77110e33df",
      "blame_date": "2025-02-26T16:50:03+01:00",
      "inclusion_date": "2025-04-12T23:35:25.195113+00:00"
    },
    "id": "63e23a1eba6e3cc213c6e85182744813d12002c7f91639ab567ea589d346b364"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "YK-poincare1",
      "commit": "63a19cb3ae132c07251ab30ed60965c3841540ab",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 387,
      "start_column": 35,
      "end_line": 387,
      "end_column": 40,
      "file": "Mathlib/Analysis/Calculus/Poincare/OneForm.lean"
    },
    "debug_info": {
      "goal": "E : Type u_1\nF : Type u_2\ninst✝³ : NormedAddCommGroup E\ninst✝² : NormedSpace ℝ E\ninst✝¹ : NormedAddCommGroup F\ninst✝ : NormedSpace ℝ F\na✝ b c d : E\nω : E → E →L[ℝ] F\ndω : E → E →L[ℝ] E →L[ℝ] F\nγ₁ : Path a✝ b\nγ₂ : Path c d\ns : Set E\nφ : γ₁.Homotopy ↑γ₂\nhω : ∀ x ∈ s, HasFDerivWithinAt ω (dω x) s x\nhdω : ∀ x ∈ s, ∀ a ∈ tangentConeAt ℝ s x, ∀ b ∈ tangentConeAt ℝ s x, ((dω x) a) b = ((dω x) b) a\nhφs : ∀ (a : ↑I × ↑I), φ a ∈ s\nhF : ContDiffOn ℝ 2 (fun xy => (IccExtend ⋯ (φ.extend xy.1)) xy.2) (Icc (0, 0) (1, 1))\nψ : ℝ × ℝ → E := fun xy => Set.IccExtend ⋯ (⇑(φ.extend xy.1)) xy.2\nhψs : ∀ (a : ℝ × ℝ), ψ a ∈ s\nU : Set (ℝ × ℝ) := Ioo 0 1 ×ˢ Ioo 0 1\nhU : U = Ioo 0 1 ×ˢ Ioo 0 1\nhUI' : interior (Icc 0 1) = U\nhUI : U ⊆ Icc 0 1\nhId : UniqueDiffOn ℝ (Icc 0 1)\nhψ' : ContDiffOn ℝ 2 ψ U\nhUo : IsOpen U\ndψ : ℝ × ℝ → ℝ × ℝ →L[ℝ] E := fderivWithin ℝ ψ (Icc 0 1)\nd2ψ : ℝ × ℝ → ℝ × ℝ →L[ℝ] ℝ × ℝ →L[ℝ] E := fderivWithin ℝ dψ (Icc 0 1)\nhψ : ∀ a ∈ U, HasFDerivAt ψ (dψ a) a\nhψc : Continuous ψ\nhdψ : DifferentiableOn ℝ dψ (Icc 0 1)\nhdψIoo : ∀ a ∈ Ioo 0 1 ×ˢ Ioo 0 1, HasFDerivAt dψ (d2ψ a) a\nη : ℝ × ℝ → ℝ × ℝ →L[ℝ] F := fun a => (ω (ψ a)).comp (dψ a)\ndη : ℝ × ℝ → ℝ × ℝ →L[ℝ] ℝ × ℝ →L[ℝ] F :=\n  fun a => ((ContinuousLinearMap.compL ℝ (ℝ × ℝ) E F) (ω (ψ a))).comp (d2ψ a) + (dω (ψ a)).bilinearComp (dψ a) (dψ a)\nhηc : ContinuousOn η (Icc 0 1)\nhη : ∀ a ∈ U, HasFDerivAt η (dη a) a\nf : ℝ × ℝ → F := fun a => (η a) (0, 1)\ng : ℝ × ℝ → F := fun a => -(η a) (1, 0)\nf' : ℝ × ℝ → ℝ × ℝ →L[ℝ] F := fun a => ((ContinuousLinearMap.apply ℝ F) (0, 1)).comp (dη a)\ng' : ℝ × ℝ → ℝ × ℝ →L[ℝ] F := fun a => -((ContinuousLinearMap.apply ℝ F) (1, 0)).comp (dη a)\nhd2ψ_symm : ∀ a ∈ Icc 0 1, ∀ (x y : ℝ × ℝ), ((d2ψ a) x) y = ((d2ψ a) y) x\na : ℝ × ℝ\nha : a ∈ Icc 0 1\nS : Submodule ℝ E := Submodule.span ℝ (tangentConeAt ℝ s (ψ a))\nH₁ : ∀ x ∈ S, ∀ y ∈ S, ((dω (ψ a)) x) y = ((dω (ψ a)) y) x\nz : ℝ × ℝ\n⊢ (dψ a) z ∈ S",
      "url": "https://github.com/leanprover-community/mathlib4/blob/63a19cb3ae132c07251ab30ed60965c3841540ab/Mathlib/Analysis/Calculus/Poincare/OneForm.lean#L387"
    },
    "metadata": {
      "blame_email_hash": "9771bac611b3",
      "blame_date": "2025-04-13T14:35:21-05:00",
      "inclusion_date": "2025-04-13T23:08:58.715701+00:00"
    },
    "id": "f82e691bf9289aaaa1b0b45548c37d10fc0a3516cb5cd131fca26884a0fd55aa"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 216,
      "start_column": 36,
      "end_line": 216,
      "end_column": 41,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n$a✝ : «$A»\n$hyp✝ : Option Expr\n«$n» : ℕ\n«$a» : «$A» := ↑«$n» * 1\n⊢ «$a» = ↑«$n» * 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L216"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "9d45431a387b81457a8fe631f6e30f197f423fd8532d9964b10f38e57473e9ea"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 36,
      "end_line": 219,
      "end_column": 41,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a» $x✝ : «$A»\n$e✝ : ℕ\n$b✝ : «$A»\n«$n» : ℕ\n«$b'» : «$A»\n«$pb'» : $b✝ = ↑«$n» * «$b'»\n⊢ $x✝ ^ $e✝ * $b✝ = ↑«$n» * ($x✝ ^ $e✝ * «$b'»)",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "218921d7aaf2d0ca99df7c9ad56cbe41c922d918f30b5e8f9dfe79c641658120"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 241,
      "start_column": 28,
      "end_line": 241,
      "end_column": 33,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» : Level\n«$A» : Type u\n«$R» : Type v\n«$sA» : CommSemiring «$A»\n«$sR» : CommSemiring «$R»\n«$sRA» : Algebra «$R» «$A»\n«$r» : «$R»\n$a✝ : «$A»\n«$n» : ℕ\n«$a» : «$A»\n«$pa» : $a✝ = ↑«$n» * «$a»\n⊢ «$r» • $a✝ = «$r» • «$a»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L241"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "766769845569eb006c7a112b671258ab15540aa03b804ec12b3f5e954697a2f0"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 243,
      "start_column": 26,
      "end_line": 243,
      "end_column": 31,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» : Level\n«$A» : Type u\n«$R» : Type v\n«$sA» : CommSemiring «$A»\n«$sR» : CommSemiring «$R»\n«$sRA» : Algebra «$R» «$A»\n$r✝ : «$R»\n$a✝ : «$A»\n«$n» : ℕ\n«$a» : «$A»\n«$pa» : $a✝ = ↑«$n» * «$a»\n«$r» : «$R»\n«$pr» : $r✝ * ↑«$n» = «$r»\n⊢ $r✝ • $a✝ = «$r» • «$a»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L243"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "4f84bcffb9d9d42623d57a5933ca36efa39a5635f48f0a98ed661b89e780e9f7"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 255,
      "start_column": 47,
      "end_line": 255,
      "end_column": 52,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n$r₂✝ : «$R₂»\n$a₁✝ $a₂✝ : «$A»\n«$r₂» : «$R₂»\n«$a₂» : «$A»\n«$a₁» : «$A» := «$a₂»\n«$pra₂» : $r₂✝ • «$a₁» = «$r₂» • «$a₂»\n«$R₁» : Type w := «$R₂»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n$r₁✝ «$r₁» : «$R₁»\n«$pra₁» : $r₁✝ • $a₁✝ = «$r₁» • «$a₁»\n«$r₁'» «$r» : «$R₂»\n«$pr» : «$r₁'» + «$r₂» = «$r»\n⊢ $r₁✝ • $a₁✝ + $r₂✝ • $a₂✝ = «$r» • «$a₂»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "45b808cfdbe493d69630ad9704b5af20853226ab3a366877653d9690c423a2b6"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 266,
      "start_column": 46,
      "end_line": 266,
      "end_column": 51,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₁» : Type v\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n$r₁✝ : «$R₁»\n$r₂✝ : «$R₂»\n$a₁✝ $a₂✝ : «$A»\n«$r₁» : «$R₁»\n«$r₂» : «$R₂»\n«$a₂» : «$A»\n«$a₁» : «$A» := «$a₂»\n«$pra₁» : $r₁✝ • $a₁✝ = «$r₁» • «$a₁»\n«$pra₂» : $r₂✝ • «$a₁» = «$r₂» • «$a₂»\n«$_i₃» : Algebra «$R₁» «$R₂»\n«$_i₄» : IsScalarTower «$R₁» «$R₂» «$A»\n«$r» : «$R₂»\n«$pr» : «$r₁» • 1 + Nat.rawCast 0 + «$r₂» = «$r»\n⊢ $r₁✝ • $a₁✝ + $r₂✝ • $a₂✝ = «$r» • «$a₂»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L266"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "2b14e9407c4b7a62038201579d07559cf91174139183b7dca4a434363695e10f"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 276,
      "start_column": 46,
      "end_line": 276,
      "end_column": 51,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₁» : Type v\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n$r₁✝ : «$R₁»\n$r₂✝ : «$R₂»\n$a₁✝ $a₂✝ : «$A»\n«$r₁» : «$R₁»\n«$r₂» : «$R₂»\n«$a₂» : «$A»\n«$a₁» : «$A» := «$a₂»\n«$pra₁» : $r₁✝ • $a₁✝ = «$r₁» • «$a₁»\n«$pra₂» : $r₂✝ • «$a₁» = «$r₂» • «$a₂»\n«$_i₃» : Algebra «$R₂» «$R₁»\n«$_i₄» : IsScalarTower «$R₂» «$R₁» «$A»\n«$r» : «$R₁»\n«$pr» : «$r₂» • 1 + Nat.rawCast 0 + «$r₁» = «$r»\n⊢ $r₁✝ • $a₁✝ + $r₂✝ • $a₂✝ = «$r» • «$a₁»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "4f0911cbd09a936bcc1d04c49aa20387d34c8cf5e42d5aae7ceeec97802df23c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 325,
      "start_column": 92,
      "end_line": 325,
      "end_column": 97,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$a₁» «$a₂» : «$A»\n⊢ 1 + 1 = 1 • 2 + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L325"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3b0d83f38e94f7f47e5935914872743487236d2d494c8416d2476c71f3297add"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 388,
      "start_column": 20,
      "end_line": 388,
      "end_column": 25,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n$A✝ : Type u\n$sA✝ : CommSemiring $A✝\n«$a₂» : $A✝\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n$v✝ : Level\n«$R» : Type v✝\n«$sR» : CommSemiring «$R»\n«$r» : «$R»\n«$a» «$t» : «$A»\n«$sRA» : Algebra «$R» «$A»\n«$a₁» «$a'» : «$A»\n«$pa'» : «$a₁» * «$a» = «$a'»\n«$ra'» : «$A»\n«$pra'» : «$r» • «$a'» = «$ra'»\n«$t'» : «$A»\n«$pt'» : «$a₁» * «$t» = «$t'»\n$expr✝ : «$A»\n«$p» : «$ra'» + «$t'» = $expr✝\n⊢ «$a₁» * («$r» • «$a» + «$t») = $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L388"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "80f7c3b8bdf32dd060c26f4723bd3e60fc578f5ac7b8ddd2cf0cab67e47d272c"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 543,
      "start_column": 24,
      "end_line": 543,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$n» : Name\n$us✝ : List Level\n$x✝ : Expr × Expr × Bool\n«$a» «$b» : «$A»\n«$e» : «$A» := «$a» + «$b»\n$expr✝² : «$A»\n«$pa» : «$a» = $expr✝²\n$expr✝¹ : «$A»\n«$pb» : «$b» = $expr✝¹\n$expr✝ : «$A»\n«$pab» : $expr✝² + $expr✝¹ = $expr✝\n⊢ «$e» = $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L543"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "802f97fd289945fd786424c05ef6eeea45921efd06b350ebb384983750929b4d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 552,
      "start_column": 24,
      "end_line": 552,
      "end_column": 29,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» : Level\n«$A» : Type u\n«$sA» : CommSemiring «$A»\n«$n» : Name\n$us✝ : List Level\n$x✝ : Expr × Expr × Bool\n«$a» «$b» : «$A»\n«$e» : «$A» := «$a» * «$b»\n$expr✝² : «$A»\n«$pa» : «$a» = $expr✝²\n$expr✝¹ : «$A»\n«$pb» : «$b» = $expr✝¹\n$expr✝ : «$A»\n«$pab» : $expr✝² * $expr✝¹ = $expr✝\n⊢ «$e» = $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L552"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "c9add0da1cab1289b4cc5d6816833eec11214f7239ce989bc5de35b10dc35e51"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 618,
      "start_column": 2,
      "end_line": 618,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : ℚ\n⊢ 1 • (x ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0 = 1 • (1 ^ Nat.rawCast 1 * Nat.rawCast 1) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L618"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "f40b2d6e4a90d2f98d59096845fbd5d8e666f1054030dc5bbe21a1ba7eb762c2"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "59a210ffe2baf6d3babfe96585ac25c3211047da",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 595,
      "start_column": 2,
      "end_line": 595,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : ℚ\n⊢ (1 • 2 + 1) • (x ^ Nat.rawCast 1 * 1) + Nat.rawCast 0 =\n    1 • (x ^ Nat.rawCast 1 * (3 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/59a210ffe2baf6d3babfe96585ac25c3211047da/Mathlib/Tactic/Algebra.lean#L595"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-13T23:12:34.128157+00:00"
    },
    "id": "cba525f732b0879b2fe747b8f81b3e9c7a7f7de0bbbcca4313ce6bf980b0cdc4"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 639,
      "start_column": 2,
      "end_line": 639,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x y : ℚ\n⊢ x * y + (x ^ 2 + (x * y + y ^ 2)) = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L639"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "43c003466af897771993222a0f28e9a56af8dd20abaad469d42a65e8393a97d7"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 24,
      "start_column": 63,
      "end_line": 24,
      "end_column": 68,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "α : Type ?u.2318\ninst✝ : DecidableEq α\nl : List α\nx y : α\nn : ℕ\n⊢ Chain (fun x1 x2 => x1 < x2) 0 (range n)",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L24"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "650ac9f6087ca15b30b5b57ba9fe78e3a6c2e98a039aacf7b7d25d28e31b8a9d"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 34,
      "start_column": 2,
      "end_line": 34,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "case intro\nα : Type u_1\ninst✝² : DecidableEq α\nR : α → α → Prop\ninst✝¹ : DecidableEq α\ninst✝ : IsTrans α R\nl : List α\ni j : Fin l.length\nh : Chain' R l\neij : i ≠ j\nnRij : ¬R (l.get i) (l.get j)\nnRji : ¬R (l.get j) (l.get i)\n⊢ False",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "13f7907fcb967107aee729b6da7cf90baf7fbdc05eb71d1afb5150d435ec800b"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 110,
      "start_column": 4,
      "end_line": 110,
      "end_column": 9,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "case p\nF : Frame\nr : F.World\ninst✝ : F.IsRooted r\nn : ℕ+\n⊢ List.Chain' (fun a b => a < b) do\n    let a ← List.range ↑n\n    pure ↑a",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L110"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "7e5768b4d669745331e05caaaf79d9696e81c2e9a8db94176ec685729336e0e0"
  },
  {
    "repo": {
      "remote": "https://github.com/FormalizedFormalLogic/Foundation",
      "branch": "SnO2WMaN/issue323",
      "commit": "2d0d958822ddfb22e58f2cb6266a52f3bb219fff",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 251,
      "start_column": 2,
      "end_line": 251,
      "end_column": 7,
      "file": "Foundation/ProvabilityLogic/Grz/Completeness.lean"
    },
    "debug_info": {
      "goal": "M : Model\ninst✝¹ : IsTrans M.World M.Rel\ninst✝ : IsIrrefl M.World M.Rel\nl : List M.World\nn : ℕ+\nl_length : l.length = ↑n + 1\nl_chain : List.Chain' (fun x1 x2 => x1 ≺ x2) l\nΓ : Finset (Formula ℕ)\nΓ_length : Γ.card = ↑n\n⊢ ∃ x ∈ l, x ⊧ (Finset.image (fun γ => □γ ➝ γ) Γ).conj",
      "url": "https://github.com/FormalizedFormalLogic/Foundation/blob/2d0d958822ddfb22e58f2cb6266a52f3bb219fff/Foundation/ProvabilityLogic/Grz/Completeness.lean#L251"
    },
    "metadata": {
      "blame_email_hash": "165d0178d95d",
      "blame_date": "2025-04-13T21:16:44+09:00",
      "inclusion_date": "2025-04-13T23:27:10.210093+00:00"
    },
    "id": "7f5dce4b990d4048d1d39c649b212d3d27864fbed8fcab8fd277eeb38c28a088"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 102,
      "start_column": 2,
      "end_line": 102,
      "end_column": 7,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "n m : Nat\n⊢ List.replicate (2 * n) () = List.replicate n () ++ List.replicate n ()",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "568abb06ec8e089d6c8f26eee9d0f75ef985ded6e40ac5c66ad644307715bf6d"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 108,
      "start_column": 2,
      "end_line": 108,
      "end_column": 7,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "n m : Nat\n⊢ List.replicate n () ++ List.replicate m () = List.replicate (n + m) ()",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L108"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "10527d7f182ae93d223919a1aae377f5dbbc2cc4afe42783e7b9c55e20d27741"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 169,
      "start_column": 82,
      "end_line": 169,
      "end_column": 87,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝¹ : Mul R\ninst✝ : Star R\nx : R\n⊢ star x * x = x * star x",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L169"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "b8e6a617e0cd645aeb14c4d11910d7b306f6b4356a8ac700d9b76dcbed5d1792"
  },
  {
    "repo": {
      "remote": "https://github.com/nomeata/loogle",
      "branch": "master",
      "commit": "b340a5b73a68fd54d624ac1f9c025c11f638bb53",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 227,
      "start_column": 78,
      "end_line": 227,
      "end_column": 83,
      "file": "Tests.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\ninst✝² : Zero α\ninst✝¹ : HMul α α α\ninst✝ : LE α\na : α\n⊢ 0 ≤ a * a",
      "url": "https://github.com/nomeata/loogle/blob/b340a5b73a68fd54d624ac1f9c025c11f638bb53/Tests.lean#L227"
    },
    "metadata": {
      "blame_email_hash": "1e9dd229978a",
      "blame_date": "2023-11-11T14:02:18+01:00",
      "inclusion_date": "2025-04-14T00:17:19.239440+00:00"
    },
    "id": "22068073ae32646f2534f7f35f61036cb591dbebdc590fc9800937fe1d753b29"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 267,
      "start_column": 73,
      "end_line": 267,
      "end_column": 78,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₁» : Type v\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n«$r₁» : «$R₁»\n«$r₂» : «$R₂»\n«$a₁» «$a₂» : «$A»\n«$pf_isNat_zero» : NormNum.IsNat («$a₁» + «$a₂») 0\n⊢ 1 • «$a₁» + 1 • «$a₂» = 1 • 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L267"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3f78f6436b79d4f9920d80e3c666ec2d11b19a8aa4fc0c36e76159ad2f67c16d"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 269,
      "start_column": 52,
      "end_line": 269,
      "end_column": 57,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₁» : Type v\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n«$r₁» : «$R₁»\n«$r₂» : «$R₂»\n«$a₁» «$a₂» $expr✝ : «$A»\n«$pa» : «$a₁» + «$a₂» = $expr✝\n⊢ 1 • «$a₁» + 1 • «$a₂» = 1 • $expr✝",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L269"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "03ee8c96d596ba8c9756e5cd4a87b72567ef832c45c8f9bbd0faa737052b54e1"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 283,
      "start_column": 49,
      "end_line": 283,
      "end_column": 54,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n$r₂✝¹ : «$R₂»\n$a₁✝ $a₂✝ : «$A»\n$r₂✝ «$r₂» : «$R₂»\n«$a₂» : «$A»\n«$pra₂» : $r₂✝ • $a₂✝ = «$r₂» • «$a₂»\n«$a₁» : «$A» := «$a₂»\n«$R₁» : Type w := «$R₂»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n$r₁✝¹ $r₁✝ «$r₁» : «$R₁»\n«$pra₁» : $r₁✝ • $a₁✝ = «$r₁» • «$a₁»\n«$r₁'» «$r» : «$R₂»\n«$pr» : «$r₁'» + «$r₂» = «$r»\n⊢ $r₁✝ • $a₁✝ + $r₂✝ • $a₂✝ = «$r» • «$a₂»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L283"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "21dc9ddd09c87661527cd840e63c9f6182a37c62ea72180992fb21cb2c390416"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 294,
      "start_column": 48,
      "end_line": 294,
      "end_column": 53,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₁» : Type v\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n$r₁✝¹ : «$R₁»\n$r₂✝¹ : «$R₂»\n$a₁✝ $a₂✝ : «$A»\n$r₂✝ : «$R₂»\n$r₁✝ «$r₁» : «$R₁»\n«$r₂» : «$R₂»\n«$a₂» : «$A»\n«$pra₂» : $r₂✝ • $a₂✝ = «$r₂» • «$a₂»\n«$a₁» : «$A» := «$a₂»\n«$pra₁» : $r₁✝ • $a₁✝ = «$r₁» • «$a₁»\n«$_i₃» : Algebra «$R₁» «$R₂»\n«$_i₄» : IsScalarTower «$R₁» «$R₂» «$A»\n«$r» : «$R₂»\n«$pr» : «$r₁» • 1 + Nat.rawCast 0 + «$r₂» = «$r»\n⊢ $r₁✝ • $a₁✝ + $r₂✝ • $a₂✝ = «$r» • «$a₂»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L294"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "1234d8b57ec5afcc2ad682a4a316769f9438e7c94608d26f8bee4166502a9573"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 304,
      "start_column": 48,
      "end_line": 304,
      "end_column": 53,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "«$u» «$v» «$w» : Level\n«$A» : Type u\n«$R₁» : Type v\n«$R₂» : Type w\n«$sA» : CommSemiring «$A»\n«$sR₁» : CommSemiring «$R₁»\n«$sRA₁» : Algebra «$R₁» «$A»\n«$sR₂» : CommSemiring «$R₂»\n«$sRA₂» : Algebra «$R₂» «$A»\n$r₁✝¹ : «$R₁»\n$r₂✝¹ : «$R₂»\n$a₁✝ $a₂✝ : «$A»\n$r₂✝ : «$R₂»\n$r₁✝ «$r₁» : «$R₁»\n«$r₂» : «$R₂»\n«$a₂» : «$A»\n«$pra₂» : $r₂✝ • $a₂✝ = «$r₂» • «$a₂»\n«$a₁» : «$A» := «$a₂»\n«$pra₁» : $r₁✝ • $a₁✝ = «$r₁» • «$a₁»\n«$_i₃» : Algebra «$R₂» «$R₁»\n«$_i₄» : IsScalarTower «$R₂» «$R₁» «$A»\n«$r» : «$R₁»\n«$pr» : «$r₂» • 1 + Nat.rawCast 0 + «$r₁» = «$r»\n⊢ $r₁✝ • $a₁✝ + $r₂✝ • $a₂✝ = «$r» • «$a₁»",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L304"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "ba0ef1d502fe07082fa9b6489fda91b0d81c1e35e1cbbcae48ae84306b3f5038"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 623,
      "start_column": 2,
      "end_line": 623,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : ℚ\n⊢ x + x + x = 3 * x",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L623"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "ef0d20c676f00a4a6c9a5591cdf2e55d2feaad0147ed9bedcd787d8658a24105"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 629,
      "start_column": 2,
      "end_line": 629,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x : ℚ\n⊢ 1 • (x ^ Nat.rawCast 1 * Nat.rawCast 4) + Nat.rawCast 0 =\n    1 • (x ^ Nat.rawCast 1 * (4 ^ Nat.rawCast 1 * Nat.rawCast 1)) + Nat.rawCast 0",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L629"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-13T18:43:26+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "3c27d965f07ffc4df06e3de3533159998d5d61d6ff731d1d9777386b0d7eeae8"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 649,
      "start_column": 2,
      "end_line": 649,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x y : ℚ\n⊢ x ^ 2 + x * y = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L649"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "23843aaf991ffc6ecb13c778b8376f79f6c0b05f7aeb64daf34429d0f22028db"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "arend/poly",
      "commit": "270c9100487679a942d640442ca9771ed77a0bc7",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 657,
      "start_column": 2,
      "end_line": 657,
      "end_column": 7,
      "file": "Mathlib/Tactic/Algebra.lean"
    },
    "debug_info": {
      "goal": "x y : ℚ\n⊢ x * y + (x ^ 2 + y ^ 2) = 1",
      "url": "https://github.com/leanprover-community/mathlib4/blob/270c9100487679a942d640442ca9771ed77a0bc7/Mathlib/Tactic/Algebra.lean#L657"
    },
    "metadata": {
      "blame_email_hash": "677e25bc67b0",
      "blame_date": "2025-04-14T17:07:18+02:00",
      "inclusion_date": "2025-04-14T23:12:00.632566+00:00"
    },
    "id": "0ed1c576f3aea7b05b34a6afe1a181b3cbbd98d2ac182f0a96bf5809a810abcd"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-distribHaarChar-harder-results",
      "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 25,
      "start_column": 2,
      "end_line": 25,
      "end_column": 7,
      "file": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝⁵ : TopologicalSpace R\ninst✝⁴ : LocallyCompactSpace R\ninst✝³ : CommRing R\ninst✝² : IsTopologicalRing R\ninst✝¹ : MeasurableSpace R\ninst✝ : BorelSpace R\n⊢ Continuous ⇑(distribHaarChar R)",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L25"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-14T15:27:33+01:00",
      "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
    },
    "id": "2d9a654995dde411660797fa06220ff10e86cae6be456c754a9d914c9ddc3ee3"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-distribHaarChar-harder-results",
      "commit": "b2cbce8e4933bae37a3a22712e17cf6467d25edd",
      "lean_version": "v4.19.0-rc2"
    },
    "location": {
      "start_line": 48,
      "start_column": 2,
      "end_line": 48,
      "end_column": 7,
      "file": "FLT/HaarMeasure/DistribHaarChar/LessBasic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝¹² : TopologicalSpace R\ninst✝¹¹ : LocallyCompactSpace R\ninst✝¹⁰ : CommRing R\ninst✝⁹ : IsTopologicalRing R\ninst✝⁸ : MeasurableSpace R\ninst✝⁷ : BorelSpace R\nS : Type u_2\ninst✝⁶ : TopologicalSpace S\ninst✝⁵ : LocallyCompactSpace S\ninst✝⁴ : CommRing S\ninst✝³ : IsTopologicalRing S\ninst✝² : MeasurableSpace S\ninst✝¹ : BorelSpace S\ninst✝ : SecondCountableTopologyEither R S\nr : Rˣ\ns : Sˣ\n⊢ (distribHaarChar (R × S)) (MulEquiv.prodUnits.symm (r, s)) = (distribHaarChar R) r * (distribHaarChar S) s",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/b2cbce8e4933bae37a3a22712e17cf6467d25edd/FLT/HaarMeasure/DistribHaarChar/LessBasic.lean#L48"
    },
    "metadata": {
      "blame_email_hash": "c7989443bd81",
      "blame_date": "2025-04-14T15:27:33+01:00",
      "inclusion_date": "2025-04-14T23:58:47.451190+00:00"
    },
    "id": "009491d4d2ba3d50fda0bed62f549b9a80519cc7f21744b5aedfa1c50be971fc"
  },
  {
    "repo": {
      "remote": "https://github.com/ImperialCollegeLondon/FLT",
      "branch": "kbuzzard-topology-experiments",
      "commit": "0154f974209547c3aca34ba45310bdb785a6d13b",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 148,
      "start_column": 2,
      "end_line": 148,
      "end_column": 7,
      "file": "FLT/QuaternionAlgebra/NumberField.lean"
    },
    "debug_info": {
      "goal": "m : Type u_3\nα : Type u_4\nβ : Type u_5\ninst✝⁵ : Fintype m\ninst✝⁴ : DecidableEq m\ninst✝³ : NonAssocSemiring α\ninst✝² : NonAssocSemiring β\ninst✝¹ : TopologicalSpace α\ninst✝ : TopologicalSpace β\nf : α →+* β\nhf : Topology.IsOpenEmbedding ⇑f\n⊢ IsOpenMap ⇑f.mapMatrix",
      "url": "https://github.com/ImperialCollegeLondon/FLT/blob/0154f974209547c3aca34ba45310bdb785a6d13b/FLT/QuaternionAlgebra/NumberField.lean#L148"
    },
    "metadata": {
      "blame_email_hash": "6a0fe98fa9e8",
      "blame_date": "2025-04-14T10:40:13-04:00",
      "inclusion_date": "2025-04-15T00:32:26.311805+00:00"
    },
    "id": "47e1be26d6aab916d27553170f755f5e0fea0491529dcb4535fcfdb07b6e776b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 60,
      "start_column": 9,
      "end_line": 60,
      "end_column": 14,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "ι : Type\noSpec : OracleSpec ι\nStatement Witness ιₛᵢ : Type\nOStatement : ιₛᵢ → Type\ninst✝¹ : (i : ιₛᵢ) → ToOracle (OStatement i)\nWitEquiv : Type\ninst✝ : ToOracle WitEquiv\nequiv : Witness ≃ WitEquiv\n⊢ ∀ (i : ιₛᵢ ⊕ Unit),\n    (OStatement ⊕ᵥ fun x => WitEquiv) i =\n      match (⋯.mpr sorry) i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec WitEquiv).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Components.lean#L60"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "5d3fb12cca86fafe84f05304159ebd200b1a57d3c48b22fa289303dddaeb8ee9"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 78,
      "start_column": 2,
      "end_line": 78,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "ι : Type\noSpec : OracleSpec ι\nStatement Witness ιₛᵢ : Type\nOStatement : ιₛᵢ → Type\ninst✝² : (i : ιₛᵢ) → ToOracle (OStatement i)\nWitEquiv : Type\ninst✝¹ : ToOracle WitEquiv\nequiv : Witness ≃ WitEquiv\nrelIn : Statement × ((i : ιₛᵢ) → OStatement i) → Witness → Prop\ninst✝ : oSpec.FiniteRange\n⊢ OracleReduction.perfectCompleteness relIn (toRelOut Statement Witness OStatement WitEquiv equiv relIn)\n    (oracleReduction oSpec Statement Witness OStatement WitEquiv equiv)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Components.lean#L78"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "302e345791054383ae89bd5108f33b90f3ac683331585b5965214afe9de99474"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 138,
      "start_column": 9,
      "end_line": 138,
      "end_column": 14,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "ι : Type\noSpec : OracleSpec ι\nStatement ιₛᵢ : Type\ninst✝¹ : Unique ιₛᵢ\nOStatement : ιₛᵢ → Type\ninst✝ : (i : ιₛᵢ) → ToOracle (OStatement i)\nrel : Statement × ((i : ιₛᵢ) → OStatement i) → Prop\nrelComp : Statement → OracleComp [OStatement]ₒ Unit\n⊢ ∀ (i : ιₛᵢ ⊕ ιₛᵢ),\n    (OStatement ⊕ᵥ OStatement) i =\n      match sorry i with\n      | Sum.inl j => OStatement j\n      | Sum.inr j => (pSpec OStatement).Message j",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Components.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "107e00cde2b59097bf5b6e8103382f1e22058d4bcc938858b955d09904dba06b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "ι : Type\noSpec : OracleSpec ι\nStatement ιₛᵢ : Type\ninst✝² : Unique ιₛᵢ\nOStatement : ιₛᵢ → Type\ninst✝¹ : (i : ιₛᵢ) → ToOracle (OStatement i)\nrel : Statement × ((i : ιₛᵢ) → OStatement i) → Prop\nrelComp : Statement → OracleComp [OStatement]ₒ Unit\ninst✝ : oSpec.FiniteRange\n⊢ OracleReduction.perfectCompleteness (fun x x_1 => rel x) (relOut OStatement)\n    (oracleReduction oSpec Statement OStatement relComp)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Components.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "e9a5df19722272415619254ade5268ccb3f7d88b10edc81b8b5c53162817d283"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 255,
      "start_column": 2,
      "end_line": 255,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Components.lean"
    },
    "debug_info": {
      "goal": "ι : Type\noSpec : OracleSpec ι\nOStatement : Type\ninst✝² : ToOracle OStatement\ninst✝¹ : VCVCompatible (Query OStatement)\ninst✝ : oSpec.FiniteRange\n⊢ OracleReduction.perfectCompleteness (relIn OStatement) (relOut OStatement) (oracleReduction oSpec OStatement)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Components.lean#L255"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "7b19e2712671b63d1782e564c604b6cca09c454894de244e94e138e50bfa2349"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 184,
      "start_column": 2,
      "end_line": 184,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Execution.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nι : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\ninst✝ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n⊢ (do\n      let a ← (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (a_1.1, (reduction.prover.toProverOut.1 a.1.2).2, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let __discr ← Prover.run stmt wit reduction.prover\n    (fun a => (a, __discr.2)) <$> (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L184"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "5064ee3a205fa75c674388ea0c2c85cfc30703d50cf7e54f4f8bf35d47024be1"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 277,
      "start_column": 2,
      "end_line": 277,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Execution.lean"
    },
    "debug_info": {
      "goal": "ι : Type\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst✝ : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n⊢ (do\n      let __discr ←\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | ⟨0, isLt⟩ => a.1)) <$>\n            (reduction.prover.sendMessage ⟨0, ⋯⟩ (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++ₒ [pSpec.Challenge]ₒ)\n      ((fun a => (a, __discr.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let __discr ←\n      (reduction.prover.sendMessage ⟨0, ⋯⟩ (reduction.prover.input stmt wit)).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ)\n    ((fun a =>\n              (a, (reduction.prover.toProverOut.1 __discr.2).2, fun i =>\n                match i with\n                | ⟨0, isLt⟩ => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | ⟨0, isLt⟩ => __discr.1).liftComp\n        (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Execution.lean#L277"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "f762c3fb7d26710a7394ac55fd4a5715dc1c5b169dfd2e9c0204ac206536ff08"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 66,
      "start_column": 2,
      "end_line": 66,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "⊢ (do\n      let _ ← liftM (query 0 ())\n      (fun a => (0, ↑a)) <$> liftM (query 1 ())) =\n    do\n    let y ← liftM (query 1 ())\n    (fun a => (0, ↑y)) <$> liftM (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Equiv.lean#L66"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "935d1c05ea74eacdc7d9c756431f2f5d43c502d1d43e360b411bc6fa98cada20"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 80,
      "start_column": 4,
      "end_line": 80,
      "end_column": 9,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "case h.h.none\n⊢ (evalDist (OptionT.bind (liftM (query 1 ())) (OptionT.pure ∘ fun a => (0, ↑a)))) none =\n    ∑' (a : Fin 2), 2⁻¹ * (evalDist (OptionT.bind (liftM (query 0 ())) (OptionT.pure ∘ fun a_1 => (0, ↑a)))) none",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Equiv.lean#L80"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "53962b6cb0ef97a03b94d27342641ea15d561645015e577f54d811a7124ebdec"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 85,
      "start_column": 4,
      "end_line": 85,
      "end_column": 9,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "case h.h.some.mk\nx y : ℕ\n⊢ (Option.elimM ((PMF.uniformOfFintype (Fin 1)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run ∘ evalDist ∘ fun x => OptionT.bind (liftM (query 1 ())) (OptionT.pure ∘ fun a => (0, ↑a))))\n      (some (x, y)) =\n    (Option.elimM ((PMF.uniformOfFintype (Fin 2)).bind fun a => PMF.pure (some a)) (PMF.pure none)\n        (OptionT.run ∘ evalDist ∘ fun y => OptionT.bind (liftM (query 0 ())) (OptionT.pure ∘ fun a => (0, ↑y))))\n      (some (x, y))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Equiv.lean#L85"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "21ba941e377ae8143564f8de7db64392d62136f0ac71f688e9e3292a3a4c3eba"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 102,
      "start_column": 2,
      "end_line": 102,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Equiv.lean"
    },
    "debug_info": {
      "goal": "f : (i : ℕ) → unifSpec.domain i → Fin (i + 1)\n⊢ (some (f 0 ()) >>=\n      simulateQ\n          {\n            impl := fun {α} x =>\n              match α, x with\n              | .(unifSpec.range i), query i t => some (f i t) } ∘\n        fun x => (fun a => (0, ↑a)) <$> lift (query 1 ())) =\n    some (f 1 ()) >>=\n      simulateQ\n          {\n            impl := fun {α} x =>\n              match α, x with\n              | .(unifSpec.range i), query i t => some (f i t) } ∘\n        fun y => (fun a => (0, ↑y)) <$> lift (query 0 ())",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Equiv.lean#L102"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "9effab30b90f800af5a09504ea4ff33d971d509600e24824d7cbc26224bcf5f3"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 299,
      "start_column": 2,
      "end_line": 299,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/ToOracle.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝⁵ : CommRing R\nd : ℕ\ninst✝⁴ : Fintype R\ninst✝³ : DecidableEq R\ninst✝² : IsDomain R\nσ : Type\ninst✝¹ : Fintype σ\ninst✝ : DecidableEq σ\na : R[X σ]\nha : ∀ (s : σ →₀ ℕ), ¬MvPolynomial.coeff s a = 0 → ∀ (i : σ), s i ≤ d\nb : R[X σ]\nhb : ∀ (s : σ →₀ ℕ), ¬MvPolynomial.coeff s b = 0 → ∀ (i : σ), s i ≤ d\nhNe : ¬a = b\n⊢ {q | (MvPolynomial.eval q) a = (MvPolynomial.eval q) b}.card ≤ Fintype.card σ * d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/ToOracle.lean#L299"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "8e7f51041b4cab45892fb64755253a705812677f00d2df82c35d78bc6be9f6d0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 338,
      "start_column": 2,
      "end_line": 338,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/ToOracle.lean"
    },
    "debug_info": {
      "goal": "ι : Type\nspec : OracleSpec ι\nR : Type\ninst✝ : CommSemiring R\nm : ℕ\nD : Fin m ↪ R\np : R[X]\n⊢ ∃ x,\n    ((OptionT.run (mapM (fun i => liftM (query (Sum.inr ()) (D i))) (List.finRange m))).mapM fun {α} =>\n          (statelessOracle spec [fun x => R[X]]ₒ fun i q => oracle p q).impl) =\n        pure x ∧\n      x.getM = pure (List.map (fun i => eval (D i) p) (List.finRange m))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/ToOracle.lean#L338"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "e5f74fee5e95c32a6edc52361fdf0b0179a6e42aca2d4f9b270b21481ba5661f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 100,
      "start_column": 2,
      "end_line": 100,
      "end_column": 7,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : CommRing R\ninst✝ : Sampleable R\np : R[X]\n⊢ (splitEvenOdd p).1.natDegree ≤ p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/CommitmentScheme/Fold.lean#L100"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "a703e53c750447a212007aa5ab5f9cbe5a66efe0df331878ac2b6840ab23642e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 104,
      "start_column": 2,
      "end_line": 104,
      "end_column": 7,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : CommRing R\ninst✝ : Sampleable R\np : R[X]\n⊢ (splitEvenOdd p).2.natDegree ≤ p.natDegree / 2",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/CommitmentScheme/Fold.lean#L104"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "cf2652389ef0e9f05cad145134403186910641811462f1929ad8a55a51105165"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 116,
      "start_column": 11,
      "end_line": 116,
      "end_column": 16,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : CommRing R\ninst✝ : Sampleable R\nn deg : ℕ\nζ : Rˣ\nhPrim : IsPrimitiveRoot ζ (2 ^ n)\np : ↥R⦃< 2 * n⦄[X]\npEven pOdd : R[X]\n⊢ pEven ∈ R⦃< n⦄[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "87979fca5d96b3d4ba3fbeb4d8e8487cea2dec983cf76e715102b684b64c0601"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 116,
      "start_column": 26,
      "end_line": 116,
      "end_column": 31,
      "file": "ZKLib/CommitmentScheme/Fold.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : CommRing R\ninst✝ : Sampleable R\nn deg : ℕ\nζ : Rˣ\nhPrim : IsPrimitiveRoot ζ (2 ^ n)\np : ↥R⦃< 2 * n⦄[X]\npEven pOdd : R[X]\n⊢ pOdd ∈ R⦃< n⦄[X]",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/CommitmentScheme/Fold.lean#L116"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-26T16:07:07-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "7b4d1486f17aa778015fb6c48dc6481f6a346c9956e79aae1bd22fab87bb7988"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "d006bfadcfa73fe62c453e059621fb0baf69146f",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 167,
      "start_column": 4,
      "end_line": 167,
      "end_column": 9,
      "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
    },
    "debug_info": {
      "goal": "case succ\nα : Type\ninst✝² : DecidableEq α\ninst✝¹ : Inhabited α\ninst✝ : Fintype α\nn : ℕ\nleaves : List.Vector α (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\nih :\n  ∀ (leaves : List.Vector α (2 ^ n)) (i : Fin (2 ^ n)),\n    (buildMerkleTree α n leaves).neverFails ∧\n      ∀ x ∈ (buildMerkleTree α n leaves).support,\n        verifyProof α i (leaves.get i) (x 0).head\n            (List.Vector.ofFn fun layer => (x ↑↑layer).get ↑↑(findNeighbors i layer)) =\n          pure ()\n⊢ (do\n        let a ← buildLayer α n leaves\n        (fun a =>\n              (leaves.get i, (Cache.cons α n leaves a 0).head,\n                List.Vector.ofFn fun layer => (Cache.cons α n leaves a ↑↑layer).get ↑↑(findNeighbors i layer))) <$>\n            buildMerkleTree α n a).neverFails ∧\n    ∀ (a a_1 : α) (b : List.Vector α (n + 1)),\n      ∀ x ∈ (buildLayer α n leaves).finSupport,\n        (a, a_1, b) ∈\n            ((fun a =>\n                  (leaves.get i, (Cache.cons α n leaves a 0).head,\n                    List.Vector.ofFn fun layer => (Cache.cons α n leaves a ↑↑layer).get ↑↑(findNeighbors i layer))) <$>\n                buildMerkleTree α n x).finSupport →\n          verifyProof α i a a_1 b = pure ()",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/d006bfadcfa73fe62c453e059621fb0baf69146f/ZKLib/CommitmentScheme/MerkleTree.lean#L167"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-17T23:52:18.829560+00:00"
    },
    "id": "e869651a93ee12de3b514f32d3a43f6d80a30e4a6577df77a65d9e7542352036"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 186,
      "start_column": 33,
      "end_line": 186,
      "end_column": 38,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst✝² : Fintype n\nR : Type u_2\ninst✝¹ : DecidableEq R\nC : Set (n → R)\ninst✝ : Fintype ↑C\nh : ¬Subsingleton ↑C\n⊢ ‖C‖₀' ≠ ⊤",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/CodingTheory/Basic.lean#L186"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "56937a902854dc2d02d821da5c3bc1456e71f6a25ad514d21660def776e011cf"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 187,
      "start_column": 4,
      "end_line": 187,
      "end_column": 9,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "case neg\nn : Type u_1\ninst✝² : Fintype n\nR : Type u_2\ninst✝¹ : DecidableEq R\nC : Set (n → R)\ninst✝ : Fintype ↑C\nh : ¬Subsingleton ↑C\nthis : ‖C‖₀' ≠ ⊤\n⊢ ENat.toNat (Finset.image (fun x => Δ₀(↑x.1, ↑x.2)) {p | ¬p.1 = p.2}).min =\n    sInf {d | ∃ u ∈ C, ∃ v ∈ C, ¬u = v ∧ Δ₀(u, v) ≤ d}",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/CodingTheory/Basic.lean#L187"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "0801320237c929f8193ee6a4f49ce10e60cf0b8c35703faee0d04603dd77fb1b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 231,
      "start_column": 4,
      "end_line": 231,
      "end_column": 9,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "case e_a.h.h₁.intro.intro.intro.intro.intro\nn : Type u_1\ninst✝² : Fintype n\nR : Type u_2\ninst✝¹ : DecidableEq R\ninst✝ : CommSemiring R\nC : Submodule R (n → R)\nd : ℕ\nu : n → R\nhu : u ∈ C\nv : n → R\nhv : v ∈ C\nhuv : ¬u = v\nhDist : Δ₀(u, v) ≤ d\n⊢ ∃ u ∈ C, ¬u = 0 ∧ ‖u‖₀ ≤ d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/CodingTheory/Basic.lean#L231"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "fb2a19cecd25c8e250de638fd46fb255f5184aa0e604fafaaf00949a8129ffbf"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 234,
      "start_column": 4,
      "end_line": 234,
      "end_column": 9,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "case e_a.h.h₂.intro.intro.intro\nn : Type u_1\ninst✝² : Fintype n\nR : Type u_2\ninst✝¹ : DecidableEq R\ninst✝ : CommSemiring R\nC : Submodule R (n → R)\nd : ℕ\nu : n → R\nhu : u ∈ C\nhNorm : ¬u = 0\nhDist : ‖u‖₀ ≤ d\n⊢ ∃ u ∈ C, ∃ v ∈ C, ¬u = v ∧ Δ₀(u, v) ≤ d",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/CodingTheory/Basic.lean#L234"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "4d434198a358939429692e0845997d1923f226b1f7a7fdf23792d21b41882c7f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 269,
      "start_column": 67,
      "end_line": 269,
      "end_column": 72,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst✝² : Fintype n\nR : Type u_2\ninst✝¹ : DecidableEq R\ninst✝ : Finite R\nC : Set (n → R)\n⊢ card ↑C ≤ card R ^ (card n - ‖C‖₀ + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/CodingTheory/Basic.lean#L269"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "9cf56f4a61c205dd3e11d11bb859c6d72c51da757bdb0c7112e9eb534d6b7862"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 275,
      "start_column": 65,
      "end_line": 275,
      "end_column": 70,
      "file": "ZKLib/Data/CodingTheory/Basic.lean"
    },
    "debug_info": {
      "goal": "n : Type u_1\ninst✝³ : Fintype n\nR : Type u_2\ninst✝² : DecidableEq R\ninst✝¹ : Finite R\ninst✝ : DivisionRing R\nC : Submodule R (n → R)\n⊢ Module.finrank R ↥C ≤ card n - ‖C.carrier‖₀ + 1",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/CodingTheory/Basic.lean#L275"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-26T22:44:38-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "1e3764a232da52aa94c53642ed3080d652cd301fcd85ed839370aa040787a0f7"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 34,
      "start_column": 14,
      "end_line": 34,
      "end_column": 19,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝ : CommSemiring R\nn : ℕ\n⊢ Function.LeftInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Equiv.lean#L34"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "eb5a09117a3fd64b8d3228a9091d925a7613e9d25d5b1ed641ba047e2e00cbd8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 35,
      "start_column": 15,
      "end_line": 35,
      "end_column": 20,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝ : CommSemiring R\nn : ℕ\n⊢ Function.RightInverse ofSpec toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Equiv.lean#L35"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "4ef9527b4ad5fbb7bb9e1a1bd4f0990b438425d5cf1dff55d33daaa1e0c4c88f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 43,
      "start_column": 2,
      "end_line": 43,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝ : CommSemiring R\nn : ℕ\np q : MlPoly R n\n⊢ (p + q).toSpec = p.toSpec + q.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Equiv.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "d1cc4f31772d838ac04ad0f3b48b9fb4d77f3d99feab4fc6aef27f8374dd991d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 47,
      "start_column": 2,
      "end_line": 47,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Equiv.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝¹ : CommSemiring R\nn : ℕ\nS : Type u_2\ninst✝ : CommSemiring S\nf : R →+* S\np : MlPoly R n\nx : Vector S n\n⊢ p.eval₂ f x = MvPolynomial.eval₂ f x.get ↑p.toSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Equiv.lean#L47"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "0dd882e9ff7025e6a1ff5982a50e8d9c1d924e5dbc23ab8f117dda22f0656f6e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 77,
      "start_column": 2,
      "end_line": 77,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝¹ : Mul R\ninst✝ : AddCommMonoid R\nn : ℕ\na : R\nb : Vector R n\nc : R\nd : Vector R n\n⊢ List.foldl (fun x1 x2 => x1 + x2) (a * c) (List.zipWith (fun x1 x2 => x1 * x2) b.toList d.toList) =\n    a * c + Array.foldl (fun x1 x2 => x1 + x2) 0 (Array.zipWith (fun x1 x2 => x1 * x2) b.toArray d.toArray) 0 n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L77"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "fd9d92014cb9f49d94e99cc039357603464cc0e2fe080041ae5de3efa5b8157e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 81,
      "start_column": 2,
      "end_line": 81,
      "end_column": 7,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝¹ : Mul R\ninst✝ : AddCommMonoid R\nn : ℕ\na : R\nb : Vector R n\nc : R\nd : Vector R n\n⊢ (cons a b).get ⬝ᵥ (cons c d).get = a * c + b.get ⬝ᵥ d.get",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L81"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-14T11:09:39-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "91f716023e783accde97061e40fa7f5a2dcba84ed98edb1f352c782a94f1c4e9"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 138,
      "start_column": 20,
      "end_line": 138,
      "end_column": 25,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : AddCommMonoid R\n⊢ ∀ (a b c : MlPoly R n), a + b + c = a + (b + c)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L138"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "7928aab0b6ab5122f147a21b192756c6ad41733a01b91c73f58fcdcffdc336b8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 141,
      "start_column": 19,
      "end_line": 141,
      "end_column": 24,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : AddCommMonoid R\n⊢ ∀ (a : MlPoly R n), 0 + a = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L141"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "9a2bbd6f60548bc6f483c0a98c8a9da678e910a03e617a47d3d6d8c329faa743"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 142,
      "start_column": 19,
      "end_line": 142,
      "end_column": 24,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : AddCommMonoid R\n⊢ ∀ (a : MlPoly R n), a + 0 = a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L142"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "ce7858bdebe8638ebd1d3361df680069007e3d99bdaf3d6f1ac19f94e719126a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 144,
      "start_column": 21,
      "end_line": 144,
      "end_column": 26,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : AddCommMonoid R\n⊢ ∀ (x : MlPoly R n), nsmul 0 x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L144"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "89a3d0b951ffab7f6d623df935213cde196aa83f89d0022e23d5e577639b353e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 145,
      "start_column": 21,
      "end_line": 145,
      "end_column": 26,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : AddCommMonoid R\n⊢ ∀ (n_1 : ℕ) (x : MlPoly R n), nsmul (n_1 + 1) x = nsmul n_1 x + x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L145"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "762a316b640b98860a9762ba5005855e7b685013d3617f8a5672f95657aa6b4f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 139,
      "start_column": 19,
      "end_line": 139,
      "end_column": 24,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : AddCommMonoid R\n⊢ ∀ (a b : MlPoly R n), a + b = b + a",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L139"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "c1f74a9a34d6e0a27a5227261c7a9a3dbc84d45b5903b5028a1703a57cd9be94"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 17,
      "end_line": 151,
      "end_column": 22,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : Semiring R\n⊢ ∀ (b : MlPoly R n), 1 • b = b",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "3442b282729fa73be1400a61696d655987731f53723c17478023e8735eeeec2b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 156,
      "start_column": 18,
      "end_line": 156,
      "end_column": 23,
      "file": "ZKLib/Data/MlPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\nn : ℕ\ninst✝ : Semiring R\n⊢ ∀ (x : MlPoly R n), 0 • x = 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MlPoly/Basic.lean#L156"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-28T11:45:54-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "2e33607cac6e5d1d5503d059975e3628dae28b492d67667f17e4688657759e83"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 374,
      "start_column": 43,
      "end_line": 374,
      "end_column": 48,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nα : Fin n → Sort u\nl : List ℕ\nn' : ℕ\nl' : List ℕ\nmotive : Fin (n' :: l').sum → Sort u_1\ncases : (n : ℕ) → (h : n ∈ n' :: l') → (i : Fin n) → motive (castSum (n' :: l') h i)\ni : Fin (n' + l'.sum)\nhi : ¬↑i < n'\n⊢ ↑i - n' < l'.sum",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Fin.lean#L374"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T14:25:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "4949ae30e59038f40c0c05bb9b8197890b046b5706aef06f09936745b77b4566"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 402,
      "start_column": 16,
      "end_line": 402,
      "end_column": 21,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "case ind\nn✝ n : ℕ\nIH : ∀ m < n, ∀ {a : Fin m → ℕ}, (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges\na : Fin n → ℕ\n⊢ (List.ofFn fun i => List.ofFn (ranges a i)) = (List.ofFn a).ranges",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Fin.lean#L402"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "bf7a75da7e33d2e887d4cbd90ac2d66b5c1f7e86dee4e62cb714632c43b16868"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 497,
      "start_column": 32,
      "end_line": 497,
      "end_column": 37,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "⊢ True",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Fin.lean#L497"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-11T17:39:02-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "c2a8e53074037ef139cefe4b5981fa2eda8ab6a42980438bc5945e3aa6460b09"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 557,
      "start_column": 4,
      "end_line": 557,
      "end_column": 9,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "l : List ℕ\nj a : ℕ\nl' : List ℕ\nh : j < a + l'.sum\n⊢ ∃ n, (a :: l').findSum j = some n",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Fin.lean#L557"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "44ee9b2d5888fcbf16eefac50d2c6442c820b505ffcfd079178c5cc74a2596e8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 569,
      "start_column": 80,
      "end_line": 569,
      "end_column": 85,
      "file": "ZKLib/Data/Math/Fin.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\ninst✝² : AddMonoid α\ninst✝¹ : Preorder α\ninst✝ : DecidableRel fun x1 x2 => x1 < x2\nl : List ℕ\nj : Fin l.sum\n⊢ l.findSumIdx ↑j < l.length",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Fin.lean#L569"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-03-14T00:01:07-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "6198a86319b28f64c3f9f5ebd71723a3db10cd262207ad9fd38c6619c748a8be"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 155,
      "start_column": 2,
      "end_line": 155,
      "end_column": 7,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nunit : α\nl l' : List α\nm n n' : ℕ\nh : n ≤ m\nh' : n' ≤ m\nhEq : rightpad n unit l = rightpad n' unit l'\nhLen : n ⊔ l.length = n' ⊔ l'.length\n⊢ l ++ replicate (n - l.length + (m - n' ⊔ l'.length)) unit =\n    l' ++ replicate (n' - l'.length + (m - n' ⊔ l'.length)) unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Operations.lean#L155"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-13T15:41:38-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "599b812c8519bcc001e1cd19b0a49117fb9518ef797f5550a7016fd4b6bc11ee"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 209,
      "start_column": 5,
      "end_line": 209,
      "end_column": 10,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\nl₁ l₂ : List α\nunit : α\n⊢ (fun x =>\n        match x with\n        | (x, y) => x = y)\n      (l₁.matchSize l₂ unit) ↔\n    ∀ (i : ℕ), l₁.getD i unit = l₂.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Operations.lean#L209"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "3e4085a39f77edf149c49559416fca6ef0f62b27a15596131c760115083507d2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 257,
      "start_column": 2,
      "end_line": 257,
      "end_column": 7,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\na : Array α\nn : ℕ\nunit : α\ni : ℕ\nh✝ : i < (rightpad n unit a).size\nh : i < { toList := List.rightpad n unit a.toList }.size\n⊢ { toList := List.rightpad n unit a.toList }[i] = a.getD i unit",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Operations.lean#L257"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "163a57167a1fa39f731b9d886fc7445d93e0c3303fd57e693eb08c49a27820d6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 391,
      "start_column": 75,
      "end_line": 391,
      "end_column": 80,
      "file": "ZKLib/Data/Math/Operations.lean"
    },
    "debug_info": {
      "goal": "α : Type u_1\np : α → Bool\nas : Array α\nh : (popWhile p as).size > 0\n⊢ ¬p ((popWhile p as).getLast h) = true",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/Math/Operations.lean#L391"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-14T17:35:17-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "d05ac1f0216837ec7ced1464ff02364ba10966ab9d6e56c4e6cbbd61bf63f317"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 75,
      "start_column": 2,
      "end_line": 75,
      "end_column": 7,
      "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝ : CommSemiring R\nσ : Type u_3\nσ₁ : Type u_4\nσ₂ : Type u_5\nx : σ₁ → R\nf : σ → σ₁ ⊕ σ₂\np : R[X σ]\nb : σ₁ →₀ ℕ\nh : ¬coeff b ((sumToIter R σ₁ σ₂) ((rename f) p)) = 0\n⊢ (coeff b ((sumToIter R σ₁ σ₂) ((rename f) p))).degrees ≤ Multiset.filterMap Sum.getRight? (Multiset.map f p.degrees)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MvPolynomial/Sumcheck.lean#L75"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-16T12:52:41-06:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "64c9da6739bc9d81df8d8dfdd2347fe2d24cbc51189b6e9799bf2f71e111d560"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 112,
      "start_column": 2,
      "end_line": 112,
      "end_column": 7,
      "file": "ZKLib/Data/MvPolynomial/Sumcheck.lean"
    },
    "debug_info": {
      "goal": "R : Type u_1\ninst✝ : CommSemiring R\nn : ℕ\nh : n > 0\nD : Fin (n - 1) → Finset R\np : R[X Fin n]\n⊢ ((sumExceptFirst' n h D) p).degree ≤ ↑(degreeOf ⟨0, h⟩ p)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MvPolynomial/Sumcheck.lean#L112"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-13T15:50:48-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "8335a811616ac7d3d07568f9512c089725873b13a7caa4de29001b821048e5bc"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 69,
      "start_column": 58,
      "end_line": 69,
      "end_column": 63,
      "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
    },
    "debug_info": {
      "goal": "σ : Type u_1\ninst✝⁴ : DecidableEq σ\ninst✝³ : Fintype σ\nR : Type u_2\ninst✝² : CommRing R\ninst✝¹ : IsDomain R\ninst✝ : DecidableEq R\np : R[X σ]\nhp : p ≠ 0\nS : σ → Finset R\n⊢ ↑(#({x ∈ p.vars.pi S | (eval (extendDomain x)) p = 0})) / ∏ i ∈ p.vars, ↑(#(S i)) ≤\n    ∑ i ∈ p.vars, ↑(degreeOf i p) / ↑(#(S i))",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MvPolynomial/Interpolation.lean#L69"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "56589b8dc89a6db311718dba5e6f5473d335d98d25365147bce5971b56a3bab6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 171,
      "start_column": 76,
      "end_line": 171,
      "end_column": 81,
      "file": "ZKLib/Data/MvPolynomial/Interpolation.lean"
    },
    "debug_info": {
      "goal": "σ : Type u_1\ninst✝³ : DecidableEq σ\ninst✝² : Fintype σ\nR : Type u_2\ninst✝¹ : CommRing R\ninst✝ : IsDomain R\np q : R[X σ]\nS : σ → Finset R\nhDegree : ∀ (i : σ), degreeOf i p < #(S i)\nhEval : ∀ x ∈ piFinset fun i => S i, (eval x) p = (eval x) q\n⊢ p = q",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/MvPolynomial/Interpolation.lean#L171"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-10-30T15:40:43-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "c3233be394500d2e64138d2cb71acfa12de8c3479e313e0a9f4f05747b9c4708"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 95,
      "start_column": 16,
      "end_line": 95,
      "end_column": 21,
      "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
    },
    "debug_info": {
      "goal": "case succ\nk : ℕ\na✝ : k > 0 → AdjoinRoot (poly k) = Field k\nk_pos : k + 1 > 0\n⊢ AdjoinRoot (poly (k + 1)) = Field (k + 1)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/BinaryTowerField/Basic.lean#L95"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-30T10:53:02+05:30",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "bead3c4311c808cc607bb4bdfa28b0ce9be2e79b3e3f802ada56444430de7097"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 115,
      "start_column": 59,
      "end_line": 115,
      "end_column": 64,
      "file": "ZKLib/Data/BinaryTowerField/Basic.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\n⊢ Irreducible (poly n)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/BinaryTowerField/Basic.lean#L115"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2024-06-18T17:58:42-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "8acc721784ed7d8c44c98cf56b43303286d6cd7625de85146c4132a0411cead6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 197,
      "start_column": 21,
      "end_line": 197,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝ : Semiring R\n⊢ Function.LeftInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic-old.lean#L197"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "0074cf312960c0a425a4862af07a3ca3c73c6a27b50de9f8ccdc41493d9e4183"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 198,
      "start_column": 22,
      "end_line": 198,
      "end_column": 27,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝ : Semiring R\n⊢ Function.RightInverse TropicallyBoundPolynomial.toPolynomial' Polynomial'.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic-old.lean#L198"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "1a067838c7ce25171a96df556c21efdec6852fc3e1cb27ab162e8a5774d8de43"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 199,
      "start_column": 21,
      "end_line": 199,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝ : Semiring R\n⊢ ∀ (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := ⋯, right_inv := ⋯ }.toFun\n        (x * y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := ⋯, right_inv := ⋯ }.toFun\n          x *\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := ⋯, right_inv := ⋯ }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic-old.lean#L199"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "e78db15faca6367a65061c619725eb5e7283be8b71758cb2880df9011bcab68c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 200,
      "start_column": 21,
      "end_line": 200,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic-old.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝ : Semiring R\n⊢ ∀ (x y : Polynomial' R),\n    { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n            left_inv := ⋯, right_inv := ⋯ }.toFun\n        (x + y) =\n      { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := ⋯, right_inv := ⋯ }.toFun\n          x +\n        { toFun := Polynomial'.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toPolynomial',\n              left_inv := ⋯, right_inv := ⋯ }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic-old.lean#L200"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-09-07T14:00:27-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "ebee468117542527d30822eaadc8c3dc8939cc35bb862c66fde128d83580cd95"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 571,
      "start_column": 2,
      "end_line": 571,
      "end_column": 7,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst✝ : Ring Q\np q : UniPoly Q\ni : ℕ\nhi : i < Array.size (p.add_raw q)\n⊢ (p ++ mkArray (Array.size q - Array.size p) 0)[i] + (q ++ mkArray (Array.size p - Array.size q) 0)[i] =\n    p[i]?.getD 0 + q[i]?.getD 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic.lean#L571"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "7cdf46777192e68e5b9e6d9f3219b7e10f7085e57d8f6eb09fdfdf86f793740b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 899,
      "start_column": 4,
      "end_line": 899,
      "end_column": 9,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "Q : Type u_2\ninst✝ : Ring Q\np q r : UniPoly Q\nhpq : p ++ mkArray (Array.size q - Array.size p) 0 = q ++ mkArray (Array.size p - Array.size q) 0\nhqr : q ++ mkArray (Array.size r - Array.size q) 0 = r ++ mkArray (Array.size q - Array.size r) 0\n⊢ p ++ mkArray (Array.size r - Array.size p) 0 = r ++ mkArray (Array.size p - Array.size r) 0",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic.lean#L899"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "bfaff599d4b35668aa7350224d66500a2309f45b557cca5617d425564dc86f48"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 975,
      "start_column": 6,
      "end_line": 975,
      "end_column": 11,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : Ring R\ninst✝ : BEq R\np : UniPoly R\n⊢ (p.toPoly, Tropical.trop (OrderDual.toDual p.degreeBound)) ∈ TropicallyBoundPoly R",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic.lean#L975"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-03-12T19:59:09-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "a5a00e44344d804dd53e58cd381637cbda36c858c5450576b4e0bd481208d858"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1005,
      "start_column": 22,
      "end_line": 1005,
      "end_column": 27,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : BEq R\ninst✝ : Ring R\n⊢ Function.RightInverse TropicallyBoundPolynomial.toUniPoly UniPoly.toTropicallyBoundPolynomial",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic.lean#L1005"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "99e112725fe6638078603a4b6aa7c36933c08d9cfab2fe149bc5f442360eaf3d"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1006,
      "start_column": 21,
      "end_line": 1006,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : BEq R\ninst✝ : Ring R\n⊢ ∀ (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := ⋯,\n            right_inv := ⋯ }.toFun\n        (x * y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := ⋯,\n              right_inv := ⋯ }.toFun\n          x *\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := ⋯,\n              right_inv := ⋯ }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic.lean#L1006"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "91633df4d322a25a6b65b522dd137c1e621b01cb3250b87b2fc0d80a9536a9d5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 1007,
      "start_column": 21,
      "end_line": 1007,
      "end_column": 26,
      "file": "ZKLib/Data/UniPoly/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : BEq R\ninst✝ : Ring R\n⊢ ∀ (x y : UniPoly R),\n    { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := ⋯,\n            right_inv := ⋯ }.toFun\n        (x + y) =\n      { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := ⋯,\n              right_inv := ⋯ }.toFun\n          x +\n        { toFun := UniPoly.toTropicallyBoundPolynomial, invFun := TropicallyBoundPolynomial.toUniPoly, left_inv := ⋯,\n              right_inv := ⋯ }.toFun\n          y",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/Data/UniPoly/Basic.lean#L1007"
    },
    "metadata": {
      "blame_email_hash": "94b4cc0e139f",
      "blame_date": "2024-05-31T16:31:08-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "7459b3d43c397b6da387cb38a04b9f566aba13065d8e3cfefce9f5cf53d3e8a2"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 254,
      "start_column": 2,
      "end_line": 254,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "case h\nm n : ℕ\npSpec₁ : ProtocolSpec m\npSpec₂ : ProtocolSpec n\nT : pSpec₁.FullTranscript\nT' : pSpec₂.FullTranscript\ni : Fin m\n⊢ _root_.cast ⋯ (T i) = (⋯ ▸ T) i",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Sequential.lean#L254"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-07T12:49:22-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "e07eb43f03b20fbee7e87ff259a0cd0416aa0e8a27fb8eb314bcf9bf95bb8a9b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 556,
      "start_column": 55,
      "end_line": 556,
      "end_column": 60,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\n⊢ (compose 0 (fun x => n) fun x => pSpec) = pSpec",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Sequential.lean#L556"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T18:57:31+07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "daf806eae1da1fd808559458ec14bd85c66930faecadfc917bb485f4547da119"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 572,
      "start_column": 2,
      "end_line": 572,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "m : ℕ\nn : Fin (m + 1) → ℕ\npSpec : (i : Fin (m + 1)) → ProtocolSpec (n i)\ni : Fin m\n⊢ compose (↑i + 1) (Fin.take (↑i + 2) ⋯ n) (Fin.take (↑i + 2) ⋯ pSpec) =\n    cast ⋯ (compose (↑i) (Fin.take (↑i + 1) ⋯ n) (Fin.take (↑i + 1) ⋯ pSpec) ++ₚ pSpec i.succ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Sequential.lean#L572"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "5f40a87bb6b26e732effa52fb8d52a4c2bd3f92e6f542adfeceddaff9ef67715"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 699,
      "start_column": 2,
      "end_line": 699,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "m n : ℕ\npSpec₁ : ProtocolSpec m\npSpec₂ : ProtocolSpec n\nι : Type\ninst✝³ : DecidableEq ι\noSpec : OracleSpec ι\nStmt₁ Wit₁ Stmt₂ Wit₂ Stmt₃ Wit₃ : Type\nOₘ₁ : (i : pSpec₁.MessageIndex) → ToOracle (pSpec₁.Message i)\nOₘ₂ : (i : pSpec₂.MessageIndex) → ToOracle (pSpec₂.Message i)\ninst✝² : (i : pSpec₁.ChallengeIndex) → Sampleable (pSpec₁.Challenge i)\ninst✝¹ : (i : pSpec₂.ChallengeIndex) → Sampleable (pSpec₂.Challenge i)\ninst✝ : oSpec.DecidableEq\nP₁ : Prover pSpec₁ oSpec Stmt₁ Wit₁ Stmt₂ Wit₂\nP₂ : Prover pSpec₂ oSpec Stmt₂ Wit₂ Stmt₃ Wit₃\nstmt : Stmt₁\nwit : Wit₁\n⊢ run stmt wit (P₁.append P₂) = do\n    let __discr ← liftM (run stmt wit P₁)\n    match __discr with\n      | (stmt₂, wit₂, transcript₁) => do\n        let __discr ← liftM (run stmt₂ wit₂ P₂)\n        match __discr with\n          | (stmt₃, wit₃, transcript₂) => pure (stmt₃, wit₃, transcript₁ ++ₜ transcript₂)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Sequential.lean#L699"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-28T16:03:02+07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "350ae262f2a4131d5c90ff8d7dc05bb7990ad35c3c1dff25f878171732d94788"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 725,
      "start_column": 89,
      "end_line": 725,
      "end_column": 94,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "m n : ℕ\nι : Type\ninst✝⁴ : DecidableEq ι\noSpec : OracleSpec ι\npSpec₁ : ProtocolSpec m\npSpec₂ : ProtocolSpec n\ninst✝³ : (i : pSpec₁.ChallengeIndex) → Sampleable (pSpec₁.Challenge i)\ninst✝² : (i : pSpec₂.ChallengeIndex) → Sampleable (pSpec₂.Challenge i)\nStmt₁ Wit₁ Stmt₂ Wit₂ Stmt₃ Wit₃ : Type\nrel₁ : Stmt₁ → Wit₁ → Prop\nrel₂ : Stmt₂ → Wit₂ → Prop\nrel₃ : Stmt₃ → Wit₃ → Prop\ninst✝¹ : oSpec.DecidableEq\ninst✝ : oSpec.FiniteRange\nR₁ : Reduction pSpec₁ oSpec Stmt₁ Wit₁ Stmt₂ Wit₂\nR₂ : Reduction pSpec₂ oSpec Stmt₂ Wit₂ Stmt₃ Wit₃\ncompletenessError₁ completenessError₂ : ℝ≥0\nh₁ : completeness rel₁ rel₂ R₁ completenessError₁\nh₂ : completeness rel₂ rel₃ R₂ completenessError₂\n⊢ completeness rel₁ rel₃ (R₁.append R₂) (completenessError₁ + completenessError₂)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Sequential.lean#L725"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-01T17:09:18-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "c36fa54cd25700718daf5ac8de2d75ba764240da87d46c8a7b608f61bc56da54"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 752,
      "start_column": 38,
      "end_line": 752,
      "end_column": 43,
      "file": "ZKLib/OracleReduction/Composition/Sequential.lean"
    },
    "debug_info": {
      "goal": "ι : Type\ninst✝³ : DecidableEq ι\noSpec : OracleSpec ι\nm : ℕ\nn : Fin (m + 1) → ℕ\npSpec : (i : Fin (m + 1)) → ProtocolSpec (n i)\ninst✝² : (i : Fin (m + 1)) → (j : (pSpec i).ChallengeIndex) → Sampleable ((pSpec i).Challenge j)\nStmt Wit : Fin (m + 2) → Type\nrel : (i : Fin (m + 2)) → Stmt i → Wit i → Prop\ninst✝¹ : oSpec.DecidableEq\ninst✝ : oSpec.FiniteRange\nR : (i : Fin (m + 1)) → Reduction (pSpec i) oSpec (Stmt i.castSucc) (Wit i.castSucc) (Stmt i.succ) (Wit i.succ)\ncompletenessError : Fin (m + 1) → ℝ≥0\nh : ∀ (i : Fin (m + 1)), completeness (rel i.castSucc) (rel i.succ) (R i) (completenessError i)\n⊢ completeness (rel 0) (rel (Fin.last (m + 1))) (compose m n pSpec Stmt Wit R) (∑ i, completenessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Sequential.lean#L752"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-12-06T19:22:58-03:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "3b2ca99ce7bb935eb1dce6cf62a24dd8838f688ff88e073d0e6b7af947126b69"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 151,
      "start_column": 2,
      "end_line": 151,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nP : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n⊢ (fun a =>\n        (data.fStmtOut (a.2.2.1, (P.toProverOut.1 a.2.1).1), data.fWitOut (a.2.2.2, (P.toProverOut.1 a.2.1).2),\n          a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn), stmtIn, witIn))\n        (fun j ih => do\n          let __discr ← ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge ⟨j, hDir⟩ __discr.2.1 a, __discr.2.2)) <$>\n                liftM (query (Sum.inr ⟨j, hDir⟩) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2, __discr.2.2)) <$>\n                (P.sendMessage ⟨j, hDir⟩ __discr.2.1).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ))\n        (Fin.last n) =\n    (fun a => (data.fStmtOut (stmtIn, (P.toProverOut.1 a.2).1), data.fWitOut (witIn, (P.toProverOut.1 a.2).2), a.1)) <$>\n      Fin.induction (pure (default, P.input (data.fStmtIn stmtIn) (data.fWitIn witIn)))\n        (fun j ih => do\n          let __discr ← ih\n          match hDir : (pSpec j).1 with\n            | Direction.V_to_P =>\n              (fun a => (Transcript.snoc a __discr.1, P.receiveChallenge ⟨j, hDir⟩ __discr.2 a)) <$>\n                liftM (query (Sum.inr ⟨j, hDir⟩) ())\n            | Direction.P_to_V =>\n              (fun a => (Transcript.snoc a.1 __discr.1, a.2)) <$>\n                (P.sendMessage ⟨j, hDir⟩ __discr.2).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ))\n        (Fin.last n)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Virtual.lean#L151"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "2874ccbcfdd6755081b92391ff739cdcf0d9152ad0ed4e1ebfc4472a723170ca"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n⊢ (do\n      let a ← Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => (a_1, data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let a ← Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1), data.fWitOut (witIn, a.2.1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "f117539370c663f89bb2c6e5ee5d8b02cb5415a56f68f18d612f59a9368b6501"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n⊢ (do\n      let __discr ← Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => (a.1, __discr.2.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let a ← Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => (data.fStmtOut (stmtIn, a_1.1), data.fWitOut (witIn, a.2.1), a.2.2.1, a.2.2.2, a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "e6993baaef7b48017a56c965b8963617232c26e0e7bedcd3362ea406b9b7b97f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 214,
      "start_column": 2,
      "end_line": 214,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : ℝ≥0\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  ∀ (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    ∀ stmtIn ∉ langIn',\n      [fun x =>\n          match x with\n          | (stmtOut, fst, snd) => stmtOut ∉ langOut'|run stmtIn witIn { prover := prover, verifier := V }] ≤\n        ↑soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn ∉ langIn\n⊢ [fun x =>\n      match x with\n      | (stmtOut, fst, snd) =>\n        stmtOut ∉\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] ≤\n    ↑soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L214"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "c5557703762cd135dd88cbe5c9a853b803f67584cd3c1966a9ba805feb6dc922"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 228,
      "start_column": 2,
      "end_line": 233,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "case intro\nn : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nrelIn : StmtIn → WitIn → Prop\nrelOut : StmtOut → WitOut → Prop\nrelIn' : StmtIn' → WitIn' → Prop\nrelOut' : StmtOut' → WitOut' → Prop\nsoundnessError : ℝ≥0\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  ∀ (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n          ¬relIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) ∧\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] ≤\n      ↑soundnessError\n⊢ ∃ extractor,\n    ∀ (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | (stmtOut, witOut, transcript, proveQueryLog, snd) =>\n            ¬relIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) ∧\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] ≤\n        ↑soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Composition/Virtual.lean#L228"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "ebc773e42b65bd7706fdb24a0a02c9ecb4b97136316d93369d6b417d22b68611"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 278,
      "start_column": 4,
      "end_line": 278,
      "end_column": 9,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "x✝³ : StmtIn\nx✝² : Unit\nx✝¹ : StmtOut'\nx✝ : Unit\np q : ℤ[X]\nt : ℤ\nf : ℤ[X]\nt' r : ℤ\nhRelOut' : eval r f = t'\nhRelIn : eval 0 p * eval 0 q + eval 1 p * eval 1 q = t\n⊢ eval r p * eval r q = t'",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Virtual.lean#L278"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:31:31-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "4f806b7f63505f4344c750c7ea92bb2341fce020992e13e9bbe1def52ff4feee"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 357,
      "start_column": 2,
      "end_line": 357,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nι : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nrelIn : StmtIn → WitIn → Prop\nrelOut : StmtOut → WitOut → Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : ℝ≥0\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  ∀ (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        ¬relIn stmtIn (extractor stmtIn x.1 x.2.1 x.2.2.1 x.2.2.2.1) ∧\n          relOut x.1 x.2.1|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] ≤\n      ↑knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : ∀ (x : WitIn), ¬relIn stmtIn x\n⊢ [fun x => ∀ (x_1 : WitOut), ¬relOut x.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] ≤\n    ↑knowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/OracleReduction/Security/Basic.lean#L357"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "b7b72cfb30a1824947373d60cc66dae89dd21023523edd55a1fb0d191e4a3117"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 382,
      "start_column": 75,
      "end_line": 382,
      "end_column": 80,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nι : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec ι\nStmtIn StmtOut : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction langIn langOut verifier\nrbrSoundnessError : pSpec.ChallengeIndex → ℝ≥0\n⊢ rbrSoundness langIn langOut verifier stateFunction rbrSoundnessError →\n    soundness langIn langOut verifier (∑ i, rbrSoundnessError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Security/Basic.lean#L382"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "7e53bb3ca520f385875bcebabbd2dae59a23aed3af3cf938567f0b8bb52e31f3"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 393,
      "start_column": 2,
      "end_line": 393,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nι : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nrelIn : StmtIn → WitIn → Prop\nrelOut : StmtOut → WitOut → Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex → ℝ≥0\n⊢ rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError →\n    rbrSoundness (Function.language relIn) (Function.language relOut) verifier stateFunction rbrKnowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Security/Basic.lean#L393"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "179e44fb7cdd7c73b80c74070e8f66221f9d6d50066dd5a3d214ece27dadc74a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 403,
      "start_column": 82,
      "end_line": 403,
      "end_column": 87,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nι : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nrelIn : StmtIn → WitIn → Prop\nrelOut : StmtOut → WitOut → Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nstateFunction : StateFunction (Function.language relIn) (Function.language relOut) verifier\nrbrKnowledgeError : pSpec.ChallengeIndex → ℝ≥0\n⊢ rbrKnowledgeSoundness relIn relOut verifier stateFunction rbrKnowledgeError →\n    knowledgeSoundness relIn relOut verifier (∑ i, rbrKnowledgeError i)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Security/Basic.lean#L403"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2024-11-28T13:43:25-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "5ecf274c7b94d8cceb371732ac887e58f963eac7db45f532cef5512f0eb9a01c"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 267,
      "start_column": 6,
      "end_line": 267,
      "end_column": 11,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case mk.convert_7.left\nR : Type\ninst✝¹ : CommSemiring R\nd m : ℕ\nD : Fin m ↪ R\ninst✝ : VCVCompatible R\ntarget : R\noStmt : (i : Unit) → InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly ∈ R⦃≤ ↑d⦄[X]\nh : oStmt () = ⟨poly, hp⟩\n⊢ ((fun a => ((a, fun x => oStmt ()), (), Transcript.snoc a (Transcript.snoc (oStmt ()) default))) <$>\n      liftM (query (Sum.inr ⟨1, ⋯⟩) ())).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L267"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "b938b3e1056500192ff45b5c7ac46bae00ebe6d3fd2e0aa9c6f8cc8ffd257a66"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 276,
      "start_column": 27,
      "end_line": 276,
      "end_column": 32,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case pos\nR : Type\ninst✝¹ : CommSemiring R\nd m : ℕ\nD : Fin m ↪ R\ninst✝ : VCVCompatible R\ntarget : R\noStmt : (i : Unit) → InputOracleStatement R d i\nhValid : inputRelation R d D (target, oStmt) ()\npoly : R[X]\nhp : poly ∈ R⦃≤ ↑d⦄[X]\nh : oStmt () = ⟨poly, hp⟩\nstmt : R\noStmtOut : (i : Unit ⊕ Unit) → OutputOracleStatement R d i\nfst✝ : Unit\ntranscript : (pSpec R d).FullTranscript\nh1 : (fun x => oStmt ()) = oStmtOut\nh2 : Transcript.snoc stmt (Transcript.snoc (oStmt ()) default) = transcript\nhEval : ∑ x, Polynomial.eval (D x) poly = target\n⊢ (pure (stmt, fun x => ⟨poly, hp⟩)).neverFailsWhen fun {α} x => Set.univ",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L276"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-16T18:04:04-04:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "a9accd2716149ecd2b347d52a05707f3ebe4cfda83f6f7b7932328406841b619"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 496,
      "start_column": 2,
      "end_line": 496,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : CommSemiring R\ninst✝ : VCVCompatible R\nn deg m : ℕ\nD : Fin m ↪ R\nι : Type\noSpec : OracleSpec ι\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc × ((i : Fin 1) → OracleStatement R n deg i)\ntranscript : FullTranscript ![(Direction.P_to_V, ↥R⦃≤ ↑deg⦄[X]), (Direction.V_to_P, R)]\nx : (pSpec R deg).getType 0\nhp_i : ↑(transcript 0) ∈ R⦃≤ ↑deg⦄[X]\nhEq : transcript 0 = ⟨↑(transcript 0), hp_i⟩\n⊢ (do\n      let a ←\n        ((OptionT.run (mapM (fun i => liftM (query (Sum.inr (Sum.inr ⟨0, ⋯⟩)) (D i))) (List.finRange m))).bind\n                fun __do_lift =>\n                __do_lift.elim (FreeMonad.pure none)\n                  (OptionT.run ∘ fun evals => do\n                    if evals.sum = stmt.1.target then pure () else failure\n                    (fun a => { target := a, challenges := Fin.snoc stmt.1.challenges (transcript 1) }) <$>\n                        liftM (query (Sum.inr (Sum.inr ⟨0, ⋯⟩)) (transcript 1)))).mapM\n            fun {α} => (ToOracle.simOracle2 oSpec stmt.2 transcript.messages).impl\n      (fun a => (a, fun i_1 => stmt.2 i_1)) <$> a.getM) =\n    (fun a =>\n        ({ target := Polynomial.eval (transcript 1) ↑(transcript 0),\n            challenges := Fin.snoc stmt.1.challenges (transcript 1) },\n          stmt.2)) <$>\n      if ∑ x, Polynomial.eval (D x) ↑(transcript 0) = stmt.1.target then pure () else failure",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Sumcheck/Basic.lean#L496"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "5a758683c6ddeb333d6ba73228d2493e7b71475c2c7f54a674f82bcd8b3acd1b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 505,
      "start_column": 57,
      "end_line": 505,
      "end_column": 62,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case left\nR : Type\ninst✝³ : CommSemiring R\ninst✝² : VCVCompatible R\nn deg m : ℕ\nD : Fin m ↪ R\nι : Type\noSpec : OracleSpec ι\ni : Fin (n + 1)\ninst✝¹ : DecidableEq ι\ninst✝ : oSpec.FiniteRange\ntarget : R\nchallenge : Fin ↑i.castSucc → R\noStmt : (i : Fin 1) → OracleStatement R n deg i\nwitIn✝ : Unit\nhValid :\n  ∑ x ∈ Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x ∘ Fin.cast ⋯)) ↑(oStmt 0) =\n    target\n⊢ (do\n      let x ←\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                ⟨0, ⋯⟩\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn✝)).liftComp\n            (oSpec ++ₒ [(pSpec R deg).Challenge]ₒ)\n      let a ← liftM (query (Sum.inr ⟨1, ⋯⟩) ())\n      (fun a_1 =>\n            (a_1,\n              ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                  ({ prover := prover R n deg D oSpec i,\n                            verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                    ⟨1, ⋯⟩ x.2 a)).2,\n              Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++ₒ [(pSpec R deg).Challenge]ₒ)).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L505"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "f24a85d7adc8111b49dc589d9e8cbcbf06c2c9eeccc5ac357df8f53ba7981c3a"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 514,
      "start_column": 2,
      "end_line": 514,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case right\nR : Type\ninst✝³ : CommSemiring R\ninst✝² : VCVCompatible R\nn deg m : ℕ\nD : Fin m ↪ R\nι : Type\noSpec : OracleSpec ι\ni : Fin (n + 1)\ninst✝¹ : DecidableEq ι\ninst✝ : oSpec.FiniteRange\ntarget : R\nchallenge : Fin ↑i.castSucc → R\noStmt : (i : Fin 1) → OracleStatement R n deg i\nwitIn✝ : Unit\nhValid :\n  ∑ x ∈ Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x ∘ Fin.cast ⋯)) ↑(oStmt 0) =\n    target\n⊢ ∀ (a : Statement R n i.succ) (b : (i : Fin 1) → OracleStatement R n deg i) (a_1 : Unit)\n    (b_1 : (pSpec R deg).FullTranscript),\n    ((a, b), a_1, b_1) ∈\n        (run ({ target := target, challenges := challenge }, oStmt) witIn✝\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support →\n      match (a, b) with\n      | ({ target := target, challenges := challenges }, oStmt) =>\n        match oStmt 0 with\n        | ⟨poly, property⟩ =>\n          ∑ x ∈ Fintype.piFinset fun i => Finset.map D univ,\n              (MvPolynomial.eval (Fin.append challenges x ∘ Fin.cast ⋯)) poly =\n            target",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "20f4800a1927dfb4c37b9d9561f23730e7c711ac5563e31bd6829f43cba9de7e"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 572,
      "start_column": 4,
      "end_line": 572,
      "end_column": 9,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "R✝ : Type\ninst✝⁵ : CommSemiring R✝\nn✝ deg✝ m✝ : ℕ\nD✝ : Fin m✝ ↪ R✝\nι✝ : Type\noSpec✝ : OracleSpec ι✝\ninst✝⁴ : VCVCompatible R✝\nR : Type\ninst✝³ : CommSemiring R\ninst✝² : VCVCompatible R\nn deg m : ℕ\nD : Fin m ↪ R\nι : Type\noSpec : OracleSpec ι\ni✝ : Fin (n + 1)\ninst✝¹ : DecidableEq ι\ninst✝ : oSpec.FiniteRange\ni : Fin (n + 1)\nstmt : Statement R n i.castSucc × ((i : Fin 1) → OracleStatement R n deg i)\ntr : Transcript (Fin.last 2) (pSpec R deg)\nhFalse :\n  ¬relation R n deg D i.succ ({ target := stmt.1.target, challenges := Fin.snoc stmt.1.challenges (tr 1) }, stmt.2) ()\n⊢ ∀ (a : Statement R n i.succ) (b : (i : Fin 1) → OracleStatement R n deg i),\n    (a, b) ∈ (Verifier.run stmt tr (verifier R n deg D oSpec i)).support →\n      ∀ (x : Unit), ¬relation R n deg D i.succ (a, b) x",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Sumcheck/Basic.lean#L572"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "8f560d5c9559d35fe91627efab22fc4dae1498889b75687000254b1953b2917f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 647,
      "start_column": 42,
      "end_line": 647,
      "end_column": 47,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "R : Type\ninst✝¹ : CommSemiring R\nn deg m : ℕ\nD : Fin m ↪ R\ninst✝ : VCVCompatible R\n⊢ OracleReduction.perfectCompleteness (relIn R n deg D) (relOut R n deg) (reduction R n deg)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Sumcheck/Basic.lean#L647"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-24T11:52:07-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "86ebbb9272de41a6f56a734158e5dbb9bff7ff225181c29fd94e934042ffb6f8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "7b2a35da9cc686c666671ac006d1c2ec4757302c",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 6,
      "end_line": 219,
      "end_column": 11,
      "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
    },
    "debug_info": {
      "goal": "case succ\nα : Type\ninst✝² : DecidableEq α\ninst✝¹ : Inhabited α\ninst✝ : Fintype α\nhash : α × α → α\nn : ℕ\nih :\n  ∀ (leaves : List.Vector α (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function α hash)\n        (do\n          let cache ← buildMerkleTree α n leaves\n          let proof : List.Vector α n := generateProof α i cache\n          verifyProof α i leaves[i] (getRoot α cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector α (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n⊢ ((((Option.elimM (OptionT.run (buildMerkleTree α (n + 1) leaves)) (FreeMonad.pure none)\n                (OptionT.run ∘ fun cache =>\n                  verifyProof α i (leaves.get i) (getRoot α cache) (generateProof α i cache))).mapM\n            fun {α_1} q =>\n            match α_1, q with\n            | .((spec α).range i), query i (left, right) => pure (hash (left, right))) >>=\n          fun __do_lift => __do_lift.getM)\n        ()).neverFailsWhen\n    fun {α} x => Set.univ",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/7b2a35da9cc686c666671ac006d1c2ec4757302c/ZKLib/CommitmentScheme/MerkleTree.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-04-16T13:24:09-07:00",
      "inclusion_date": "2025-04-18T23:50:11.233985+00:00"
    },
    "id": "4771b3d3db601fc7c1651f675a3985efdfcc4664a281f4879d70f344ab1c9872"
  },
  {
    "repo": {
      "remote": "https://github.com/leanprover-community/mathlib4",
      "branch": "mariainesdff/isup_lemmas",
      "commit": "9171df48f3adfe318101adbbbae9771dff90a0e2",
      "lean_version": "v4.18.0-rc1"
    },
    "location": {
      "start_line": 455,
      "start_column": 33,
      "end_line": 455,
      "end_column": 38,
      "file": "Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean"
    },
    "debug_info": {
      "goal": "ι : Sort u_1\ninst✝ : Nonempty ι\nf : ι → ℝ\nhf : ∀ (i : ι), 0 ≤ f i\nn : ℕ\nhn : n ≠ 0\nhf_bdd : ∀ (x : ℝ), ∃ y ∈ Set.range f, x < y\nx : ℝ\na : ι\nhax : x ^ (1 / ↑n) < f a\n⊢ 0 < ↑n",
      "url": "https://github.com/leanprover-community/mathlib4/blob/9171df48f3adfe318101adbbbae9771dff90a0e2/Mathlib/Analysis/SpecialFunctions/Pow/NNReal.lean#L455"
    },
    "metadata": {
      "blame_email_hash": "b2f50b2f722a",
      "blame_date": "2025-04-22T17:56:46+02:00",
      "inclusion_date": "2025-04-22T23:16:22.108310+00:00"
    },
    "id": "be413472e395f4ada0f788c69719eae4047ed10b0ea6fe684e77bd040a5d13ac"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group",
      "commit": "c93714889b11af507b2aba887ed572442c733635",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 43,
      "start_column": 14,
      "end_line": 43,
      "end_column": 19,
      "file": "PhysLean/Relativity/Lorentz/Group/Restricted.lean"
    },
    "debug_info": {
      "goal": "d : ℕ\na✝ b✝ : ↑(𝓛 d)\n⊢ a✝ ∈ Restricted d → b✝ ∈ Restricted d → a✝ * b✝ ∈ Restricted d",
      "url": "https://github.com/HEPLean/PhysLean/blob/c93714889b11af507b2aba887ed572442c733635/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L43"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-04-23T00:56:21+10:00",
      "inclusion_date": "2025-04-22T23:41:43.397834+00:00"
    },
    "id": "99b053006370fffe2a83eff1ec225c70986baa9f32a5f3c272c1edab77433d5a"
  },
  {
    "repo": {
      "remote": "https://github.com/HEPLean/PhysLean",
      "branch": "jnlindsay/feat/restricted-Lorentz-group",
      "commit": "c93714889b11af507b2aba887ed572442c733635",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 44,
      "start_column": 14,
      "end_line": 44,
      "end_column": 19,
      "file": "PhysLean/Relativity/Lorentz/Group/Restricted.lean"
    },
    "debug_info": {
      "goal": "d : ℕ\nx✝ : ↑(𝓛 d)\n⊢ x✝ ∈ { carrier := Restricted d, mul_mem' := ⋯, one_mem' := ⋯ }.carrier →\n    x✝⁻¹ ∈ { carrier := Restricted d, mul_mem' := ⋯, one_mem' := ⋯ }.carrier",
      "url": "https://github.com/HEPLean/PhysLean/blob/c93714889b11af507b2aba887ed572442c733635/PhysLean/Relativity/Lorentz/Group/Restricted.lean#L44"
    },
    "metadata": {
      "blame_email_hash": "f5ab4f28bed3",
      "blame_date": "2025-04-23T00:56:21+10:00",
      "inclusion_date": "2025-04-22T23:41:43.397834+00:00"
    },
    "id": "fc648fc33a34a12b28465821e7b05c6d6429ebde031a28d251db85c6a318654f"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 185,
      "start_column": 2,
      "end_line": 185,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Execution.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nι : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\ninst✝ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n⊢ (do\n      let a ← (simulateQ loggingOracle (Prover.runToRound (Fin.last n) stmt wit reduction.prover)).run\n      (fun a_1 => (reduction.prover.toProverOut.1 a.1.2, a_1.1, a.1.1)) <$>\n          (simulateQ loggingOracle (reduction.verifier.verify stmt a.1.1)).run.liftComp\n            (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let __discr ← Prover.run stmt wit reduction.prover\n    (fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$>\n        (reduction.verifier.verify stmt __discr.2.2).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Execution.lean#L185"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "98677f00ad5f7638d9dc25c16d21f6580375654febec44dce847c1d401a002b6"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 278,
      "start_column": 2,
      "end_line": 278,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Execution.lean"
    },
    "debug_info": {
      "goal": "ι : Type\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\npSpec : ProtocolSpec 1\ninst✝ : pSpec.ProverOnly\nstmt : StmtIn\nwit : WitIn\nreduction : Reduction pSpec oSpec StmtIn WitIn StmtOut WitOut\n⊢ (do\n      let __discr ←\n        (fun a =>\n              ((reduction.prover.toProverOut.1 a.2).1, (reduction.prover.toProverOut.1 a.2).2, fun i =>\n                match i with\n                | ⟨0, isLt⟩ => a.1)) <$>\n            (reduction.prover.sendMessage ⟨0, ⋯⟩ (reduction.prover.input stmt wit)).liftComp\n              (oSpec ++ₒ [pSpec.Challenge]ₒ)\n      ((fun a => ((__discr.1, __discr.2.1), a, __discr.2.2)) <$> reduction.verifier.verify stmt __discr.2.2).liftComp\n          (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let __discr ←\n      (reduction.prover.sendMessage ⟨0, ⋯⟩ (reduction.prover.input stmt wit)).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ)\n    ((fun a =>\n              (reduction.prover.toProverOut.1 __discr.2, a, fun i =>\n                match i with\n                | ⟨0, isLt⟩ => __discr.1)) <$>\n            reduction.verifier.verify stmt fun i =>\n              match i with\n              | ⟨0, isLt⟩ => __discr.1).liftComp\n        (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Execution.lean#L278"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "b8d6835d1aa945b4bd086c1a0e1ecea7dae75a7eed3e59a758892fe78ec65af4"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 219,
      "start_column": 6,
      "end_line": 219,
      "end_column": 11,
      "file": "ZKLib/CommitmentScheme/MerkleTree.lean"
    },
    "debug_info": {
      "goal": "case succ\nα : Type\ninst✝² : DecidableEq α\ninst✝¹ : Inhabited α\ninst✝ : Fintype α\nhash : α × α → α\nn : ℕ\nih :\n  ∀ (leaves : List.Vector α (2 ^ n)) (i : Fin (2 ^ n)),\n    (simulateQ (implement_with_function α hash)\n        (do\n          let cache ← buildMerkleTree α n leaves\n          let proof : List.Vector α n := generateProof α i cache\n          verifyProof α i leaves[i] (getRoot α cache) proof\n          pure PUnit.unit)\n        ()).neverFails\nleaves : List.Vector α (2 ^ (n + 1))\ni : Fin (2 ^ (n + 1))\n⊢ ((((Option.elimM (OptionT.run (buildMerkleTree α (n + 1) leaves)) (FreeMonad.pure none)\n              (OptionT.run ∘ fun cache =>\n                verifyProof α i (leaves.get i) (getRoot α cache) (generateProof α i cache))).mapM\n          fun {α_1} q =>\n          match α_1, q with\n          | .((spec α).range i), query i (left, right) => pure (hash (left, right))) >>=\n        fun __do_lift => __do_lift.getM)\n      ()).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/CommitmentScheme/MerkleTree.lean#L219"
    },
    "metadata": {
      "blame_email_hash": "ab200eba5736",
      "blame_date": "2025-04-16T13:24:09-07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "c346cfbcd68a8c54fd449a38c578af4d8cfc9260165ad89174c251d19ee23da5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 164,
      "start_column": 2,
      "end_line": 164,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n⊢ (do\n      let a ← Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n      (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), a_1, a.2.2)) <$>\n          (Verifier.run stmtIn a.2.2\n                {\n                  verify := fun stmtIn transcript =>\n                    (fun a => data.fStmtOut (stmtIn, a)) <$>\n                      R.verifier.verify (data.fStmtIn stmtIn) transcript }).liftComp\n            (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let a ← Prover.run (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 => ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1), a.2.2)) <$>\n        (Verifier.run (data.fStmtIn stmtIn) a.2.2 R.verifier).liftComp (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Virtual.lean#L164"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "6e2bb4f3999a00f10182b4e11bc7de04b518b3615a01f31fcaf9468c35cf71f3"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 177,
      "start_column": 2,
      "end_line": 177,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\ndata : TransportData StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut'\nstmtIn : StmtIn\nwitIn : WitIn\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\n⊢ (do\n      let __discr ← Prover.runWithLog stmtIn witIn (Prover.transport data R.prover)\n      (fun a => ((__discr.1, __discr.2.1), a.1, __discr.2.2.1, __discr.2.2.2, a.2)) <$>\n          (simulateQ loggingOracle\n                  (Verifier.run stmtIn __discr.2.2.1\n                    {\n                      verify := fun stmtIn transcript =>\n                        (fun a => data.fStmtOut (stmtIn, a)) <$>\n                          R.verifier.verify (data.fStmtIn stmtIn) transcript })).run.liftComp\n            (oSpec ++ₒ [pSpec.Challenge]ₒ)) =\n    do\n    let a ← Prover.runWithLog (data.fStmtIn stmtIn) (data.fWitIn witIn) R.prover\n    (fun a_1 =>\n          ((data.fStmtOut (stmtIn, a.1), data.fWitOut (witIn, a.2.1)), data.fStmtOut (stmtIn, a_1.1), a.2.2.1, a.2.2.2,\n            a_1.2)) <$>\n        (simulateQ loggingOracle (Verifier.run (data.fStmtIn stmtIn) a.2.2.1 R.verifier)).run.liftComp\n          (oSpec ++ₒ [pSpec.Challenge]ₒ)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Virtual.lean#L177"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "f8a0a8b2dd7a1c86691d9b6977d4fceb64786529440db08ebdac52704a1d1c4b"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 201,
      "start_column": 2,
      "end_line": 201,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nrelIn : StmtIn → WitIn → Prop\nrelOut : StmtOut → WitOut → Prop\nrelIn' : StmtIn' → WitIn' → Prop\nrelOut' : StmtOut' → WitOut' → Prop\ncompletenessError : ℝ≥0\ndata : TransportDataComplete StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nR : Reduction pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'\nh :\n  ∀ (stmtIn : StmtIn') (witIn : WitIn'),\n    relIn' stmtIn witIn →\n      [fun x =>\n          match x with\n          | ((prvStmtOut, witOut), stmtOut, snd) => relOut' stmtOut witOut ∧ prvStmtOut = stmtOut|run stmtIn witIn R] ≥\n        1 - ↑completenessError\nstmtIn : StmtIn\nwitIn : WitIn\nhRelIn : relIn stmtIn witIn\nhR :\n  [fun x =>\n      match x with\n      | ((prvStmtOut, witOut), stmtOut, snd) =>\n        relOut' stmtOut witOut ∧ prvStmtOut = stmtOut|run (data.fStmtIn stmtIn) (data.fWitIn witIn) R] ≥\n    1 - ↑completenessError\nx✝ : (StmtOut' × WitOut') × StmtOut' × pSpec.FullTranscript\na✝ : x✝ ∈ (run (data.fStmtIn stmtIn) (data.fWitIn witIn) R).support\nhRelOut' : relOut' x✝.2.1 x✝.1.2 ∧ x✝.1.1 = x✝.2.1\n⊢ ((fun x => relOut x.2.1 x.1.2 ∧ x.1.1 = x.2.1) ∘ fun a =>\n      ((data.fStmtOut (stmtIn, a.1.1), data.fWitOut (witIn, a.1.2)), data.fStmtOut (stmtIn, a.2.1), a.2.2))\n    x✝",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Virtual.lean#L201"
    },
    "metadata": {
      "blame_email_hash": "d0850777cf0b",
      "blame_date": "2025-04-22T09:32:10-04:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "02bc36169c0b69aa48f7a8edb63d3423dc3d28570c432c00af1edc49730f84a5"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 215,
      "start_column": 2,
      "end_line": 215,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn StmtOut StmtIn' StmtOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nlangIn : Set StmtIn\nlangOut : Set StmtOut\nlangIn' : Set StmtIn'\nlangOut' : Set StmtOut'\nsoundnessError : ℝ≥0\ndata : TransportDataSound StmtIn StmtOut StmtIn' StmtOut' langIn langOut langIn' langOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nh :\n  ∀ (WitIn WitOut : Type) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn' WitIn StmtOut' WitOut),\n    ∀ stmtIn ∉ langIn',\n      [fun x =>\n          match x with\n          | (fst, stmtOut, snd) => stmtOut ∉ langOut'|run stmtIn witIn { prover := prover, verifier := V }] ≤\n        ↑soundnessError\nstmtIn hStmtIn : Type\nWitIn : stmtIn\nWitOut : Prover pSpec oSpec StmtIn stmtIn StmtOut hStmtIn\nwitIn : StmtIn\nprover : witIn ∉ langIn\n⊢ [fun x =>\n      match x with\n      | (fst, stmtOut, snd) =>\n        stmtOut ∉\n          langOut|run witIn WitIn { prover := WitOut, verifier := Verifier.transport data.toTransportStatement V }] ≤\n    ↑soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Virtual.lean#L215"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "cf970cae25f82786a5b2ecc3f5df674cb9a9e36f7d0ac5950f3923c8f2061c89"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 229,
      "start_column": 2,
      "end_line": 234,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Composition/Virtual.lean"
    },
    "debug_info": {
      "goal": "case intro\nn : ℕ\npSpec : ProtocolSpec n\nι : Type\ninst✝² : DecidableEq ι\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nrelIn : StmtIn → WitIn → Prop\nrelOut : StmtOut → WitOut → Prop\nrelIn' : StmtIn' → WitIn' → Prop\nrelOut' : StmtOut' → WitOut' → Prop\nsoundnessError : ℝ≥0\ndata :\n  TransportDataKnowledgeSound StmtIn WitIn StmtOut WitOut StmtIn' WitIn' StmtOut' WitOut' relIn relIn' relOut relOut'\nV : Verifier pSpec oSpec StmtIn' StmtOut'\nE : StraightlineExtractor\nh' :\n  ∀ (stmtIn : StmtIn') (witIn : WitIn') (prover : Prover pSpec oSpec StmtIn' WitIn' StmtOut' WitOut'),\n    [fun x =>\n        match x with\n        | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n          ¬relIn' stmtIn (E stmtIn stmtOut witOut transcript proveQueryLog) ∧\n            relOut' stmtOut witOut|runWithLog stmtIn witIn { prover := prover, verifier := V }] ≤\n      ↑soundnessError\n⊢ ∃ extractor,\n    ∀ (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n      [fun x =>\n          match x with\n          | ((fst, witOut), stmtOut, transcript, proveQueryLog, snd) =>\n            ¬relIn stmtIn (extractor stmtIn stmtOut witOut transcript proveQueryLog) ∧\n              relOut stmtOut\n                witOut|runWithLog stmtIn witIn\n            { prover := prover, verifier := Verifier.transport data.toTransportStatement V }] ≤\n        ↑soundnessError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Composition/Virtual.lean#L229"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "b53dee42c163fd6290783ad8114c6408e1aab873f72925401e600f603811f2e8"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 361,
      "start_column": 2,
      "end_line": 361,
      "end_column": 7,
      "file": "ZKLib/OracleReduction/Security/Basic.lean"
    },
    "debug_info": {
      "goal": "n : ℕ\nι : Type\npSpec : ProtocolSpec n\noSpec : OracleSpec ι\nStmtIn WitIn StmtOut WitOut : Type\ninst✝¹ : (i : pSpec.ChallengeIndex) → VCVCompatible (pSpec.Challenge i)\ninst✝ : oSpec.FiniteRange\nrelIn : StmtIn → WitIn → Prop\nrelOut : StmtOut → WitOut → Prop\nverifier : Verifier pSpec oSpec StmtIn StmtOut\nknowledgeError : ℝ≥0\nhLt : knowledgeError < 1\nextractor : StraightlineExtractor\nhKS :\n  ∀ (stmtIn : StmtIn) (witIn : WitIn) (prover : Prover pSpec oSpec StmtIn WitIn StmtOut WitOut),\n    [fun x =>\n        ¬relIn stmtIn (extractor stmtIn x.2.1 x.1.2 x.2.2.1 x.2.2.2.1) ∧\n          relOut x.2.1 x.1.2|runWithLog stmtIn witIn { prover := prover, verifier := verifier }] ≤\n      ↑knowledgeError\nWitIn' WitOut' : Type\nwitIn' : WitIn'\nprover : Prover pSpec oSpec StmtIn WitIn' StmtOut WitOut'\nstmtIn : StmtIn\nhStmtIn : ∀ (x : WitIn), ¬relIn stmtIn x\n⊢ [fun x => ∀ (x_1 : WitOut), ¬relOut x.2.1 x_1|run stmtIn witIn' { prover := prover, verifier := verifier }] ≤\n    ↑knowledgeError",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/OracleReduction/Security/Basic.lean#L361"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-02-06T20:02:30-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "c7f2f9d10297e4f686fe84aa948523dbd36538d68a840d300f6215da662c86b0"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 514,
      "start_column": 57,
      "end_line": 514,
      "end_column": 62,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case left\nR : Type\ninst✝³ : CommSemiring R\ninst✝² : VCVCompatible R\nn deg m : ℕ\nD : Fin m ↪ R\nι : Type\noSpec : OracleSpec ι\ni : Fin (n + 1)\ninst✝¹ : DecidableEq ι\ninst✝ : oSpec.FiniteRange\ntarget : R\nchallenge : Fin ↑i.castSucc → R\noStmt : (i : Fin 1) → OracleStatement R n deg i\nwitIn✝ : Unit\nhValid :\n  ∑ x ∈ Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x ∘ Fin.cast ⋯)) ↑(oStmt 0) =\n    target\n⊢ (do\n      let x ←\n        ({ prover := prover R n deg D oSpec i,\n                        verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.sendMessage\n                ⟨0, ⋯⟩\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.input\n                  ({ target := target, challenges := challenge }, oStmt) witIn✝)).liftComp\n            (oSpec ++ₒ [(pSpec R deg).Challenge]ₒ)\n      let a ← liftM (query (Sum.inr ⟨1, ⋯⟩) ())\n      (fun a_1 =>\n            ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.toProverOut.1\n                ({ prover := prover R n deg D oSpec i,\n                          verifier := oracleVerifier R n deg D oSpec i }.toReduction.prover.receiveChallenge\n                  ⟨1, ⋯⟩ x.2 a),\n              a_1, Transcript.snoc a (Transcript.snoc x.1 default))) <$>\n          (Verifier.run ({ target := target, challenges := challenge }, oStmt)\n                (Transcript.snoc a (Transcript.snoc x.1 default))\n                { prover := prover R n deg D oSpec i,\n                      verifier := oracleVerifier R n deg D oSpec i }.toReduction.verifier).liftComp\n            (oSpec ++ₒ [(pSpec R deg).Challenge]ₒ)).neverFails",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Sumcheck/Basic.lean#L514"
    },
    "metadata": {
      "blame_email_hash": "0c5d39c5ece3",
      "blame_date": "2025-03-09T23:22:53-05:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "c2963acfdbed9f50ca622b582bf1710d203975609cbd3edaa8ee8d01f865dc57"
  },
  {
    "repo": {
      "remote": "https://github.com/Verified-zkEVM/ZKLib",
      "branch": "main",
      "commit": "f914f40ab12d4972260451fe86d8ccc8c75cc527",
      "lean_version": "v4.18.0"
    },
    "location": {
      "start_line": 523,
      "start_column": 2,
      "end_line": 523,
      "end_column": 7,
      "file": "ZKLib/ProofSystem/Sumcheck/Basic.lean"
    },
    "debug_info": {
      "goal": "case right\nR : Type\ninst✝³ : CommSemiring R\ninst✝² : VCVCompatible R\nn deg m : ℕ\nD : Fin m ↪ R\nι : Type\noSpec : OracleSpec ι\ni : Fin (n + 1)\ninst✝¹ : DecidableEq ι\ninst✝ : oSpec.FiniteRange\ntarget : R\nchallenge : Fin ↑i.castSucc → R\noStmt : (i : Fin 1) → OracleStatement R n deg i\nwitIn✝ : Unit\nhValid :\n  ∑ x ∈ Fintype.piFinset fun i => Finset.map D univ,\n      (MvPolynomial.eval (Fin.append challenge x ∘ Fin.cast ⋯)) ↑(oStmt 0) =\n    target\n⊢ ∀ (a : Statement R n i.succ) (b : (i : Fin 1) → OracleStatement R n deg i) (b_1 : Unit) (a_1 : Statement R n i.succ)\n    (b_2 : (i : Fin 1) → OracleStatement R n deg i) (b_3 : (pSpec R deg).FullTranscript),\n    (((a, b), b_1), (a_1, b_2), b_3) ∈\n        (run ({ target := target, challenges := challenge }, oStmt) witIn✝\n            { prover := prover R n deg D oSpec i, verifier := oracleVerifier R n deg D oSpec i }.toReduction).support →\n      (match (a_1, b_2) with\n        | ({ target := target, challenges := challenges }, oStmt) =>\n          match oStmt 0 with\n          | ⟨poly, property⟩ =>\n            ∑ x ∈ Fintype.piFinset fun i => Finset.map D univ,\n                (MvPolynomial.eval (Fin.append challenges x ∘ Fin.cast ⋯)) poly =\n              target) ∧\n        (a, b) = (a_1, b_2)",
      "url": "https://github.com/Verified-zkEVM/ZKLib/blob/f914f40ab12d4972260451fe86d8ccc8c75cc527/ZKLib/ProofSystem/Sumcheck/Basic.lean#L523"
    },
    "metadata": {
      "blame_email_hash": "f335a4ba1b88",
      "blame_date": "2025-01-18T19:07:20+07:00",
      "inclusion_date": "2025-04-23T00:20:53.687205+00:00"
    },
    "id": "0feba0658b6a43a5417758a47c0d8837e87e0c86a06dd94a290841c777680efd"
  }
]
